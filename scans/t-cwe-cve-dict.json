{"scan_date": "2023-08-22", "scan_runtime": "00h 16m and 41.62s", "data": [{"technique_id": "T1498", "t_findings": []}, {"technique_id": "T1552", "t_findings": []}, {"technique_id": "T1609", "t_findings": []}, {"technique_id": "T1204", "t_findings": []}, {"technique_id": "T1068", "t_findings": [{"capec_id": "CAPEC-69", "c_findings": [{"cwe": "CWE-250", "cves": [{"id": "CVE-2007-4217", "score": ["V2", 7.2, "HIGH"], "v2_score": 7.2, "v2_exploitability_score": 3.9, "v2_impact_score": 10.0, "v2_vector": "AV:L/AC:L/Au:N/C:C/I:C/A:C", "access_vector": "LOCAL", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:L/AC:L/Au:N/C:C/I:C/A:C", "accessVector": "LOCAL", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "COMPLETE", "integrityImpact": "COMPLETE", "availabilityImpact": "COMPLETE", "baseScore": 7.2}, "baseSeverity": "HIGH", "exploitabilityScore": 3.9, "impactScore": 10.0, "acInsufInfo": false, "obtainAllPrivilege": true, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "Stack-based buffer overflow in the domacro function in ftp in IBM AIX 5.2 and 5.3 allows local users to gain privileges via a long parameter to a macro, as demonstrated by executing a macro via the '$' command.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:o:ibm:aix:5.2:*:*:*:*:*:*:*", "published": "2007-11-05T16:46:00.000", "last_modified": "2017-07-29T01:32:47.160"}, {"id": "CVE-2008-1877", "score": ["V2", 2.1, "LOW"], "v2_score": 2.1, "v2_exploitability_score": 3.9, "v2_impact_score": 2.9, "v2_vector": "AV:L/AC:L/Au:N/C:P/I:N/A:N", "access_vector": "LOCAL", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:L/AC:L/Au:N/C:P/I:N/A:N", "accessVector": "LOCAL", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 2.1}, "baseSeverity": "LOW", "exploitabilityScore": 3.9, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "tss 0.8.1 allows local users to read arbitrary files via the -a parameter, which is processed while tss is running with privileges.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:debian:tss:0.8.1:*:*:*:*:*:*:*", "published": "2008-04-17T19:05:00.000", "last_modified": "2017-08-08T01:30:32.980"}, {"id": "CVE-2007-5159", "score": ["V2", 4.6, "MEDIUM"], "v2_score": 4.6, "v2_exploitability_score": 3.9, "v2_impact_score": 6.4, "v2_vector": "AV:L/AC:L/Au:N/C:P/I:P/A:P", "access_vector": "LOCAL", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:L/AC:L/Au:N/C:P/I:P/A:P", "accessVector": "LOCAL", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 4.6}, "baseSeverity": "MEDIUM", "exploitabilityScore": 3.9, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": true, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "The ntfs-3g package before 1.913-2.fc7 in Fedora 7, and an ntfs-3g package in Ubuntu 7.10/Gutsy, assign incorrect permissions (setuid root) to mount.ntfs-3g, which allows local users with fuse group membership to read from and write to arbitrary block devices, possibly involving a file descriptor leak.", "cpe_vulnerable": false, "cpe_criteria": "cpe:2.3:o:redhat:fedora:7:*:*:*:*:*:*:*", "published": "2007-10-01T05:17:00.000", "last_modified": "2008-09-05T21:30:02.607"}, {"id": "CVE-2008-4638", "score": ["V2", 4.6, "MEDIUM"], "v2_score": 4.6, "v2_exploitability_score": 3.1, "v2_impact_score": 6.9, "v2_vector": "AV:L/AC:L/Au:S/C:C/I:N/A:N", "access_vector": "LOCAL", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:L/AC:L/Au:S/C:C/I:N/A:N", "accessVector": "LOCAL", "accessComplexity": "LOW", "authentication": "SINGLE", "confidentialityImpact": "COMPLETE", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 4.6}, "baseSeverity": "MEDIUM", "exploitabilityScore": 3.1, "impactScore": 6.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "qioadmin in the Quick I/O for Database feature in Symantec Veritas File System (VxFS) on HP-UX, and before 5.0 MP3 on Solaris, Linux, and AIX, allows local users to read arbitrary files by causing qioadmin to write a file's content to standard error in an error message.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:symantec:veritas_file_system:5.0:mp2:aix:*:*:*:*:*", "published": "2008-10-21T18:00:01.037", "last_modified": "2018-10-11T20:52:23.293"}, {"id": "CVE-2008-0162", "score": ["V2", 7.2, "HIGH"], "v2_score": 7.2, "v2_exploitability_score": 3.9, "v2_impact_score": 10.0, "v2_vector": "AV:L/AC:L/Au:N/C:C/I:C/A:C", "access_vector": "LOCAL", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:L/AC:L/Au:N/C:C/I:C/A:C", "accessVector": "LOCAL", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "COMPLETE", "integrityImpact": "COMPLETE", "availabilityImpact": "COMPLETE", "baseScore": 7.2}, "baseSeverity": "HIGH", "exploitabilityScore": 3.9, "impactScore": 10.0, "acInsufInfo": false, "obtainAllPrivilege": true, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "misc.c in splitvt 1.6.6 and earlier does not drop group privileges before executing xprop, which allows local users to gain privileges.", "cpe_vulnerable": false, "cpe_criteria": "cpe:2.3:o:debian:debian_linux:4.0:*:*:*:*:*:*:*", "published": "2008-02-22T21:44:00.000", "last_modified": "2008-09-05T21:34:21.920"}, {"id": "CVE-2008-0368", "score": ["V2", 7.2, "HIGH"], "v2_score": 7.2, "v2_exploitability_score": 3.9, "v2_impact_score": 10.0, "v2_vector": "AV:L/AC:L/Au:N/C:C/I:C/A:C", "access_vector": "LOCAL", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:L/AC:L/Au:N/C:C/I:C/A:C", "accessVector": "LOCAL", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "COMPLETE", "integrityImpact": "COMPLETE", "availabilityImpact": "COMPLETE", "baseScore": 7.2}, "baseSeverity": "HIGH", "exploitabilityScore": 3.9, "impactScore": 10.0, "acInsufInfo": true, "obtainAllPrivilege": true, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "onedcu in IBM Informix Dynamic Server (IDS) 10.x before 10.00.xC8 allows local users to create arbitrary files via the Trace file argument.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:ibm:informix_dynamic_server:10.0:*:*:*:*:*:*:*", "published": "2008-01-19T00:00:00.000", "last_modified": "2017-08-08T01:29:30.570"}, {"id": "CVE-2007-3931", "score": ["V2", 4.4, "MEDIUM"], "v2_score": 4.4, "v2_exploitability_score": 3.4, "v2_impact_score": 6.4, "v2_vector": "AV:L/AC:M/Au:N/C:P/I:P/A:P", "access_vector": "LOCAL", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:L/AC:M/Au:N/C:P/I:P/A:P", "accessVector": "LOCAL", "accessComplexity": "MEDIUM", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 4.4}, "baseSeverity": "MEDIUM", "exploitabilityScore": 3.4, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "The wrap_setuid_third_party_application function in the installation script for the Samsung SCX-4200 Driver 2.00.95 adds setuid permissions to third party applications such as xsane and xscanimage, which allows local users to gain privileges.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:samsung:scx-4200_driver:2.00.95:*:*:*:*:*:*:*", "published": "2007-07-21T00:30:00.000", "last_modified": "2008-11-15T06:54:38.467"}, {"id": "CVE-2020-3812", "score": ["V31", 5.5, "MEDIUM"], "v2_score": 2.1, "v2_exploitability_score": 3.9, "v2_impact_score": 2.9, "v2_vector": "AV:L/AC:L/Au:N/C:P/I:N/A:N", "access_vector": "LOCAL", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:L/AC:L/Au:N/C:P/I:N/A:N", "accessVector": "LOCAL", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 2.1}, "baseSeverity": "LOW", "exploitabilityScore": 3.9, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "qmail-verify as used in netqmail 1.06 is prone to an information disclosure vulnerability. A local attacker can test for the existence of files and directories anywhere in the filesystem because qmail-verify runs as root and tests for the existence of files in the attacker's home directory, without dropping its privileges first.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:netqmail:netqmail:1.06:*:*:*:*:*:*:*", "published": "2020-05-26T13:15:10.733", "last_modified": "2022-04-28T19:30:41.607"}], "cwe_info": {"cwe_id": "250", "name": "Execution with Unnecessary Privileges", "weakness_abstraction": "Base", "status": "Draft", "description": "The software performs an operation at a privilege level that is higher than the minimum level required, which creates new weaknesses or amplifies the consequences of other weaknesses.", "extended_description": "New weaknesses can be exposed because running with extra privileges, such as root or Administrator, can disable the normal security checks being performed by the operating system or surrounding environment. Other pre-existing weaknesses can turn into security vulnerabilities if they occur while operating at raised privileges. Privilege management functions can behave in some less-than-obvious ways, and they have different quirks on different platforms. These inconsistencies are particularly pronounced if you are transitioning from one non-root user to another. Signal handlers and spawned processes run at the privilege of the owning process, so if a process is running as root when a signal fires or a sub-process is executed, the signal handler or sub-process will operate with root privileges.", "related_weaknesses": "::NATURE:ChildOf:CWE ID:657:VIEW ID:1000:ORDINAL:Primary::NATURE:ChildOf:CWE ID:269:VIEW ID:1000::", "weakness_ordinalities": "", "applicable_platforms": "::LANGUAGE CLASS:Language-Independent:LANGUAGE PREVALENCE:Undetermined::TECHNOLOGY CLASS:Mobile:TECHNOLOGY PREVALENCE:Undetermined::", "background_details": "", "alternate_terms": "", "modes_of_introduction": "::PHASE:Implementation:NOTE:REALIZATION: This weakness is caused during implementation of an architectural security tactic.::PHASE:Installation::PHASE:Architecture and Design:NOTE:If an application has this design problem, then it can be easier for the developer to make implementation-related errors such as CWE-271 (Privilege Dropping / Lowering Errors). In addition, the consequences of Privilege Chaining (CWE-268) can become more severe.::PHASE:Operation::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Confidentiality:SCOPE:Integrity:SCOPE:Availability:SCOPE:Access Control:IMPACT:Gain Privileges or Assume Identity:IMPACT:Execute Unauthorized Code or Commands:IMPACT:Read Application Data:IMPACT:DoS: Crash, Exit, or Restart:NOTE:An attacker will be able to gain access to any resources that are allowed by the extra privileges. Common results include executing code, disabling services, and reading restricted data.::", "detection_methods": "::METHOD:Manual Analysis:DESCRIPTION:This weakness can be detected using tools and techniques that require manual (human) analysis, such as penetration testing, threat modeling, and interactive tools that allow the tester to record and modify an active session.::METHOD:Black Box:DESCRIPTION:Use monitoring tools that examine the software's process as it interacts with the operating system and the network. This technique is useful in cases when source code is unavailable, if the software was not developed by you, or if you want to verify that the build phase did not introduce any new weaknesses. Examples include debuggers that directly attach to the running process; system-call tracing utilities such as truss (Solaris) and strace (Linux); system activity monitors such as FileMon, RegMon, Process Monitor, and other Sysinternals utilities (Windows); and sniffers and protocol analyzers that monitor network traffic. Attach the monitor to the process and perform a login. Look for library functions and system calls that indicate when privileges are being raised or dropped. Look for accesses of resources that are restricted to normal users.::METHOD:Automated Static Analysis - Binary or Bytecode:DESCRIPTION:According to SOAR, the following detection techniques may be useful: Highly cost effective: Compare binary / bytecode to application permission manifest Cost effective for partial coverage: Bytecode Weakness Analysis - including disassembler + source code weakness analysis Binary Weakness Analysis - including disassembler + source code weakness analysis:EFFECTIVENESS:High::METHOD:Manual Static Analysis - Binary or Bytecode:DESCRIPTION:According to SOAR, the following detection techniques may be useful: Cost effective for partial coverage: Binary / Bytecode disassembler - then use manual analysis for vulnerabilities & anomalies:EFFECTIVENESS:SOAR Partial::METHOD:Dynamic Analysis with Automated Results Interpretation:DESCRIPTION:According to SOAR, the following detection techniques may be useful: Cost effective for partial coverage: Host-based Vulnerability Scanners - Examine configuration for flaws, verifying that audit mechanisms work, ensure host configuration meets certain predefined criteria:EFFECTIVENESS:SOAR Partial::METHOD:Dynamic Analysis with Manual Results Interpretation:DESCRIPTION:According to SOAR, the following detection techniques may be useful: Cost effective for partial coverage: Host Application Interface Scanner:EFFECTIVENESS:SOAR Partial::METHOD:Manual Static Analysis - Source Code:DESCRIPTION:According to SOAR, the following detection techniques may be useful: Highly cost effective: Manual Source Code Review (not inspections) Cost effective for partial coverage: Focused Manual Spotcheck - Focused manual analysis of source:EFFECTIVENESS:High::METHOD:Automated Static Analysis - Source Code:DESCRIPTION:According to SOAR, the following detection techniques may be useful: Cost effective for partial coverage: Source code Weakness Analyzer Context-configured Source Code Weakness Analyzer:EFFECTIVENESS:SOAR Partial::METHOD:Automated Static Analysis:DESCRIPTION:According to SOAR, the following detection techniques may be useful: Cost effective for partial coverage: Configuration Checker Permission Manifest Analysis:EFFECTIVENESS:SOAR Partial::METHOD:Architecture or Design Review:DESCRIPTION:According to SOAR, the following detection techniques may be useful: Highly cost effective: Inspection (IEEE 1028 standard) (can apply to requirements, design, source code, etc.) Formal Methods / Correct-By-Construction Cost effective for partial coverage: Attack Modeling:EFFECTIVENESS:High::", "potential_mitigations": "::PHASE:Architecture and Design Operation:STRATEGY:Environment Hardening:DESCRIPTION:Run your code using the lowest privileges that are required to accomplish the necessary tasks [REF-76]. If possible, create isolated accounts with limited privileges that are only used for a single task. That way, a successful attack will not immediately give the attacker access to the rest of the software or its environment. For example, database applications rarely need to run as the database administrator, especially in day-to-day operations.::PHASE:Architecture and Design:STRATEGY:Separation of Privilege:DESCRIPTION:Identify the functionality that requires additional privileges, such as access to privileged operating system resources. Wrap and centralize this functionality if possible, and isolate the privileged code as much as possible from other code [REF-76]. Raise privileges as late as possible, and drop them as soon as possible to avoid CWE-271. Avoid weaknesses such as CWE-288 and CWE-420 by protecting all possible communication channels that could interact with the privileged code, such as a secondary socket that is only intended to be accessed by administrators.::PHASE:Architecture and Design:STRATEGY:Attack Surface Reduction:DESCRIPTION:Identify the functionality that requires additional privileges, such as access to privileged operating system resources. Wrap and centralize this functionality if possible, and isolate the privileged code as much as possible from other code [REF-76]. Raise privileges as late as possible, and drop them as soon as possible to avoid CWE-271. Avoid weaknesses such as CWE-288 and CWE-420 by protecting all possible communication channels that could interact with the privileged code, such as a secondary socket that is only intended to be accessed by administrators.::PHASE:Implementation:DESCRIPTION:Perform extensive input validation for any privileged code that must be exposed to the user and reject anything that does not fit your strict requirements.::PHASE:Implementation:DESCRIPTION:When dropping privileges, ensure that they have been dropped successfully to avoid CWE-273. As protection mechanisms in the environment get stronger, privilege-dropping calls may fail even if it seems like they would always succeed.::PHASE:Implementation:DESCRIPTION:If circumstances force you to run with extra privileges, then determine the minimum access level necessary. First identify the different permissions that the software and its users will need to perform their actions, such as file read and write permissions, network socket permissions, and so forth. Then explicitly allow those actions while denying all else [REF-76]. Perform extensive input validation and canonicalization to minimize the chances of introducing a separate vulnerability. This mitigation is much more prone to error than dropping the privileges in the first place.::PHASE:Operation System Configuration:STRATEGY:Environment Hardening:DESCRIPTION:Ensure that the software runs properly under the Federal Desktop Core Configuration (FDCC) [REF-199] or an equivalent hardening configuration guide, which many organizations use to limit the attack surface and potential risk of deployed software.::", "observed_examples": "::REFERENCE:CVE-2007-4217:DESCRIPTION:FTP client program on a certain OS runs with setuid privileges and has a buffer overflow. Most clients do not need extra privileges, so an overflow is not a vulnerability for those clients.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2007-4217::REFERENCE:CVE-2008-1877:DESCRIPTION:Program runs with privileges and calls another program with the same privileges, which allows read of arbitrary files.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2008-1877::REFERENCE:CVE-2007-5159:DESCRIPTION:OS incorrectly installs a program with setuid privileges, allowing users to gain privileges.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2007-5159::REFERENCE:CVE-2008-4638:DESCRIPTION:Composite: application running with high privileges (CWE-250) allows user to specify a restricted file to process, which generates a parsing error that leaks the contents of the file (CWE-209).:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2008-4638::REFERENCE:CVE-2008-0162:DESCRIPTION:Program does not drop privileges before calling another program, allowing code execution.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2008-0162::REFERENCE:CVE-2008-0368:DESCRIPTION:setuid root program allows creation of arbitrary files through command line argument.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2008-0368::REFERENCE:CVE-2007-3931:DESCRIPTION:Installation script installs some programs as setuid when they shouldn't be.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2007-3931::REFERENCE:CVE-2020-3812:DESCRIPTION:mail program runs as root but does not drop its privileges before attempting to access a file. Attacker can use a symlink from their home directory to a directory only readable by root, then determine whether the file exists based on the response.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-3812::", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "::TAXONOMY NAME:7 Pernicious Kingdoms:ENTRY NAME:Often Misused: Privilege Management::TAXONOMY NAME:The CERT Oracle Secure Coding Standard for Java (2011):ENTRY ID:SER09-J:ENTRY NAME:Minimize privileges before deserializing from a privilege context::", "related_attack_patterns": "::104::470::69::", "notes": "::TYPE:Relationship:NOTE:There is a close association with CWE-653 (Insufficient Separation of Privileges). CWE-653 is about providing separate components for each privilege; CWE-250 is about ensuring that each component has the least amount of privileges possible.::TYPE:Maintenance:NOTE:CWE-271, CWE-272, and CWE-250 are all closely related and possibly overlapping. CWE-271 is probably better suited as a category. Both CWE-272 and CWE-250 are in active use by the community. The least privilege phrase has multiple interpretations.::"}}, {"cwe": "CWE-15", "cves": [], "cwe_info": {"cwe_id": "15", "name": "External Control of System or Configuration Setting", "weakness_abstraction": "Base", "status": "Incomplete", "description": "One or more system settings or configuration elements can be externally controlled by a user.", "extended_description": "Allowing external control of system settings can disrupt service or cause an application to behave in unexpected, and potentially malicious ways.", "related_weaknesses": "::NATURE:ChildOf:CWE ID:642:VIEW ID:1000:ORDINAL:Primary::NATURE:ChildOf:CWE ID:610:VIEW ID:1000::NATURE:ChildOf:CWE ID:20:VIEW ID:700:ORDINAL:Primary::", "weakness_ordinalities": "", "applicable_platforms": "", "background_details": "", "alternate_terms": "", "modes_of_introduction": "::PHASE:Implementation:NOTE:Setting manipulation vulnerabilities occur when an attacker can control values that govern the behavior of the system, manage specific resources, or in some way affect the functionality of the application.::PHASE:Implementation:NOTE:REALIZATION: This weakness is caused during implementation of an architectural security tactic.::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Other:IMPACT:Varies by Context::", "detection_methods": "", "potential_mitigations": "::PHASE:Architecture and Design:STRATEGY:Separation of Privilege:DESCRIPTION:Compartmentalize the system to have safe areas where trust boundaries can be unambiguously drawn. Do not allow sensitive data to go outside of the trust boundary and always be careful when interfacing with a compartment outside of the safe area. Ensure that appropriate compartmentalization is built into the system design, and the compartmentalization allows for and reinforces privilege separation functionality. Architects and designers should rely on the principle of least privilege to decide the appropriate time to use privileges and the time to drop privileges.::PHASE:Implementation Architecture and Design:DESCRIPTION:Because setting manipulation covers a diverse set of functions, any attempt at illustrating it will inevitably be incomplete. Rather than searching for a tight-knit relationship between the functions addressed in the setting manipulation category, take a step back and consider the sorts of system values that an attacker should not be allowed to control.::PHASE:Implementation Architecture and Design:DESCRIPTION:In general, do not allow user-provided or otherwise untrusted data to control sensitive values. The leverage that an attacker gains by controlling these values is not always immediately obvious, but do not underestimate the creativity of the attacker.::", "observed_examples": "", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "::TAXONOMY NAME:7 Pernicious Kingdoms:ENTRY NAME:Setting Manipulation::TAXONOMY NAME:Software Fault Patterns:ENTRY ID:SFP25:ENTRY NAME:Tainted input to variable::", "related_attack_patterns": "::13::146::176::203::270::271::69::76::77::", "notes": ""}}]}]}, {"technique_id": "T1078", "t_findings": [{"capec_id": "CAPEC-560", "c_findings": [{"cwe": "CWE-522", "cves": [{"id": "CVE-2007-0681", "score": ["V2", 7.5, "HIGH"], "v2_score": 7.5, "v2_exploitability_score": 10.0, "v2_impact_score": 6.4, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 7.5}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": true, "userInteractionRequired": false}], "description": "profile.php in ExtCalendar 2 and earlier allows remote attackers to change the passwords of arbitrary users without providing the original password, and possibly perform other unauthorized actions, via modified values to register.php.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:extcalendar:extcalendar:*:*:*:*:*:*:*:*", "published": "2007-02-03T01:28:00.000", "last_modified": "2017-10-19T01:30:03.300"}, {"id": "CVE-2000-0944", "score": ["V2", 7.5, "HIGH"], "v2_score": 7.5, "v2_exploitability_score": 10.0, "v2_impact_score": 6.4, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 7.5}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": true, "userInteractionRequired": false}], "description": "CGI Script Center News Update 1.1 does not properly validate the original news administration password during a password change operation, which allows remote attackers to modify the password without knowing the original password.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:cgi_script_center:news_update:1.1:*:*:*:*:*:*:*", "published": "2000-12-19T05:00:00.000", "last_modified": "2017-10-10T01:29:23.967"}, {"id": "CVE-2005-3435", "score": ["V2", 7.5, "HIGH"], "v2_score": 7.5, "v2_exploitability_score": 10.0, "v2_impact_score": 6.4, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 7.5}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": true, "userInteractionRequired": false}], "description": "admin_news.php in Archilles Newsworld up to 1.3.0 allows attackers to bypass authentication by obtaining the password hash for another user, for example through another Newsworld vulnerability, and specifying the hash in the pwd argument.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:archilles:newsworld:*:*:*:*:*:*:*:*", "published": "2005-11-02T11:02:00.000", "last_modified": "2017-07-11T01:33:12.017"}, {"id": "CVE-2005-0408", "score": ["V2", 7.5, "HIGH"], "v2_score": 7.5, "v2_exploitability_score": 10.0, "v2_impact_score": 6.4, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 7.5}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": true, "userInteractionRequired": false}], "description": "CitrusDB 0.3.6 and earlier generates easily predictable MD5 hashes of the user name for the id_hash cookie, which allows remote attackers to bypass authentication and gain privileges by calculating the MD5 checksum of the user name combined with the \"boogaadeeboo\" string, which is hard-coded in the $hidden_hash variable.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:citrusdb:citrusdb:*:*:*:*:*:*:*:*", "published": "2005-02-14T05:00:00.000", "last_modified": "2008-09-10T19:35:31.147"}], "cwe_info": {"cwe_id": "522", "name": "Insufficiently Protected Credentials", "weakness_abstraction": "Class", "status": "Incomplete", "description": "The product transmits or stores authentication credentials, but it uses an insecure method that is susceptible to unauthorized interception and/or retrieval.", "extended_description": "", "related_weaknesses": "::NATURE:ChildOf:CWE ID:287:VIEW ID:1000:ORDINAL:Primary::NATURE:ChildOf:CWE ID:287:VIEW ID:1003:ORDINAL:Primary::NATURE:ChildOf:CWE ID:668:VIEW ID:1000::", "weakness_ordinalities": "", "applicable_platforms": "", "background_details": "", "alternate_terms": "", "modes_of_introduction": "::PHASE:Architecture and Design:NOTE:COMMISSION: This weakness refers to an incorrect design related to an architectural security tactic.::PHASE:Implementation::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Access Control:IMPACT:Gain Privileges or Assume Identity:NOTE:An attacker could gain access to user accounts and access sensitive data used by the user accounts.::", "detection_methods": "", "potential_mitigations": "::PHASE:Architecture and Design:DESCRIPTION:Use an appropriate security mechanism to protect the credentials.::PHASE:Architecture and Design:DESCRIPTION:Make appropriate use of cryptography to protect the credentials.::PHASE:Implementation:DESCRIPTION:Use industry standards to protect the credentials (e.g. LDAP, keystore, etc.).::", "observed_examples": "::REFERENCE:CVE-2007-0681:DESCRIPTION:Web app allows remote attackers to change the passwords of arbitrary users without providing the original password, and possibly perform other unauthorized actions.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2007-0681::REFERENCE:CVE-2000-0944:DESCRIPTION:Web application password change utility doesn't check the original password.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2000-0944::REFERENCE:CVE-2005-3435:DESCRIPTION:product authentication succeeds if user-provided MD5 hash matches the hash in its database; this can be subjected to replay attacks.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2005-3435::REFERENCE:CVE-2005-0408:DESCRIPTION:chain: product generates predictable MD5 hashes using a constant value combined with username, allowing authentication bypass.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2005-0408::", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "::TAXONOMY NAME:OWASP Top Ten 2007:ENTRY ID:A7:ENTRY NAME:Broken Authentication and Session Management:MAPPING FIT:CWE More Specific::TAXONOMY NAME:OWASP Top Ten 2004:ENTRY ID:A3:ENTRY NAME:Broken Authentication and Session Management:MAPPING FIT:CWE More Specific::", "related_attack_patterns": "::102::474::50::509::551::555::560::561::600::644::645::652::653::", "notes": ""}}, {"cwe": "CWE-307", "cves": [{"id": "CVE-1999-1152", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "Compaq/Microcom 6000 Access Integrator does not disconnect a client after a certain number of failed login attempts, which allows remote attackers to guess usernames or passwords via a brute force attack.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:h:compaq_microcom:microcom_6000_access_integrator:*:*:*:*:*:*:*:*", "published": "1998-06-03T04:00:00.000", "last_modified": "2016-10-18T02:01:45.917"}, {"id": "CVE-2001-1291", "score": ["V2", 10.0, "HIGH"], "v2_score": 10.0, "v2_exploitability_score": 10.0, "v2_impact_score": 10.0, "v2_vector": "AV:N/AC:L/Au:N/C:C/I:C/A:C", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:C/I:C/A:C", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "COMPLETE", "integrityImpact": "COMPLETE", "availabilityImpact": "COMPLETE", "baseScore": 10.0}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 10.0, "acInsufInfo": false, "obtainAllPrivilege": true, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "The telnet server for 3Com hardware such as PS40 SuperStack II does not delay or disconnect remote attackers who provide an incorrect username or password, which makes it easier to break into the server via brute force password guessing.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:h:3com:superstack_ii_ps_hub:40:*:*:*:*:*:*:*", "published": "2001-07-12T04:00:00.000", "last_modified": "2017-10-10T01:30:02.077"}, {"id": "CVE-2001-0395", "score": ["V2", 7.5, "HIGH"], "v2_score": 7.5, "v2_exploitability_score": 10.0, "v2_impact_score": 6.4, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 7.5}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "Lightwave ConsoleServer 3200 does not disconnect users after unsuccessful login attempts, which could allow remote attackers to conduct brute force password guessing.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:h:lightwave:consoleserver:3200:*:*:*:*:*:*:*", "published": "2001-07-02T04:00:00.000", "last_modified": "2008-09-05T20:24:00.023"}, {"id": "CVE-2001-1339", "score": ["V2", 7.5, "HIGH"], "v2_score": 7.5, "v2_exploitability_score": 10.0, "v2_impact_score": 6.4, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 7.5}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": true, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "Beck IPC GmbH IPC@CHIP telnet service does not delay or disconnect users from the service when bad passwords are entered, which makes it easier for remote attackers to conduct brute force password guessing attacks.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:beck_ipc_gmbh:ipc_at_chip_embedded-webserver:*:*:*:*:*:*:*:*", "published": "2001-05-24T04:00:00.000", "last_modified": "2008-09-05T20:26:17.810"}, {"id": "CVE-2002-0628", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "The Telnet service for Polycom ViewStation before 7.2.4 does not restrict the number of failed login attempts, which makes it easier for remote attackers to guess usernames and passwords via a brute force attack.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:h:polycom:viewstation_128:6.5.1:*:*:*:*:*:*:*", "published": "2003-01-07T05:00:00.000", "last_modified": "2017-07-11T01:29:12.523"}, {"id": "CVE-1999-1324", "score": ["V2", 7.5, "HIGH"], "v2_score": 7.5, "v2_exploitability_score": 10.0, "v2_impact_score": 6.4, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 7.5}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "VAXstations running Open VMS 5.3 through 5.5-2 with VMS DECwindows or MOTIF do not properly disable access to user accounts that exceed the break-in limit threshold for failed login attempts, which makes it easier for attackers to conduct brute force password guessing.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:dec:dec_openvms_vax:5.3:*:*:*:*:*:*:*", "published": "1999-12-31T05:00:00.000", "last_modified": "2017-10-10T01:29:05.653"}], "cwe_info": {"cwe_id": "307", "name": "Improper Restriction of Excessive Authentication Attempts", "weakness_abstraction": "Base", "status": "Draft", "description": "The software does not implement sufficient measures to prevent multiple failed authentication attempts within in a short time frame, making it more susceptible to brute force attacks.", "extended_description": "", "related_weaknesses": "::NATURE:ChildOf:CWE ID:287:VIEW ID:1000:ORDINAL:Primary::NATURE:ChildOf:CWE ID:287:VIEW ID:1003:ORDINAL:Primary::NATURE:ChildOf:CWE ID:799:VIEW ID:1000::", "weakness_ordinalities": "", "applicable_platforms": "::LANGUAGE CLASS:Language-Independent:LANGUAGE PREVALENCE:Undetermined::", "background_details": "", "alternate_terms": "", "modes_of_introduction": "::PHASE:Architecture and Design:NOTE:COMMISSION: This weakness refers to an incorrect design related to an architectural security tactic.::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Access Control:IMPACT:Bypass Protection Mechanism:NOTE:An attacker could perform an arbitrary number of authentication attempts using different passwords, and eventually gain access to the targeted account.::", "detection_methods": "::METHOD:Dynamic Analysis with Automated Results Interpretation:DESCRIPTION:According to SOAR, the following detection techniques may be useful: Highly cost effective: Web Application Scanner Web Services Scanner Database Scanners Cost effective for partial coverage: Host-based Vulnerability Scanners - Examine configuration for flaws, verifying that audit mechanisms work, ensure host configuration meets certain predefined criteria:EFFECTIVENESS:High::METHOD:Dynamic Analysis with Manual Results Interpretation:DESCRIPTION:According to SOAR, the following detection techniques may be useful: Highly cost effective: Fuzz Tester Framework-based Fuzzer Cost effective for partial coverage: Forced Path Execution:EFFECTIVENESS:High::METHOD:Manual Static Analysis - Source Code:DESCRIPTION:According to SOAR, the following detection techniques may be useful: Highly cost effective: Focused Manual Spotcheck - Focused manual analysis of source Manual Source Code Review (not inspections):EFFECTIVENESS:High::METHOD:Automated Static Analysis - Source Code:DESCRIPTION:According to SOAR, the following detection techniques may be useful: Cost effective for partial coverage: Source code Weakness Analyzer Context-configured Source Code Weakness Analyzer:EFFECTIVENESS:SOAR Partial::METHOD:Automated Static Analysis:DESCRIPTION:According to SOAR, the following detection techniques may be useful: Cost effective for partial coverage: Configuration Checker:EFFECTIVENESS:SOAR Partial::METHOD:Architecture or Design Review:DESCRIPTION:According to SOAR, the following detection techniques may be useful: Highly cost effective: Formal Methods / Correct-By-Construction Cost effective for partial coverage: Inspection (IEEE 1028 standard) (can apply to requirements, design, source code, etc.):EFFECTIVENESS:High::", "potential_mitigations": "::PHASE:Architecture and Design:DESCRIPTION:Common protection mechanisms include: Disconnecting the user after a small number of failed attempts Implementing a timeout Locking out a targeted account Requiring a computational task on the user's part.::PHASE:Architecture and Design:STRATEGY:Libraries or Frameworks:DESCRIPTION:Use a vetted library or framework that does not allow this weakness to occur or provides constructs that make this weakness easier to avoid. Consider using libraries with authentication capabilities such as OpenSSL or the ESAPI Authenticator. [REF-45]::", "observed_examples": "::REFERENCE:CVE-1999-1152:DESCRIPTION:Product does not disconnect or timeout after multiple failed logins.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-1999-1152::REFERENCE:CVE-2001-1291:DESCRIPTION:Product does not disconnect or timeout after multiple failed logins.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2001-1291::REFERENCE:CVE-2001-0395:DESCRIPTION:Product does not disconnect or timeout after multiple failed logins.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2001-0395::REFERENCE:CVE-2001-1339:DESCRIPTION:Product does not disconnect or timeout after multiple failed logins.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2001-1339::REFERENCE:CVE-2002-0628:DESCRIPTION:Product does not disconnect or timeout after multiple failed logins.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2002-0628::REFERENCE:CVE-1999-1324:DESCRIPTION:User accounts not disabled when they exceed a threshold; possibly a resultant problem.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-1999-1324::", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "::TAXONOMY NAME:PLOVER:ENTRY ID:AUTHENT.MULTFAIL:ENTRY NAME:Multiple Failed Authentication Attempts not Prevented::TAXONOMY NAME:Software Fault Patterns:ENTRY ID:SFP34:ENTRY NAME:Unrestricted authentication::", "related_attack_patterns": "::16::49::560::565::600::652::653::", "notes": ""}}, {"cwe": "CWE-308", "cves": [], "cwe_info": {"cwe_id": "308", "name": "Use of Single-factor Authentication", "weakness_abstraction": "Base", "status": "Draft", "description": "The use of single-factor authentication can lead to unnecessary risk of compromise when compared with the benefits of a dual-factor authentication scheme.", "extended_description": "While the use of multiple authentication schemes is simply piling on more complexity on top of authentication, it is inestimably valuable to have such measures of redundancy. The use of weak, reused, and common passwords is rampant on the internet. Without the added protection of multiple authentication schemes, a single mistake can result in the compromise of an account. For this reason, if multiple schemes are possible and also easy to use, they should be implemented and required.", "related_weaknesses": "::NATURE:ChildOf:CWE ID:287:VIEW ID:1000:ORDINAL:Primary::NATURE:ChildOf:CWE ID:654:VIEW ID:1000::NATURE:PeerOf:CWE ID:309:VIEW ID:1000::", "weakness_ordinalities": "", "applicable_platforms": "::LANGUAGE CLASS:Language-Independent:LANGUAGE PREVALENCE:Undetermined::", "background_details": "", "alternate_terms": "", "modes_of_introduction": "::PHASE:Architecture and Design:NOTE:COMMISSION: This weakness refers to an incorrect design related to an architectural security tactic.::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Access Control:IMPACT:Bypass Protection Mechanism:NOTE:If the secret in a single-factor authentication scheme gets compromised, full authentication is possible.::", "detection_methods": "", "potential_mitigations": "::PHASE:Architecture and Design:DESCRIPTION:Use multiple independent authentication schemes, which ensures that -- if one of the methods is compromised -- the system itself is still likely safe from compromise.::", "observed_examples": "", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "::TAXONOMY NAME:CLASP:ENTRY NAME:Using single-factor authentication::", "related_attack_patterns": "::16::49::509::55::555::560::561::565::600::644::645::652::653::70::", "notes": ""}}, {"cwe": "CWE-309", "cves": [], "cwe_info": {"cwe_id": "309", "name": "Use of Password System for Primary Authentication", "weakness_abstraction": "Base", "status": "Draft", "description": "The use of password systems as the primary means of authentication may be subject to several flaws or shortcomings, each reducing the effectiveness of the mechanism.", "extended_description": "", "related_weaknesses": "::NATURE:ChildOf:CWE ID:287:VIEW ID:1000:ORDINAL:Primary::NATURE:ChildOf:CWE ID:654:VIEW ID:1000::NATURE:PeerOf:CWE ID:308:VIEW ID:1000::", "weakness_ordinalities": "", "applicable_platforms": "::LANGUAGE CLASS:Language-Independent:LANGUAGE PREVALENCE:Undetermined::", "background_details": "::Password systems are the simplest and most ubiquitous authentication mechanisms. However, they are subject to such well known attacks,and such frequent compromise that their use in the most simple implementation is not practical.::", "alternate_terms": "", "modes_of_introduction": "::PHASE:Architecture and Design::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Access Control:IMPACT:Bypass Protection Mechanism:IMPACT:Gain Privileges or Assume Identity:NOTE:A password authentication mechanism error will almost always result in attackers being authorized as valid users.::", "detection_methods": "", "potential_mitigations": "::PHASE:Architecture and Design:DESCRIPTION:In order to protect password systems from compromise, the following should be noted: Passwords should be stored safely to prevent insider attack and to ensure that -- if a system is compromised -- the passwords are not retrievable. Due to password reuse, this information may be useful in the compromise of other systems these users work with. In order to protect these passwords, they should be stored encrypted, in a non-reversible state, such that the original text password cannot be extracted from the stored value. Password aging should be strictly enforced to ensure that passwords do not remain unchanged for long periods of time. The longer a password remains in use, the higher the probability that it has been compromised. For this reason, passwords should require refreshing periodically, and users should be informed of the risk of passwords which remain in use for too long. Password strength should be enforced intelligently. Rather than restrict passwords to specific content, or specific length, users should be encouraged to use upper and lower case letters, numbers, and symbols in their passwords. The system should also ensure that no passwords are derived from dictionary words.::PHASE:Architecture and Design:DESCRIPTION:Use a zero-knowledge password protocol, such as SRP.::PHASE:Architecture and Design:DESCRIPTION:Ensure that passwords are stored safely and are not reversible.::PHASE:Architecture and Design:DESCRIPTION:Implement password aging functionality that requires passwords be changed after a certain point.::PHASE:Architecture and Design:DESCRIPTION:Use a mechanism for determining the strength of a password and notify the user of weak password use.::PHASE:Architecture and Design:DESCRIPTION:Inform the user of why password protections are in place, how they work to protect data integrity, and why it is important to heed their warnings.::", "observed_examples": "", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "::TAXONOMY NAME:CLASP:ENTRY NAME:Using password systems::TAXONOMY NAME:OWASP Top Ten 2004:ENTRY ID:A3:ENTRY NAME:Broken Authentication and Session Management:MAPPING FIT:CWE More Specific::", "related_attack_patterns": "::16::49::509::55::555::560::561::565::600::652::653::70::", "notes": ""}}, {"cwe": "CWE-262", "cves": [], "cwe_info": {"cwe_id": "262", "name": "Not Using Password Aging", "weakness_abstraction": "Base", "status": "Draft", "description": "If no mechanism is in place for managing password aging, users will have no incentive to update passwords in a timely manner.", "extended_description": "Security experts have often recommended that users change their passwords regularly and avoid reusing passwords. Although this can be an effective mitigation, if the expiration window is too short, it can cause users to generate poor or predictable passwords. As such, it is important to discourage creating similar passwords. It is also useful to have a password aging mechanism that notifies users when passwords are considered old and requests that they replace them with new, strong passwords. Companion documentation which stresses how important this practice is can help users understand and better support this approach.", "related_weaknesses": "::NATURE:ChildOf:CWE ID:287:VIEW ID:1000:ORDINAL:Primary::NATURE:ChildOf:CWE ID:404:VIEW ID:1000::NATURE:PeerOf:CWE ID:309:VIEW ID:1000::NATURE:PeerOf:CWE ID:263:VIEW ID:1000::NATURE:PeerOf:CWE ID:324:VIEW ID:1000::", "weakness_ordinalities": "", "applicable_platforms": "::LANGUAGE CLASS:Language-Independent:LANGUAGE PREVALENCE:Undetermined::", "background_details": "", "alternate_terms": "", "modes_of_introduction": "::PHASE:Architecture and Design:NOTE:COMMISSION: This weakness refers to an incorrect design related to an architectural security tactic.::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Access Control:IMPACT:Gain Privileges or Assume Identity:NOTE:As passwords age, the probability that they are compromised grows.::", "detection_methods": "", "potential_mitigations": "::PHASE:Architecture and Design:DESCRIPTION:As part of a product's design, require users to change their passwords regularly and avoid reusing previous passwords.::", "observed_examples": "", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "::TAXONOMY NAME:CLASP:ENTRY NAME:Not allowing password aging::", "related_attack_patterns": "::16::49::509::55::555::560::561::565::600::652::653::70::", "notes": ""}}, {"cwe": "CWE-263", "cves": [], "cwe_info": {"cwe_id": "263", "name": "Password Aging with Long Expiration", "weakness_abstraction": "Base", "status": "Draft", "description": "Allowing password aging to occur unchecked can result in the possibility of diminished password integrity.", "extended_description": "Just as neglecting to include functionality for the management of password aging is dangerous, so is allowing password aging to continue unchecked. Passwords must be given a maximum life span, after which a user is required to update with a new and different password.", "related_weaknesses": "::NATURE:ChildOf:CWE ID:287:VIEW ID:1000:ORDINAL:Primary::NATURE:ChildOf:CWE ID:404:VIEW ID:1000::", "weakness_ordinalities": "", "applicable_platforms": "::LANGUAGE CLASS:Language-Independent:LANGUAGE PREVALENCE:Undetermined::", "background_details": "", "alternate_terms": "", "modes_of_introduction": "::PHASE:Architecture and Design:NOTE:COMMISSION: This weakness refers to an incorrect design related to an architectural security tactic.::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Access Control:IMPACT:Gain Privileges or Assume Identity:NOTE:As passwords age, the probability that they are compromised grows.::", "detection_methods": "", "potential_mitigations": "::PHASE:Architecture and Design:DESCRIPTION:Ensure that password aging is limited so that there is a defined maximum age for passwords and so that the user is notified several times leading up to the password expiration.::", "observed_examples": "", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "::TAXONOMY NAME:CLASP:ENTRY NAME:Allowing password aging::", "related_attack_patterns": "::16::49::509::55::555::560::561::565::600::652::653::70::", "notes": ""}}, {"cwe": "CWE-654", "cves": [], "cwe_info": {"cwe_id": "654", "name": "Reliance on a Single Factor in a Security Decision", "weakness_abstraction": "Base", "status": "Draft", "description": "A protection mechanism relies exclusively, or to a large extent, on the evaluation of a single condition or the integrity of a single object or entity in order to make a decision about granting access to restricted resources or functionality.", "extended_description": "", "related_weaknesses": "::NATURE:ChildOf:CWE ID:657:VIEW ID:1000:ORDINAL:Primary::NATURE:ChildOf:CWE ID:693:VIEW ID:1000::", "weakness_ordinalities": "::ORDINALITY:Primary::", "applicable_platforms": "::LANGUAGE CLASS:Language-Independent:LANGUAGE PREVALENCE:Undetermined::", "background_details": "", "alternate_terms": "::TERM:Separation of Privilege:DESCRIPTION:Some people and publications use the term Separation of Privilege to describe this weakness, but this term has dual meanings in current usage. While this entry is closely associated with the original definition of Separation of Privilege by Saltzer and Schroeder, others use the same term to describe poor compartmentalization (CWE-653). Because there are multiple interpretations, use of the Separation of Privilege term is discouraged.::", "modes_of_introduction": "::PHASE:Architecture and Design::PHASE:Implementation::PHASE:Operation::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Access Control:IMPACT:Gain Privileges or Assume Identity:NOTE:If the single factor is compromised (e.g. by theft or spoofing), then the integrity of the entire security mechanism can be violated with respect to the user that is identified by that factor.::SCOPE:Non-Repudiation:IMPACT:Hide Activities:NOTE:It can become difficult or impossible for the product to be able to distinguish between legitimate activities by the entity who provided the factor, versus illegitimate activities by an attacker.::", "detection_methods": "", "potential_mitigations": "::PHASE:Architecture and Design:DESCRIPTION:Use multiple simultaneous checks before granting access to critical operations or granting critical privileges. A weaker but helpful mitigation is to use several successive checks (multiple layers of security).::PHASE:Architecture and Design:DESCRIPTION:Use redundant access rules on different choke points (e.g., firewalls).::", "observed_examples": "", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "", "related_attack_patterns": "::16::274::49::55::560::565::600::652::653::70::", "notes": "::TYPE:Maintenance:NOTE:This entry is closely associated with the term Separation of Privilege. This term is used in several different ways in the industry, but they generally combine two closely related principles: compartmentalization (CWE-653) and using only one factor in a security decision (this entry). Proper compartmentalization implicitly introduces multiple factors into a security decision, but there can be cases in which multiple factors are required for authentication or other mechanisms that do not involve compartmentalization, such as performing all required checks on a submitted certificate. It is likely that CWE-653 and CWE-654 will provoke further discussion.::"}}, {"cwe": "CWE-1273", "cves": [], "cwe_info": {"cwe_id": "1273", "name": "Device Unlock Credential Sharing", "weakness_abstraction": "Base", "status": "Incomplete", "description": "The credentials necessary for unlocking a device are shared across multiple parties and may expose sensitive information.", "extended_description": "\u201cUnlocking a device\u201d often means activating certain, unadvertised, debug and manufacturer-specific capabilities of a device using sensitive credentials. Unlocking a device might be necessary for the purpose of troubleshooting device problems. For example, suppose a device contains the ability to dump the content of the full system memory by disabling the memory-protection mechanisms. Since this is a highly security-sensitive capability, this capability is \u201clocked\u201d in the production part. Unless the device gets unlocked by supplying the proper credentials the debug capabilities are not available. For cases where the chip designer, chip manufacturer (fabricator), and manufacturing and assembly testers are the all employed by the same company, the compromise of the credentials are greatly reduced. However, when the chip designer is employed by one company, the chip manufacturer is employed by another company (a foundry), and the assemblers and testers are employed by yet a third company. Since these different companies will need to perform various tests on the device to verify correct device function, they all need to share the unlock key. Unfortunately, the level of secrecy and policy might be quite different at each company, greatly increasing the risk of sensitive credentials being compromised.", "related_weaknesses": "::NATURE:ChildOf:CWE ID:200:VIEW ID:1000:ORDINAL:Primary::", "weakness_ordinalities": "", "applicable_platforms": "::LANGUAGE NAME:VHDL:LANGUAGE PREVALENCE:Undetermined::LANGUAGE NAME:Verilog:LANGUAGE PREVALENCE:Undetermined::LANGUAGE CLASS:Compiled:LANGUAGE PREVALENCE:Undetermined::OPERATING SYSTEM CLASS:OS-Independent:OPERATING SYSTEM PREVALENCE:Undetermined::ARCHITECTURE CLASS:Architecture-Independent:ARCHITECTURE PREVALENCE:Undetermined::TECHNOLOGY NAME:Other:TECHNOLOGY PREVALENCE:Undetermined::TECHNOLOGY CLASS:Technology-Independent:TECHNOLOGY PREVALENCE:Undetermined::", "background_details": "", "alternate_terms": "", "modes_of_introduction": "::PHASE:Integration::PHASE:Manufacturing::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Confidentiality:SCOPE:Integrity:SCOPE:Availability:SCOPE:Access Control:SCOPE:Accountability:SCOPE:Authentication:SCOPE:Authorization:SCOPE:Non-Repudiation:IMPACT:Modify Memory:IMPACT:Read Memory:IMPACT:Modify Files or Directories:IMPACT:Read Files or Directories:IMPACT:Modify Application Data:IMPACT:Execute Unauthorized Code or Commands:IMPACT:Gain Privileges or Assume Identity:IMPACT:Bypass Protection Mechanism:NOTE:Once unlock credentials are compromised, an attacker can use the credentials to unlock the device and gain unauthorized access to the hidden functionalities protected by those credentials.::", "detection_methods": "", "potential_mitigations": "::PHASE:Integration:DESCRIPTION:Ensure the unlock credentials are shared with the minimum number of parties and with utmost secrecy. To limit the risk associated with compromised credentials, where possible, the credentials should be part-specific.::PHASE:Manufacturing:DESCRIPTION:Ensure the unlock credentials are shared with the minimum number of parties and with utmost secrecy. To limit the risk associated with compromised credentials, where possible, the credentials should be part-specific.::", "observed_examples": "", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "", "related_attack_patterns": "::560::", "notes": "::TYPE:Maintenance:NOTE:This entry is still under development and will continue to see updates and content improvements.::"}}]}]}, {"technique_id": "T1003", "t_findings": [{"capec_id": "CAPEC-567", "c_findings": []}]}, {"technique_id": "T1614", "t_findings": [{"capec_id": "CAPEC-567", "c_findings": []}]}, {"technique_id": "T1195", "t_findings": [{"capec_id": "CAPEC-437", "c_findings": []}, {"capec_id": "CAPEC-438", "c_findings": []}, {"capec_id": "CAPEC-439", "c_findings": [{"cwe": "CWE-1269", "cves": [{"id": "CVE-2019-13945", "score": ["V31", 6.8, "MEDIUM"], "v2_score": 4.6, "v2_exploitability_score": 3.9, "v2_impact_score": 6.4, "v2_vector": "AV:L/AC:L/Au:N/C:P/I:P/A:P", "access_vector": "LOCAL", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:L/AC:L/Au:N/C:P/I:P/A:P", "accessVector": "LOCAL", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 4.6}, "baseSeverity": "MEDIUM", "exploitabilityScore": 3.9, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "A vulnerability has been identified in SIMATIC S7-1200 CPU family (incl. SIPLUS variants) (All versions), SIMATIC S7-1200 CPU family < V4.x (incl. SIPLUS variants) (All versions), SIMATIC S7-1200 CPU family V4.x (incl. SIPLUS variants) (All versions with Function State (FS) < 11), SIMATIC S7-200 SMART CPU CR20s (6ES7 288-1CR20-0AA1) (All versions <= V2.3.0 and Function State (FS) <= 3), SIMATIC S7-200 SMART CPU CR30s (6ES7 288-1CR30-0AA1) (All versions <= V2.3.0 and Function State (FS) <= 3), SIMATIC S7-200 SMART CPU CR40 (6ES7 288-1CR40-0AA0) (All versions <= V2.2.2 and Function State (FS) <= 8), SIMATIC S7-200 SMART CPU CR40s (6ES7 288-1CR40-0AA1) (All versions <= V2.3.0 and Function State (FS) <= 3), SIMATIC S7-200 SMART CPU CR60 (6ES7 288-1CR60-0AA0) (All versions <= V2.2.2 and Function State (FS) <= 10), SIMATIC S7-200 SMART CPU CR60s (6ES7 288-1CR60-0AA1) (All versions <= V2.3.0 and Function State (FS) <= 3), SIMATIC S7-200 SMART CPU SR20 (6ES7 288-1SR20-0AA0) (All versions <= V2.5.0 and Function State (FS) <= 11), SIMATIC S7-200 SMART CPU SR30 (6ES7 288-1SR30-0AA0) (All versions <= V2.5.0 and Function State (FS) <= 10), SIMATIC S7-200 SMART CPU SR40 (6ES7 288-1SR40-0AA0) (All versions <= V2.5.0 and Function State (FS) <= 10), SIMATIC S7-200 SMART CPU SR60 (6ES7 288-1SR60-0AA0) (All versions <= V2.5.0 and Function State (FS) <= 12), SIMATIC S7-200 SMART CPU ST20 (6ES7 288-1ST20-0AA0) (All versions <= V2.5.0 and Function State (FS) <= 9), SIMATIC S7-200 SMART CPU ST30 (6ES7 288-1ST30-0AA0) (All versions <= V2.5.0 and Function State (FS) <= 9), SIMATIC S7-200 SMART CPU ST40 (6ES7 288-1ST40-0AA0) (All versions <= V2.5.0 and Function State (FS) <= 8), SIMATIC S7-200 SMART CPU ST60 (6ES7 288-1ST60-0AA0) (All versions <= V2.5.0 and Function State (FS) <= 8), SIMATIC S7-200 SMART CPU family (All versions). There is an access mode used during manufacturing of the affected devices that allows additional diagnostic functionality. The security vulnerability could be exploited by an attacker with physical access to the UART interface during boot process.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:o:siemens:simatic_s7-1200_firmware:*:*:*:*:*:*:*:*", "published": "2019-12-12T14:15:15.133", "last_modified": "2020-10-09T13:35:41.460"}, {"id": "CVE-2018-4251", "score": ["V30", 5.5, "MEDIUM"], "v2_score": 7.1, "v2_exploitability_score": 8.6, "v2_impact_score": 6.9, "v2_vector": "AV:N/AC:M/Au:N/C:N/I:C/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:M/Au:N/C:N/I:C/A:N", "accessVector": "NETWORK", "accessComplexity": "MEDIUM", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "COMPLETE", "availabilityImpact": "NONE", "baseScore": 7.1}, "baseSeverity": "HIGH", "exploitabilityScore": 8.6, "impactScore": 6.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": true}], "description": "An issue was discovered in certain Apple products. macOS before 10.13.5 is affected. The issue involves the \"Firmware\" component. It allows attackers to modify the EFI flash-memory region that a crafted app that has root access.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:o:apple:mac_os_x:*:*:*:*:*:*:*:*", "published": "2018-06-08T18:29:02.867", "last_modified": "2019-10-03T00:03:26.223"}], "cwe_info": {"cwe_id": "1269", "name": "Product Released in Non-Release Configuration", "weakness_abstraction": "Base", "status": "Incomplete", "description": "The product released to market is released in pre-production or manufacturing configuration.", "extended_description": "Products in the pre-production or manufacturing stages are configured to have many debug hooks and debug capabilities, including but not limited to: Ability to override/bypass various cryptographic checks (including authentication, authorization, and integrity) Ability to read/write/modify/dump internal state (including registers and memory) Ability to change system configurations Ability to run hidden or private commands that are not allowed during production (as they expose IP). The above is by no means an exhaustive list, but it alludes to the greater capability and the greater state of vulnerability of a product during it's preproduction or manufacturing state. Complexity increases when multiple parties are involved in executing the tests before the final production version. For example, a chipmaker might fabricate a chip and run its own preproduction tests, following which the chip would be delivered to the Original Equipment Manufacturer (OEM), who would now run a second set of different preproduction tests on the same chip. Only after both of these sets of activities are complete, can the overall manufacturing phase be called \u201ccomplete\u201d and have the \u201cManufacturing Complete\u201d fuse blown. However, if the OEM forgets to blow the Manufacturing Complete fuse, then the system remains in the manufacturing stage, rendering the system both exposed and vulnerable.", "related_weaknesses": "::NATURE:ChildOf:CWE ID:693:VIEW ID:1000:ORDINAL:Primary::", "weakness_ordinalities": "", "applicable_platforms": "::LANGUAGE NAME:VHDL:LANGUAGE PREVALENCE:Undetermined::LANGUAGE NAME:Verilog:LANGUAGE PREVALENCE:Undetermined::LANGUAGE CLASS:Compiled:LANGUAGE PREVALENCE:Undetermined::OPERATING SYSTEM CLASS:OS-Independent:OPERATING SYSTEM PREVALENCE:Undetermined::ARCHITECTURE CLASS:Architecture-Independent:ARCHITECTURE PREVALENCE:Undetermined::TECHNOLOGY NAME:Other:TECHNOLOGY PREVALENCE:Undetermined::TECHNOLOGY CLASS:Technology-Independent:TECHNOLOGY PREVALENCE:Undetermined::", "background_details": "", "alternate_terms": "", "modes_of_introduction": "::PHASE:Implementation::PHASE:Integration::PHASE:Manufacturing::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Confidentiality:SCOPE:Integrity:SCOPE:Availability:SCOPE:Access Control:SCOPE:Accountability:SCOPE:Authentication:SCOPE:Authorization:SCOPE:Non-Repudiation:IMPACT:Other:LIKELIHOOD:High::", "detection_methods": "", "potential_mitigations": "::PHASE:Implementation:DESCRIPTION:Ensure that there exists a marker for denoting the Manufacturing Complete stage and that the Manufacturing Complete marker gets updated at the Manufacturing Complete stage (i.e., the Manufacturing Complete fuse gets blown).::PHASE:Integration:DESCRIPTION:Ensure that there exists a marker for denoting the Manufacturing Complete stage and that the Manufacturing Complete marker gets updated at the Manufacturing Complete stage (i.e., the Manufacturing Complete fuse gets blown).::PHASE:Manufacturing:DESCRIPTION:Ensure that there exists a marker for denoting the Manufacturing Complete stage and that the Manufacturing Complete marker gets updated at the Manufacturing Complete stage (i.e., the Manufacturing Complete fuse gets blown).::", "observed_examples": "::REFERENCE:CVE-2019-13945:DESCRIPTION:Regarding SSA-686531, a hardware based manufacturing access on S7-1200 and S7-200 SMART has occurred. A vulnerability has been identified in SIMATIC S7-1200 CPU family (incl. SIPLUS variants) (All versions), SIMATIC S7-200 SMART CPU family (All versions). There is an access mode used during manufacturing of S7-1200 CPUs that allows additional diagnostic functionality. The security vulnerability could be exploited by an attacker with physical access to the UART interface during boot process. At the time of advisory publication, no public exploitation of this security vulnerability was known.:LINK:http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-13945::REFERENCE:CVE-2018-4251:DESCRIPTION:Laptops with Intel chipsets were found to be running in Manufacturing Mode. After this information was reported to the OEM, the vulnerability (CVE-2018-4251) was patched disallowing access to the interface.:LINK:http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-4251::", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "", "related_attack_patterns": "::439::", "notes": ""}}]}]}, {"technique_id": "T1525", "t_findings": [{"capec_id": "CAPEC-437", "c_findings": []}, {"capec_id": "CAPEC-438", "c_findings": []}, {"capec_id": "CAPEC-439", "c_findings": [{"cwe": "CWE-1269", "cves": [{"id": "CVE-2019-13945", "score": ["V31", 6.8, "MEDIUM"], "v2_score": 4.6, "v2_exploitability_score": 3.9, "v2_impact_score": 6.4, "v2_vector": "AV:L/AC:L/Au:N/C:P/I:P/A:P", "access_vector": "LOCAL", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:L/AC:L/Au:N/C:P/I:P/A:P", "accessVector": "LOCAL", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 4.6}, "baseSeverity": "MEDIUM", "exploitabilityScore": 3.9, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "A vulnerability has been identified in SIMATIC S7-1200 CPU family (incl. SIPLUS variants) (All versions), SIMATIC S7-1200 CPU family < V4.x (incl. SIPLUS variants) (All versions), SIMATIC S7-1200 CPU family V4.x (incl. SIPLUS variants) (All versions with Function State (FS) < 11), SIMATIC S7-200 SMART CPU CR20s (6ES7 288-1CR20-0AA1) (All versions <= V2.3.0 and Function State (FS) <= 3), SIMATIC S7-200 SMART CPU CR30s (6ES7 288-1CR30-0AA1) (All versions <= V2.3.0 and Function State (FS) <= 3), SIMATIC S7-200 SMART CPU CR40 (6ES7 288-1CR40-0AA0) (All versions <= V2.2.2 and Function State (FS) <= 8), SIMATIC S7-200 SMART CPU CR40s (6ES7 288-1CR40-0AA1) (All versions <= V2.3.0 and Function State (FS) <= 3), SIMATIC S7-200 SMART CPU CR60 (6ES7 288-1CR60-0AA0) (All versions <= V2.2.2 and Function State (FS) <= 10), SIMATIC S7-200 SMART CPU CR60s (6ES7 288-1CR60-0AA1) (All versions <= V2.3.0 and Function State (FS) <= 3), SIMATIC S7-200 SMART CPU SR20 (6ES7 288-1SR20-0AA0) (All versions <= V2.5.0 and Function State (FS) <= 11), SIMATIC S7-200 SMART CPU SR30 (6ES7 288-1SR30-0AA0) (All versions <= V2.5.0 and Function State (FS) <= 10), SIMATIC S7-200 SMART CPU SR40 (6ES7 288-1SR40-0AA0) (All versions <= V2.5.0 and Function State (FS) <= 10), SIMATIC S7-200 SMART CPU SR60 (6ES7 288-1SR60-0AA0) (All versions <= V2.5.0 and Function State (FS) <= 12), SIMATIC S7-200 SMART CPU ST20 (6ES7 288-1ST20-0AA0) (All versions <= V2.5.0 and Function State (FS) <= 9), SIMATIC S7-200 SMART CPU ST30 (6ES7 288-1ST30-0AA0) (All versions <= V2.5.0 and Function State (FS) <= 9), SIMATIC S7-200 SMART CPU ST40 (6ES7 288-1ST40-0AA0) (All versions <= V2.5.0 and Function State (FS) <= 8), SIMATIC S7-200 SMART CPU ST60 (6ES7 288-1ST60-0AA0) (All versions <= V2.5.0 and Function State (FS) <= 8), SIMATIC S7-200 SMART CPU family (All versions). There is an access mode used during manufacturing of the affected devices that allows additional diagnostic functionality. The security vulnerability could be exploited by an attacker with physical access to the UART interface during boot process.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:o:siemens:simatic_s7-1200_firmware:*:*:*:*:*:*:*:*", "published": "2019-12-12T14:15:15.133", "last_modified": "2020-10-09T13:35:41.460"}, {"id": "CVE-2018-4251", "score": ["V30", 5.5, "MEDIUM"], "v2_score": 7.1, "v2_exploitability_score": 8.6, "v2_impact_score": 6.9, "v2_vector": "AV:N/AC:M/Au:N/C:N/I:C/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:M/Au:N/C:N/I:C/A:N", "accessVector": "NETWORK", "accessComplexity": "MEDIUM", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "COMPLETE", "availabilityImpact": "NONE", "baseScore": 7.1}, "baseSeverity": "HIGH", "exploitabilityScore": 8.6, "impactScore": 6.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": true}], "description": "An issue was discovered in certain Apple products. macOS before 10.13.5 is affected. The issue involves the \"Firmware\" component. It allows attackers to modify the EFI flash-memory region that a crafted app that has root access.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:o:apple:mac_os_x:*:*:*:*:*:*:*:*", "published": "2018-06-08T18:29:02.867", "last_modified": "2019-10-03T00:03:26.223"}], "cwe_info": {"cwe_id": "1269", "name": "Product Released in Non-Release Configuration", "weakness_abstraction": "Base", "status": "Incomplete", "description": "The product released to market is released in pre-production or manufacturing configuration.", "extended_description": "Products in the pre-production or manufacturing stages are configured to have many debug hooks and debug capabilities, including but not limited to: Ability to override/bypass various cryptographic checks (including authentication, authorization, and integrity) Ability to read/write/modify/dump internal state (including registers and memory) Ability to change system configurations Ability to run hidden or private commands that are not allowed during production (as they expose IP). The above is by no means an exhaustive list, but it alludes to the greater capability and the greater state of vulnerability of a product during it's preproduction or manufacturing state. Complexity increases when multiple parties are involved in executing the tests before the final production version. For example, a chipmaker might fabricate a chip and run its own preproduction tests, following which the chip would be delivered to the Original Equipment Manufacturer (OEM), who would now run a second set of different preproduction tests on the same chip. Only after both of these sets of activities are complete, can the overall manufacturing phase be called \u201ccomplete\u201d and have the \u201cManufacturing Complete\u201d fuse blown. However, if the OEM forgets to blow the Manufacturing Complete fuse, then the system remains in the manufacturing stage, rendering the system both exposed and vulnerable.", "related_weaknesses": "::NATURE:ChildOf:CWE ID:693:VIEW ID:1000:ORDINAL:Primary::", "weakness_ordinalities": "", "applicable_platforms": "::LANGUAGE NAME:VHDL:LANGUAGE PREVALENCE:Undetermined::LANGUAGE NAME:Verilog:LANGUAGE PREVALENCE:Undetermined::LANGUAGE CLASS:Compiled:LANGUAGE PREVALENCE:Undetermined::OPERATING SYSTEM CLASS:OS-Independent:OPERATING SYSTEM PREVALENCE:Undetermined::ARCHITECTURE CLASS:Architecture-Independent:ARCHITECTURE PREVALENCE:Undetermined::TECHNOLOGY NAME:Other:TECHNOLOGY PREVALENCE:Undetermined::TECHNOLOGY CLASS:Technology-Independent:TECHNOLOGY PREVALENCE:Undetermined::", "background_details": "", "alternate_terms": "", "modes_of_introduction": "::PHASE:Implementation::PHASE:Integration::PHASE:Manufacturing::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Confidentiality:SCOPE:Integrity:SCOPE:Availability:SCOPE:Access Control:SCOPE:Accountability:SCOPE:Authentication:SCOPE:Authorization:SCOPE:Non-Repudiation:IMPACT:Other:LIKELIHOOD:High::", "detection_methods": "", "potential_mitigations": "::PHASE:Implementation:DESCRIPTION:Ensure that there exists a marker for denoting the Manufacturing Complete stage and that the Manufacturing Complete marker gets updated at the Manufacturing Complete stage (i.e., the Manufacturing Complete fuse gets blown).::PHASE:Integration:DESCRIPTION:Ensure that there exists a marker for denoting the Manufacturing Complete stage and that the Manufacturing Complete marker gets updated at the Manufacturing Complete stage (i.e., the Manufacturing Complete fuse gets blown).::PHASE:Manufacturing:DESCRIPTION:Ensure that there exists a marker for denoting the Manufacturing Complete stage and that the Manufacturing Complete marker gets updated at the Manufacturing Complete stage (i.e., the Manufacturing Complete fuse gets blown).::", "observed_examples": "::REFERENCE:CVE-2019-13945:DESCRIPTION:Regarding SSA-686531, a hardware based manufacturing access on S7-1200 and S7-200 SMART has occurred. A vulnerability has been identified in SIMATIC S7-1200 CPU family (incl. SIPLUS variants) (All versions), SIMATIC S7-200 SMART CPU family (All versions). There is an access mode used during manufacturing of S7-1200 CPUs that allows additional diagnostic functionality. The security vulnerability could be exploited by an attacker with physical access to the UART interface during boot process. At the time of advisory publication, no public exploitation of this security vulnerability was known.:LINK:http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-13945::REFERENCE:CVE-2018-4251:DESCRIPTION:Laptops with Intel chipsets were found to be running in Manufacturing Mode. After this information was reported to the OEM, the vulnerability (CVE-2018-4251) was patched disallowing access to the interface.:LINK:http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-4251::", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "", "related_attack_patterns": "::439::", "notes": ""}}]}]}, {"technique_id": "T1610", "t_findings": [{"capec_id": "CAPEC-437", "c_findings": []}, {"capec_id": "CAPEC-438", "c_findings": []}, {"capec_id": "CAPEC-439", "c_findings": [{"cwe": "CWE-1269", "cves": [{"id": "CVE-2019-13945", "score": ["V31", 6.8, "MEDIUM"], "v2_score": 4.6, "v2_exploitability_score": 3.9, "v2_impact_score": 6.4, "v2_vector": "AV:L/AC:L/Au:N/C:P/I:P/A:P", "access_vector": "LOCAL", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:L/AC:L/Au:N/C:P/I:P/A:P", "accessVector": "LOCAL", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 4.6}, "baseSeverity": "MEDIUM", "exploitabilityScore": 3.9, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "A vulnerability has been identified in SIMATIC S7-1200 CPU family (incl. SIPLUS variants) (All versions), SIMATIC S7-1200 CPU family < V4.x (incl. SIPLUS variants) (All versions), SIMATIC S7-1200 CPU family V4.x (incl. SIPLUS variants) (All versions with Function State (FS) < 11), SIMATIC S7-200 SMART CPU CR20s (6ES7 288-1CR20-0AA1) (All versions <= V2.3.0 and Function State (FS) <= 3), SIMATIC S7-200 SMART CPU CR30s (6ES7 288-1CR30-0AA1) (All versions <= V2.3.0 and Function State (FS) <= 3), SIMATIC S7-200 SMART CPU CR40 (6ES7 288-1CR40-0AA0) (All versions <= V2.2.2 and Function State (FS) <= 8), SIMATIC S7-200 SMART CPU CR40s (6ES7 288-1CR40-0AA1) (All versions <= V2.3.0 and Function State (FS) <= 3), SIMATIC S7-200 SMART CPU CR60 (6ES7 288-1CR60-0AA0) (All versions <= V2.2.2 and Function State (FS) <= 10), SIMATIC S7-200 SMART CPU CR60s (6ES7 288-1CR60-0AA1) (All versions <= V2.3.0 and Function State (FS) <= 3), SIMATIC S7-200 SMART CPU SR20 (6ES7 288-1SR20-0AA0) (All versions <= V2.5.0 and Function State (FS) <= 11), SIMATIC S7-200 SMART CPU SR30 (6ES7 288-1SR30-0AA0) (All versions <= V2.5.0 and Function State (FS) <= 10), SIMATIC S7-200 SMART CPU SR40 (6ES7 288-1SR40-0AA0) (All versions <= V2.5.0 and Function State (FS) <= 10), SIMATIC S7-200 SMART CPU SR60 (6ES7 288-1SR60-0AA0) (All versions <= V2.5.0 and Function State (FS) <= 12), SIMATIC S7-200 SMART CPU ST20 (6ES7 288-1ST20-0AA0) (All versions <= V2.5.0 and Function State (FS) <= 9), SIMATIC S7-200 SMART CPU ST30 (6ES7 288-1ST30-0AA0) (All versions <= V2.5.0 and Function State (FS) <= 9), SIMATIC S7-200 SMART CPU ST40 (6ES7 288-1ST40-0AA0) (All versions <= V2.5.0 and Function State (FS) <= 8), SIMATIC S7-200 SMART CPU ST60 (6ES7 288-1ST60-0AA0) (All versions <= V2.5.0 and Function State (FS) <= 8), SIMATIC S7-200 SMART CPU family (All versions). There is an access mode used during manufacturing of the affected devices that allows additional diagnostic functionality. The security vulnerability could be exploited by an attacker with physical access to the UART interface during boot process.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:o:siemens:simatic_s7-1200_firmware:*:*:*:*:*:*:*:*", "published": "2019-12-12T14:15:15.133", "last_modified": "2020-10-09T13:35:41.460"}, {"id": "CVE-2018-4251", "score": ["V30", 5.5, "MEDIUM"], "v2_score": 7.1, "v2_exploitability_score": 8.6, "v2_impact_score": 6.9, "v2_vector": "AV:N/AC:M/Au:N/C:N/I:C/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:M/Au:N/C:N/I:C/A:N", "accessVector": "NETWORK", "accessComplexity": "MEDIUM", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "COMPLETE", "availabilityImpact": "NONE", "baseScore": 7.1}, "baseSeverity": "HIGH", "exploitabilityScore": 8.6, "impactScore": 6.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": true}], "description": "An issue was discovered in certain Apple products. macOS before 10.13.5 is affected. The issue involves the \"Firmware\" component. It allows attackers to modify the EFI flash-memory region that a crafted app that has root access.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:o:apple:mac_os_x:*:*:*:*:*:*:*:*", "published": "2018-06-08T18:29:02.867", "last_modified": "2019-10-03T00:03:26.223"}], "cwe_info": {"cwe_id": "1269", "name": "Product Released in Non-Release Configuration", "weakness_abstraction": "Base", "status": "Incomplete", "description": "The product released to market is released in pre-production or manufacturing configuration.", "extended_description": "Products in the pre-production or manufacturing stages are configured to have many debug hooks and debug capabilities, including but not limited to: Ability to override/bypass various cryptographic checks (including authentication, authorization, and integrity) Ability to read/write/modify/dump internal state (including registers and memory) Ability to change system configurations Ability to run hidden or private commands that are not allowed during production (as they expose IP). The above is by no means an exhaustive list, but it alludes to the greater capability and the greater state of vulnerability of a product during it's preproduction or manufacturing state. Complexity increases when multiple parties are involved in executing the tests before the final production version. For example, a chipmaker might fabricate a chip and run its own preproduction tests, following which the chip would be delivered to the Original Equipment Manufacturer (OEM), who would now run a second set of different preproduction tests on the same chip. Only after both of these sets of activities are complete, can the overall manufacturing phase be called \u201ccomplete\u201d and have the \u201cManufacturing Complete\u201d fuse blown. However, if the OEM forgets to blow the Manufacturing Complete fuse, then the system remains in the manufacturing stage, rendering the system both exposed and vulnerable.", "related_weaknesses": "::NATURE:ChildOf:CWE ID:693:VIEW ID:1000:ORDINAL:Primary::", "weakness_ordinalities": "", "applicable_platforms": "::LANGUAGE NAME:VHDL:LANGUAGE PREVALENCE:Undetermined::LANGUAGE NAME:Verilog:LANGUAGE PREVALENCE:Undetermined::LANGUAGE CLASS:Compiled:LANGUAGE PREVALENCE:Undetermined::OPERATING SYSTEM CLASS:OS-Independent:OPERATING SYSTEM PREVALENCE:Undetermined::ARCHITECTURE CLASS:Architecture-Independent:ARCHITECTURE PREVALENCE:Undetermined::TECHNOLOGY NAME:Other:TECHNOLOGY PREVALENCE:Undetermined::TECHNOLOGY CLASS:Technology-Independent:TECHNOLOGY PREVALENCE:Undetermined::", "background_details": "", "alternate_terms": "", "modes_of_introduction": "::PHASE:Implementation::PHASE:Integration::PHASE:Manufacturing::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Confidentiality:SCOPE:Integrity:SCOPE:Availability:SCOPE:Access Control:SCOPE:Accountability:SCOPE:Authentication:SCOPE:Authorization:SCOPE:Non-Repudiation:IMPACT:Other:LIKELIHOOD:High::", "detection_methods": "", "potential_mitigations": "::PHASE:Implementation:DESCRIPTION:Ensure that there exists a marker for denoting the Manufacturing Complete stage and that the Manufacturing Complete marker gets updated at the Manufacturing Complete stage (i.e., the Manufacturing Complete fuse gets blown).::PHASE:Integration:DESCRIPTION:Ensure that there exists a marker for denoting the Manufacturing Complete stage and that the Manufacturing Complete marker gets updated at the Manufacturing Complete stage (i.e., the Manufacturing Complete fuse gets blown).::PHASE:Manufacturing:DESCRIPTION:Ensure that there exists a marker for denoting the Manufacturing Complete stage and that the Manufacturing Complete marker gets updated at the Manufacturing Complete stage (i.e., the Manufacturing Complete fuse gets blown).::", "observed_examples": "::REFERENCE:CVE-2019-13945:DESCRIPTION:Regarding SSA-686531, a hardware based manufacturing access on S7-1200 and S7-200 SMART has occurred. A vulnerability has been identified in SIMATIC S7-1200 CPU family (incl. SIPLUS variants) (All versions), SIMATIC S7-200 SMART CPU family (All versions). There is an access mode used during manufacturing of S7-1200 CPUs that allows additional diagnostic functionality. The security vulnerability could be exploited by an attacker with physical access to the UART interface during boot process. At the time of advisory publication, no public exploitation of this security vulnerability was known.:LINK:http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-13945::REFERENCE:CVE-2018-4251:DESCRIPTION:Laptops with Intel chipsets were found to be running in Manufacturing Mode. After this information was reported to the OEM, the vulnerability (CVE-2018-4251) was patched disallowing access to the interface.:LINK:http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-4251::", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "", "related_attack_patterns": "::439::", "notes": ""}}]}]}, {"technique_id": "T1612", "t_findings": [{"capec_id": "CAPEC-437", "c_findings": []}, {"capec_id": "CAPEC-438", "c_findings": []}, {"capec_id": "CAPEC-439", "c_findings": [{"cwe": "CWE-1269", "cves": [{"id": "CVE-2019-13945", "score": ["V31", 6.8, "MEDIUM"], "v2_score": 4.6, "v2_exploitability_score": 3.9, "v2_impact_score": 6.4, "v2_vector": "AV:L/AC:L/Au:N/C:P/I:P/A:P", "access_vector": "LOCAL", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:L/AC:L/Au:N/C:P/I:P/A:P", "accessVector": "LOCAL", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 4.6}, "baseSeverity": "MEDIUM", "exploitabilityScore": 3.9, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "A vulnerability has been identified in SIMATIC S7-1200 CPU family (incl. SIPLUS variants) (All versions), SIMATIC S7-1200 CPU family < V4.x (incl. SIPLUS variants) (All versions), SIMATIC S7-1200 CPU family V4.x (incl. SIPLUS variants) (All versions with Function State (FS) < 11), SIMATIC S7-200 SMART CPU CR20s (6ES7 288-1CR20-0AA1) (All versions <= V2.3.0 and Function State (FS) <= 3), SIMATIC S7-200 SMART CPU CR30s (6ES7 288-1CR30-0AA1) (All versions <= V2.3.0 and Function State (FS) <= 3), SIMATIC S7-200 SMART CPU CR40 (6ES7 288-1CR40-0AA0) (All versions <= V2.2.2 and Function State (FS) <= 8), SIMATIC S7-200 SMART CPU CR40s (6ES7 288-1CR40-0AA1) (All versions <= V2.3.0 and Function State (FS) <= 3), SIMATIC S7-200 SMART CPU CR60 (6ES7 288-1CR60-0AA0) (All versions <= V2.2.2 and Function State (FS) <= 10), SIMATIC S7-200 SMART CPU CR60s (6ES7 288-1CR60-0AA1) (All versions <= V2.3.0 and Function State (FS) <= 3), SIMATIC S7-200 SMART CPU SR20 (6ES7 288-1SR20-0AA0) (All versions <= V2.5.0 and Function State (FS) <= 11), SIMATIC S7-200 SMART CPU SR30 (6ES7 288-1SR30-0AA0) (All versions <= V2.5.0 and Function State (FS) <= 10), SIMATIC S7-200 SMART CPU SR40 (6ES7 288-1SR40-0AA0) (All versions <= V2.5.0 and Function State (FS) <= 10), SIMATIC S7-200 SMART CPU SR60 (6ES7 288-1SR60-0AA0) (All versions <= V2.5.0 and Function State (FS) <= 12), SIMATIC S7-200 SMART CPU ST20 (6ES7 288-1ST20-0AA0) (All versions <= V2.5.0 and Function State (FS) <= 9), SIMATIC S7-200 SMART CPU ST30 (6ES7 288-1ST30-0AA0) (All versions <= V2.5.0 and Function State (FS) <= 9), SIMATIC S7-200 SMART CPU ST40 (6ES7 288-1ST40-0AA0) (All versions <= V2.5.0 and Function State (FS) <= 8), SIMATIC S7-200 SMART CPU ST60 (6ES7 288-1ST60-0AA0) (All versions <= V2.5.0 and Function State (FS) <= 8), SIMATIC S7-200 SMART CPU family (All versions). There is an access mode used during manufacturing of the affected devices that allows additional diagnostic functionality. The security vulnerability could be exploited by an attacker with physical access to the UART interface during boot process.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:o:siemens:simatic_s7-1200_firmware:*:*:*:*:*:*:*:*", "published": "2019-12-12T14:15:15.133", "last_modified": "2020-10-09T13:35:41.460"}, {"id": "CVE-2018-4251", "score": ["V30", 5.5, "MEDIUM"], "v2_score": 7.1, "v2_exploitability_score": 8.6, "v2_impact_score": 6.9, "v2_vector": "AV:N/AC:M/Au:N/C:N/I:C/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:M/Au:N/C:N/I:C/A:N", "accessVector": "NETWORK", "accessComplexity": "MEDIUM", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "COMPLETE", "availabilityImpact": "NONE", "baseScore": 7.1}, "baseSeverity": "HIGH", "exploitabilityScore": 8.6, "impactScore": 6.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": true}], "description": "An issue was discovered in certain Apple products. macOS before 10.13.5 is affected. The issue involves the \"Firmware\" component. It allows attackers to modify the EFI flash-memory region that a crafted app that has root access.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:o:apple:mac_os_x:*:*:*:*:*:*:*:*", "published": "2018-06-08T18:29:02.867", "last_modified": "2019-10-03T00:03:26.223"}], "cwe_info": {"cwe_id": "1269", "name": "Product Released in Non-Release Configuration", "weakness_abstraction": "Base", "status": "Incomplete", "description": "The product released to market is released in pre-production or manufacturing configuration.", "extended_description": "Products in the pre-production or manufacturing stages are configured to have many debug hooks and debug capabilities, including but not limited to: Ability to override/bypass various cryptographic checks (including authentication, authorization, and integrity) Ability to read/write/modify/dump internal state (including registers and memory) Ability to change system configurations Ability to run hidden or private commands that are not allowed during production (as they expose IP). The above is by no means an exhaustive list, but it alludes to the greater capability and the greater state of vulnerability of a product during it's preproduction or manufacturing state. Complexity increases when multiple parties are involved in executing the tests before the final production version. For example, a chipmaker might fabricate a chip and run its own preproduction tests, following which the chip would be delivered to the Original Equipment Manufacturer (OEM), who would now run a second set of different preproduction tests on the same chip. Only after both of these sets of activities are complete, can the overall manufacturing phase be called \u201ccomplete\u201d and have the \u201cManufacturing Complete\u201d fuse blown. However, if the OEM forgets to blow the Manufacturing Complete fuse, then the system remains in the manufacturing stage, rendering the system both exposed and vulnerable.", "related_weaknesses": "::NATURE:ChildOf:CWE ID:693:VIEW ID:1000:ORDINAL:Primary::", "weakness_ordinalities": "", "applicable_platforms": "::LANGUAGE NAME:VHDL:LANGUAGE PREVALENCE:Undetermined::LANGUAGE NAME:Verilog:LANGUAGE PREVALENCE:Undetermined::LANGUAGE CLASS:Compiled:LANGUAGE PREVALENCE:Undetermined::OPERATING SYSTEM CLASS:OS-Independent:OPERATING SYSTEM PREVALENCE:Undetermined::ARCHITECTURE CLASS:Architecture-Independent:ARCHITECTURE PREVALENCE:Undetermined::TECHNOLOGY NAME:Other:TECHNOLOGY PREVALENCE:Undetermined::TECHNOLOGY CLASS:Technology-Independent:TECHNOLOGY PREVALENCE:Undetermined::", "background_details": "", "alternate_terms": "", "modes_of_introduction": "::PHASE:Implementation::PHASE:Integration::PHASE:Manufacturing::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Confidentiality:SCOPE:Integrity:SCOPE:Availability:SCOPE:Access Control:SCOPE:Accountability:SCOPE:Authentication:SCOPE:Authorization:SCOPE:Non-Repudiation:IMPACT:Other:LIKELIHOOD:High::", "detection_methods": "", "potential_mitigations": "::PHASE:Implementation:DESCRIPTION:Ensure that there exists a marker for denoting the Manufacturing Complete stage and that the Manufacturing Complete marker gets updated at the Manufacturing Complete stage (i.e., the Manufacturing Complete fuse gets blown).::PHASE:Integration:DESCRIPTION:Ensure that there exists a marker for denoting the Manufacturing Complete stage and that the Manufacturing Complete marker gets updated at the Manufacturing Complete stage (i.e., the Manufacturing Complete fuse gets blown).::PHASE:Manufacturing:DESCRIPTION:Ensure that there exists a marker for denoting the Manufacturing Complete stage and that the Manufacturing Complete marker gets updated at the Manufacturing Complete stage (i.e., the Manufacturing Complete fuse gets blown).::", "observed_examples": "::REFERENCE:CVE-2019-13945:DESCRIPTION:Regarding SSA-686531, a hardware based manufacturing access on S7-1200 and S7-200 SMART has occurred. A vulnerability has been identified in SIMATIC S7-1200 CPU family (incl. SIPLUS variants) (All versions), SIMATIC S7-200 SMART CPU family (All versions). There is an access mode used during manufacturing of S7-1200 CPUs that allows additional diagnostic functionality. The security vulnerability could be exploited by an attacker with physical access to the UART interface during boot process. At the time of advisory publication, no public exploitation of this security vulnerability was known.:LINK:http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-13945::REFERENCE:CVE-2018-4251:DESCRIPTION:Laptops with Intel chipsets were found to be running in Manufacturing Mode. After this information was reported to the OEM, the vulnerability (CVE-2018-4251) was patched disallowing access to the interface.:LINK:http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-4251::", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "", "related_attack_patterns": "::439::", "notes": ""}}]}]}, {"technique_id": "T1040", "t_findings": [{"capec_id": "CAPEC-158", "c_findings": [{"cwe": "CWE-311", "cves": [{"id": "CVE-2009-2272", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "The Huawei D100 stores the administrator's account name and password in cleartext in a cookie, which allows context-dependent attackers to obtain sensitive information by (1) reading a cookie file, by (2) sniffing the network for HTTP headers, and possibly by using unspecified other vectors.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:h:huawei:d100_router:*:*:*:*:*:*:*:*", "published": "2009-07-01T13:00:01.530", "last_modified": "2018-10-10T19:39:31.883"}, {"id": "CVE-2009-1466", "score": ["V2", 2.1, "LOW"], "v2_score": 2.1, "v2_exploitability_score": 3.9, "v2_impact_score": 2.9, "v2_vector": "AV:L/AC:L/Au:N/C:P/I:N/A:N", "access_vector": "LOCAL", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:L/AC:L/Au:N/C:P/I:N/A:N", "accessVector": "LOCAL", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 2.1}, "baseSeverity": "LOW", "exploitabilityScore": 3.9, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "Application Access Server (A-A-S) 2.0.48 stores (1) passwords and (2) the port keyword in cleartext in aas.ini, which allows local users to obtain sensitive information by reading this file.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:klinzmann:application_access_server:2.0.48:*:*:*:*:*:*:*", "published": "2009-05-14T17:30:00.640", "last_modified": "2018-10-10T19:36:59.407"}, {"id": "CVE-2009-0152", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "iChat in Apple Mac OS X 10.5 before 10.5.7 disables SSL for AOL Instant Messenger (AIM) communication in certain circumstances that are inconsistent with the Require SSL setting, which allows remote attackers to obtain sensitive information by sniffing the network.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:o:apple:mac_os_x:10.5.0:*:*:*:*:*:*:*", "published": "2009-05-13T15:30:00.327", "last_modified": "2017-08-08T01:33:48.187"}, {"id": "CVE-2009-1603", "score": ["V2", 4.3, "MEDIUM"], "v2_score": 4.3, "v2_exploitability_score": 8.6, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:M/Au:N/C:P/I:N/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:M/Au:N/C:P/I:N/A:N", "accessVector": "NETWORK", "accessComplexity": "MEDIUM", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 4.3}, "baseSeverity": "MEDIUM", "exploitabilityScore": 8.6, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "src/tools/pkcs11-tool.c in pkcs11-tool in OpenSC 0.11.7, when used with unspecified third-party PKCS#11 modules, generates RSA keys with incorrect public exponents, which allows attackers to read the cleartext form of messages that were intended to be encrypted.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:opensc-project:opensc:0.11.7:*:*:*:*:*:*:*", "published": "2009-05-11T16:30:00.187", "last_modified": "2009-08-08T05:26:21.250"}, {"id": "CVE-2009-0964", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "UserView_list.php in PHPRunner 4.2, and possibly earlier, stores passwords in cleartext in the database, which allows attackers to gain privileges.  NOTE: this can be leveraged with a separate SQL injection vulnerability to obtain passwords remotely without authentication.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:xlinesoft:phprunner:*:*:*:*:*:*:*:*", "published": "2009-03-19T10:30:00.467", "last_modified": "2018-10-10T19:32:39.990"}, {"id": "CVE-2008-6157", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "SepCity Classified Ads stores the admin password in cleartext in data/classifieds.mdb, which allows context-dependent attackers to obtain sensitive information.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:sepcity:classified_ads:-:*:*:*:*:*:*:*", "published": "2009-02-17T17:30:05.843", "last_modified": "2017-10-19T01:30:16.237"}, {"id": "CVE-2008-6828", "score": ["V2", 4.3, "MEDIUM"], "v2_score": 4.3, "v2_exploitability_score": 3.1, "v2_impact_score": 6.4, "v2_vector": "AV:L/AC:L/Au:S/C:P/I:P/A:P", "access_vector": "LOCAL", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:L/AC:L/Au:S/C:P/I:P/A:P", "accessVector": "LOCAL", "accessComplexity": "LOW", "authentication": "SINGLE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 4.3}, "baseSeverity": "MEDIUM", "exploitabilityScore": 3.1, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "Symantec Altiris Deployment Solution 6.x before 6.9.355 SP1 stores the Application Identity Account password in memory in cleartext, which allows local users to gain privileges and modify clients of the Deployment Solution Server.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:symantec:altiris_deployment_solution:*:*:*:*:*:*:*:*", "published": "2009-06-08T19:30:00.233", "last_modified": "2017-08-17T01:29:36.067"}, {"id": "CVE-2008-1567", "score": ["V2", 2.1, "LOW"], "v2_score": 2.1, "v2_exploitability_score": 3.9, "v2_impact_score": 2.9, "v2_vector": "AV:L/AC:L/Au:N/C:P/I:N/A:N", "access_vector": "LOCAL", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:L/AC:L/Au:N/C:P/I:N/A:N", "accessVector": "LOCAL", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 2.1}, "baseSeverity": "LOW", "exploitabilityScore": 3.9, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "phpMyAdmin before 2.11.5.1 stores the MySQL (1) username and (2) password, and the (3) Blowfish secret key, in cleartext in a Session file under /tmp, which allows local users to obtain sensitive information.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:phpmyadmin:phpmyadmin:2.10.0.0:*:*:*:*:*:*:*", "published": "2008-03-31T22:44:00.000", "last_modified": "2017-08-08T01:30:15.730"}, {"id": "CVE-2008-0174", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "GE Fanuc Proficy Real-Time Information Portal 2.6 and earlier uses HTTP Basic Authentication, which transmits usernames and passwords in base64-encoded cleartext and allows remote attackers to steal the passwords and gain privileges.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:ge_fanuc:proficy_real-time_information_portal:*:*:*:*:*:*:*:*", "published": "2008-01-29T02:00:00.000", "last_modified": "2018-10-15T21:58:24.030"}, {"id": "CVE-2007-5778", "score": ["V2", 6.4, "MEDIUM"], "v2_score": 6.4, "v2_exploitability_score": 10.0, "v2_impact_score": 4.9, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:N/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:N/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "NONE", "availabilityImpact": "PARTIAL", "baseScore": 6.4}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 4.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "Mobile Spy (1) stores login credentials in cleartext under the RetinaxStudios registry key, and (2) sends login credentials and log data over a cleartext HTTP connection, which allows attackers to obtain sensitive information by reading the registry or sniffing the network.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:mobile-spy:mobile-spy:*:*:*:*:*:*:*:*", "published": "2007-11-01T16:46:00.000", "last_modified": "2018-10-15T21:46:30.097"}, {"id": "CVE-2002-1949", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "The Network Attached Storage (NAS) Administration Web Page for Iomega NAS A300U transmits passwords in cleartext, which allows remote attackers to sniff the administrative password.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:h:iomega:nas:a300u:*:*:*:*:*:*:*", "published": "2002-12-31T05:00:00.000", "last_modified": "2008-09-05T20:31:55.997"}, {"id": "CVE-2008-4122", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "Joomla! 1.5.8 does not set the secure flag for the session cookie in an https session, which makes it easier for remote attackers to capture this cookie by intercepting its transmission within an http session.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:joomla:joomla:1.5.8:*:*:*:*:*:*:*", "published": "2008-12-19T17:30:02.907", "last_modified": "2018-10-11T20:51:00.800"}, {"id": "CVE-2008-3289", "score": ["V2", 4.3, "MEDIUM"], "v2_score": 4.3, "v2_exploitability_score": 8.6, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:M/Au:N/C:P/I:N/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:M/Au:N/C:P/I:N/A:N", "accessVector": "NETWORK", "accessComplexity": "MEDIUM", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 4.3}, "baseSeverity": "MEDIUM", "exploitabilityScore": 8.6, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "EMC Dantz Retrospect Backup Client 7.5.116 sends the password hash in cleartext at an unspecified point, which allows remote attackers to obtain sensitive information via a crafted packet.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:emc_dantz:retrospect_backup_client:7.5.116:*:*:*:*:*:*:*", "published": "2008-07-24T17:41:00.000", "last_modified": "2018-10-11T20:47:51.943"}, {"id": "CVE-2008-4390", "score": ["V2", 10.0, "HIGH"], "v2_score": 10.0, "v2_exploitability_score": 10.0, "v2_impact_score": 10.0, "v2_vector": "AV:N/AC:L/Au:N/C:C/I:C/A:C", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:C/I:C/A:C", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "COMPLETE", "integrityImpact": "COMPLETE", "availabilityImpact": "COMPLETE", "baseScore": 10.0}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 10.0, "acInsufInfo": false, "obtainAllPrivilege": true, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "The Cisco Linksys WVC54GC wireless video camera before firmware 1.25 sends cleartext configuration data in response to a Setup Wizard remote-management command, which allows remote attackers to obtain sensitive information such as passwords by sniffing the network.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:h:cisco:wvc54gc:*:*:*:*:*:*:*:*", "published": "2008-12-09T00:30:00.237", "last_modified": "2009-08-20T05:21:16.663"}, {"id": "CVE-2007-5626", "score": ["V2", 2.1, "LOW"], "v2_score": 2.1, "v2_exploitability_score": 3.9, "v2_impact_score": 2.9, "v2_vector": "AV:L/AC:L/Au:N/C:P/I:N/A:N", "access_vector": "LOCAL", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:L/AC:L/Au:N/C:P/I:N/A:N", "accessVector": "LOCAL", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 2.1}, "baseSeverity": "LOW", "exploitabilityScore": 3.9, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "make_catalog_backup in Bacula 2.2.5, and probably earlier, sends a MySQL password as a command line argument, and sometimes transmits cleartext e-mail containing this command line, which allows context-dependent attackers to obtain the password by listing the process and its arguments, or by sniffing the network.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:bacula:bacula:*:*:*:*:*:*:*:*", "published": "2007-10-23T16:46:00.000", "last_modified": "2018-10-09T15:08:47.900"}, {"id": "CVE-2004-1852", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "DameWare Mini Remote Control 3.x before 3.74 and 4.x before 4.2 transmits the Blowfish encryption key in plaintext, which allows remote attackers to gain sensitive information.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:dameware_development:mini_remote_control_server:3.70_.0.0:*:*:*:*:*:*:*", "published": "2004-03-23T05:00:00.000", "last_modified": "2017-07-11T01:31:24.403"}, {"id": "CVE-2008-0374", "score": ["V2", 10.0, "HIGH"], "v2_score": 10.0, "v2_exploitability_score": 10.0, "v2_impact_score": 10.0, "v2_vector": "AV:N/AC:L/Au:N/C:C/I:C/A:C", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:C/I:C/A:C", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "COMPLETE", "integrityImpact": "COMPLETE", "availabilityImpact": "COMPLETE", "baseScore": 10.0}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 10.0, "acInsufInfo": false, "obtainAllPrivilege": true, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "OKI C5510MFP Printer CU H2.15, PU 01.03.01, System F/W 1.01, and Web Page 1.00 sends the configuration of the printer in cleartext, which allows remote attackers to obtain the administrative password by connecting to TCP port 5548 or 7777.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:h:oki_printing_solutions:c5510_mfp_printer:cu_h2.15:*:*:*:*:*:*:*", "published": "2008-01-22T20:00:00.000", "last_modified": "2018-10-15T21:59:11.017"}, {"id": "CVE-2007-4961", "score": ["V2", 4.3, "MEDIUM"], "v2_score": 4.3, "v2_exploitability_score": 8.6, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:M/Au:N/C:P/I:N/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:M/Au:N/C:P/I:N/A:N", "accessVector": "NETWORK", "accessComplexity": "MEDIUM", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 4.3}, "baseSeverity": "MEDIUM", "exploitabilityScore": 8.6, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "The login_to_simulator method in Linden Lab Second Life, as used by the secondlife:// protocol handler and possibly other Second Life login mechanisms, sends an MD5 hash in cleartext in the passwd field, which allows remote attackers to login to an account by sniffing the network and then sending this hash to a Second Life authentication server.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:linden_lab:second_life:1:*:*:*:*:*:*:*", "published": "2007-09-18T22:17:00.000", "last_modified": "2008-11-15T06:59:12.203"}, {"id": "CVE-2007-4786", "score": ["V2", 4.3, "MEDIUM"], "v2_score": 4.3, "v2_exploitability_score": 2.5, "v2_impact_score": 6.9, "v2_vector": "AV:A/AC:H/Au:S/C:C/I:N/A:N", "access_vector": "ADJACENT_NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:A/AC:H/Au:S/C:C/I:N/A:N", "accessVector": "ADJACENT_NETWORK", "accessComplexity": "HIGH", "authentication": "SINGLE", "confidentialityImpact": "COMPLETE", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 4.3}, "baseSeverity": "MEDIUM", "exploitabilityScore": 2.5, "impactScore": 6.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "Cisco Adaptive Security Appliance (ASA) running PIX 7.0 before 7.0.7.1, 7.1 before 7.1.2.61, 7.2 before 7.2.2.34, and 8.0 before 8.0.2.11, when AAA is enabled, composes %ASA-5-111008 messages from the \"test aaa\" command with cleartext passwords and sends them over the network to a remote syslog server or places them in a local logging buffer, which allows context-dependent attackers to obtain sensitive information.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:o:cisco:adaptive_security_appliance_software:*:*:*:*:*:*:*:*", "published": "2007-09-10T21:17:00.000", "last_modified": "2023-08-11T19:03:30.373"}, {"id": "CVE-2005-3140", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "Procom NetFORCE 800 4.02 M10 Build 20 and possibly other versions sends the NIS password map (passwd.nis) as a file attachment in diagnostic e-mail messages, which allows remote attackers to obtain the cleartext NIS password hashes.", "cpe_vulnerable": false, "cpe_criteria": "cpe:2.3:a:procom_technology:netforce:800_4.2_m10_build20:*:*:*:*:*:*:*", "published": "2005-10-05T21:02:00.000", "last_modified": "2016-10-18T03:33:06.610"}], "cwe_info": {"cwe_id": "311", "name": "Missing Encryption of Sensitive Data", "weakness_abstraction": "Class", "status": "Draft", "description": "The software does not encrypt sensitive or critical information before storage or transmission.", "extended_description": "The lack of proper data encryption passes up the guarantees of confidentiality, integrity, and accountability that properly implemented encryption conveys.", "related_weaknesses": "::NATURE:ChildOf:CWE ID:693:VIEW ID:1000:ORDINAL:Primary::", "weakness_ordinalities": "", "applicable_platforms": "::LANGUAGE CLASS:Language-Independent:LANGUAGE PREVALENCE:Undetermined::", "background_details": "", "alternate_terms": "", "modes_of_introduction": "::PHASE:Architecture and Design:NOTE:OMISSION: This weakness is caused by missing a security tactic during the architecture and design phase.::PHASE:Operation::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Confidentiality:IMPACT:Read Application Data:NOTE:If the application does not use a secure channel, such as SSL, to exchange sensitive information, it is possible for an attacker with access to the network traffic to sniff packets from the connection and uncover the data. This attack is not technically difficult, but does require physical access to some portion of the network over which the sensitive data travels. This access is usually somewhere near where the user is connected to the network (such as a colleague on the company network) but can be anywhere along the path from the user to the end server.::SCOPE:Confidentiality:SCOPE:Integrity:IMPACT:Modify Application Data:NOTE:Omitting the use of encryption in any program which transfers data over a network of any kind should be considered on par with delivering the data sent to each user on the local networks of both the sender and receiver. Worse, this omission allows for the injection of data into a stream of communication between two parties -- with no means for the victims to separate valid data from invalid. In this day of widespread network attacks and password collection sniffers, it is an unnecessary risk to omit encryption from the design of any system which might benefit from it.::", "detection_methods": "::METHOD:Manual Analysis:DESCRIPTION:The characterizaton of sensitive data often requires domain-specific understanding, so manual methods are useful. However, manual efforts might not achieve desired code coverage within limited time constraints. Black box methods may produce artifacts (e.g. stored data or unencrypted network transfer) that require manual evaluation.:EFFECTIVENESS:High::METHOD:Automated Analysis:DESCRIPTION:Automated measurement of the entropy of an input/output source may indicate the use or lack of encryption, but human analysis is still required to distinguish intentionally-unencrypted data (e.g. metadata) from sensitive data.::METHOD:Manual Static Analysis - Binary or Bytecode:DESCRIPTION:According to SOAR, the following detection techniques may be useful: Cost effective for partial coverage: Binary / Bytecode disassembler - then use manual analysis for vulnerabilities & anomalies:EFFECTIVENESS:SOAR Partial::METHOD:Dynamic Analysis with Automated Results Interpretation:DESCRIPTION:According to SOAR, the following detection techniques may be useful: Cost effective for partial coverage: Web Application Scanner Web Services Scanner Database Scanners:EFFECTIVENESS:SOAR Partial::METHOD:Dynamic Analysis with Manual Results Interpretation:DESCRIPTION:According to SOAR, the following detection techniques may be useful: Highly cost effective: Network Sniffer Cost effective for partial coverage: Fuzz Tester Framework-based Fuzzer Automated Monitored Execution Man-in-the-middle attack tool:EFFECTIVENESS:High::METHOD:Manual Static Analysis - Source Code:DESCRIPTION:According to SOAR, the following detection techniques may be useful: Highly cost effective: Focused Manual Spotcheck - Focused manual analysis of source Manual Source Code Review (not inspections):EFFECTIVENESS:High::METHOD:Automated Static Analysis - Source Code:DESCRIPTION:According to SOAR, the following detection techniques may be useful: Cost effective for partial coverage: Context-configured Source Code Weakness Analyzer:EFFECTIVENESS:SOAR Partial::METHOD:Architecture or Design Review:DESCRIPTION:According to SOAR, the following detection techniques may be useful: Highly cost effective: Inspection (IEEE 1028 standard) (can apply to requirements, design, source code, etc.) Formal Methods / Correct-By-Construction Cost effective for partial coverage: Attack Modeling:EFFECTIVENESS:High::", "potential_mitigations": "::PHASE:Requirements:DESCRIPTION:Clearly specify which data or resources are valuable enough that they should be protected by encryption. Require that any transmission or storage of this data/resource should use well-vetted encryption algorithms.::PHASE:Architecture and Design:DESCRIPTION:Ensure that encryption is properly integrated into the system design, including but not necessarily limited to: Encryption that is needed to store or transmit private data of the users of the system Encryption that is needed to protect the system itself from unauthorized disclosure or tampering Identify the separate needs and contexts for encryption: One-way (i.e., only the user or recipient needs to have the key). This can be achieved using public key cryptography, or other techniques in which the encrypting party (i.e., the software) does not need to have access to a private key. Two-way (i.e., the encryption can be automatically performed on behalf of a user, but the key must be available so that the plaintext can be automatically recoverable by that user). This requires storage of the private key in a format that is recoverable only by the user (or perhaps by the operating system) in a way that cannot be recovered by others. Using threat modeling or other techniques, assume that data can be compromised through a separate vulnerability or weakness, and determine where encryption will be most effective. Ensure that data that should be private is not being inadvertently exposed using weaknesses such as insecure permissions (CWE-732). [REF-7]::PHASE:Architecture and Design:STRATEGY:Libraries or Frameworks:DESCRIPTION:When there is a need to store or transmit sensitive data, use strong, up-to-date cryptographic algorithms to encrypt that data. Select a well-vetted algorithm that is currently considered to be strong by experts in the field, and use well-tested implementations. As with all cryptographic mechanisms, the source code should be available for analysis. For example, US government systems require FIPS 140-2 certification. Do not develop custom or private cryptographic algorithms. They will likely be exposed to attacks that are well-understood by cryptographers. Reverse engineering techniques are mature. If the algorithm can be compromised if attackers find out how it works, then it is especially weak. Periodically ensure that the cryptography has not become obsolete. Some older algorithms, once thought to require a billion years of computing time, can now be broken in days or hours. This includes MD4, MD5, SHA1, DES, and other algorithms that were once regarded as strong. [REF-267]::PHASE:Architecture and Design:STRATEGY:Separation of Privilege:DESCRIPTION:Compartmentalize the system to have safe areas where trust boundaries can be unambiguously drawn. Do not allow sensitive data to go outside of the trust boundary and always be careful when interfacing with a compartment outside of the safe area. Ensure that appropriate compartmentalization is built into the system design, and the compartmentalization allows for and reinforces privilege separation functionality. Architects and designers should rely on the principle of least privilege to decide the appropriate time to use privileges and the time to drop privileges.::PHASE:Implementation Architecture and Design:DESCRIPTION:When using industry-approved techniques, use them correctly. Don't cut corners by skipping resource-intensive steps (CWE-325). These steps are often essential for preventing common attacks.::PHASE:Implementation:STRATEGY:Attack Surface Reduction:DESCRIPTION:Use naming conventions and strong types to make it easier to spot when sensitive data is being used. When creating structures, objects, or other complex entities, separate the sensitive and non-sensitive data as much as possible.:EFFECTIVENESS:Defense in Depth::", "observed_examples": "::REFERENCE:CVE-2009-2272:DESCRIPTION:password and username stored in cleartext in a cookie:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2009-2272::REFERENCE:CVE-2009-1466:DESCRIPTION:password stored in cleartext in a file with insecure permissions:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2009-1466::REFERENCE:CVE-2009-0152:DESCRIPTION:chat program disables SSL in some circumstances even when the user says to use SSL.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2009-0152::REFERENCE:CVE-2009-1603:DESCRIPTION:Chain: product uses an incorrect public exponent when generating an RSA key, which effectively disables the encryption:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2009-1603::REFERENCE:CVE-2009-0964:DESCRIPTION:storage of unencrypted passwords in a database:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2009-0964::REFERENCE:CVE-2008-6157:DESCRIPTION:storage of unencrypted passwords in a database:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2008-6157::REFERENCE:CVE-2008-6828:DESCRIPTION:product stores a password in cleartext in memory:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2008-6828::REFERENCE:CVE-2008-1567:DESCRIPTION:storage of a secret key in cleartext in a temporary file:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2008-1567::REFERENCE:CVE-2008-0174:DESCRIPTION:SCADA product uses HTTP Basic Authentication, which is not encrypted:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2008-0174::REFERENCE:CVE-2007-5778:DESCRIPTION:login credentials stored unencrypted in a registry key:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2007-5778::REFERENCE:CVE-2002-1949:DESCRIPTION:Passwords transmitted in cleartext.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2002-1949::REFERENCE:CVE-2008-4122:DESCRIPTION:Chain: Use of HTTPS cookie without secure flag causes it to be transmitted across unencrypted HTTP.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2008-4122::REFERENCE:CVE-2008-3289:DESCRIPTION:Product sends password hash in cleartext in violation of intended policy.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2008-3289::REFERENCE:CVE-2008-4390:DESCRIPTION:Remote management feature sends sensitive information including passwords in cleartext.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2008-4390::REFERENCE:CVE-2007-5626:DESCRIPTION:Backup routine sends password in cleartext in email.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2007-5626::REFERENCE:CVE-2004-1852:DESCRIPTION:Product transmits Blowfish encryption key in cleartext.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2004-1852::REFERENCE:CVE-2008-0374:DESCRIPTION:Printer sends configuration information, including administrative password, in cleartext.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2008-0374::REFERENCE:CVE-2007-4961:DESCRIPTION:Chain: cleartext transmission of the MD5 hash of password enables attacks against a server that is susceptible to replay (CWE-294).:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2007-4961::REFERENCE:CVE-2007-4786:DESCRIPTION:Product sends passwords in cleartext to a log server.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2007-4786::REFERENCE:CVE-2005-3140:DESCRIPTION:Product sends file with cleartext passwords in e-mail message intended for diagnostic purposes.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2005-3140::", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "::TAXONOMY NAME:CLASP:ENTRY NAME:Failure to encrypt data::TAXONOMY NAME:OWASP Top Ten 2007:ENTRY ID:A8:ENTRY NAME:Insecure Cryptographic Storage:MAPPING FIT:CWE More Specific::TAXONOMY NAME:OWASP Top Ten 2007:ENTRY ID:A9:ENTRY NAME:Insecure Communications:MAPPING FIT:CWE More Specific::TAXONOMY NAME:OWASP Top Ten 2004:ENTRY ID:A8:ENTRY NAME:Insecure Storage:MAPPING FIT:CWE More Specific::TAXONOMY NAME:WASC:ENTRY ID:4:ENTRY NAME:Insufficient Transport Layer Protection::TAXONOMY NAME:The CERT Oracle Secure Coding Standard for Java (2011):ENTRY ID:MSC00-J:ENTRY NAME:Use SSLSocket rather than Socket for secure data exchange::TAXONOMY NAME:Software Fault Patterns:ENTRY ID:SFP23:ENTRY NAME:Exposed Data::", "related_attack_patterns": "::157::158::204::31::37::383::384::385::386::387::388::477::609::65::", "notes": "::TYPE:Relationship:NOTE:There is an overlapping relationship between insecure storage of sensitive information (CWE-922) and missing encryption of sensitive information (CWE-311). Encryption is often used to prevent an attacker from reading the sensitive data. However, encryption does not prevent the attacker from erasing or overwriting the data.::"}}]}]}, {"technique_id": "T1600", "t_findings": [{"capec_id": "CAPEC-158", "c_findings": [{"cwe": "CWE-311", "cves": [{"id": "CVE-2009-2272", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "The Huawei D100 stores the administrator's account name and password in cleartext in a cookie, which allows context-dependent attackers to obtain sensitive information by (1) reading a cookie file, by (2) sniffing the network for HTTP headers, and possibly by using unspecified other vectors.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:h:huawei:d100_router:*:*:*:*:*:*:*:*", "published": "2009-07-01T13:00:01.530", "last_modified": "2018-10-10T19:39:31.883"}, {"id": "CVE-2009-1466", "score": ["V2", 2.1, "LOW"], "v2_score": 2.1, "v2_exploitability_score": 3.9, "v2_impact_score": 2.9, "v2_vector": "AV:L/AC:L/Au:N/C:P/I:N/A:N", "access_vector": "LOCAL", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:L/AC:L/Au:N/C:P/I:N/A:N", "accessVector": "LOCAL", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 2.1}, "baseSeverity": "LOW", "exploitabilityScore": 3.9, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "Application Access Server (A-A-S) 2.0.48 stores (1) passwords and (2) the port keyword in cleartext in aas.ini, which allows local users to obtain sensitive information by reading this file.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:klinzmann:application_access_server:2.0.48:*:*:*:*:*:*:*", "published": "2009-05-14T17:30:00.640", "last_modified": "2018-10-10T19:36:59.407"}, {"id": "CVE-2009-0152", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "iChat in Apple Mac OS X 10.5 before 10.5.7 disables SSL for AOL Instant Messenger (AIM) communication in certain circumstances that are inconsistent with the Require SSL setting, which allows remote attackers to obtain sensitive information by sniffing the network.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:o:apple:mac_os_x:10.5.0:*:*:*:*:*:*:*", "published": "2009-05-13T15:30:00.327", "last_modified": "2017-08-08T01:33:48.187"}, {"id": "CVE-2009-1603", "score": ["V2", 4.3, "MEDIUM"], "v2_score": 4.3, "v2_exploitability_score": 8.6, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:M/Au:N/C:P/I:N/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:M/Au:N/C:P/I:N/A:N", "accessVector": "NETWORK", "accessComplexity": "MEDIUM", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 4.3}, "baseSeverity": "MEDIUM", "exploitabilityScore": 8.6, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "src/tools/pkcs11-tool.c in pkcs11-tool in OpenSC 0.11.7, when used with unspecified third-party PKCS#11 modules, generates RSA keys with incorrect public exponents, which allows attackers to read the cleartext form of messages that were intended to be encrypted.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:opensc-project:opensc:0.11.7:*:*:*:*:*:*:*", "published": "2009-05-11T16:30:00.187", "last_modified": "2009-08-08T05:26:21.250"}, {"id": "CVE-2009-0964", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "UserView_list.php in PHPRunner 4.2, and possibly earlier, stores passwords in cleartext in the database, which allows attackers to gain privileges.  NOTE: this can be leveraged with a separate SQL injection vulnerability to obtain passwords remotely without authentication.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:xlinesoft:phprunner:*:*:*:*:*:*:*:*", "published": "2009-03-19T10:30:00.467", "last_modified": "2018-10-10T19:32:39.990"}, {"id": "CVE-2008-6157", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "SepCity Classified Ads stores the admin password in cleartext in data/classifieds.mdb, which allows context-dependent attackers to obtain sensitive information.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:sepcity:classified_ads:-:*:*:*:*:*:*:*", "published": "2009-02-17T17:30:05.843", "last_modified": "2017-10-19T01:30:16.237"}, {"id": "CVE-2008-6828", "score": ["V2", 4.3, "MEDIUM"], "v2_score": 4.3, "v2_exploitability_score": 3.1, "v2_impact_score": 6.4, "v2_vector": "AV:L/AC:L/Au:S/C:P/I:P/A:P", "access_vector": "LOCAL", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:L/AC:L/Au:S/C:P/I:P/A:P", "accessVector": "LOCAL", "accessComplexity": "LOW", "authentication": "SINGLE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 4.3}, "baseSeverity": "MEDIUM", "exploitabilityScore": 3.1, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "Symantec Altiris Deployment Solution 6.x before 6.9.355 SP1 stores the Application Identity Account password in memory in cleartext, which allows local users to gain privileges and modify clients of the Deployment Solution Server.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:symantec:altiris_deployment_solution:*:*:*:*:*:*:*:*", "published": "2009-06-08T19:30:00.233", "last_modified": "2017-08-17T01:29:36.067"}, {"id": "CVE-2008-1567", "score": ["V2", 2.1, "LOW"], "v2_score": 2.1, "v2_exploitability_score": 3.9, "v2_impact_score": 2.9, "v2_vector": "AV:L/AC:L/Au:N/C:P/I:N/A:N", "access_vector": "LOCAL", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:L/AC:L/Au:N/C:P/I:N/A:N", "accessVector": "LOCAL", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 2.1}, "baseSeverity": "LOW", "exploitabilityScore": 3.9, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "phpMyAdmin before 2.11.5.1 stores the MySQL (1) username and (2) password, and the (3) Blowfish secret key, in cleartext in a Session file under /tmp, which allows local users to obtain sensitive information.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:phpmyadmin:phpmyadmin:2.10.0.0:*:*:*:*:*:*:*", "published": "2008-03-31T22:44:00.000", "last_modified": "2017-08-08T01:30:15.730"}, {"id": "CVE-2008-0174", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "GE Fanuc Proficy Real-Time Information Portal 2.6 and earlier uses HTTP Basic Authentication, which transmits usernames and passwords in base64-encoded cleartext and allows remote attackers to steal the passwords and gain privileges.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:ge_fanuc:proficy_real-time_information_portal:*:*:*:*:*:*:*:*", "published": "2008-01-29T02:00:00.000", "last_modified": "2018-10-15T21:58:24.030"}, {"id": "CVE-2007-5778", "score": ["V2", 6.4, "MEDIUM"], "v2_score": 6.4, "v2_exploitability_score": 10.0, "v2_impact_score": 4.9, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:N/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:N/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "NONE", "availabilityImpact": "PARTIAL", "baseScore": 6.4}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 4.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "Mobile Spy (1) stores login credentials in cleartext under the RetinaxStudios registry key, and (2) sends login credentials and log data over a cleartext HTTP connection, which allows attackers to obtain sensitive information by reading the registry or sniffing the network.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:mobile-spy:mobile-spy:*:*:*:*:*:*:*:*", "published": "2007-11-01T16:46:00.000", "last_modified": "2018-10-15T21:46:30.097"}, {"id": "CVE-2002-1949", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "The Network Attached Storage (NAS) Administration Web Page for Iomega NAS A300U transmits passwords in cleartext, which allows remote attackers to sniff the administrative password.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:h:iomega:nas:a300u:*:*:*:*:*:*:*", "published": "2002-12-31T05:00:00.000", "last_modified": "2008-09-05T20:31:55.997"}, {"id": "CVE-2008-4122", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "Joomla! 1.5.8 does not set the secure flag for the session cookie in an https session, which makes it easier for remote attackers to capture this cookie by intercepting its transmission within an http session.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:joomla:joomla:1.5.8:*:*:*:*:*:*:*", "published": "2008-12-19T17:30:02.907", "last_modified": "2018-10-11T20:51:00.800"}, {"id": "CVE-2008-3289", "score": ["V2", 4.3, "MEDIUM"], "v2_score": 4.3, "v2_exploitability_score": 8.6, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:M/Au:N/C:P/I:N/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:M/Au:N/C:P/I:N/A:N", "accessVector": "NETWORK", "accessComplexity": "MEDIUM", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 4.3}, "baseSeverity": "MEDIUM", "exploitabilityScore": 8.6, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "EMC Dantz Retrospect Backup Client 7.5.116 sends the password hash in cleartext at an unspecified point, which allows remote attackers to obtain sensitive information via a crafted packet.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:emc_dantz:retrospect_backup_client:7.5.116:*:*:*:*:*:*:*", "published": "2008-07-24T17:41:00.000", "last_modified": "2018-10-11T20:47:51.943"}, {"id": "CVE-2008-4390", "score": ["V2", 10.0, "HIGH"], "v2_score": 10.0, "v2_exploitability_score": 10.0, "v2_impact_score": 10.0, "v2_vector": "AV:N/AC:L/Au:N/C:C/I:C/A:C", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:C/I:C/A:C", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "COMPLETE", "integrityImpact": "COMPLETE", "availabilityImpact": "COMPLETE", "baseScore": 10.0}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 10.0, "acInsufInfo": false, "obtainAllPrivilege": true, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "The Cisco Linksys WVC54GC wireless video camera before firmware 1.25 sends cleartext configuration data in response to a Setup Wizard remote-management command, which allows remote attackers to obtain sensitive information such as passwords by sniffing the network.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:h:cisco:wvc54gc:*:*:*:*:*:*:*:*", "published": "2008-12-09T00:30:00.237", "last_modified": "2009-08-20T05:21:16.663"}, {"id": "CVE-2007-5626", "score": ["V2", 2.1, "LOW"], "v2_score": 2.1, "v2_exploitability_score": 3.9, "v2_impact_score": 2.9, "v2_vector": "AV:L/AC:L/Au:N/C:P/I:N/A:N", "access_vector": "LOCAL", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:L/AC:L/Au:N/C:P/I:N/A:N", "accessVector": "LOCAL", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 2.1}, "baseSeverity": "LOW", "exploitabilityScore": 3.9, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "make_catalog_backup in Bacula 2.2.5, and probably earlier, sends a MySQL password as a command line argument, and sometimes transmits cleartext e-mail containing this command line, which allows context-dependent attackers to obtain the password by listing the process and its arguments, or by sniffing the network.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:bacula:bacula:*:*:*:*:*:*:*:*", "published": "2007-10-23T16:46:00.000", "last_modified": "2018-10-09T15:08:47.900"}, {"id": "CVE-2004-1852", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "DameWare Mini Remote Control 3.x before 3.74 and 4.x before 4.2 transmits the Blowfish encryption key in plaintext, which allows remote attackers to gain sensitive information.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:dameware_development:mini_remote_control_server:3.70_.0.0:*:*:*:*:*:*:*", "published": "2004-03-23T05:00:00.000", "last_modified": "2017-07-11T01:31:24.403"}, {"id": "CVE-2008-0374", "score": ["V2", 10.0, "HIGH"], "v2_score": 10.0, "v2_exploitability_score": 10.0, "v2_impact_score": 10.0, "v2_vector": "AV:N/AC:L/Au:N/C:C/I:C/A:C", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:C/I:C/A:C", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "COMPLETE", "integrityImpact": "COMPLETE", "availabilityImpact": "COMPLETE", "baseScore": 10.0}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 10.0, "acInsufInfo": false, "obtainAllPrivilege": true, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "OKI C5510MFP Printer CU H2.15, PU 01.03.01, System F/W 1.01, and Web Page 1.00 sends the configuration of the printer in cleartext, which allows remote attackers to obtain the administrative password by connecting to TCP port 5548 or 7777.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:h:oki_printing_solutions:c5510_mfp_printer:cu_h2.15:*:*:*:*:*:*:*", "published": "2008-01-22T20:00:00.000", "last_modified": "2018-10-15T21:59:11.017"}, {"id": "CVE-2007-4961", "score": ["V2", 4.3, "MEDIUM"], "v2_score": 4.3, "v2_exploitability_score": 8.6, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:M/Au:N/C:P/I:N/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:M/Au:N/C:P/I:N/A:N", "accessVector": "NETWORK", "accessComplexity": "MEDIUM", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 4.3}, "baseSeverity": "MEDIUM", "exploitabilityScore": 8.6, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "The login_to_simulator method in Linden Lab Second Life, as used by the secondlife:// protocol handler and possibly other Second Life login mechanisms, sends an MD5 hash in cleartext in the passwd field, which allows remote attackers to login to an account by sniffing the network and then sending this hash to a Second Life authentication server.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:linden_lab:second_life:1:*:*:*:*:*:*:*", "published": "2007-09-18T22:17:00.000", "last_modified": "2008-11-15T06:59:12.203"}, {"id": "CVE-2007-4786", "score": ["V2", 4.3, "MEDIUM"], "v2_score": 4.3, "v2_exploitability_score": 2.5, "v2_impact_score": 6.9, "v2_vector": "AV:A/AC:H/Au:S/C:C/I:N/A:N", "access_vector": "ADJACENT_NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:A/AC:H/Au:S/C:C/I:N/A:N", "accessVector": "ADJACENT_NETWORK", "accessComplexity": "HIGH", "authentication": "SINGLE", "confidentialityImpact": "COMPLETE", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 4.3}, "baseSeverity": "MEDIUM", "exploitabilityScore": 2.5, "impactScore": 6.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "Cisco Adaptive Security Appliance (ASA) running PIX 7.0 before 7.0.7.1, 7.1 before 7.1.2.61, 7.2 before 7.2.2.34, and 8.0 before 8.0.2.11, when AAA is enabled, composes %ASA-5-111008 messages from the \"test aaa\" command with cleartext passwords and sends them over the network to a remote syslog server or places them in a local logging buffer, which allows context-dependent attackers to obtain sensitive information.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:o:cisco:adaptive_security_appliance_software:*:*:*:*:*:*:*:*", "published": "2007-09-10T21:17:00.000", "last_modified": "2023-08-11T19:03:30.373"}, {"id": "CVE-2005-3140", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "Procom NetFORCE 800 4.02 M10 Build 20 and possibly other versions sends the NIS password map (passwd.nis) as a file attachment in diagnostic e-mail messages, which allows remote attackers to obtain the cleartext NIS password hashes.", "cpe_vulnerable": false, "cpe_criteria": "cpe:2.3:a:procom_technology:netforce:800_4.2_m10_build20:*:*:*:*:*:*:*", "published": "2005-10-05T21:02:00.000", "last_modified": "2016-10-18T03:33:06.610"}], "cwe_info": {"cwe_id": "311", "name": "Missing Encryption of Sensitive Data", "weakness_abstraction": "Class", "status": "Draft", "description": "The software does not encrypt sensitive or critical information before storage or transmission.", "extended_description": "The lack of proper data encryption passes up the guarantees of confidentiality, integrity, and accountability that properly implemented encryption conveys.", "related_weaknesses": "::NATURE:ChildOf:CWE ID:693:VIEW ID:1000:ORDINAL:Primary::", "weakness_ordinalities": "", "applicable_platforms": "::LANGUAGE CLASS:Language-Independent:LANGUAGE PREVALENCE:Undetermined::", "background_details": "", "alternate_terms": "", "modes_of_introduction": "::PHASE:Architecture and Design:NOTE:OMISSION: This weakness is caused by missing a security tactic during the architecture and design phase.::PHASE:Operation::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Confidentiality:IMPACT:Read Application Data:NOTE:If the application does not use a secure channel, such as SSL, to exchange sensitive information, it is possible for an attacker with access to the network traffic to sniff packets from the connection and uncover the data. This attack is not technically difficult, but does require physical access to some portion of the network over which the sensitive data travels. This access is usually somewhere near where the user is connected to the network (such as a colleague on the company network) but can be anywhere along the path from the user to the end server.::SCOPE:Confidentiality:SCOPE:Integrity:IMPACT:Modify Application Data:NOTE:Omitting the use of encryption in any program which transfers data over a network of any kind should be considered on par with delivering the data sent to each user on the local networks of both the sender and receiver. Worse, this omission allows for the injection of data into a stream of communication between two parties -- with no means for the victims to separate valid data from invalid. In this day of widespread network attacks and password collection sniffers, it is an unnecessary risk to omit encryption from the design of any system which might benefit from it.::", "detection_methods": "::METHOD:Manual Analysis:DESCRIPTION:The characterizaton of sensitive data often requires domain-specific understanding, so manual methods are useful. However, manual efforts might not achieve desired code coverage within limited time constraints. Black box methods may produce artifacts (e.g. stored data or unencrypted network transfer) that require manual evaluation.:EFFECTIVENESS:High::METHOD:Automated Analysis:DESCRIPTION:Automated measurement of the entropy of an input/output source may indicate the use or lack of encryption, but human analysis is still required to distinguish intentionally-unencrypted data (e.g. metadata) from sensitive data.::METHOD:Manual Static Analysis - Binary or Bytecode:DESCRIPTION:According to SOAR, the following detection techniques may be useful: Cost effective for partial coverage: Binary / Bytecode disassembler - then use manual analysis for vulnerabilities & anomalies:EFFECTIVENESS:SOAR Partial::METHOD:Dynamic Analysis with Automated Results Interpretation:DESCRIPTION:According to SOAR, the following detection techniques may be useful: Cost effective for partial coverage: Web Application Scanner Web Services Scanner Database Scanners:EFFECTIVENESS:SOAR Partial::METHOD:Dynamic Analysis with Manual Results Interpretation:DESCRIPTION:According to SOAR, the following detection techniques may be useful: Highly cost effective: Network Sniffer Cost effective for partial coverage: Fuzz Tester Framework-based Fuzzer Automated Monitored Execution Man-in-the-middle attack tool:EFFECTIVENESS:High::METHOD:Manual Static Analysis - Source Code:DESCRIPTION:According to SOAR, the following detection techniques may be useful: Highly cost effective: Focused Manual Spotcheck - Focused manual analysis of source Manual Source Code Review (not inspections):EFFECTIVENESS:High::METHOD:Automated Static Analysis - Source Code:DESCRIPTION:According to SOAR, the following detection techniques may be useful: Cost effective for partial coverage: Context-configured Source Code Weakness Analyzer:EFFECTIVENESS:SOAR Partial::METHOD:Architecture or Design Review:DESCRIPTION:According to SOAR, the following detection techniques may be useful: Highly cost effective: Inspection (IEEE 1028 standard) (can apply to requirements, design, source code, etc.) Formal Methods / Correct-By-Construction Cost effective for partial coverage: Attack Modeling:EFFECTIVENESS:High::", "potential_mitigations": "::PHASE:Requirements:DESCRIPTION:Clearly specify which data or resources are valuable enough that they should be protected by encryption. Require that any transmission or storage of this data/resource should use well-vetted encryption algorithms.::PHASE:Architecture and Design:DESCRIPTION:Ensure that encryption is properly integrated into the system design, including but not necessarily limited to: Encryption that is needed to store or transmit private data of the users of the system Encryption that is needed to protect the system itself from unauthorized disclosure or tampering Identify the separate needs and contexts for encryption: One-way (i.e., only the user or recipient needs to have the key). This can be achieved using public key cryptography, or other techniques in which the encrypting party (i.e., the software) does not need to have access to a private key. Two-way (i.e., the encryption can be automatically performed on behalf of a user, but the key must be available so that the plaintext can be automatically recoverable by that user). This requires storage of the private key in a format that is recoverable only by the user (or perhaps by the operating system) in a way that cannot be recovered by others. Using threat modeling or other techniques, assume that data can be compromised through a separate vulnerability or weakness, and determine where encryption will be most effective. Ensure that data that should be private is not being inadvertently exposed using weaknesses such as insecure permissions (CWE-732). [REF-7]::PHASE:Architecture and Design:STRATEGY:Libraries or Frameworks:DESCRIPTION:When there is a need to store or transmit sensitive data, use strong, up-to-date cryptographic algorithms to encrypt that data. Select a well-vetted algorithm that is currently considered to be strong by experts in the field, and use well-tested implementations. As with all cryptographic mechanisms, the source code should be available for analysis. For example, US government systems require FIPS 140-2 certification. Do not develop custom or private cryptographic algorithms. They will likely be exposed to attacks that are well-understood by cryptographers. Reverse engineering techniques are mature. If the algorithm can be compromised if attackers find out how it works, then it is especially weak. Periodically ensure that the cryptography has not become obsolete. Some older algorithms, once thought to require a billion years of computing time, can now be broken in days or hours. This includes MD4, MD5, SHA1, DES, and other algorithms that were once regarded as strong. [REF-267]::PHASE:Architecture and Design:STRATEGY:Separation of Privilege:DESCRIPTION:Compartmentalize the system to have safe areas where trust boundaries can be unambiguously drawn. Do not allow sensitive data to go outside of the trust boundary and always be careful when interfacing with a compartment outside of the safe area. Ensure that appropriate compartmentalization is built into the system design, and the compartmentalization allows for and reinforces privilege separation functionality. Architects and designers should rely on the principle of least privilege to decide the appropriate time to use privileges and the time to drop privileges.::PHASE:Implementation Architecture and Design:DESCRIPTION:When using industry-approved techniques, use them correctly. Don't cut corners by skipping resource-intensive steps (CWE-325). These steps are often essential for preventing common attacks.::PHASE:Implementation:STRATEGY:Attack Surface Reduction:DESCRIPTION:Use naming conventions and strong types to make it easier to spot when sensitive data is being used. When creating structures, objects, or other complex entities, separate the sensitive and non-sensitive data as much as possible.:EFFECTIVENESS:Defense in Depth::", "observed_examples": "::REFERENCE:CVE-2009-2272:DESCRIPTION:password and username stored in cleartext in a cookie:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2009-2272::REFERENCE:CVE-2009-1466:DESCRIPTION:password stored in cleartext in a file with insecure permissions:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2009-1466::REFERENCE:CVE-2009-0152:DESCRIPTION:chat program disables SSL in some circumstances even when the user says to use SSL.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2009-0152::REFERENCE:CVE-2009-1603:DESCRIPTION:Chain: product uses an incorrect public exponent when generating an RSA key, which effectively disables the encryption:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2009-1603::REFERENCE:CVE-2009-0964:DESCRIPTION:storage of unencrypted passwords in a database:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2009-0964::REFERENCE:CVE-2008-6157:DESCRIPTION:storage of unencrypted passwords in a database:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2008-6157::REFERENCE:CVE-2008-6828:DESCRIPTION:product stores a password in cleartext in memory:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2008-6828::REFERENCE:CVE-2008-1567:DESCRIPTION:storage of a secret key in cleartext in a temporary file:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2008-1567::REFERENCE:CVE-2008-0174:DESCRIPTION:SCADA product uses HTTP Basic Authentication, which is not encrypted:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2008-0174::REFERENCE:CVE-2007-5778:DESCRIPTION:login credentials stored unencrypted in a registry key:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2007-5778::REFERENCE:CVE-2002-1949:DESCRIPTION:Passwords transmitted in cleartext.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2002-1949::REFERENCE:CVE-2008-4122:DESCRIPTION:Chain: Use of HTTPS cookie without secure flag causes it to be transmitted across unencrypted HTTP.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2008-4122::REFERENCE:CVE-2008-3289:DESCRIPTION:Product sends password hash in cleartext in violation of intended policy.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2008-3289::REFERENCE:CVE-2008-4390:DESCRIPTION:Remote management feature sends sensitive information including passwords in cleartext.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2008-4390::REFERENCE:CVE-2007-5626:DESCRIPTION:Backup routine sends password in cleartext in email.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2007-5626::REFERENCE:CVE-2004-1852:DESCRIPTION:Product transmits Blowfish encryption key in cleartext.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2004-1852::REFERENCE:CVE-2008-0374:DESCRIPTION:Printer sends configuration information, including administrative password, in cleartext.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2008-0374::REFERENCE:CVE-2007-4961:DESCRIPTION:Chain: cleartext transmission of the MD5 hash of password enables attacks against a server that is susceptible to replay (CWE-294).:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2007-4961::REFERENCE:CVE-2007-4786:DESCRIPTION:Product sends passwords in cleartext to a log server.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2007-4786::REFERENCE:CVE-2005-3140:DESCRIPTION:Product sends file with cleartext passwords in e-mail message intended for diagnostic purposes.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2005-3140::", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "::TAXONOMY NAME:CLASP:ENTRY NAME:Failure to encrypt data::TAXONOMY NAME:OWASP Top Ten 2007:ENTRY ID:A8:ENTRY NAME:Insecure Cryptographic Storage:MAPPING FIT:CWE More Specific::TAXONOMY NAME:OWASP Top Ten 2007:ENTRY ID:A9:ENTRY NAME:Insecure Communications:MAPPING FIT:CWE More Specific::TAXONOMY NAME:OWASP Top Ten 2004:ENTRY ID:A8:ENTRY NAME:Insecure Storage:MAPPING FIT:CWE More Specific::TAXONOMY NAME:WASC:ENTRY ID:4:ENTRY NAME:Insufficient Transport Layer Protection::TAXONOMY NAME:The CERT Oracle Secure Coding Standard for Java (2011):ENTRY ID:MSC00-J:ENTRY NAME:Use SSLSocket rather than Socket for secure data exchange::TAXONOMY NAME:Software Fault Patterns:ENTRY ID:SFP23:ENTRY NAME:Exposed Data::", "related_attack_patterns": "::157::158::204::31::37::383::384::385::386::387::388::477::609::65::", "notes": "::TYPE:Relationship:NOTE:There is an overlapping relationship between insecure storage of sensitive information (CWE-922) and missing encryption of sensitive information (CWE-311). Encryption is often used to prevent an attacker from reading the sensitive data. However, encryption does not prevent the attacker from erasing or overwriting the data.::"}}]}]}, {"technique_id": "T1613", "t_findings": [{"capec_id": "CAPEC-158", "c_findings": [{"cwe": "CWE-311", "cves": [{"id": "CVE-2009-2272", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "The Huawei D100 stores the administrator's account name and password in cleartext in a cookie, which allows context-dependent attackers to obtain sensitive information by (1) reading a cookie file, by (2) sniffing the network for HTTP headers, and possibly by using unspecified other vectors.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:h:huawei:d100_router:*:*:*:*:*:*:*:*", "published": "2009-07-01T13:00:01.530", "last_modified": "2018-10-10T19:39:31.883"}, {"id": "CVE-2009-1466", "score": ["V2", 2.1, "LOW"], "v2_score": 2.1, "v2_exploitability_score": 3.9, "v2_impact_score": 2.9, "v2_vector": "AV:L/AC:L/Au:N/C:P/I:N/A:N", "access_vector": "LOCAL", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:L/AC:L/Au:N/C:P/I:N/A:N", "accessVector": "LOCAL", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 2.1}, "baseSeverity": "LOW", "exploitabilityScore": 3.9, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "Application Access Server (A-A-S) 2.0.48 stores (1) passwords and (2) the port keyword in cleartext in aas.ini, which allows local users to obtain sensitive information by reading this file.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:klinzmann:application_access_server:2.0.48:*:*:*:*:*:*:*", "published": "2009-05-14T17:30:00.640", "last_modified": "2018-10-10T19:36:59.407"}, {"id": "CVE-2009-0152", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "iChat in Apple Mac OS X 10.5 before 10.5.7 disables SSL for AOL Instant Messenger (AIM) communication in certain circumstances that are inconsistent with the Require SSL setting, which allows remote attackers to obtain sensitive information by sniffing the network.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:o:apple:mac_os_x:10.5.0:*:*:*:*:*:*:*", "published": "2009-05-13T15:30:00.327", "last_modified": "2017-08-08T01:33:48.187"}, {"id": "CVE-2009-1603", "score": ["V2", 4.3, "MEDIUM"], "v2_score": 4.3, "v2_exploitability_score": 8.6, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:M/Au:N/C:P/I:N/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:M/Au:N/C:P/I:N/A:N", "accessVector": "NETWORK", "accessComplexity": "MEDIUM", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 4.3}, "baseSeverity": "MEDIUM", "exploitabilityScore": 8.6, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "src/tools/pkcs11-tool.c in pkcs11-tool in OpenSC 0.11.7, when used with unspecified third-party PKCS#11 modules, generates RSA keys with incorrect public exponents, which allows attackers to read the cleartext form of messages that were intended to be encrypted.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:opensc-project:opensc:0.11.7:*:*:*:*:*:*:*", "published": "2009-05-11T16:30:00.187", "last_modified": "2009-08-08T05:26:21.250"}, {"id": "CVE-2009-0964", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "UserView_list.php in PHPRunner 4.2, and possibly earlier, stores passwords in cleartext in the database, which allows attackers to gain privileges.  NOTE: this can be leveraged with a separate SQL injection vulnerability to obtain passwords remotely without authentication.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:xlinesoft:phprunner:*:*:*:*:*:*:*:*", "published": "2009-03-19T10:30:00.467", "last_modified": "2018-10-10T19:32:39.990"}, {"id": "CVE-2008-6157", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "SepCity Classified Ads stores the admin password in cleartext in data/classifieds.mdb, which allows context-dependent attackers to obtain sensitive information.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:sepcity:classified_ads:-:*:*:*:*:*:*:*", "published": "2009-02-17T17:30:05.843", "last_modified": "2017-10-19T01:30:16.237"}, {"id": "CVE-2008-6828", "score": ["V2", 4.3, "MEDIUM"], "v2_score": 4.3, "v2_exploitability_score": 3.1, "v2_impact_score": 6.4, "v2_vector": "AV:L/AC:L/Au:S/C:P/I:P/A:P", "access_vector": "LOCAL", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:L/AC:L/Au:S/C:P/I:P/A:P", "accessVector": "LOCAL", "accessComplexity": "LOW", "authentication": "SINGLE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 4.3}, "baseSeverity": "MEDIUM", "exploitabilityScore": 3.1, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "Symantec Altiris Deployment Solution 6.x before 6.9.355 SP1 stores the Application Identity Account password in memory in cleartext, which allows local users to gain privileges and modify clients of the Deployment Solution Server.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:symantec:altiris_deployment_solution:*:*:*:*:*:*:*:*", "published": "2009-06-08T19:30:00.233", "last_modified": "2017-08-17T01:29:36.067"}, {"id": "CVE-2008-1567", "score": ["V2", 2.1, "LOW"], "v2_score": 2.1, "v2_exploitability_score": 3.9, "v2_impact_score": 2.9, "v2_vector": "AV:L/AC:L/Au:N/C:P/I:N/A:N", "access_vector": "LOCAL", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:L/AC:L/Au:N/C:P/I:N/A:N", "accessVector": "LOCAL", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 2.1}, "baseSeverity": "LOW", "exploitabilityScore": 3.9, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "phpMyAdmin before 2.11.5.1 stores the MySQL (1) username and (2) password, and the (3) Blowfish secret key, in cleartext in a Session file under /tmp, which allows local users to obtain sensitive information.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:phpmyadmin:phpmyadmin:2.10.0.0:*:*:*:*:*:*:*", "published": "2008-03-31T22:44:00.000", "last_modified": "2017-08-08T01:30:15.730"}, {"id": "CVE-2008-0174", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "GE Fanuc Proficy Real-Time Information Portal 2.6 and earlier uses HTTP Basic Authentication, which transmits usernames and passwords in base64-encoded cleartext and allows remote attackers to steal the passwords and gain privileges.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:ge_fanuc:proficy_real-time_information_portal:*:*:*:*:*:*:*:*", "published": "2008-01-29T02:00:00.000", "last_modified": "2018-10-15T21:58:24.030"}, {"id": "CVE-2007-5778", "score": ["V2", 6.4, "MEDIUM"], "v2_score": 6.4, "v2_exploitability_score": 10.0, "v2_impact_score": 4.9, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:N/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:N/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "NONE", "availabilityImpact": "PARTIAL", "baseScore": 6.4}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 4.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "Mobile Spy (1) stores login credentials in cleartext under the RetinaxStudios registry key, and (2) sends login credentials and log data over a cleartext HTTP connection, which allows attackers to obtain sensitive information by reading the registry or sniffing the network.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:mobile-spy:mobile-spy:*:*:*:*:*:*:*:*", "published": "2007-11-01T16:46:00.000", "last_modified": "2018-10-15T21:46:30.097"}, {"id": "CVE-2002-1949", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "The Network Attached Storage (NAS) Administration Web Page for Iomega NAS A300U transmits passwords in cleartext, which allows remote attackers to sniff the administrative password.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:h:iomega:nas:a300u:*:*:*:*:*:*:*", "published": "2002-12-31T05:00:00.000", "last_modified": "2008-09-05T20:31:55.997"}, {"id": "CVE-2008-4122", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "Joomla! 1.5.8 does not set the secure flag for the session cookie in an https session, which makes it easier for remote attackers to capture this cookie by intercepting its transmission within an http session.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:joomla:joomla:1.5.8:*:*:*:*:*:*:*", "published": "2008-12-19T17:30:02.907", "last_modified": "2018-10-11T20:51:00.800"}, {"id": "CVE-2008-3289", "score": ["V2", 4.3, "MEDIUM"], "v2_score": 4.3, "v2_exploitability_score": 8.6, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:M/Au:N/C:P/I:N/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:M/Au:N/C:P/I:N/A:N", "accessVector": "NETWORK", "accessComplexity": "MEDIUM", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 4.3}, "baseSeverity": "MEDIUM", "exploitabilityScore": 8.6, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "EMC Dantz Retrospect Backup Client 7.5.116 sends the password hash in cleartext at an unspecified point, which allows remote attackers to obtain sensitive information via a crafted packet.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:emc_dantz:retrospect_backup_client:7.5.116:*:*:*:*:*:*:*", "published": "2008-07-24T17:41:00.000", "last_modified": "2018-10-11T20:47:51.943"}, {"id": "CVE-2008-4390", "score": ["V2", 10.0, "HIGH"], "v2_score": 10.0, "v2_exploitability_score": 10.0, "v2_impact_score": 10.0, "v2_vector": "AV:N/AC:L/Au:N/C:C/I:C/A:C", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:C/I:C/A:C", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "COMPLETE", "integrityImpact": "COMPLETE", "availabilityImpact": "COMPLETE", "baseScore": 10.0}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 10.0, "acInsufInfo": false, "obtainAllPrivilege": true, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "The Cisco Linksys WVC54GC wireless video camera before firmware 1.25 sends cleartext configuration data in response to a Setup Wizard remote-management command, which allows remote attackers to obtain sensitive information such as passwords by sniffing the network.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:h:cisco:wvc54gc:*:*:*:*:*:*:*:*", "published": "2008-12-09T00:30:00.237", "last_modified": "2009-08-20T05:21:16.663"}, {"id": "CVE-2007-5626", "score": ["V2", 2.1, "LOW"], "v2_score": 2.1, "v2_exploitability_score": 3.9, "v2_impact_score": 2.9, "v2_vector": "AV:L/AC:L/Au:N/C:P/I:N/A:N", "access_vector": "LOCAL", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:L/AC:L/Au:N/C:P/I:N/A:N", "accessVector": "LOCAL", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 2.1}, "baseSeverity": "LOW", "exploitabilityScore": 3.9, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "make_catalog_backup in Bacula 2.2.5, and probably earlier, sends a MySQL password as a command line argument, and sometimes transmits cleartext e-mail containing this command line, which allows context-dependent attackers to obtain the password by listing the process and its arguments, or by sniffing the network.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:bacula:bacula:*:*:*:*:*:*:*:*", "published": "2007-10-23T16:46:00.000", "last_modified": "2018-10-09T15:08:47.900"}, {"id": "CVE-2004-1852", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "DameWare Mini Remote Control 3.x before 3.74 and 4.x before 4.2 transmits the Blowfish encryption key in plaintext, which allows remote attackers to gain sensitive information.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:dameware_development:mini_remote_control_server:3.70_.0.0:*:*:*:*:*:*:*", "published": "2004-03-23T05:00:00.000", "last_modified": "2017-07-11T01:31:24.403"}, {"id": "CVE-2008-0374", "score": ["V2", 10.0, "HIGH"], "v2_score": 10.0, "v2_exploitability_score": 10.0, "v2_impact_score": 10.0, "v2_vector": "AV:N/AC:L/Au:N/C:C/I:C/A:C", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:C/I:C/A:C", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "COMPLETE", "integrityImpact": "COMPLETE", "availabilityImpact": "COMPLETE", "baseScore": 10.0}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 10.0, "acInsufInfo": false, "obtainAllPrivilege": true, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "OKI C5510MFP Printer CU H2.15, PU 01.03.01, System F/W 1.01, and Web Page 1.00 sends the configuration of the printer in cleartext, which allows remote attackers to obtain the administrative password by connecting to TCP port 5548 or 7777.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:h:oki_printing_solutions:c5510_mfp_printer:cu_h2.15:*:*:*:*:*:*:*", "published": "2008-01-22T20:00:00.000", "last_modified": "2018-10-15T21:59:11.017"}, {"id": "CVE-2007-4961", "score": ["V2", 4.3, "MEDIUM"], "v2_score": 4.3, "v2_exploitability_score": 8.6, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:M/Au:N/C:P/I:N/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:M/Au:N/C:P/I:N/A:N", "accessVector": "NETWORK", "accessComplexity": "MEDIUM", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 4.3}, "baseSeverity": "MEDIUM", "exploitabilityScore": 8.6, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "The login_to_simulator method in Linden Lab Second Life, as used by the secondlife:// protocol handler and possibly other Second Life login mechanisms, sends an MD5 hash in cleartext in the passwd field, which allows remote attackers to login to an account by sniffing the network and then sending this hash to a Second Life authentication server.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:linden_lab:second_life:1:*:*:*:*:*:*:*", "published": "2007-09-18T22:17:00.000", "last_modified": "2008-11-15T06:59:12.203"}, {"id": "CVE-2007-4786", "score": ["V2", 4.3, "MEDIUM"], "v2_score": 4.3, "v2_exploitability_score": 2.5, "v2_impact_score": 6.9, "v2_vector": "AV:A/AC:H/Au:S/C:C/I:N/A:N", "access_vector": "ADJACENT_NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:A/AC:H/Au:S/C:C/I:N/A:N", "accessVector": "ADJACENT_NETWORK", "accessComplexity": "HIGH", "authentication": "SINGLE", "confidentialityImpact": "COMPLETE", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 4.3}, "baseSeverity": "MEDIUM", "exploitabilityScore": 2.5, "impactScore": 6.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "Cisco Adaptive Security Appliance (ASA) running PIX 7.0 before 7.0.7.1, 7.1 before 7.1.2.61, 7.2 before 7.2.2.34, and 8.0 before 8.0.2.11, when AAA is enabled, composes %ASA-5-111008 messages from the \"test aaa\" command with cleartext passwords and sends them over the network to a remote syslog server or places them in a local logging buffer, which allows context-dependent attackers to obtain sensitive information.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:o:cisco:adaptive_security_appliance_software:*:*:*:*:*:*:*:*", "published": "2007-09-10T21:17:00.000", "last_modified": "2023-08-11T19:03:30.373"}, {"id": "CVE-2005-3140", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "Procom NetFORCE 800 4.02 M10 Build 20 and possibly other versions sends the NIS password map (passwd.nis) as a file attachment in diagnostic e-mail messages, which allows remote attackers to obtain the cleartext NIS password hashes.", "cpe_vulnerable": false, "cpe_criteria": "cpe:2.3:a:procom_technology:netforce:800_4.2_m10_build20:*:*:*:*:*:*:*", "published": "2005-10-05T21:02:00.000", "last_modified": "2016-10-18T03:33:06.610"}], "cwe_info": {"cwe_id": "311", "name": "Missing Encryption of Sensitive Data", "weakness_abstraction": "Class", "status": "Draft", "description": "The software does not encrypt sensitive or critical information before storage or transmission.", "extended_description": "The lack of proper data encryption passes up the guarantees of confidentiality, integrity, and accountability that properly implemented encryption conveys.", "related_weaknesses": "::NATURE:ChildOf:CWE ID:693:VIEW ID:1000:ORDINAL:Primary::", "weakness_ordinalities": "", "applicable_platforms": "::LANGUAGE CLASS:Language-Independent:LANGUAGE PREVALENCE:Undetermined::", "background_details": "", "alternate_terms": "", "modes_of_introduction": "::PHASE:Architecture and Design:NOTE:OMISSION: This weakness is caused by missing a security tactic during the architecture and design phase.::PHASE:Operation::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Confidentiality:IMPACT:Read Application Data:NOTE:If the application does not use a secure channel, such as SSL, to exchange sensitive information, it is possible for an attacker with access to the network traffic to sniff packets from the connection and uncover the data. This attack is not technically difficult, but does require physical access to some portion of the network over which the sensitive data travels. This access is usually somewhere near where the user is connected to the network (such as a colleague on the company network) but can be anywhere along the path from the user to the end server.::SCOPE:Confidentiality:SCOPE:Integrity:IMPACT:Modify Application Data:NOTE:Omitting the use of encryption in any program which transfers data over a network of any kind should be considered on par with delivering the data sent to each user on the local networks of both the sender and receiver. Worse, this omission allows for the injection of data into a stream of communication between two parties -- with no means for the victims to separate valid data from invalid. In this day of widespread network attacks and password collection sniffers, it is an unnecessary risk to omit encryption from the design of any system which might benefit from it.::", "detection_methods": "::METHOD:Manual Analysis:DESCRIPTION:The characterizaton of sensitive data often requires domain-specific understanding, so manual methods are useful. However, manual efforts might not achieve desired code coverage within limited time constraints. Black box methods may produce artifacts (e.g. stored data or unencrypted network transfer) that require manual evaluation.:EFFECTIVENESS:High::METHOD:Automated Analysis:DESCRIPTION:Automated measurement of the entropy of an input/output source may indicate the use or lack of encryption, but human analysis is still required to distinguish intentionally-unencrypted data (e.g. metadata) from sensitive data.::METHOD:Manual Static Analysis - Binary or Bytecode:DESCRIPTION:According to SOAR, the following detection techniques may be useful: Cost effective for partial coverage: Binary / Bytecode disassembler - then use manual analysis for vulnerabilities & anomalies:EFFECTIVENESS:SOAR Partial::METHOD:Dynamic Analysis with Automated Results Interpretation:DESCRIPTION:According to SOAR, the following detection techniques may be useful: Cost effective for partial coverage: Web Application Scanner Web Services Scanner Database Scanners:EFFECTIVENESS:SOAR Partial::METHOD:Dynamic Analysis with Manual Results Interpretation:DESCRIPTION:According to SOAR, the following detection techniques may be useful: Highly cost effective: Network Sniffer Cost effective for partial coverage: Fuzz Tester Framework-based Fuzzer Automated Monitored Execution Man-in-the-middle attack tool:EFFECTIVENESS:High::METHOD:Manual Static Analysis - Source Code:DESCRIPTION:According to SOAR, the following detection techniques may be useful: Highly cost effective: Focused Manual Spotcheck - Focused manual analysis of source Manual Source Code Review (not inspections):EFFECTIVENESS:High::METHOD:Automated Static Analysis - Source Code:DESCRIPTION:According to SOAR, the following detection techniques may be useful: Cost effective for partial coverage: Context-configured Source Code Weakness Analyzer:EFFECTIVENESS:SOAR Partial::METHOD:Architecture or Design Review:DESCRIPTION:According to SOAR, the following detection techniques may be useful: Highly cost effective: Inspection (IEEE 1028 standard) (can apply to requirements, design, source code, etc.) Formal Methods / Correct-By-Construction Cost effective for partial coverage: Attack Modeling:EFFECTIVENESS:High::", "potential_mitigations": "::PHASE:Requirements:DESCRIPTION:Clearly specify which data or resources are valuable enough that they should be protected by encryption. Require that any transmission or storage of this data/resource should use well-vetted encryption algorithms.::PHASE:Architecture and Design:DESCRIPTION:Ensure that encryption is properly integrated into the system design, including but not necessarily limited to: Encryption that is needed to store or transmit private data of the users of the system Encryption that is needed to protect the system itself from unauthorized disclosure or tampering Identify the separate needs and contexts for encryption: One-way (i.e., only the user or recipient needs to have the key). This can be achieved using public key cryptography, or other techniques in which the encrypting party (i.e., the software) does not need to have access to a private key. Two-way (i.e., the encryption can be automatically performed on behalf of a user, but the key must be available so that the plaintext can be automatically recoverable by that user). This requires storage of the private key in a format that is recoverable only by the user (or perhaps by the operating system) in a way that cannot be recovered by others. Using threat modeling or other techniques, assume that data can be compromised through a separate vulnerability or weakness, and determine where encryption will be most effective. Ensure that data that should be private is not being inadvertently exposed using weaknesses such as insecure permissions (CWE-732). [REF-7]::PHASE:Architecture and Design:STRATEGY:Libraries or Frameworks:DESCRIPTION:When there is a need to store or transmit sensitive data, use strong, up-to-date cryptographic algorithms to encrypt that data. Select a well-vetted algorithm that is currently considered to be strong by experts in the field, and use well-tested implementations. As with all cryptographic mechanisms, the source code should be available for analysis. For example, US government systems require FIPS 140-2 certification. Do not develop custom or private cryptographic algorithms. They will likely be exposed to attacks that are well-understood by cryptographers. Reverse engineering techniques are mature. If the algorithm can be compromised if attackers find out how it works, then it is especially weak. Periodically ensure that the cryptography has not become obsolete. Some older algorithms, once thought to require a billion years of computing time, can now be broken in days or hours. This includes MD4, MD5, SHA1, DES, and other algorithms that were once regarded as strong. [REF-267]::PHASE:Architecture and Design:STRATEGY:Separation of Privilege:DESCRIPTION:Compartmentalize the system to have safe areas where trust boundaries can be unambiguously drawn. Do not allow sensitive data to go outside of the trust boundary and always be careful when interfacing with a compartment outside of the safe area. Ensure that appropriate compartmentalization is built into the system design, and the compartmentalization allows for and reinforces privilege separation functionality. Architects and designers should rely on the principle of least privilege to decide the appropriate time to use privileges and the time to drop privileges.::PHASE:Implementation Architecture and Design:DESCRIPTION:When using industry-approved techniques, use them correctly. Don't cut corners by skipping resource-intensive steps (CWE-325). These steps are often essential for preventing common attacks.::PHASE:Implementation:STRATEGY:Attack Surface Reduction:DESCRIPTION:Use naming conventions and strong types to make it easier to spot when sensitive data is being used. When creating structures, objects, or other complex entities, separate the sensitive and non-sensitive data as much as possible.:EFFECTIVENESS:Defense in Depth::", "observed_examples": "::REFERENCE:CVE-2009-2272:DESCRIPTION:password and username stored in cleartext in a cookie:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2009-2272::REFERENCE:CVE-2009-1466:DESCRIPTION:password stored in cleartext in a file with insecure permissions:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2009-1466::REFERENCE:CVE-2009-0152:DESCRIPTION:chat program disables SSL in some circumstances even when the user says to use SSL.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2009-0152::REFERENCE:CVE-2009-1603:DESCRIPTION:Chain: product uses an incorrect public exponent when generating an RSA key, which effectively disables the encryption:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2009-1603::REFERENCE:CVE-2009-0964:DESCRIPTION:storage of unencrypted passwords in a database:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2009-0964::REFERENCE:CVE-2008-6157:DESCRIPTION:storage of unencrypted passwords in a database:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2008-6157::REFERENCE:CVE-2008-6828:DESCRIPTION:product stores a password in cleartext in memory:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2008-6828::REFERENCE:CVE-2008-1567:DESCRIPTION:storage of a secret key in cleartext in a temporary file:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2008-1567::REFERENCE:CVE-2008-0174:DESCRIPTION:SCADA product uses HTTP Basic Authentication, which is not encrypted:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2008-0174::REFERENCE:CVE-2007-5778:DESCRIPTION:login credentials stored unencrypted in a registry key:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2007-5778::REFERENCE:CVE-2002-1949:DESCRIPTION:Passwords transmitted in cleartext.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2002-1949::REFERENCE:CVE-2008-4122:DESCRIPTION:Chain: Use of HTTPS cookie without secure flag causes it to be transmitted across unencrypted HTTP.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2008-4122::REFERENCE:CVE-2008-3289:DESCRIPTION:Product sends password hash in cleartext in violation of intended policy.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2008-3289::REFERENCE:CVE-2008-4390:DESCRIPTION:Remote management feature sends sensitive information including passwords in cleartext.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2008-4390::REFERENCE:CVE-2007-5626:DESCRIPTION:Backup routine sends password in cleartext in email.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2007-5626::REFERENCE:CVE-2004-1852:DESCRIPTION:Product transmits Blowfish encryption key in cleartext.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2004-1852::REFERENCE:CVE-2008-0374:DESCRIPTION:Printer sends configuration information, including administrative password, in cleartext.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2008-0374::REFERENCE:CVE-2007-4961:DESCRIPTION:Chain: cleartext transmission of the MD5 hash of password enables attacks against a server that is susceptible to replay (CWE-294).:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2007-4961::REFERENCE:CVE-2007-4786:DESCRIPTION:Product sends passwords in cleartext to a log server.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2007-4786::REFERENCE:CVE-2005-3140:DESCRIPTION:Product sends file with cleartext passwords in e-mail message intended for diagnostic purposes.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2005-3140::", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "::TAXONOMY NAME:CLASP:ENTRY NAME:Failure to encrypt data::TAXONOMY NAME:OWASP Top Ten 2007:ENTRY ID:A8:ENTRY NAME:Insecure Cryptographic Storage:MAPPING FIT:CWE More Specific::TAXONOMY NAME:OWASP Top Ten 2007:ENTRY ID:A9:ENTRY NAME:Insecure Communications:MAPPING FIT:CWE More Specific::TAXONOMY NAME:OWASP Top Ten 2004:ENTRY ID:A8:ENTRY NAME:Insecure Storage:MAPPING FIT:CWE More Specific::TAXONOMY NAME:WASC:ENTRY ID:4:ENTRY NAME:Insufficient Transport Layer Protection::TAXONOMY NAME:The CERT Oracle Secure Coding Standard for Java (2011):ENTRY ID:MSC00-J:ENTRY NAME:Use SSLSocket rather than Socket for secure data exchange::TAXONOMY NAME:Software Fault Patterns:ENTRY ID:SFP23:ENTRY NAME:Exposed Data::", "related_attack_patterns": "::157::158::204::31::37::383::384::385::386::387::388::477::609::65::", "notes": "::TYPE:Relationship:NOTE:There is an overlapping relationship between insecure storage of sensitive information (CWE-922) and missing encryption of sensitive information (CWE-311). Encryption is often used to prevent an attacker from reading the sensitive data. However, encryption does not prevent the attacker from erasing or overwriting the data.::"}}]}]}, {"technique_id": "T1082", "t_findings": [{"capec_id": "CAPEC-311", "c_findings": []}]}, {"technique_id": "T1580", "t_findings": [{"capec_id": "CAPEC-311", "c_findings": []}]}, {"technique_id": "T1070", "t_findings": [{"capec_id": "CAPEC-93", "c_findings": [{"cwe": "CWE-117", "cves": [{"id": "CVE-2006-4624", "score": ["V2", 2.6, "LOW"], "v2_score": 2.6, "v2_exploitability_score": 4.9, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:H/Au:N/C:N/I:P/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:H/Au:N/C:N/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "HIGH", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 2.6}, "baseSeverity": "LOW", "exploitabilityScore": 4.9, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": true}], "description": "CRLF injection vulnerability in Utils.py in Mailman before 2.1.9rc1 allows remote attackers to spoof messages in the error log and possibly trick the administrator into visiting malicious URLs via CRLF sequences in the URI.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:gnu:mailman:*:*:*:*:*:*:*:*", "published": "2006-09-07T19:04:00.000", "last_modified": "2018-10-17T21:38:43.887"}], "cwe_info": {"cwe_id": "117", "name": "Improper Output Neutralization for Logs", "weakness_abstraction": "Base", "status": "Draft", "description": "The software does not neutralize or incorrectly neutralizes output that is written to logs.", "extended_description": "This can allow an attacker to forge log entries or inject malicious content into logs. Log forging vulnerabilities occur when: Data enters an application from an untrusted source. The data is written to an application or system log file.", "related_weaknesses": "::NATURE:ChildOf:CWE ID:116:VIEW ID:1000:ORDINAL:Primary::NATURE:ChildOf:CWE ID:20:VIEW ID:700:ORDINAL:Primary::", "weakness_ordinalities": "::ORDINALITY:Primary::", "applicable_platforms": "::LANGUAGE CLASS:Language-Independent:LANGUAGE PREVALENCE:Undetermined::", "background_details": "::Applications typically use log files to store a history of events or transactions for later review, statistics gathering, or debugging. Depending on the nature of the application, the task of reviewing log files may be performed manually on an as-needed basis or automated with a tool that automatically culls logs for important events or trending information.::", "alternate_terms": "", "modes_of_introduction": "::PHASE:Implementation:NOTE:REALIZATION: This weakness is caused during implementation of an architectural security tactic.::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Integrity:SCOPE:Confidentiality:SCOPE:Availability:SCOPE:Non-Repudiation:IMPACT:Modify Application Data:IMPACT:Hide Activities:IMPACT:Execute Unauthorized Code or Commands:NOTE:Interpretation of the log files may be hindered or misdirected if an attacker can supply data to the application that is subsequently logged verbatim. In the most benign case, an attacker may be able to insert false entries into the log file by providing the application with input that includes appropriate characters. Forged or otherwise corrupted log files can be used to cover an attacker's tracks, possibly by skewing statistics, or even to implicate another party in the commission of a malicious act. If the log file is processed automatically, the attacker can render the file unusable by corrupting the format of the file or injecting unexpected characters. An attacker may inject code or other commands into the log file and take advantage of a vulnerability in the log processing utility.::", "detection_methods": "", "potential_mitigations": "::PHASE:Implementation:STRATEGY:Input Validation:DESCRIPTION:Assume all input is malicious. Use an accept known good input validation strategy, i.e., use a list of acceptable inputs that strictly conform to specifications. Reject any input that does not strictly conform to specifications, or transform it into something that does. When performing input validation, consider all potentially relevant properties, including length, type of input, the full range of acceptable values, missing or extra inputs, syntax, consistency across related fields, and conformance to business rules. As an example of business rule logic, boat may be syntactically valid because it only contains alphanumeric characters, but it is not valid if the input is only expected to contain colors such as red or blue. Do not rely exclusively on looking for malicious or malformed inputs. This is likely to miss at least one undesirable input, especially if the code's environment changes. This can give attackers enough room to bypass the intended validation. However, denylists can be useful for detecting potential attacks or determining which inputs are so malformed that they should be rejected outright.::PHASE:Implementation:STRATEGY:Output Encoding:DESCRIPTION:Use and specify an output encoding that can be handled by the downstream component that is reading the output. Common encodings include ISO-8859-1, UTF-7, and UTF-8. When an encoding is not specified, a downstream component may choose a different encoding, either by assuming a default encoding or automatically inferring which encoding is being used, which can be erroneous. When the encodings are inconsistent, the downstream component might treat some character or byte sequences as special, even if they are not special in the original encoding. Attackers might then be able to exploit this discrepancy and conduct injection attacks; they even might be able to bypass protection mechanisms that assume the original encoding is also being used by the downstream component.::PHASE:Implementation:STRATEGY:Input Validation:DESCRIPTION:Inputs should be decoded and canonicalized to the application's current internal representation before being validated (CWE-180). Make sure that the application does not decode the same input twice (CWE-174). Such errors could be used to bypass allowlist validation schemes by introducing dangerous inputs after they have been checked.::", "observed_examples": "::REFERENCE:CVE-2006-4624:DESCRIPTION:Chain: inject fake log entries with fake timestamps using CRLF injection:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2006-4624::", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "::TAXONOMY NAME:7 Pernicious Kingdoms:ENTRY NAME:Log Forging::TAXONOMY NAME:Software Fault Patterns:ENTRY ID:SFP23:ENTRY NAME:Exposed Data::TAXONOMY NAME:The CERT Oracle Secure Coding Standard for Java (2011):ENTRY ID:IDS03-J:ENTRY NAME:Do not log unsanitized user input:MAPPING FIT:Exact::TAXONOMY NAME:SEI CERT Oracle Coding Standard for Java:ENTRY ID:IDS03-J:ENTRY NAME:Do not log unsanitized user input:MAPPING FIT:Exact::", "related_attack_patterns": "::268::81::93::", "notes": ""}}, {"cwe": "CWE-75", "cves": [], "cwe_info": {"cwe_id": "75", "name": "Failure to Sanitize Special Elements into a Different Plane (Special Element Injection)", "weakness_abstraction": "Class", "status": "Draft", "description": "The software does not adequately filter user-controlled input for special elements with control implications.", "extended_description": "", "related_weaknesses": "::NATURE:ChildOf:CWE ID:74:VIEW ID:1000:ORDINAL:Primary::", "weakness_ordinalities": "", "applicable_platforms": "::LANGUAGE CLASS:Language-Independent:LANGUAGE PREVALENCE:Undetermined::", "background_details": "", "alternate_terms": "", "modes_of_introduction": "::PHASE:Architecture and Design::PHASE:Implementation:NOTE:REALIZATION: This weakness is caused during implementation of an architectural security tactic.::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Integrity:SCOPE:Confidentiality:SCOPE:Availability:IMPACT:Modify Application Data:IMPACT:Execute Unauthorized Code or Commands::", "detection_methods": "", "potential_mitigations": "::PHASE:Requirements:DESCRIPTION:Programming languages and supporting technologies might be chosen which are not subject to these issues.::PHASE:Implementation:DESCRIPTION:Utilize an appropriate mix of allowlist and denylist parsing to filter special element syntax from all input.::", "observed_examples": "", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "::TAXONOMY NAME:PLOVER:ENTRY NAME:Special Element Injection::", "related_attack_patterns": "::81::93::", "notes": ""}}, {"cwe": "CWE-150", "cves": [{"id": "CVE-2002-0542", "score": ["V2", 7.2, "HIGH"], "v2_score": 7.2, "v2_exploitability_score": 3.9, "v2_impact_score": 10.0, "v2_vector": "AV:L/AC:L/Au:N/C:C/I:C/A:C", "access_vector": "LOCAL", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:L/AC:L/Au:N/C:C/I:C/A:C", "accessVector": "LOCAL", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "COMPLETE", "integrityImpact": "COMPLETE", "availabilityImpact": "COMPLETE", "baseScore": 7.2}, "baseSeverity": "HIGH", "exploitabilityScore": 3.9, "impactScore": 10.0, "acInsufInfo": false, "obtainAllPrivilege": true, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "mail in OpenBSD 2.9 and 3.0 processes a tilde (~) escape character in a message even when it is not in interactive mode, which could allow local users to gain root privileges via calls to mail in cron.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:o:openbsd:openbsd:2.9:*:*:*:*:*:*:*", "published": "2002-07-03T04:00:00.000", "last_modified": "2016-10-18T02:20:33.870"}, {"id": "CVE-2000-0703", "score": ["V2", 7.2, "HIGH"], "v2_score": 7.2, "v2_exploitability_score": 3.9, "v2_impact_score": 10.0, "v2_vector": "AV:L/AC:L/Au:N/C:C/I:C/A:C", "access_vector": "LOCAL", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:L/AC:L/Au:N/C:C/I:C/A:C", "accessVector": "LOCAL", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "COMPLETE", "integrityImpact": "COMPLETE", "availabilityImpact": "COMPLETE", "baseScore": 7.2}, "baseSeverity": "HIGH", "exploitabilityScore": 3.9, "impactScore": 10.0, "acInsufInfo": false, "obtainAllPrivilege": true, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "suidperl (aka sperl) does not properly cleanse the escape sequence \"~!\" before calling /bin/mail to send an error report, which allows local users to gain privileges by setting the \"interactive\" environmental variable and calling suidperl with a filename that contains the escape sequence.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:larry_wall:perl:5.4.5:*:*:*:*:*:*:*", "published": "2000-10-20T04:00:00.000", "last_modified": "2008-09-10T19:05:39.807"}, {"id": "CVE-2002-0986", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:P/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "The mail function in PHP 4.x to 4.2.2 does not filter ASCII control characters from its arguments, which could allow remote attackers to modify mail message content, including mail headers, and possibly use PHP as a \"spam proxy.\"", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:php:php:3.0.18:*:*:*:*:*:*:*", "published": "2002-09-24T04:00:00.000", "last_modified": "2017-10-10T01:30:07.987"}, {"id": "CVE-2003-0020", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:P/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "Apache does not filter terminal escape sequences from its error logs, which could make it easier for attackers to insert those sequences into terminal emulators containing vulnerabilities related to escape sequences.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:apache:http_server:*:*:*:*:*:*:*:*", "published": "2003-03-18T05:00:00.000", "last_modified": "2021-06-06T11:15:11.407"}, {"id": "CVE-2003-0083", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:P/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "Apache 1.3 before 1.3.25 and Apache 2.0 before version 2.0.46 does not filter terminal escape sequences from its access logs, which could make it easier for attackers to insert those sequences into terminal emulators containing vulnerabilities related to escape sequences, a different vulnerability than CVE-2003-0020.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:apache:http_server:*:*:*:*:*:*:*:*", "published": "2003-04-02T05:00:00.000", "last_modified": "2021-07-15T20:37:29.807"}, {"id": "CVE-2003-0021", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:P/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "The \"screen dump\" feature in Eterm 0.9.1 and earlier allows attackers to overwrite arbitrary files via a certain character escape sequence when it is echoed to a user's terminal, e.g. when the user views a file containing the malicious sequence.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:michael_jennings:eterm:0.8.10:*:*:*:*:*:*:*", "published": "2003-03-03T05:00:00.000", "last_modified": "2016-10-18T02:28:25.557"}, {"id": "CVE-2003-0022", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:P/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "The \"screen dump\" feature in rxvt 2.7.8 allows attackers to overwrite arbitrary files via a certain character escape sequence when it is echoed to a user's terminal, e.g. when the user views a file containing the malicious sequence.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:rxvt:rxvt:2.6.1:*:*:*:*:*:*:*", "published": "2003-03-03T05:00:00.000", "last_modified": "2016-10-18T02:28:26.933"}, {"id": "CVE-2003-0023", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:P/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "The menuBar feature in rxvt 2.7.8 allows attackers to modify menu options and execute arbitrary commands via a certain character escape sequence that inserts the commands into the menu.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:rxvt:rxvt:2.6.1:*:*:*:*:*:*:*", "published": "2003-03-03T05:00:00.000", "last_modified": "2016-10-18T02:28:28.417"}, {"id": "CVE-2003-0063", "score": ["V2", 7.5, "HIGH"], "v2_score": 7.5, "v2_exploitability_score": 10.0, "v2_impact_score": 6.4, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 7.5}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": true, "userInteractionRequired": false}], "description": "The xterm terminal emulator in XFree86 4.2.0 and earlier allows attackers to modify the window title via a certain character escape sequence and then insert it back to the command line in the user's terminal, e.g. when the user views a file containing the malicious sequence, which could allow the attacker to execute arbitrary commands.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:xfree86_project:x11r6:4.0:*:*:*:*:*:*:*", "published": "2003-03-03T05:00:00.000", "last_modified": "2016-10-18T02:28:58.830"}, {"id": "CVE-2000-0476", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "PARTIAL", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "xterm, Eterm, and rxvt allow an attacker to cause a denial of service by embedding certain escape characters which force the window to be resized.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:michael_jennings:eterm:0.8.10:*:*:*:*:*:*:*", "published": "2000-06-01T04:00:00.000", "last_modified": "2008-09-10T19:04:44.960"}, {"id": "CVE-2001-1556", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:P/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "The log files in Apache web server contain information directly supplied by clients and does not filter or quote control characters, which could allow remote attackers to hide HTTP requests and spoof source IP addresses when logs are viewed with UNIX programs such as cat, tail, and grep.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:apache:http_server:*:*:*:*:*:*:*:*", "published": "2001-12-31T05:00:00.000", "last_modified": "2020-10-14T16:51:00.940"}], "cwe_info": {"cwe_id": "150", "name": "Improper Neutralization of Escape, Meta, or Control Sequences", "weakness_abstraction": "Variant", "status": "Incomplete", "description": "The software receives input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could be interpreted as escape, meta, or control character sequences when they are sent to a downstream component.", "extended_description": "As data is parsed, an injected/absent/malformed delimiter may cause the process to take unexpected actions.", "related_weaknesses": "::NATURE:ChildOf:CWE ID:138:VIEW ID:1000:ORDINAL:Primary::", "weakness_ordinalities": "", "applicable_platforms": "::LANGUAGE CLASS:Language-Independent:LANGUAGE PREVALENCE:Undetermined::", "background_details": "", "alternate_terms": "", "modes_of_introduction": "::PHASE:Implementation:NOTE:REALIZATION: This weakness is caused during implementation of an architectural security tactic.::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Integrity:IMPACT:Unexpected State::", "detection_methods": "", "potential_mitigations": "::PHASE::DESCRIPTION:Developers should anticipate that escape, meta and control characters/sequences will be injected/removed/manipulated in the input vectors of their software system. Use an appropriate combination of denylists and allowlists to ensure only valid, expected and appropriate input is processed by the system.::PHASE:Implementation:STRATEGY:Input Validation:DESCRIPTION:Assume all input is malicious. Use an accept known good input validation strategy, i.e., use a list of acceptable inputs that strictly conform to specifications. Reject any input that does not strictly conform to specifications, or transform it into something that does. When performing input validation, consider all potentially relevant properties, including length, type of input, the full range of acceptable values, missing or extra inputs, syntax, consistency across related fields, and conformance to business rules. As an example of business rule logic, boat may be syntactically valid because it only contains alphanumeric characters, but it is not valid if the input is only expected to contain colors such as red or blue. Do not rely exclusively on looking for malicious or malformed inputs. This is likely to miss at least one undesirable input, especially if the code's environment changes. This can give attackers enough room to bypass the intended validation. However, denylists can be useful for detecting potential attacks or determining which inputs are so malformed that they should be rejected outright.::PHASE:Implementation:STRATEGY:Output Encoding:DESCRIPTION:While it is risky to use dynamically-generated query strings, code, or commands that mix control and data together, sometimes it may be unavoidable. Properly quote arguments and escape any special characters within those arguments. The most conservative approach is to escape or filter all characters that do not pass an extremely strict allowlist (such as everything that is not alphanumeric or white space). If some special characters are still needed, such as white space, wrap each argument in quotes after the escaping/filtering step. Be careful of argument injection (CWE-88).::PHASE:Implementation:STRATEGY:Input Validation:DESCRIPTION:Inputs should be decoded and canonicalized to the application's current internal representation before being validated (CWE-180). Make sure that the application does not decode the same input twice (CWE-174). Such errors could be used to bypass allowlist validation schemes by introducing dangerous inputs after they have been checked.::", "observed_examples": "::REFERENCE:CVE-2002-0542:DESCRIPTION:The mail program processes special ~ escape sequence even when not in interactive mode.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2002-0542::REFERENCE:CVE-2000-0703:DESCRIPTION:Setuid program does not filter escape sequences before calling mail program.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2000-0703::REFERENCE:CVE-2002-0986:DESCRIPTION:Mail function does not filter control characters from arguments, allowing mail message content to be modified.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2002-0986::REFERENCE:CVE-2003-0020:DESCRIPTION:Multi-channel issue. Terminal escape sequences not filtered from log files.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2003-0020::REFERENCE:CVE-2003-0083:DESCRIPTION:Multi-channel issue. Terminal escape sequences not filtered from log files.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2003-0083::REFERENCE:CVE-2003-0021:DESCRIPTION:Terminal escape sequences not filtered by terminals when displaying files.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2003-0021::REFERENCE:CVE-2003-0022:DESCRIPTION:Terminal escape sequences not filtered by terminals when displaying files.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2003-0022::REFERENCE:CVE-2003-0023:DESCRIPTION:Terminal escape sequences not filtered by terminals when displaying files.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2003-0023::REFERENCE:CVE-2003-0063:DESCRIPTION:Terminal escape sequences not filtered by terminals when displaying files.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2003-0063::REFERENCE:CVE-2000-0476:DESCRIPTION:Terminal escape sequences not filtered by terminals when displaying files.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2000-0476::REFERENCE:CVE-2001-1556:DESCRIPTION:MFV. (multi-channel). Injection of control characters into log files that allow information hiding when using raw Unix programs to read the files.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2001-1556::", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "::TAXONOMY NAME:PLOVER:ENTRY NAME:Escape, Meta, or Control Character / Sequence::TAXONOMY NAME:The CERT Oracle Secure Coding Standard for Java (2011):ENTRY ID:IDS03-J:ENTRY NAME:Do not log unsanitized user input::TAXONOMY NAME:Software Fault Patterns:ENTRY ID:SFP24:ENTRY NAME:Tainted input to command::", "related_attack_patterns": "::134::41::81::93::", "notes": ""}}]}]}, {"technique_id": "T1049", "t_findings": [{"capec_id": "CAPEC-93", "c_findings": [{"cwe": "CWE-117", "cves": [{"id": "CVE-2006-4624", "score": ["V2", 2.6, "LOW"], "v2_score": 2.6, "v2_exploitability_score": 4.9, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:H/Au:N/C:N/I:P/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:H/Au:N/C:N/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "HIGH", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 2.6}, "baseSeverity": "LOW", "exploitabilityScore": 4.9, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": true}], "description": "CRLF injection vulnerability in Utils.py in Mailman before 2.1.9rc1 allows remote attackers to spoof messages in the error log and possibly trick the administrator into visiting malicious URLs via CRLF sequences in the URI.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:gnu:mailman:*:*:*:*:*:*:*:*", "published": "2006-09-07T19:04:00.000", "last_modified": "2018-10-17T21:38:43.887"}], "cwe_info": {"cwe_id": "117", "name": "Improper Output Neutralization for Logs", "weakness_abstraction": "Base", "status": "Draft", "description": "The software does not neutralize or incorrectly neutralizes output that is written to logs.", "extended_description": "This can allow an attacker to forge log entries or inject malicious content into logs. Log forging vulnerabilities occur when: Data enters an application from an untrusted source. The data is written to an application or system log file.", "related_weaknesses": "::NATURE:ChildOf:CWE ID:116:VIEW ID:1000:ORDINAL:Primary::NATURE:ChildOf:CWE ID:20:VIEW ID:700:ORDINAL:Primary::", "weakness_ordinalities": "::ORDINALITY:Primary::", "applicable_platforms": "::LANGUAGE CLASS:Language-Independent:LANGUAGE PREVALENCE:Undetermined::", "background_details": "::Applications typically use log files to store a history of events or transactions for later review, statistics gathering, or debugging. Depending on the nature of the application, the task of reviewing log files may be performed manually on an as-needed basis or automated with a tool that automatically culls logs for important events or trending information.::", "alternate_terms": "", "modes_of_introduction": "::PHASE:Implementation:NOTE:REALIZATION: This weakness is caused during implementation of an architectural security tactic.::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Integrity:SCOPE:Confidentiality:SCOPE:Availability:SCOPE:Non-Repudiation:IMPACT:Modify Application Data:IMPACT:Hide Activities:IMPACT:Execute Unauthorized Code or Commands:NOTE:Interpretation of the log files may be hindered or misdirected if an attacker can supply data to the application that is subsequently logged verbatim. In the most benign case, an attacker may be able to insert false entries into the log file by providing the application with input that includes appropriate characters. Forged or otherwise corrupted log files can be used to cover an attacker's tracks, possibly by skewing statistics, or even to implicate another party in the commission of a malicious act. If the log file is processed automatically, the attacker can render the file unusable by corrupting the format of the file or injecting unexpected characters. An attacker may inject code or other commands into the log file and take advantage of a vulnerability in the log processing utility.::", "detection_methods": "", "potential_mitigations": "::PHASE:Implementation:STRATEGY:Input Validation:DESCRIPTION:Assume all input is malicious. Use an accept known good input validation strategy, i.e., use a list of acceptable inputs that strictly conform to specifications. Reject any input that does not strictly conform to specifications, or transform it into something that does. When performing input validation, consider all potentially relevant properties, including length, type of input, the full range of acceptable values, missing or extra inputs, syntax, consistency across related fields, and conformance to business rules. As an example of business rule logic, boat may be syntactically valid because it only contains alphanumeric characters, but it is not valid if the input is only expected to contain colors such as red or blue. Do not rely exclusively on looking for malicious or malformed inputs. This is likely to miss at least one undesirable input, especially if the code's environment changes. This can give attackers enough room to bypass the intended validation. However, denylists can be useful for detecting potential attacks or determining which inputs are so malformed that they should be rejected outright.::PHASE:Implementation:STRATEGY:Output Encoding:DESCRIPTION:Use and specify an output encoding that can be handled by the downstream component that is reading the output. Common encodings include ISO-8859-1, UTF-7, and UTF-8. When an encoding is not specified, a downstream component may choose a different encoding, either by assuming a default encoding or automatically inferring which encoding is being used, which can be erroneous. When the encodings are inconsistent, the downstream component might treat some character or byte sequences as special, even if they are not special in the original encoding. Attackers might then be able to exploit this discrepancy and conduct injection attacks; they even might be able to bypass protection mechanisms that assume the original encoding is also being used by the downstream component.::PHASE:Implementation:STRATEGY:Input Validation:DESCRIPTION:Inputs should be decoded and canonicalized to the application's current internal representation before being validated (CWE-180). Make sure that the application does not decode the same input twice (CWE-174). Such errors could be used to bypass allowlist validation schemes by introducing dangerous inputs after they have been checked.::", "observed_examples": "::REFERENCE:CVE-2006-4624:DESCRIPTION:Chain: inject fake log entries with fake timestamps using CRLF injection:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2006-4624::", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "::TAXONOMY NAME:7 Pernicious Kingdoms:ENTRY NAME:Log Forging::TAXONOMY NAME:Software Fault Patterns:ENTRY ID:SFP23:ENTRY NAME:Exposed Data::TAXONOMY NAME:The CERT Oracle Secure Coding Standard for Java (2011):ENTRY ID:IDS03-J:ENTRY NAME:Do not log unsanitized user input:MAPPING FIT:Exact::TAXONOMY NAME:SEI CERT Oracle Coding Standard for Java:ENTRY ID:IDS03-J:ENTRY NAME:Do not log unsanitized user input:MAPPING FIT:Exact::", "related_attack_patterns": "::268::81::93::", "notes": ""}}, {"cwe": "CWE-75", "cves": [], "cwe_info": {"cwe_id": "75", "name": "Failure to Sanitize Special Elements into a Different Plane (Special Element Injection)", "weakness_abstraction": "Class", "status": "Draft", "description": "The software does not adequately filter user-controlled input for special elements with control implications.", "extended_description": "", "related_weaknesses": "::NATURE:ChildOf:CWE ID:74:VIEW ID:1000:ORDINAL:Primary::", "weakness_ordinalities": "", "applicable_platforms": "::LANGUAGE CLASS:Language-Independent:LANGUAGE PREVALENCE:Undetermined::", "background_details": "", "alternate_terms": "", "modes_of_introduction": "::PHASE:Architecture and Design::PHASE:Implementation:NOTE:REALIZATION: This weakness is caused during implementation of an architectural security tactic.::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Integrity:SCOPE:Confidentiality:SCOPE:Availability:IMPACT:Modify Application Data:IMPACT:Execute Unauthorized Code or Commands::", "detection_methods": "", "potential_mitigations": "::PHASE:Requirements:DESCRIPTION:Programming languages and supporting technologies might be chosen which are not subject to these issues.::PHASE:Implementation:DESCRIPTION:Utilize an appropriate mix of allowlist and denylist parsing to filter special element syntax from all input.::", "observed_examples": "", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "::TAXONOMY NAME:PLOVER:ENTRY NAME:Special Element Injection::", "related_attack_patterns": "::81::93::", "notes": ""}}, {"cwe": "CWE-150", "cves": [{"id": "CVE-2002-0542", "score": ["V2", 7.2, "HIGH"], "v2_score": 7.2, "v2_exploitability_score": 3.9, "v2_impact_score": 10.0, "v2_vector": "AV:L/AC:L/Au:N/C:C/I:C/A:C", "access_vector": "LOCAL", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:L/AC:L/Au:N/C:C/I:C/A:C", "accessVector": "LOCAL", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "COMPLETE", "integrityImpact": "COMPLETE", "availabilityImpact": "COMPLETE", "baseScore": 7.2}, "baseSeverity": "HIGH", "exploitabilityScore": 3.9, "impactScore": 10.0, "acInsufInfo": false, "obtainAllPrivilege": true, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "mail in OpenBSD 2.9 and 3.0 processes a tilde (~) escape character in a message even when it is not in interactive mode, which could allow local users to gain root privileges via calls to mail in cron.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:o:openbsd:openbsd:2.9:*:*:*:*:*:*:*", "published": "2002-07-03T04:00:00.000", "last_modified": "2016-10-18T02:20:33.870"}, {"id": "CVE-2000-0703", "score": ["V2", 7.2, "HIGH"], "v2_score": 7.2, "v2_exploitability_score": 3.9, "v2_impact_score": 10.0, "v2_vector": "AV:L/AC:L/Au:N/C:C/I:C/A:C", "access_vector": "LOCAL", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:L/AC:L/Au:N/C:C/I:C/A:C", "accessVector": "LOCAL", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "COMPLETE", "integrityImpact": "COMPLETE", "availabilityImpact": "COMPLETE", "baseScore": 7.2}, "baseSeverity": "HIGH", "exploitabilityScore": 3.9, "impactScore": 10.0, "acInsufInfo": false, "obtainAllPrivilege": true, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "suidperl (aka sperl) does not properly cleanse the escape sequence \"~!\" before calling /bin/mail to send an error report, which allows local users to gain privileges by setting the \"interactive\" environmental variable and calling suidperl with a filename that contains the escape sequence.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:larry_wall:perl:5.4.5:*:*:*:*:*:*:*", "published": "2000-10-20T04:00:00.000", "last_modified": "2008-09-10T19:05:39.807"}, {"id": "CVE-2002-0986", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:P/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "The mail function in PHP 4.x to 4.2.2 does not filter ASCII control characters from its arguments, which could allow remote attackers to modify mail message content, including mail headers, and possibly use PHP as a \"spam proxy.\"", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:php:php:3.0.18:*:*:*:*:*:*:*", "published": "2002-09-24T04:00:00.000", "last_modified": "2017-10-10T01:30:07.987"}, {"id": "CVE-2003-0020", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:P/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "Apache does not filter terminal escape sequences from its error logs, which could make it easier for attackers to insert those sequences into terminal emulators containing vulnerabilities related to escape sequences.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:apache:http_server:*:*:*:*:*:*:*:*", "published": "2003-03-18T05:00:00.000", "last_modified": "2021-06-06T11:15:11.407"}, {"id": "CVE-2003-0083", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:P/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "Apache 1.3 before 1.3.25 and Apache 2.0 before version 2.0.46 does not filter terminal escape sequences from its access logs, which could make it easier for attackers to insert those sequences into terminal emulators containing vulnerabilities related to escape sequences, a different vulnerability than CVE-2003-0020.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:apache:http_server:*:*:*:*:*:*:*:*", "published": "2003-04-02T05:00:00.000", "last_modified": "2021-07-15T20:37:29.807"}, {"id": "CVE-2003-0021", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:P/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "The \"screen dump\" feature in Eterm 0.9.1 and earlier allows attackers to overwrite arbitrary files via a certain character escape sequence when it is echoed to a user's terminal, e.g. when the user views a file containing the malicious sequence.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:michael_jennings:eterm:0.8.10:*:*:*:*:*:*:*", "published": "2003-03-03T05:00:00.000", "last_modified": "2016-10-18T02:28:25.557"}, {"id": "CVE-2003-0022", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:P/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "The \"screen dump\" feature in rxvt 2.7.8 allows attackers to overwrite arbitrary files via a certain character escape sequence when it is echoed to a user's terminal, e.g. when the user views a file containing the malicious sequence.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:rxvt:rxvt:2.6.1:*:*:*:*:*:*:*", "published": "2003-03-03T05:00:00.000", "last_modified": "2016-10-18T02:28:26.933"}, {"id": "CVE-2003-0023", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:P/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "The menuBar feature in rxvt 2.7.8 allows attackers to modify menu options and execute arbitrary commands via a certain character escape sequence that inserts the commands into the menu.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:rxvt:rxvt:2.6.1:*:*:*:*:*:*:*", "published": "2003-03-03T05:00:00.000", "last_modified": "2016-10-18T02:28:28.417"}, {"id": "CVE-2003-0063", "score": ["V2", 7.5, "HIGH"], "v2_score": 7.5, "v2_exploitability_score": 10.0, "v2_impact_score": 6.4, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 7.5}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": true, "userInteractionRequired": false}], "description": "The xterm terminal emulator in XFree86 4.2.0 and earlier allows attackers to modify the window title via a certain character escape sequence and then insert it back to the command line in the user's terminal, e.g. when the user views a file containing the malicious sequence, which could allow the attacker to execute arbitrary commands.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:xfree86_project:x11r6:4.0:*:*:*:*:*:*:*", "published": "2003-03-03T05:00:00.000", "last_modified": "2016-10-18T02:28:58.830"}, {"id": "CVE-2000-0476", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "PARTIAL", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "xterm, Eterm, and rxvt allow an attacker to cause a denial of service by embedding certain escape characters which force the window to be resized.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:michael_jennings:eterm:0.8.10:*:*:*:*:*:*:*", "published": "2000-06-01T04:00:00.000", "last_modified": "2008-09-10T19:04:44.960"}, {"id": "CVE-2001-1556", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:P/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "The log files in Apache web server contain information directly supplied by clients and does not filter or quote control characters, which could allow remote attackers to hide HTTP requests and spoof source IP addresses when logs are viewed with UNIX programs such as cat, tail, and grep.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:apache:http_server:*:*:*:*:*:*:*:*", "published": "2001-12-31T05:00:00.000", "last_modified": "2020-10-14T16:51:00.940"}], "cwe_info": {"cwe_id": "150", "name": "Improper Neutralization of Escape, Meta, or Control Sequences", "weakness_abstraction": "Variant", "status": "Incomplete", "description": "The software receives input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could be interpreted as escape, meta, or control character sequences when they are sent to a downstream component.", "extended_description": "As data is parsed, an injected/absent/malformed delimiter may cause the process to take unexpected actions.", "related_weaknesses": "::NATURE:ChildOf:CWE ID:138:VIEW ID:1000:ORDINAL:Primary::", "weakness_ordinalities": "", "applicable_platforms": "::LANGUAGE CLASS:Language-Independent:LANGUAGE PREVALENCE:Undetermined::", "background_details": "", "alternate_terms": "", "modes_of_introduction": "::PHASE:Implementation:NOTE:REALIZATION: This weakness is caused during implementation of an architectural security tactic.::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Integrity:IMPACT:Unexpected State::", "detection_methods": "", "potential_mitigations": "::PHASE::DESCRIPTION:Developers should anticipate that escape, meta and control characters/sequences will be injected/removed/manipulated in the input vectors of their software system. Use an appropriate combination of denylists and allowlists to ensure only valid, expected and appropriate input is processed by the system.::PHASE:Implementation:STRATEGY:Input Validation:DESCRIPTION:Assume all input is malicious. Use an accept known good input validation strategy, i.e., use a list of acceptable inputs that strictly conform to specifications. Reject any input that does not strictly conform to specifications, or transform it into something that does. When performing input validation, consider all potentially relevant properties, including length, type of input, the full range of acceptable values, missing or extra inputs, syntax, consistency across related fields, and conformance to business rules. As an example of business rule logic, boat may be syntactically valid because it only contains alphanumeric characters, but it is not valid if the input is only expected to contain colors such as red or blue. Do not rely exclusively on looking for malicious or malformed inputs. This is likely to miss at least one undesirable input, especially if the code's environment changes. This can give attackers enough room to bypass the intended validation. However, denylists can be useful for detecting potential attacks or determining which inputs are so malformed that they should be rejected outright.::PHASE:Implementation:STRATEGY:Output Encoding:DESCRIPTION:While it is risky to use dynamically-generated query strings, code, or commands that mix control and data together, sometimes it may be unavoidable. Properly quote arguments and escape any special characters within those arguments. The most conservative approach is to escape or filter all characters that do not pass an extremely strict allowlist (such as everything that is not alphanumeric or white space). If some special characters are still needed, such as white space, wrap each argument in quotes after the escaping/filtering step. Be careful of argument injection (CWE-88).::PHASE:Implementation:STRATEGY:Input Validation:DESCRIPTION:Inputs should be decoded and canonicalized to the application's current internal representation before being validated (CWE-180). Make sure that the application does not decode the same input twice (CWE-174). Such errors could be used to bypass allowlist validation schemes by introducing dangerous inputs after they have been checked.::", "observed_examples": "::REFERENCE:CVE-2002-0542:DESCRIPTION:The mail program processes special ~ escape sequence even when not in interactive mode.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2002-0542::REFERENCE:CVE-2000-0703:DESCRIPTION:Setuid program does not filter escape sequences before calling mail program.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2000-0703::REFERENCE:CVE-2002-0986:DESCRIPTION:Mail function does not filter control characters from arguments, allowing mail message content to be modified.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2002-0986::REFERENCE:CVE-2003-0020:DESCRIPTION:Multi-channel issue. Terminal escape sequences not filtered from log files.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2003-0020::REFERENCE:CVE-2003-0083:DESCRIPTION:Multi-channel issue. Terminal escape sequences not filtered from log files.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2003-0083::REFERENCE:CVE-2003-0021:DESCRIPTION:Terminal escape sequences not filtered by terminals when displaying files.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2003-0021::REFERENCE:CVE-2003-0022:DESCRIPTION:Terminal escape sequences not filtered by terminals when displaying files.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2003-0022::REFERENCE:CVE-2003-0023:DESCRIPTION:Terminal escape sequences not filtered by terminals when displaying files.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2003-0023::REFERENCE:CVE-2003-0063:DESCRIPTION:Terminal escape sequences not filtered by terminals when displaying files.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2003-0063::REFERENCE:CVE-2000-0476:DESCRIPTION:Terminal escape sequences not filtered by terminals when displaying files.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2000-0476::REFERENCE:CVE-2001-1556:DESCRIPTION:MFV. (multi-channel). Injection of control characters into log files that allow information hiding when using raw Unix programs to read the files.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2001-1556::", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "::TAXONOMY NAME:PLOVER:ENTRY NAME:Escape, Meta, or Control Character / Sequence::TAXONOMY NAME:The CERT Oracle Secure Coding Standard for Java (2011):ENTRY ID:IDS03-J:ENTRY NAME:Do not log unsanitized user input::TAXONOMY NAME:Software Fault Patterns:ENTRY ID:SFP24:ENTRY NAME:Tainted input to command::", "related_attack_patterns": "::134::41::81::93::", "notes": ""}}]}]}, {"technique_id": "T1619", "t_findings": [{"capec_id": "CAPEC-93", "c_findings": [{"cwe": "CWE-117", "cves": [{"id": "CVE-2006-4624", "score": ["V2", 2.6, "LOW"], "v2_score": 2.6, "v2_exploitability_score": 4.9, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:H/Au:N/C:N/I:P/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:H/Au:N/C:N/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "HIGH", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 2.6}, "baseSeverity": "LOW", "exploitabilityScore": 4.9, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": true}], "description": "CRLF injection vulnerability in Utils.py in Mailman before 2.1.9rc1 allows remote attackers to spoof messages in the error log and possibly trick the administrator into visiting malicious URLs via CRLF sequences in the URI.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:gnu:mailman:*:*:*:*:*:*:*:*", "published": "2006-09-07T19:04:00.000", "last_modified": "2018-10-17T21:38:43.887"}], "cwe_info": {"cwe_id": "117", "name": "Improper Output Neutralization for Logs", "weakness_abstraction": "Base", "status": "Draft", "description": "The software does not neutralize or incorrectly neutralizes output that is written to logs.", "extended_description": "This can allow an attacker to forge log entries or inject malicious content into logs. Log forging vulnerabilities occur when: Data enters an application from an untrusted source. The data is written to an application or system log file.", "related_weaknesses": "::NATURE:ChildOf:CWE ID:116:VIEW ID:1000:ORDINAL:Primary::NATURE:ChildOf:CWE ID:20:VIEW ID:700:ORDINAL:Primary::", "weakness_ordinalities": "::ORDINALITY:Primary::", "applicable_platforms": "::LANGUAGE CLASS:Language-Independent:LANGUAGE PREVALENCE:Undetermined::", "background_details": "::Applications typically use log files to store a history of events or transactions for later review, statistics gathering, or debugging. Depending on the nature of the application, the task of reviewing log files may be performed manually on an as-needed basis or automated with a tool that automatically culls logs for important events or trending information.::", "alternate_terms": "", "modes_of_introduction": "::PHASE:Implementation:NOTE:REALIZATION: This weakness is caused during implementation of an architectural security tactic.::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Integrity:SCOPE:Confidentiality:SCOPE:Availability:SCOPE:Non-Repudiation:IMPACT:Modify Application Data:IMPACT:Hide Activities:IMPACT:Execute Unauthorized Code or Commands:NOTE:Interpretation of the log files may be hindered or misdirected if an attacker can supply data to the application that is subsequently logged verbatim. In the most benign case, an attacker may be able to insert false entries into the log file by providing the application with input that includes appropriate characters. Forged or otherwise corrupted log files can be used to cover an attacker's tracks, possibly by skewing statistics, or even to implicate another party in the commission of a malicious act. If the log file is processed automatically, the attacker can render the file unusable by corrupting the format of the file or injecting unexpected characters. An attacker may inject code or other commands into the log file and take advantage of a vulnerability in the log processing utility.::", "detection_methods": "", "potential_mitigations": "::PHASE:Implementation:STRATEGY:Input Validation:DESCRIPTION:Assume all input is malicious. Use an accept known good input validation strategy, i.e., use a list of acceptable inputs that strictly conform to specifications. Reject any input that does not strictly conform to specifications, or transform it into something that does. When performing input validation, consider all potentially relevant properties, including length, type of input, the full range of acceptable values, missing or extra inputs, syntax, consistency across related fields, and conformance to business rules. As an example of business rule logic, boat may be syntactically valid because it only contains alphanumeric characters, but it is not valid if the input is only expected to contain colors such as red or blue. Do not rely exclusively on looking for malicious or malformed inputs. This is likely to miss at least one undesirable input, especially if the code's environment changes. This can give attackers enough room to bypass the intended validation. However, denylists can be useful for detecting potential attacks or determining which inputs are so malformed that they should be rejected outright.::PHASE:Implementation:STRATEGY:Output Encoding:DESCRIPTION:Use and specify an output encoding that can be handled by the downstream component that is reading the output. Common encodings include ISO-8859-1, UTF-7, and UTF-8. When an encoding is not specified, a downstream component may choose a different encoding, either by assuming a default encoding or automatically inferring which encoding is being used, which can be erroneous. When the encodings are inconsistent, the downstream component might treat some character or byte sequences as special, even if they are not special in the original encoding. Attackers might then be able to exploit this discrepancy and conduct injection attacks; they even might be able to bypass protection mechanisms that assume the original encoding is also being used by the downstream component.::PHASE:Implementation:STRATEGY:Input Validation:DESCRIPTION:Inputs should be decoded and canonicalized to the application's current internal representation before being validated (CWE-180). Make sure that the application does not decode the same input twice (CWE-174). Such errors could be used to bypass allowlist validation schemes by introducing dangerous inputs after they have been checked.::", "observed_examples": "::REFERENCE:CVE-2006-4624:DESCRIPTION:Chain: inject fake log entries with fake timestamps using CRLF injection:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2006-4624::", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "::TAXONOMY NAME:7 Pernicious Kingdoms:ENTRY NAME:Log Forging::TAXONOMY NAME:Software Fault Patterns:ENTRY ID:SFP23:ENTRY NAME:Exposed Data::TAXONOMY NAME:The CERT Oracle Secure Coding Standard for Java (2011):ENTRY ID:IDS03-J:ENTRY NAME:Do not log unsanitized user input:MAPPING FIT:Exact::TAXONOMY NAME:SEI CERT Oracle Coding Standard for Java:ENTRY ID:IDS03-J:ENTRY NAME:Do not log unsanitized user input:MAPPING FIT:Exact::", "related_attack_patterns": "::268::81::93::", "notes": ""}}, {"cwe": "CWE-75", "cves": [], "cwe_info": {"cwe_id": "75", "name": "Failure to Sanitize Special Elements into a Different Plane (Special Element Injection)", "weakness_abstraction": "Class", "status": "Draft", "description": "The software does not adequately filter user-controlled input for special elements with control implications.", "extended_description": "", "related_weaknesses": "::NATURE:ChildOf:CWE ID:74:VIEW ID:1000:ORDINAL:Primary::", "weakness_ordinalities": "", "applicable_platforms": "::LANGUAGE CLASS:Language-Independent:LANGUAGE PREVALENCE:Undetermined::", "background_details": "", "alternate_terms": "", "modes_of_introduction": "::PHASE:Architecture and Design::PHASE:Implementation:NOTE:REALIZATION: This weakness is caused during implementation of an architectural security tactic.::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Integrity:SCOPE:Confidentiality:SCOPE:Availability:IMPACT:Modify Application Data:IMPACT:Execute Unauthorized Code or Commands::", "detection_methods": "", "potential_mitigations": "::PHASE:Requirements:DESCRIPTION:Programming languages and supporting technologies might be chosen which are not subject to these issues.::PHASE:Implementation:DESCRIPTION:Utilize an appropriate mix of allowlist and denylist parsing to filter special element syntax from all input.::", "observed_examples": "", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "::TAXONOMY NAME:PLOVER:ENTRY NAME:Special Element Injection::", "related_attack_patterns": "::81::93::", "notes": ""}}, {"cwe": "CWE-150", "cves": [{"id": "CVE-2002-0542", "score": ["V2", 7.2, "HIGH"], "v2_score": 7.2, "v2_exploitability_score": 3.9, "v2_impact_score": 10.0, "v2_vector": "AV:L/AC:L/Au:N/C:C/I:C/A:C", "access_vector": "LOCAL", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:L/AC:L/Au:N/C:C/I:C/A:C", "accessVector": "LOCAL", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "COMPLETE", "integrityImpact": "COMPLETE", "availabilityImpact": "COMPLETE", "baseScore": 7.2}, "baseSeverity": "HIGH", "exploitabilityScore": 3.9, "impactScore": 10.0, "acInsufInfo": false, "obtainAllPrivilege": true, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "mail in OpenBSD 2.9 and 3.0 processes a tilde (~) escape character in a message even when it is not in interactive mode, which could allow local users to gain root privileges via calls to mail in cron.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:o:openbsd:openbsd:2.9:*:*:*:*:*:*:*", "published": "2002-07-03T04:00:00.000", "last_modified": "2016-10-18T02:20:33.870"}, {"id": "CVE-2000-0703", "score": ["V2", 7.2, "HIGH"], "v2_score": 7.2, "v2_exploitability_score": 3.9, "v2_impact_score": 10.0, "v2_vector": "AV:L/AC:L/Au:N/C:C/I:C/A:C", "access_vector": "LOCAL", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:L/AC:L/Au:N/C:C/I:C/A:C", "accessVector": "LOCAL", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "COMPLETE", "integrityImpact": "COMPLETE", "availabilityImpact": "COMPLETE", "baseScore": 7.2}, "baseSeverity": "HIGH", "exploitabilityScore": 3.9, "impactScore": 10.0, "acInsufInfo": false, "obtainAllPrivilege": true, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "suidperl (aka sperl) does not properly cleanse the escape sequence \"~!\" before calling /bin/mail to send an error report, which allows local users to gain privileges by setting the \"interactive\" environmental variable and calling suidperl with a filename that contains the escape sequence.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:larry_wall:perl:5.4.5:*:*:*:*:*:*:*", "published": "2000-10-20T04:00:00.000", "last_modified": "2008-09-10T19:05:39.807"}, {"id": "CVE-2002-0986", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:P/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "The mail function in PHP 4.x to 4.2.2 does not filter ASCII control characters from its arguments, which could allow remote attackers to modify mail message content, including mail headers, and possibly use PHP as a \"spam proxy.\"", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:php:php:3.0.18:*:*:*:*:*:*:*", "published": "2002-09-24T04:00:00.000", "last_modified": "2017-10-10T01:30:07.987"}, {"id": "CVE-2003-0020", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:P/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "Apache does not filter terminal escape sequences from its error logs, which could make it easier for attackers to insert those sequences into terminal emulators containing vulnerabilities related to escape sequences.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:apache:http_server:*:*:*:*:*:*:*:*", "published": "2003-03-18T05:00:00.000", "last_modified": "2021-06-06T11:15:11.407"}, {"id": "CVE-2003-0083", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:P/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "Apache 1.3 before 1.3.25 and Apache 2.0 before version 2.0.46 does not filter terminal escape sequences from its access logs, which could make it easier for attackers to insert those sequences into terminal emulators containing vulnerabilities related to escape sequences, a different vulnerability than CVE-2003-0020.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:apache:http_server:*:*:*:*:*:*:*:*", "published": "2003-04-02T05:00:00.000", "last_modified": "2021-07-15T20:37:29.807"}, {"id": "CVE-2003-0021", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:P/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "The \"screen dump\" feature in Eterm 0.9.1 and earlier allows attackers to overwrite arbitrary files via a certain character escape sequence when it is echoed to a user's terminal, e.g. when the user views a file containing the malicious sequence.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:michael_jennings:eterm:0.8.10:*:*:*:*:*:*:*", "published": "2003-03-03T05:00:00.000", "last_modified": "2016-10-18T02:28:25.557"}, {"id": "CVE-2003-0022", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:P/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "The \"screen dump\" feature in rxvt 2.7.8 allows attackers to overwrite arbitrary files via a certain character escape sequence when it is echoed to a user's terminal, e.g. when the user views a file containing the malicious sequence.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:rxvt:rxvt:2.6.1:*:*:*:*:*:*:*", "published": "2003-03-03T05:00:00.000", "last_modified": "2016-10-18T02:28:26.933"}, {"id": "CVE-2003-0023", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:P/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "The menuBar feature in rxvt 2.7.8 allows attackers to modify menu options and execute arbitrary commands via a certain character escape sequence that inserts the commands into the menu.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:rxvt:rxvt:2.6.1:*:*:*:*:*:*:*", "published": "2003-03-03T05:00:00.000", "last_modified": "2016-10-18T02:28:28.417"}, {"id": "CVE-2003-0063", "score": ["V2", 7.5, "HIGH"], "v2_score": 7.5, "v2_exploitability_score": 10.0, "v2_impact_score": 6.4, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 7.5}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": true, "userInteractionRequired": false}], "description": "The xterm terminal emulator in XFree86 4.2.0 and earlier allows attackers to modify the window title via a certain character escape sequence and then insert it back to the command line in the user's terminal, e.g. when the user views a file containing the malicious sequence, which could allow the attacker to execute arbitrary commands.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:xfree86_project:x11r6:4.0:*:*:*:*:*:*:*", "published": "2003-03-03T05:00:00.000", "last_modified": "2016-10-18T02:28:58.830"}, {"id": "CVE-2000-0476", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "PARTIAL", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "xterm, Eterm, and rxvt allow an attacker to cause a denial of service by embedding certain escape characters which force the window to be resized.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:michael_jennings:eterm:0.8.10:*:*:*:*:*:*:*", "published": "2000-06-01T04:00:00.000", "last_modified": "2008-09-10T19:04:44.960"}, {"id": "CVE-2001-1556", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:P/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "The log files in Apache web server contain information directly supplied by clients and does not filter or quote control characters, which could allow remote attackers to hide HTTP requests and spoof source IP addresses when logs are viewed with UNIX programs such as cat, tail, and grep.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:apache:http_server:*:*:*:*:*:*:*:*", "published": "2001-12-31T05:00:00.000", "last_modified": "2020-10-14T16:51:00.940"}], "cwe_info": {"cwe_id": "150", "name": "Improper Neutralization of Escape, Meta, or Control Sequences", "weakness_abstraction": "Variant", "status": "Incomplete", "description": "The software receives input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could be interpreted as escape, meta, or control character sequences when they are sent to a downstream component.", "extended_description": "As data is parsed, an injected/absent/malformed delimiter may cause the process to take unexpected actions.", "related_weaknesses": "::NATURE:ChildOf:CWE ID:138:VIEW ID:1000:ORDINAL:Primary::", "weakness_ordinalities": "", "applicable_platforms": "::LANGUAGE CLASS:Language-Independent:LANGUAGE PREVALENCE:Undetermined::", "background_details": "", "alternate_terms": "", "modes_of_introduction": "::PHASE:Implementation:NOTE:REALIZATION: This weakness is caused during implementation of an architectural security tactic.::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Integrity:IMPACT:Unexpected State::", "detection_methods": "", "potential_mitigations": "::PHASE::DESCRIPTION:Developers should anticipate that escape, meta and control characters/sequences will be injected/removed/manipulated in the input vectors of their software system. Use an appropriate combination of denylists and allowlists to ensure only valid, expected and appropriate input is processed by the system.::PHASE:Implementation:STRATEGY:Input Validation:DESCRIPTION:Assume all input is malicious. Use an accept known good input validation strategy, i.e., use a list of acceptable inputs that strictly conform to specifications. Reject any input that does not strictly conform to specifications, or transform it into something that does. When performing input validation, consider all potentially relevant properties, including length, type of input, the full range of acceptable values, missing or extra inputs, syntax, consistency across related fields, and conformance to business rules. As an example of business rule logic, boat may be syntactically valid because it only contains alphanumeric characters, but it is not valid if the input is only expected to contain colors such as red or blue. Do not rely exclusively on looking for malicious or malformed inputs. This is likely to miss at least one undesirable input, especially if the code's environment changes. This can give attackers enough room to bypass the intended validation. However, denylists can be useful for detecting potential attacks or determining which inputs are so malformed that they should be rejected outright.::PHASE:Implementation:STRATEGY:Output Encoding:DESCRIPTION:While it is risky to use dynamically-generated query strings, code, or commands that mix control and data together, sometimes it may be unavoidable. Properly quote arguments and escape any special characters within those arguments. The most conservative approach is to escape or filter all characters that do not pass an extremely strict allowlist (such as everything that is not alphanumeric or white space). If some special characters are still needed, such as white space, wrap each argument in quotes after the escaping/filtering step. Be careful of argument injection (CWE-88).::PHASE:Implementation:STRATEGY:Input Validation:DESCRIPTION:Inputs should be decoded and canonicalized to the application's current internal representation before being validated (CWE-180). Make sure that the application does not decode the same input twice (CWE-174). Such errors could be used to bypass allowlist validation schemes by introducing dangerous inputs after they have been checked.::", "observed_examples": "::REFERENCE:CVE-2002-0542:DESCRIPTION:The mail program processes special ~ escape sequence even when not in interactive mode.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2002-0542::REFERENCE:CVE-2000-0703:DESCRIPTION:Setuid program does not filter escape sequences before calling mail program.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2000-0703::REFERENCE:CVE-2002-0986:DESCRIPTION:Mail function does not filter control characters from arguments, allowing mail message content to be modified.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2002-0986::REFERENCE:CVE-2003-0020:DESCRIPTION:Multi-channel issue. Terminal escape sequences not filtered from log files.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2003-0020::REFERENCE:CVE-2003-0083:DESCRIPTION:Multi-channel issue. Terminal escape sequences not filtered from log files.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2003-0083::REFERENCE:CVE-2003-0021:DESCRIPTION:Terminal escape sequences not filtered by terminals when displaying files.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2003-0021::REFERENCE:CVE-2003-0022:DESCRIPTION:Terminal escape sequences not filtered by terminals when displaying files.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2003-0022::REFERENCE:CVE-2003-0023:DESCRIPTION:Terminal escape sequences not filtered by terminals when displaying files.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2003-0023::REFERENCE:CVE-2003-0063:DESCRIPTION:Terminal escape sequences not filtered by terminals when displaying files.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2003-0063::REFERENCE:CVE-2000-0476:DESCRIPTION:Terminal escape sequences not filtered by terminals when displaying files.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2000-0476::REFERENCE:CVE-2001-1556:DESCRIPTION:MFV. (multi-channel). Injection of control characters into log files that allow information hiding when using raw Unix programs to read the files.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2001-1556::", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "::TAXONOMY NAME:PLOVER:ENTRY NAME:Escape, Meta, or Control Character / Sequence::TAXONOMY NAME:The CERT Oracle Secure Coding Standard for Java (2011):ENTRY ID:IDS03-J:ENTRY NAME:Do not log unsanitized user input::TAXONOMY NAME:Software Fault Patterns:ENTRY ID:SFP24:ENTRY NAME:Tainted input to command::", "related_attack_patterns": "::134::41::81::93::", "notes": ""}}]}]}, {"technique_id": "T1046", "t_findings": [{"capec_id": "CAPEC-93", "c_findings": [{"cwe": "CWE-117", "cves": [{"id": "CVE-2006-4624", "score": ["V2", 2.6, "LOW"], "v2_score": 2.6, "v2_exploitability_score": 4.9, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:H/Au:N/C:N/I:P/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:H/Au:N/C:N/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "HIGH", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 2.6}, "baseSeverity": "LOW", "exploitabilityScore": 4.9, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": true}], "description": "CRLF injection vulnerability in Utils.py in Mailman before 2.1.9rc1 allows remote attackers to spoof messages in the error log and possibly trick the administrator into visiting malicious URLs via CRLF sequences in the URI.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:gnu:mailman:*:*:*:*:*:*:*:*", "published": "2006-09-07T19:04:00.000", "last_modified": "2018-10-17T21:38:43.887"}], "cwe_info": {"cwe_id": "117", "name": "Improper Output Neutralization for Logs", "weakness_abstraction": "Base", "status": "Draft", "description": "The software does not neutralize or incorrectly neutralizes output that is written to logs.", "extended_description": "This can allow an attacker to forge log entries or inject malicious content into logs. Log forging vulnerabilities occur when: Data enters an application from an untrusted source. The data is written to an application or system log file.", "related_weaknesses": "::NATURE:ChildOf:CWE ID:116:VIEW ID:1000:ORDINAL:Primary::NATURE:ChildOf:CWE ID:20:VIEW ID:700:ORDINAL:Primary::", "weakness_ordinalities": "::ORDINALITY:Primary::", "applicable_platforms": "::LANGUAGE CLASS:Language-Independent:LANGUAGE PREVALENCE:Undetermined::", "background_details": "::Applications typically use log files to store a history of events or transactions for later review, statistics gathering, or debugging. Depending on the nature of the application, the task of reviewing log files may be performed manually on an as-needed basis or automated with a tool that automatically culls logs for important events or trending information.::", "alternate_terms": "", "modes_of_introduction": "::PHASE:Implementation:NOTE:REALIZATION: This weakness is caused during implementation of an architectural security tactic.::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Integrity:SCOPE:Confidentiality:SCOPE:Availability:SCOPE:Non-Repudiation:IMPACT:Modify Application Data:IMPACT:Hide Activities:IMPACT:Execute Unauthorized Code or Commands:NOTE:Interpretation of the log files may be hindered or misdirected if an attacker can supply data to the application that is subsequently logged verbatim. In the most benign case, an attacker may be able to insert false entries into the log file by providing the application with input that includes appropriate characters. Forged or otherwise corrupted log files can be used to cover an attacker's tracks, possibly by skewing statistics, or even to implicate another party in the commission of a malicious act. If the log file is processed automatically, the attacker can render the file unusable by corrupting the format of the file or injecting unexpected characters. An attacker may inject code or other commands into the log file and take advantage of a vulnerability in the log processing utility.::", "detection_methods": "", "potential_mitigations": "::PHASE:Implementation:STRATEGY:Input Validation:DESCRIPTION:Assume all input is malicious. Use an accept known good input validation strategy, i.e., use a list of acceptable inputs that strictly conform to specifications. Reject any input that does not strictly conform to specifications, or transform it into something that does. When performing input validation, consider all potentially relevant properties, including length, type of input, the full range of acceptable values, missing or extra inputs, syntax, consistency across related fields, and conformance to business rules. As an example of business rule logic, boat may be syntactically valid because it only contains alphanumeric characters, but it is not valid if the input is only expected to contain colors such as red or blue. Do not rely exclusively on looking for malicious or malformed inputs. This is likely to miss at least one undesirable input, especially if the code's environment changes. This can give attackers enough room to bypass the intended validation. However, denylists can be useful for detecting potential attacks or determining which inputs are so malformed that they should be rejected outright.::PHASE:Implementation:STRATEGY:Output Encoding:DESCRIPTION:Use and specify an output encoding that can be handled by the downstream component that is reading the output. Common encodings include ISO-8859-1, UTF-7, and UTF-8. When an encoding is not specified, a downstream component may choose a different encoding, either by assuming a default encoding or automatically inferring which encoding is being used, which can be erroneous. When the encodings are inconsistent, the downstream component might treat some character or byte sequences as special, even if they are not special in the original encoding. Attackers might then be able to exploit this discrepancy and conduct injection attacks; they even might be able to bypass protection mechanisms that assume the original encoding is also being used by the downstream component.::PHASE:Implementation:STRATEGY:Input Validation:DESCRIPTION:Inputs should be decoded and canonicalized to the application's current internal representation before being validated (CWE-180). Make sure that the application does not decode the same input twice (CWE-174). Such errors could be used to bypass allowlist validation schemes by introducing dangerous inputs after they have been checked.::", "observed_examples": "::REFERENCE:CVE-2006-4624:DESCRIPTION:Chain: inject fake log entries with fake timestamps using CRLF injection:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2006-4624::", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "::TAXONOMY NAME:7 Pernicious Kingdoms:ENTRY NAME:Log Forging::TAXONOMY NAME:Software Fault Patterns:ENTRY ID:SFP23:ENTRY NAME:Exposed Data::TAXONOMY NAME:The CERT Oracle Secure Coding Standard for Java (2011):ENTRY ID:IDS03-J:ENTRY NAME:Do not log unsanitized user input:MAPPING FIT:Exact::TAXONOMY NAME:SEI CERT Oracle Coding Standard for Java:ENTRY ID:IDS03-J:ENTRY NAME:Do not log unsanitized user input:MAPPING FIT:Exact::", "related_attack_patterns": "::268::81::93::", "notes": ""}}, {"cwe": "CWE-75", "cves": [], "cwe_info": {"cwe_id": "75", "name": "Failure to Sanitize Special Elements into a Different Plane (Special Element Injection)", "weakness_abstraction": "Class", "status": "Draft", "description": "The software does not adequately filter user-controlled input for special elements with control implications.", "extended_description": "", "related_weaknesses": "::NATURE:ChildOf:CWE ID:74:VIEW ID:1000:ORDINAL:Primary::", "weakness_ordinalities": "", "applicable_platforms": "::LANGUAGE CLASS:Language-Independent:LANGUAGE PREVALENCE:Undetermined::", "background_details": "", "alternate_terms": "", "modes_of_introduction": "::PHASE:Architecture and Design::PHASE:Implementation:NOTE:REALIZATION: This weakness is caused during implementation of an architectural security tactic.::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Integrity:SCOPE:Confidentiality:SCOPE:Availability:IMPACT:Modify Application Data:IMPACT:Execute Unauthorized Code or Commands::", "detection_methods": "", "potential_mitigations": "::PHASE:Requirements:DESCRIPTION:Programming languages and supporting technologies might be chosen which are not subject to these issues.::PHASE:Implementation:DESCRIPTION:Utilize an appropriate mix of allowlist and denylist parsing to filter special element syntax from all input.::", "observed_examples": "", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "::TAXONOMY NAME:PLOVER:ENTRY NAME:Special Element Injection::", "related_attack_patterns": "::81::93::", "notes": ""}}, {"cwe": "CWE-150", "cves": [{"id": "CVE-2002-0542", "score": ["V2", 7.2, "HIGH"], "v2_score": 7.2, "v2_exploitability_score": 3.9, "v2_impact_score": 10.0, "v2_vector": "AV:L/AC:L/Au:N/C:C/I:C/A:C", "access_vector": "LOCAL", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:L/AC:L/Au:N/C:C/I:C/A:C", "accessVector": "LOCAL", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "COMPLETE", "integrityImpact": "COMPLETE", "availabilityImpact": "COMPLETE", "baseScore": 7.2}, "baseSeverity": "HIGH", "exploitabilityScore": 3.9, "impactScore": 10.0, "acInsufInfo": false, "obtainAllPrivilege": true, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "mail in OpenBSD 2.9 and 3.0 processes a tilde (~) escape character in a message even when it is not in interactive mode, which could allow local users to gain root privileges via calls to mail in cron.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:o:openbsd:openbsd:2.9:*:*:*:*:*:*:*", "published": "2002-07-03T04:00:00.000", "last_modified": "2016-10-18T02:20:33.870"}, {"id": "CVE-2000-0703", "score": ["V2", 7.2, "HIGH"], "v2_score": 7.2, "v2_exploitability_score": 3.9, "v2_impact_score": 10.0, "v2_vector": "AV:L/AC:L/Au:N/C:C/I:C/A:C", "access_vector": "LOCAL", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:L/AC:L/Au:N/C:C/I:C/A:C", "accessVector": "LOCAL", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "COMPLETE", "integrityImpact": "COMPLETE", "availabilityImpact": "COMPLETE", "baseScore": 7.2}, "baseSeverity": "HIGH", "exploitabilityScore": 3.9, "impactScore": 10.0, "acInsufInfo": false, "obtainAllPrivilege": true, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "suidperl (aka sperl) does not properly cleanse the escape sequence \"~!\" before calling /bin/mail to send an error report, which allows local users to gain privileges by setting the \"interactive\" environmental variable and calling suidperl with a filename that contains the escape sequence.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:larry_wall:perl:5.4.5:*:*:*:*:*:*:*", "published": "2000-10-20T04:00:00.000", "last_modified": "2008-09-10T19:05:39.807"}, {"id": "CVE-2002-0986", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:P/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "The mail function in PHP 4.x to 4.2.2 does not filter ASCII control characters from its arguments, which could allow remote attackers to modify mail message content, including mail headers, and possibly use PHP as a \"spam proxy.\"", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:php:php:3.0.18:*:*:*:*:*:*:*", "published": "2002-09-24T04:00:00.000", "last_modified": "2017-10-10T01:30:07.987"}, {"id": "CVE-2003-0020", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:P/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "Apache does not filter terminal escape sequences from its error logs, which could make it easier for attackers to insert those sequences into terminal emulators containing vulnerabilities related to escape sequences.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:apache:http_server:*:*:*:*:*:*:*:*", "published": "2003-03-18T05:00:00.000", "last_modified": "2021-06-06T11:15:11.407"}, {"id": "CVE-2003-0083", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:P/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "Apache 1.3 before 1.3.25 and Apache 2.0 before version 2.0.46 does not filter terminal escape sequences from its access logs, which could make it easier for attackers to insert those sequences into terminal emulators containing vulnerabilities related to escape sequences, a different vulnerability than CVE-2003-0020.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:apache:http_server:*:*:*:*:*:*:*:*", "published": "2003-04-02T05:00:00.000", "last_modified": "2021-07-15T20:37:29.807"}, {"id": "CVE-2003-0021", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:P/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "The \"screen dump\" feature in Eterm 0.9.1 and earlier allows attackers to overwrite arbitrary files via a certain character escape sequence when it is echoed to a user's terminal, e.g. when the user views a file containing the malicious sequence.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:michael_jennings:eterm:0.8.10:*:*:*:*:*:*:*", "published": "2003-03-03T05:00:00.000", "last_modified": "2016-10-18T02:28:25.557"}, {"id": "CVE-2003-0022", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:P/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "The \"screen dump\" feature in rxvt 2.7.8 allows attackers to overwrite arbitrary files via a certain character escape sequence when it is echoed to a user's terminal, e.g. when the user views a file containing the malicious sequence.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:rxvt:rxvt:2.6.1:*:*:*:*:*:*:*", "published": "2003-03-03T05:00:00.000", "last_modified": "2016-10-18T02:28:26.933"}, {"id": "CVE-2003-0023", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:P/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "The menuBar feature in rxvt 2.7.8 allows attackers to modify menu options and execute arbitrary commands via a certain character escape sequence that inserts the commands into the menu.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:rxvt:rxvt:2.6.1:*:*:*:*:*:*:*", "published": "2003-03-03T05:00:00.000", "last_modified": "2016-10-18T02:28:28.417"}, {"id": "CVE-2003-0063", "score": ["V2", 7.5, "HIGH"], "v2_score": 7.5, "v2_exploitability_score": 10.0, "v2_impact_score": 6.4, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 7.5}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": true, "userInteractionRequired": false}], "description": "The xterm terminal emulator in XFree86 4.2.0 and earlier allows attackers to modify the window title via a certain character escape sequence and then insert it back to the command line in the user's terminal, e.g. when the user views a file containing the malicious sequence, which could allow the attacker to execute arbitrary commands.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:xfree86_project:x11r6:4.0:*:*:*:*:*:*:*", "published": "2003-03-03T05:00:00.000", "last_modified": "2016-10-18T02:28:58.830"}, {"id": "CVE-2000-0476", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "PARTIAL", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "xterm, Eterm, and rxvt allow an attacker to cause a denial of service by embedding certain escape characters which force the window to be resized.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:michael_jennings:eterm:0.8.10:*:*:*:*:*:*:*", "published": "2000-06-01T04:00:00.000", "last_modified": "2008-09-10T19:04:44.960"}, {"id": "CVE-2001-1556", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:P/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "The log files in Apache web server contain information directly supplied by clients and does not filter or quote control characters, which could allow remote attackers to hide HTTP requests and spoof source IP addresses when logs are viewed with UNIX programs such as cat, tail, and grep.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:apache:http_server:*:*:*:*:*:*:*:*", "published": "2001-12-31T05:00:00.000", "last_modified": "2020-10-14T16:51:00.940"}], "cwe_info": {"cwe_id": "150", "name": "Improper Neutralization of Escape, Meta, or Control Sequences", "weakness_abstraction": "Variant", "status": "Incomplete", "description": "The software receives input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could be interpreted as escape, meta, or control character sequences when they are sent to a downstream component.", "extended_description": "As data is parsed, an injected/absent/malformed delimiter may cause the process to take unexpected actions.", "related_weaknesses": "::NATURE:ChildOf:CWE ID:138:VIEW ID:1000:ORDINAL:Primary::", "weakness_ordinalities": "", "applicable_platforms": "::LANGUAGE CLASS:Language-Independent:LANGUAGE PREVALENCE:Undetermined::", "background_details": "", "alternate_terms": "", "modes_of_introduction": "::PHASE:Implementation:NOTE:REALIZATION: This weakness is caused during implementation of an architectural security tactic.::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Integrity:IMPACT:Unexpected State::", "detection_methods": "", "potential_mitigations": "::PHASE::DESCRIPTION:Developers should anticipate that escape, meta and control characters/sequences will be injected/removed/manipulated in the input vectors of their software system. Use an appropriate combination of denylists and allowlists to ensure only valid, expected and appropriate input is processed by the system.::PHASE:Implementation:STRATEGY:Input Validation:DESCRIPTION:Assume all input is malicious. Use an accept known good input validation strategy, i.e., use a list of acceptable inputs that strictly conform to specifications. Reject any input that does not strictly conform to specifications, or transform it into something that does. When performing input validation, consider all potentially relevant properties, including length, type of input, the full range of acceptable values, missing or extra inputs, syntax, consistency across related fields, and conformance to business rules. As an example of business rule logic, boat may be syntactically valid because it only contains alphanumeric characters, but it is not valid if the input is only expected to contain colors such as red or blue. Do not rely exclusively on looking for malicious or malformed inputs. This is likely to miss at least one undesirable input, especially if the code's environment changes. This can give attackers enough room to bypass the intended validation. However, denylists can be useful for detecting potential attacks or determining which inputs are so malformed that they should be rejected outright.::PHASE:Implementation:STRATEGY:Output Encoding:DESCRIPTION:While it is risky to use dynamically-generated query strings, code, or commands that mix control and data together, sometimes it may be unavoidable. Properly quote arguments and escape any special characters within those arguments. The most conservative approach is to escape or filter all characters that do not pass an extremely strict allowlist (such as everything that is not alphanumeric or white space). If some special characters are still needed, such as white space, wrap each argument in quotes after the escaping/filtering step. Be careful of argument injection (CWE-88).::PHASE:Implementation:STRATEGY:Input Validation:DESCRIPTION:Inputs should be decoded and canonicalized to the application's current internal representation before being validated (CWE-180). Make sure that the application does not decode the same input twice (CWE-174). Such errors could be used to bypass allowlist validation schemes by introducing dangerous inputs after they have been checked.::", "observed_examples": "::REFERENCE:CVE-2002-0542:DESCRIPTION:The mail program processes special ~ escape sequence even when not in interactive mode.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2002-0542::REFERENCE:CVE-2000-0703:DESCRIPTION:Setuid program does not filter escape sequences before calling mail program.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2000-0703::REFERENCE:CVE-2002-0986:DESCRIPTION:Mail function does not filter control characters from arguments, allowing mail message content to be modified.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2002-0986::REFERENCE:CVE-2003-0020:DESCRIPTION:Multi-channel issue. Terminal escape sequences not filtered from log files.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2003-0020::REFERENCE:CVE-2003-0083:DESCRIPTION:Multi-channel issue. Terminal escape sequences not filtered from log files.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2003-0083::REFERENCE:CVE-2003-0021:DESCRIPTION:Terminal escape sequences not filtered by terminals when displaying files.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2003-0021::REFERENCE:CVE-2003-0022:DESCRIPTION:Terminal escape sequences not filtered by terminals when displaying files.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2003-0022::REFERENCE:CVE-2003-0023:DESCRIPTION:Terminal escape sequences not filtered by terminals when displaying files.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2003-0023::REFERENCE:CVE-2003-0063:DESCRIPTION:Terminal escape sequences not filtered by terminals when displaying files.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2003-0063::REFERENCE:CVE-2000-0476:DESCRIPTION:Terminal escape sequences not filtered by terminals when displaying files.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2000-0476::REFERENCE:CVE-2001-1556:DESCRIPTION:MFV. (multi-channel). Injection of control characters into log files that allow information hiding when using raw Unix programs to read the files.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2001-1556::", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "::TAXONOMY NAME:PLOVER:ENTRY NAME:Escape, Meta, or Control Character / Sequence::TAXONOMY NAME:The CERT Oracle Secure Coding Standard for Java (2011):ENTRY ID:IDS03-J:ENTRY NAME:Do not log unsanitized user input::TAXONOMY NAME:Software Fault Patterns:ENTRY ID:SFP24:ENTRY NAME:Tainted input to command::", "related_attack_patterns": "::134::41::81::93::", "notes": ""}}]}]}, {"technique_id": "T1036", "t_findings": [{"capec_id": "CAPEC-93", "c_findings": [{"cwe": "CWE-117", "cves": [{"id": "CVE-2006-4624", "score": ["V2", 2.6, "LOW"], "v2_score": 2.6, "v2_exploitability_score": 4.9, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:H/Au:N/C:N/I:P/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:H/Au:N/C:N/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "HIGH", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 2.6}, "baseSeverity": "LOW", "exploitabilityScore": 4.9, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": true}], "description": "CRLF injection vulnerability in Utils.py in Mailman before 2.1.9rc1 allows remote attackers to spoof messages in the error log and possibly trick the administrator into visiting malicious URLs via CRLF sequences in the URI.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:gnu:mailman:*:*:*:*:*:*:*:*", "published": "2006-09-07T19:04:00.000", "last_modified": "2018-10-17T21:38:43.887"}], "cwe_info": {"cwe_id": "117", "name": "Improper Output Neutralization for Logs", "weakness_abstraction": "Base", "status": "Draft", "description": "The software does not neutralize or incorrectly neutralizes output that is written to logs.", "extended_description": "This can allow an attacker to forge log entries or inject malicious content into logs. Log forging vulnerabilities occur when: Data enters an application from an untrusted source. The data is written to an application or system log file.", "related_weaknesses": "::NATURE:ChildOf:CWE ID:116:VIEW ID:1000:ORDINAL:Primary::NATURE:ChildOf:CWE ID:20:VIEW ID:700:ORDINAL:Primary::", "weakness_ordinalities": "::ORDINALITY:Primary::", "applicable_platforms": "::LANGUAGE CLASS:Language-Independent:LANGUAGE PREVALENCE:Undetermined::", "background_details": "::Applications typically use log files to store a history of events or transactions for later review, statistics gathering, or debugging. Depending on the nature of the application, the task of reviewing log files may be performed manually on an as-needed basis or automated with a tool that automatically culls logs for important events or trending information.::", "alternate_terms": "", "modes_of_introduction": "::PHASE:Implementation:NOTE:REALIZATION: This weakness is caused during implementation of an architectural security tactic.::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Integrity:SCOPE:Confidentiality:SCOPE:Availability:SCOPE:Non-Repudiation:IMPACT:Modify Application Data:IMPACT:Hide Activities:IMPACT:Execute Unauthorized Code or Commands:NOTE:Interpretation of the log files may be hindered or misdirected if an attacker can supply data to the application that is subsequently logged verbatim. In the most benign case, an attacker may be able to insert false entries into the log file by providing the application with input that includes appropriate characters. Forged or otherwise corrupted log files can be used to cover an attacker's tracks, possibly by skewing statistics, or even to implicate another party in the commission of a malicious act. If the log file is processed automatically, the attacker can render the file unusable by corrupting the format of the file or injecting unexpected characters. An attacker may inject code or other commands into the log file and take advantage of a vulnerability in the log processing utility.::", "detection_methods": "", "potential_mitigations": "::PHASE:Implementation:STRATEGY:Input Validation:DESCRIPTION:Assume all input is malicious. Use an accept known good input validation strategy, i.e., use a list of acceptable inputs that strictly conform to specifications. Reject any input that does not strictly conform to specifications, or transform it into something that does. When performing input validation, consider all potentially relevant properties, including length, type of input, the full range of acceptable values, missing or extra inputs, syntax, consistency across related fields, and conformance to business rules. As an example of business rule logic, boat may be syntactically valid because it only contains alphanumeric characters, but it is not valid if the input is only expected to contain colors such as red or blue. Do not rely exclusively on looking for malicious or malformed inputs. This is likely to miss at least one undesirable input, especially if the code's environment changes. This can give attackers enough room to bypass the intended validation. However, denylists can be useful for detecting potential attacks or determining which inputs are so malformed that they should be rejected outright.::PHASE:Implementation:STRATEGY:Output Encoding:DESCRIPTION:Use and specify an output encoding that can be handled by the downstream component that is reading the output. Common encodings include ISO-8859-1, UTF-7, and UTF-8. When an encoding is not specified, a downstream component may choose a different encoding, either by assuming a default encoding or automatically inferring which encoding is being used, which can be erroneous. When the encodings are inconsistent, the downstream component might treat some character or byte sequences as special, even if they are not special in the original encoding. Attackers might then be able to exploit this discrepancy and conduct injection attacks; they even might be able to bypass protection mechanisms that assume the original encoding is also being used by the downstream component.::PHASE:Implementation:STRATEGY:Input Validation:DESCRIPTION:Inputs should be decoded and canonicalized to the application's current internal representation before being validated (CWE-180). Make sure that the application does not decode the same input twice (CWE-174). Such errors could be used to bypass allowlist validation schemes by introducing dangerous inputs after they have been checked.::", "observed_examples": "::REFERENCE:CVE-2006-4624:DESCRIPTION:Chain: inject fake log entries with fake timestamps using CRLF injection:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2006-4624::", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "::TAXONOMY NAME:7 Pernicious Kingdoms:ENTRY NAME:Log Forging::TAXONOMY NAME:Software Fault Patterns:ENTRY ID:SFP23:ENTRY NAME:Exposed Data::TAXONOMY NAME:The CERT Oracle Secure Coding Standard for Java (2011):ENTRY ID:IDS03-J:ENTRY NAME:Do not log unsanitized user input:MAPPING FIT:Exact::TAXONOMY NAME:SEI CERT Oracle Coding Standard for Java:ENTRY ID:IDS03-J:ENTRY NAME:Do not log unsanitized user input:MAPPING FIT:Exact::", "related_attack_patterns": "::268::81::93::", "notes": ""}}, {"cwe": "CWE-75", "cves": [], "cwe_info": {"cwe_id": "75", "name": "Failure to Sanitize Special Elements into a Different Plane (Special Element Injection)", "weakness_abstraction": "Class", "status": "Draft", "description": "The software does not adequately filter user-controlled input for special elements with control implications.", "extended_description": "", "related_weaknesses": "::NATURE:ChildOf:CWE ID:74:VIEW ID:1000:ORDINAL:Primary::", "weakness_ordinalities": "", "applicable_platforms": "::LANGUAGE CLASS:Language-Independent:LANGUAGE PREVALENCE:Undetermined::", "background_details": "", "alternate_terms": "", "modes_of_introduction": "::PHASE:Architecture and Design::PHASE:Implementation:NOTE:REALIZATION: This weakness is caused during implementation of an architectural security tactic.::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Integrity:SCOPE:Confidentiality:SCOPE:Availability:IMPACT:Modify Application Data:IMPACT:Execute Unauthorized Code or Commands::", "detection_methods": "", "potential_mitigations": "::PHASE:Requirements:DESCRIPTION:Programming languages and supporting technologies might be chosen which are not subject to these issues.::PHASE:Implementation:DESCRIPTION:Utilize an appropriate mix of allowlist and denylist parsing to filter special element syntax from all input.::", "observed_examples": "", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "::TAXONOMY NAME:PLOVER:ENTRY NAME:Special Element Injection::", "related_attack_patterns": "::81::93::", "notes": ""}}, {"cwe": "CWE-150", "cves": [{"id": "CVE-2002-0542", "score": ["V2", 7.2, "HIGH"], "v2_score": 7.2, "v2_exploitability_score": 3.9, "v2_impact_score": 10.0, "v2_vector": "AV:L/AC:L/Au:N/C:C/I:C/A:C", "access_vector": "LOCAL", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:L/AC:L/Au:N/C:C/I:C/A:C", "accessVector": "LOCAL", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "COMPLETE", "integrityImpact": "COMPLETE", "availabilityImpact": "COMPLETE", "baseScore": 7.2}, "baseSeverity": "HIGH", "exploitabilityScore": 3.9, "impactScore": 10.0, "acInsufInfo": false, "obtainAllPrivilege": true, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "mail in OpenBSD 2.9 and 3.0 processes a tilde (~) escape character in a message even when it is not in interactive mode, which could allow local users to gain root privileges via calls to mail in cron.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:o:openbsd:openbsd:2.9:*:*:*:*:*:*:*", "published": "2002-07-03T04:00:00.000", "last_modified": "2016-10-18T02:20:33.870"}, {"id": "CVE-2000-0703", "score": ["V2", 7.2, "HIGH"], "v2_score": 7.2, "v2_exploitability_score": 3.9, "v2_impact_score": 10.0, "v2_vector": "AV:L/AC:L/Au:N/C:C/I:C/A:C", "access_vector": "LOCAL", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:L/AC:L/Au:N/C:C/I:C/A:C", "accessVector": "LOCAL", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "COMPLETE", "integrityImpact": "COMPLETE", "availabilityImpact": "COMPLETE", "baseScore": 7.2}, "baseSeverity": "HIGH", "exploitabilityScore": 3.9, "impactScore": 10.0, "acInsufInfo": false, "obtainAllPrivilege": true, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "suidperl (aka sperl) does not properly cleanse the escape sequence \"~!\" before calling /bin/mail to send an error report, which allows local users to gain privileges by setting the \"interactive\" environmental variable and calling suidperl with a filename that contains the escape sequence.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:larry_wall:perl:5.4.5:*:*:*:*:*:*:*", "published": "2000-10-20T04:00:00.000", "last_modified": "2008-09-10T19:05:39.807"}, {"id": "CVE-2002-0986", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:P/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "The mail function in PHP 4.x to 4.2.2 does not filter ASCII control characters from its arguments, which could allow remote attackers to modify mail message content, including mail headers, and possibly use PHP as a \"spam proxy.\"", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:php:php:3.0.18:*:*:*:*:*:*:*", "published": "2002-09-24T04:00:00.000", "last_modified": "2017-10-10T01:30:07.987"}, {"id": "CVE-2003-0020", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:P/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "Apache does not filter terminal escape sequences from its error logs, which could make it easier for attackers to insert those sequences into terminal emulators containing vulnerabilities related to escape sequences.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:apache:http_server:*:*:*:*:*:*:*:*", "published": "2003-03-18T05:00:00.000", "last_modified": "2021-06-06T11:15:11.407"}, {"id": "CVE-2003-0083", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:P/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "Apache 1.3 before 1.3.25 and Apache 2.0 before version 2.0.46 does not filter terminal escape sequences from its access logs, which could make it easier for attackers to insert those sequences into terminal emulators containing vulnerabilities related to escape sequences, a different vulnerability than CVE-2003-0020.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:apache:http_server:*:*:*:*:*:*:*:*", "published": "2003-04-02T05:00:00.000", "last_modified": "2021-07-15T20:37:29.807"}, {"id": "CVE-2003-0021", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:P/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "The \"screen dump\" feature in Eterm 0.9.1 and earlier allows attackers to overwrite arbitrary files via a certain character escape sequence when it is echoed to a user's terminal, e.g. when the user views a file containing the malicious sequence.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:michael_jennings:eterm:0.8.10:*:*:*:*:*:*:*", "published": "2003-03-03T05:00:00.000", "last_modified": "2016-10-18T02:28:25.557"}, {"id": "CVE-2003-0022", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:P/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "The \"screen dump\" feature in rxvt 2.7.8 allows attackers to overwrite arbitrary files via a certain character escape sequence when it is echoed to a user's terminal, e.g. when the user views a file containing the malicious sequence.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:rxvt:rxvt:2.6.1:*:*:*:*:*:*:*", "published": "2003-03-03T05:00:00.000", "last_modified": "2016-10-18T02:28:26.933"}, {"id": "CVE-2003-0023", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:P/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "The menuBar feature in rxvt 2.7.8 allows attackers to modify menu options and execute arbitrary commands via a certain character escape sequence that inserts the commands into the menu.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:rxvt:rxvt:2.6.1:*:*:*:*:*:*:*", "published": "2003-03-03T05:00:00.000", "last_modified": "2016-10-18T02:28:28.417"}, {"id": "CVE-2003-0063", "score": ["V2", 7.5, "HIGH"], "v2_score": 7.5, "v2_exploitability_score": 10.0, "v2_impact_score": 6.4, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 7.5}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": true, "userInteractionRequired": false}], "description": "The xterm terminal emulator in XFree86 4.2.0 and earlier allows attackers to modify the window title via a certain character escape sequence and then insert it back to the command line in the user's terminal, e.g. when the user views a file containing the malicious sequence, which could allow the attacker to execute arbitrary commands.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:xfree86_project:x11r6:4.0:*:*:*:*:*:*:*", "published": "2003-03-03T05:00:00.000", "last_modified": "2016-10-18T02:28:58.830"}, {"id": "CVE-2000-0476", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "PARTIAL", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "xterm, Eterm, and rxvt allow an attacker to cause a denial of service by embedding certain escape characters which force the window to be resized.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:michael_jennings:eterm:0.8.10:*:*:*:*:*:*:*", "published": "2000-06-01T04:00:00.000", "last_modified": "2008-09-10T19:04:44.960"}, {"id": "CVE-2001-1556", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:P/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "The log files in Apache web server contain information directly supplied by clients and does not filter or quote control characters, which could allow remote attackers to hide HTTP requests and spoof source IP addresses when logs are viewed with UNIX programs such as cat, tail, and grep.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:apache:http_server:*:*:*:*:*:*:*:*", "published": "2001-12-31T05:00:00.000", "last_modified": "2020-10-14T16:51:00.940"}], "cwe_info": {"cwe_id": "150", "name": "Improper Neutralization of Escape, Meta, or Control Sequences", "weakness_abstraction": "Variant", "status": "Incomplete", "description": "The software receives input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could be interpreted as escape, meta, or control character sequences when they are sent to a downstream component.", "extended_description": "As data is parsed, an injected/absent/malformed delimiter may cause the process to take unexpected actions.", "related_weaknesses": "::NATURE:ChildOf:CWE ID:138:VIEW ID:1000:ORDINAL:Primary::", "weakness_ordinalities": "", "applicable_platforms": "::LANGUAGE CLASS:Language-Independent:LANGUAGE PREVALENCE:Undetermined::", "background_details": "", "alternate_terms": "", "modes_of_introduction": "::PHASE:Implementation:NOTE:REALIZATION: This weakness is caused during implementation of an architectural security tactic.::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Integrity:IMPACT:Unexpected State::", "detection_methods": "", "potential_mitigations": "::PHASE::DESCRIPTION:Developers should anticipate that escape, meta and control characters/sequences will be injected/removed/manipulated in the input vectors of their software system. Use an appropriate combination of denylists and allowlists to ensure only valid, expected and appropriate input is processed by the system.::PHASE:Implementation:STRATEGY:Input Validation:DESCRIPTION:Assume all input is malicious. Use an accept known good input validation strategy, i.e., use a list of acceptable inputs that strictly conform to specifications. Reject any input that does not strictly conform to specifications, or transform it into something that does. When performing input validation, consider all potentially relevant properties, including length, type of input, the full range of acceptable values, missing or extra inputs, syntax, consistency across related fields, and conformance to business rules. As an example of business rule logic, boat may be syntactically valid because it only contains alphanumeric characters, but it is not valid if the input is only expected to contain colors such as red or blue. Do not rely exclusively on looking for malicious or malformed inputs. This is likely to miss at least one undesirable input, especially if the code's environment changes. This can give attackers enough room to bypass the intended validation. However, denylists can be useful for detecting potential attacks or determining which inputs are so malformed that they should be rejected outright.::PHASE:Implementation:STRATEGY:Output Encoding:DESCRIPTION:While it is risky to use dynamically-generated query strings, code, or commands that mix control and data together, sometimes it may be unavoidable. Properly quote arguments and escape any special characters within those arguments. The most conservative approach is to escape or filter all characters that do not pass an extremely strict allowlist (such as everything that is not alphanumeric or white space). If some special characters are still needed, such as white space, wrap each argument in quotes after the escaping/filtering step. Be careful of argument injection (CWE-88).::PHASE:Implementation:STRATEGY:Input Validation:DESCRIPTION:Inputs should be decoded and canonicalized to the application's current internal representation before being validated (CWE-180). Make sure that the application does not decode the same input twice (CWE-174). Such errors could be used to bypass allowlist validation schemes by introducing dangerous inputs after they have been checked.::", "observed_examples": "::REFERENCE:CVE-2002-0542:DESCRIPTION:The mail program processes special ~ escape sequence even when not in interactive mode.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2002-0542::REFERENCE:CVE-2000-0703:DESCRIPTION:Setuid program does not filter escape sequences before calling mail program.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2000-0703::REFERENCE:CVE-2002-0986:DESCRIPTION:Mail function does not filter control characters from arguments, allowing mail message content to be modified.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2002-0986::REFERENCE:CVE-2003-0020:DESCRIPTION:Multi-channel issue. Terminal escape sequences not filtered from log files.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2003-0020::REFERENCE:CVE-2003-0083:DESCRIPTION:Multi-channel issue. Terminal escape sequences not filtered from log files.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2003-0083::REFERENCE:CVE-2003-0021:DESCRIPTION:Terminal escape sequences not filtered by terminals when displaying files.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2003-0021::REFERENCE:CVE-2003-0022:DESCRIPTION:Terminal escape sequences not filtered by terminals when displaying files.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2003-0022::REFERENCE:CVE-2003-0023:DESCRIPTION:Terminal escape sequences not filtered by terminals when displaying files.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2003-0023::REFERENCE:CVE-2003-0063:DESCRIPTION:Terminal escape sequences not filtered by terminals when displaying files.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2003-0063::REFERENCE:CVE-2000-0476:DESCRIPTION:Terminal escape sequences not filtered by terminals when displaying files.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2000-0476::REFERENCE:CVE-2001-1556:DESCRIPTION:MFV. (multi-channel). Injection of control characters into log files that allow information hiding when using raw Unix programs to read the files.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2001-1556::", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "::TAXONOMY NAME:PLOVER:ENTRY NAME:Escape, Meta, or Control Character / Sequence::TAXONOMY NAME:The CERT Oracle Secure Coding Standard for Java (2011):ENTRY ID:IDS03-J:ENTRY NAME:Do not log unsanitized user input::TAXONOMY NAME:Software Fault Patterns:ENTRY ID:SFP24:ENTRY NAME:Tainted input to command::", "related_attack_patterns": "::134::41::81::93::", "notes": ""}}]}]}, {"technique_id": "T1496", "t_findings": [{"capec_id": "CAPEC-93", "c_findings": [{"cwe": "CWE-117", "cves": [{"id": "CVE-2006-4624", "score": ["V2", 2.6, "LOW"], "v2_score": 2.6, "v2_exploitability_score": 4.9, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:H/Au:N/C:N/I:P/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:H/Au:N/C:N/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "HIGH", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 2.6}, "baseSeverity": "LOW", "exploitabilityScore": 4.9, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": true}], "description": "CRLF injection vulnerability in Utils.py in Mailman before 2.1.9rc1 allows remote attackers to spoof messages in the error log and possibly trick the administrator into visiting malicious URLs via CRLF sequences in the URI.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:gnu:mailman:*:*:*:*:*:*:*:*", "published": "2006-09-07T19:04:00.000", "last_modified": "2018-10-17T21:38:43.887"}], "cwe_info": {"cwe_id": "117", "name": "Improper Output Neutralization for Logs", "weakness_abstraction": "Base", "status": "Draft", "description": "The software does not neutralize or incorrectly neutralizes output that is written to logs.", "extended_description": "This can allow an attacker to forge log entries or inject malicious content into logs. Log forging vulnerabilities occur when: Data enters an application from an untrusted source. The data is written to an application or system log file.", "related_weaknesses": "::NATURE:ChildOf:CWE ID:116:VIEW ID:1000:ORDINAL:Primary::NATURE:ChildOf:CWE ID:20:VIEW ID:700:ORDINAL:Primary::", "weakness_ordinalities": "::ORDINALITY:Primary::", "applicable_platforms": "::LANGUAGE CLASS:Language-Independent:LANGUAGE PREVALENCE:Undetermined::", "background_details": "::Applications typically use log files to store a history of events or transactions for later review, statistics gathering, or debugging. Depending on the nature of the application, the task of reviewing log files may be performed manually on an as-needed basis or automated with a tool that automatically culls logs for important events or trending information.::", "alternate_terms": "", "modes_of_introduction": "::PHASE:Implementation:NOTE:REALIZATION: This weakness is caused during implementation of an architectural security tactic.::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Integrity:SCOPE:Confidentiality:SCOPE:Availability:SCOPE:Non-Repudiation:IMPACT:Modify Application Data:IMPACT:Hide Activities:IMPACT:Execute Unauthorized Code or Commands:NOTE:Interpretation of the log files may be hindered or misdirected if an attacker can supply data to the application that is subsequently logged verbatim. In the most benign case, an attacker may be able to insert false entries into the log file by providing the application with input that includes appropriate characters. Forged or otherwise corrupted log files can be used to cover an attacker's tracks, possibly by skewing statistics, or even to implicate another party in the commission of a malicious act. If the log file is processed automatically, the attacker can render the file unusable by corrupting the format of the file or injecting unexpected characters. An attacker may inject code or other commands into the log file and take advantage of a vulnerability in the log processing utility.::", "detection_methods": "", "potential_mitigations": "::PHASE:Implementation:STRATEGY:Input Validation:DESCRIPTION:Assume all input is malicious. Use an accept known good input validation strategy, i.e., use a list of acceptable inputs that strictly conform to specifications. Reject any input that does not strictly conform to specifications, or transform it into something that does. When performing input validation, consider all potentially relevant properties, including length, type of input, the full range of acceptable values, missing or extra inputs, syntax, consistency across related fields, and conformance to business rules. As an example of business rule logic, boat may be syntactically valid because it only contains alphanumeric characters, but it is not valid if the input is only expected to contain colors such as red or blue. Do not rely exclusively on looking for malicious or malformed inputs. This is likely to miss at least one undesirable input, especially if the code's environment changes. This can give attackers enough room to bypass the intended validation. However, denylists can be useful for detecting potential attacks or determining which inputs are so malformed that they should be rejected outright.::PHASE:Implementation:STRATEGY:Output Encoding:DESCRIPTION:Use and specify an output encoding that can be handled by the downstream component that is reading the output. Common encodings include ISO-8859-1, UTF-7, and UTF-8. When an encoding is not specified, a downstream component may choose a different encoding, either by assuming a default encoding or automatically inferring which encoding is being used, which can be erroneous. When the encodings are inconsistent, the downstream component might treat some character or byte sequences as special, even if they are not special in the original encoding. Attackers might then be able to exploit this discrepancy and conduct injection attacks; they even might be able to bypass protection mechanisms that assume the original encoding is also being used by the downstream component.::PHASE:Implementation:STRATEGY:Input Validation:DESCRIPTION:Inputs should be decoded and canonicalized to the application's current internal representation before being validated (CWE-180). Make sure that the application does not decode the same input twice (CWE-174). Such errors could be used to bypass allowlist validation schemes by introducing dangerous inputs after they have been checked.::", "observed_examples": "::REFERENCE:CVE-2006-4624:DESCRIPTION:Chain: inject fake log entries with fake timestamps using CRLF injection:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2006-4624::", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "::TAXONOMY NAME:7 Pernicious Kingdoms:ENTRY NAME:Log Forging::TAXONOMY NAME:Software Fault Patterns:ENTRY ID:SFP23:ENTRY NAME:Exposed Data::TAXONOMY NAME:The CERT Oracle Secure Coding Standard for Java (2011):ENTRY ID:IDS03-J:ENTRY NAME:Do not log unsanitized user input:MAPPING FIT:Exact::TAXONOMY NAME:SEI CERT Oracle Coding Standard for Java:ENTRY ID:IDS03-J:ENTRY NAME:Do not log unsanitized user input:MAPPING FIT:Exact::", "related_attack_patterns": "::268::81::93::", "notes": ""}}, {"cwe": "CWE-75", "cves": [], "cwe_info": {"cwe_id": "75", "name": "Failure to Sanitize Special Elements into a Different Plane (Special Element Injection)", "weakness_abstraction": "Class", "status": "Draft", "description": "The software does not adequately filter user-controlled input for special elements with control implications.", "extended_description": "", "related_weaknesses": "::NATURE:ChildOf:CWE ID:74:VIEW ID:1000:ORDINAL:Primary::", "weakness_ordinalities": "", "applicable_platforms": "::LANGUAGE CLASS:Language-Independent:LANGUAGE PREVALENCE:Undetermined::", "background_details": "", "alternate_terms": "", "modes_of_introduction": "::PHASE:Architecture and Design::PHASE:Implementation:NOTE:REALIZATION: This weakness is caused during implementation of an architectural security tactic.::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Integrity:SCOPE:Confidentiality:SCOPE:Availability:IMPACT:Modify Application Data:IMPACT:Execute Unauthorized Code or Commands::", "detection_methods": "", "potential_mitigations": "::PHASE:Requirements:DESCRIPTION:Programming languages and supporting technologies might be chosen which are not subject to these issues.::PHASE:Implementation:DESCRIPTION:Utilize an appropriate mix of allowlist and denylist parsing to filter special element syntax from all input.::", "observed_examples": "", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "::TAXONOMY NAME:PLOVER:ENTRY NAME:Special Element Injection::", "related_attack_patterns": "::81::93::", "notes": ""}}, {"cwe": "CWE-150", "cves": [{"id": "CVE-2002-0542", "score": ["V2", 7.2, "HIGH"], "v2_score": 7.2, "v2_exploitability_score": 3.9, "v2_impact_score": 10.0, "v2_vector": "AV:L/AC:L/Au:N/C:C/I:C/A:C", "access_vector": "LOCAL", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:L/AC:L/Au:N/C:C/I:C/A:C", "accessVector": "LOCAL", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "COMPLETE", "integrityImpact": "COMPLETE", "availabilityImpact": "COMPLETE", "baseScore": 7.2}, "baseSeverity": "HIGH", "exploitabilityScore": 3.9, "impactScore": 10.0, "acInsufInfo": false, "obtainAllPrivilege": true, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "mail in OpenBSD 2.9 and 3.0 processes a tilde (~) escape character in a message even when it is not in interactive mode, which could allow local users to gain root privileges via calls to mail in cron.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:o:openbsd:openbsd:2.9:*:*:*:*:*:*:*", "published": "2002-07-03T04:00:00.000", "last_modified": "2016-10-18T02:20:33.870"}, {"id": "CVE-2000-0703", "score": ["V2", 7.2, "HIGH"], "v2_score": 7.2, "v2_exploitability_score": 3.9, "v2_impact_score": 10.0, "v2_vector": "AV:L/AC:L/Au:N/C:C/I:C/A:C", "access_vector": "LOCAL", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:L/AC:L/Au:N/C:C/I:C/A:C", "accessVector": "LOCAL", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "COMPLETE", "integrityImpact": "COMPLETE", "availabilityImpact": "COMPLETE", "baseScore": 7.2}, "baseSeverity": "HIGH", "exploitabilityScore": 3.9, "impactScore": 10.0, "acInsufInfo": false, "obtainAllPrivilege": true, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "suidperl (aka sperl) does not properly cleanse the escape sequence \"~!\" before calling /bin/mail to send an error report, which allows local users to gain privileges by setting the \"interactive\" environmental variable and calling suidperl with a filename that contains the escape sequence.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:larry_wall:perl:5.4.5:*:*:*:*:*:*:*", "published": "2000-10-20T04:00:00.000", "last_modified": "2008-09-10T19:05:39.807"}, {"id": "CVE-2002-0986", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:P/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "The mail function in PHP 4.x to 4.2.2 does not filter ASCII control characters from its arguments, which could allow remote attackers to modify mail message content, including mail headers, and possibly use PHP as a \"spam proxy.\"", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:php:php:3.0.18:*:*:*:*:*:*:*", "published": "2002-09-24T04:00:00.000", "last_modified": "2017-10-10T01:30:07.987"}, {"id": "CVE-2003-0020", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:P/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "Apache does not filter terminal escape sequences from its error logs, which could make it easier for attackers to insert those sequences into terminal emulators containing vulnerabilities related to escape sequences.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:apache:http_server:*:*:*:*:*:*:*:*", "published": "2003-03-18T05:00:00.000", "last_modified": "2021-06-06T11:15:11.407"}, {"id": "CVE-2003-0083", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:P/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "Apache 1.3 before 1.3.25 and Apache 2.0 before version 2.0.46 does not filter terminal escape sequences from its access logs, which could make it easier for attackers to insert those sequences into terminal emulators containing vulnerabilities related to escape sequences, a different vulnerability than CVE-2003-0020.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:apache:http_server:*:*:*:*:*:*:*:*", "published": "2003-04-02T05:00:00.000", "last_modified": "2021-07-15T20:37:29.807"}, {"id": "CVE-2003-0021", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:P/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "The \"screen dump\" feature in Eterm 0.9.1 and earlier allows attackers to overwrite arbitrary files via a certain character escape sequence when it is echoed to a user's terminal, e.g. when the user views a file containing the malicious sequence.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:michael_jennings:eterm:0.8.10:*:*:*:*:*:*:*", "published": "2003-03-03T05:00:00.000", "last_modified": "2016-10-18T02:28:25.557"}, {"id": "CVE-2003-0022", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:P/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "The \"screen dump\" feature in rxvt 2.7.8 allows attackers to overwrite arbitrary files via a certain character escape sequence when it is echoed to a user's terminal, e.g. when the user views a file containing the malicious sequence.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:rxvt:rxvt:2.6.1:*:*:*:*:*:*:*", "published": "2003-03-03T05:00:00.000", "last_modified": "2016-10-18T02:28:26.933"}, {"id": "CVE-2003-0023", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:P/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "The menuBar feature in rxvt 2.7.8 allows attackers to modify menu options and execute arbitrary commands via a certain character escape sequence that inserts the commands into the menu.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:rxvt:rxvt:2.6.1:*:*:*:*:*:*:*", "published": "2003-03-03T05:00:00.000", "last_modified": "2016-10-18T02:28:28.417"}, {"id": "CVE-2003-0063", "score": ["V2", 7.5, "HIGH"], "v2_score": 7.5, "v2_exploitability_score": 10.0, "v2_impact_score": 6.4, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 7.5}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": true, "userInteractionRequired": false}], "description": "The xterm terminal emulator in XFree86 4.2.0 and earlier allows attackers to modify the window title via a certain character escape sequence and then insert it back to the command line in the user's terminal, e.g. when the user views a file containing the malicious sequence, which could allow the attacker to execute arbitrary commands.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:xfree86_project:x11r6:4.0:*:*:*:*:*:*:*", "published": "2003-03-03T05:00:00.000", "last_modified": "2016-10-18T02:28:58.830"}, {"id": "CVE-2000-0476", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "PARTIAL", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "xterm, Eterm, and rxvt allow an attacker to cause a denial of service by embedding certain escape characters which force the window to be resized.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:michael_jennings:eterm:0.8.10:*:*:*:*:*:*:*", "published": "2000-06-01T04:00:00.000", "last_modified": "2008-09-10T19:04:44.960"}, {"id": "CVE-2001-1556", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:P/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "The log files in Apache web server contain information directly supplied by clients and does not filter or quote control characters, which could allow remote attackers to hide HTTP requests and spoof source IP addresses when logs are viewed with UNIX programs such as cat, tail, and grep.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:apache:http_server:*:*:*:*:*:*:*:*", "published": "2001-12-31T05:00:00.000", "last_modified": "2020-10-14T16:51:00.940"}], "cwe_info": {"cwe_id": "150", "name": "Improper Neutralization of Escape, Meta, or Control Sequences", "weakness_abstraction": "Variant", "status": "Incomplete", "description": "The software receives input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could be interpreted as escape, meta, or control character sequences when they are sent to a downstream component.", "extended_description": "As data is parsed, an injected/absent/malformed delimiter may cause the process to take unexpected actions.", "related_weaknesses": "::NATURE:ChildOf:CWE ID:138:VIEW ID:1000:ORDINAL:Primary::", "weakness_ordinalities": "", "applicable_platforms": "::LANGUAGE CLASS:Language-Independent:LANGUAGE PREVALENCE:Undetermined::", "background_details": "", "alternate_terms": "", "modes_of_introduction": "::PHASE:Implementation:NOTE:REALIZATION: This weakness is caused during implementation of an architectural security tactic.::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Integrity:IMPACT:Unexpected State::", "detection_methods": "", "potential_mitigations": "::PHASE::DESCRIPTION:Developers should anticipate that escape, meta and control characters/sequences will be injected/removed/manipulated in the input vectors of their software system. Use an appropriate combination of denylists and allowlists to ensure only valid, expected and appropriate input is processed by the system.::PHASE:Implementation:STRATEGY:Input Validation:DESCRIPTION:Assume all input is malicious. Use an accept known good input validation strategy, i.e., use a list of acceptable inputs that strictly conform to specifications. Reject any input that does not strictly conform to specifications, or transform it into something that does. When performing input validation, consider all potentially relevant properties, including length, type of input, the full range of acceptable values, missing or extra inputs, syntax, consistency across related fields, and conformance to business rules. As an example of business rule logic, boat may be syntactically valid because it only contains alphanumeric characters, but it is not valid if the input is only expected to contain colors such as red or blue. Do not rely exclusively on looking for malicious or malformed inputs. This is likely to miss at least one undesirable input, especially if the code's environment changes. This can give attackers enough room to bypass the intended validation. However, denylists can be useful for detecting potential attacks or determining which inputs are so malformed that they should be rejected outright.::PHASE:Implementation:STRATEGY:Output Encoding:DESCRIPTION:While it is risky to use dynamically-generated query strings, code, or commands that mix control and data together, sometimes it may be unavoidable. Properly quote arguments and escape any special characters within those arguments. The most conservative approach is to escape or filter all characters that do not pass an extremely strict allowlist (such as everything that is not alphanumeric or white space). If some special characters are still needed, such as white space, wrap each argument in quotes after the escaping/filtering step. Be careful of argument injection (CWE-88).::PHASE:Implementation:STRATEGY:Input Validation:DESCRIPTION:Inputs should be decoded and canonicalized to the application's current internal representation before being validated (CWE-180). Make sure that the application does not decode the same input twice (CWE-174). Such errors could be used to bypass allowlist validation schemes by introducing dangerous inputs after they have been checked.::", "observed_examples": "::REFERENCE:CVE-2002-0542:DESCRIPTION:The mail program processes special ~ escape sequence even when not in interactive mode.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2002-0542::REFERENCE:CVE-2000-0703:DESCRIPTION:Setuid program does not filter escape sequences before calling mail program.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2000-0703::REFERENCE:CVE-2002-0986:DESCRIPTION:Mail function does not filter control characters from arguments, allowing mail message content to be modified.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2002-0986::REFERENCE:CVE-2003-0020:DESCRIPTION:Multi-channel issue. Terminal escape sequences not filtered from log files.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2003-0020::REFERENCE:CVE-2003-0083:DESCRIPTION:Multi-channel issue. Terminal escape sequences not filtered from log files.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2003-0083::REFERENCE:CVE-2003-0021:DESCRIPTION:Terminal escape sequences not filtered by terminals when displaying files.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2003-0021::REFERENCE:CVE-2003-0022:DESCRIPTION:Terminal escape sequences not filtered by terminals when displaying files.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2003-0022::REFERENCE:CVE-2003-0023:DESCRIPTION:Terminal escape sequences not filtered by terminals when displaying files.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2003-0023::REFERENCE:CVE-2003-0063:DESCRIPTION:Terminal escape sequences not filtered by terminals when displaying files.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2003-0063::REFERENCE:CVE-2000-0476:DESCRIPTION:Terminal escape sequences not filtered by terminals when displaying files.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2000-0476::REFERENCE:CVE-2001-1556:DESCRIPTION:MFV. (multi-channel). Injection of control characters into log files that allow information hiding when using raw Unix programs to read the files.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2001-1556::", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "::TAXONOMY NAME:PLOVER:ENTRY NAME:Escape, Meta, or Control Character / Sequence::TAXONOMY NAME:The CERT Oracle Secure Coding Standard for Java (2011):ENTRY ID:IDS03-J:ENTRY NAME:Do not log unsanitized user input::TAXONOMY NAME:Software Fault Patterns:ENTRY ID:SFP24:ENTRY NAME:Tainted input to command::", "related_attack_patterns": "::134::41::81::93::", "notes": ""}}]}]}, {"technique_id": "T1542", "t_findings": [{"capec_id": "CAPEC-93", "c_findings": [{"cwe": "CWE-117", "cves": [{"id": "CVE-2006-4624", "score": ["V2", 2.6, "LOW"], "v2_score": 2.6, "v2_exploitability_score": 4.9, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:H/Au:N/C:N/I:P/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:H/Au:N/C:N/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "HIGH", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 2.6}, "baseSeverity": "LOW", "exploitabilityScore": 4.9, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": true}], "description": "CRLF injection vulnerability in Utils.py in Mailman before 2.1.9rc1 allows remote attackers to spoof messages in the error log and possibly trick the administrator into visiting malicious URLs via CRLF sequences in the URI.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:gnu:mailman:*:*:*:*:*:*:*:*", "published": "2006-09-07T19:04:00.000", "last_modified": "2018-10-17T21:38:43.887"}], "cwe_info": {"cwe_id": "117", "name": "Improper Output Neutralization for Logs", "weakness_abstraction": "Base", "status": "Draft", "description": "The software does not neutralize or incorrectly neutralizes output that is written to logs.", "extended_description": "This can allow an attacker to forge log entries or inject malicious content into logs. Log forging vulnerabilities occur when: Data enters an application from an untrusted source. The data is written to an application or system log file.", "related_weaknesses": "::NATURE:ChildOf:CWE ID:116:VIEW ID:1000:ORDINAL:Primary::NATURE:ChildOf:CWE ID:20:VIEW ID:700:ORDINAL:Primary::", "weakness_ordinalities": "::ORDINALITY:Primary::", "applicable_platforms": "::LANGUAGE CLASS:Language-Independent:LANGUAGE PREVALENCE:Undetermined::", "background_details": "::Applications typically use log files to store a history of events or transactions for later review, statistics gathering, or debugging. Depending on the nature of the application, the task of reviewing log files may be performed manually on an as-needed basis or automated with a tool that automatically culls logs for important events or trending information.::", "alternate_terms": "", "modes_of_introduction": "::PHASE:Implementation:NOTE:REALIZATION: This weakness is caused during implementation of an architectural security tactic.::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Integrity:SCOPE:Confidentiality:SCOPE:Availability:SCOPE:Non-Repudiation:IMPACT:Modify Application Data:IMPACT:Hide Activities:IMPACT:Execute Unauthorized Code or Commands:NOTE:Interpretation of the log files may be hindered or misdirected if an attacker can supply data to the application that is subsequently logged verbatim. In the most benign case, an attacker may be able to insert false entries into the log file by providing the application with input that includes appropriate characters. Forged or otherwise corrupted log files can be used to cover an attacker's tracks, possibly by skewing statistics, or even to implicate another party in the commission of a malicious act. If the log file is processed automatically, the attacker can render the file unusable by corrupting the format of the file or injecting unexpected characters. An attacker may inject code or other commands into the log file and take advantage of a vulnerability in the log processing utility.::", "detection_methods": "", "potential_mitigations": "::PHASE:Implementation:STRATEGY:Input Validation:DESCRIPTION:Assume all input is malicious. Use an accept known good input validation strategy, i.e., use a list of acceptable inputs that strictly conform to specifications. Reject any input that does not strictly conform to specifications, or transform it into something that does. When performing input validation, consider all potentially relevant properties, including length, type of input, the full range of acceptable values, missing or extra inputs, syntax, consistency across related fields, and conformance to business rules. As an example of business rule logic, boat may be syntactically valid because it only contains alphanumeric characters, but it is not valid if the input is only expected to contain colors such as red or blue. Do not rely exclusively on looking for malicious or malformed inputs. This is likely to miss at least one undesirable input, especially if the code's environment changes. This can give attackers enough room to bypass the intended validation. However, denylists can be useful for detecting potential attacks or determining which inputs are so malformed that they should be rejected outright.::PHASE:Implementation:STRATEGY:Output Encoding:DESCRIPTION:Use and specify an output encoding that can be handled by the downstream component that is reading the output. Common encodings include ISO-8859-1, UTF-7, and UTF-8. When an encoding is not specified, a downstream component may choose a different encoding, either by assuming a default encoding or automatically inferring which encoding is being used, which can be erroneous. When the encodings are inconsistent, the downstream component might treat some character or byte sequences as special, even if they are not special in the original encoding. Attackers might then be able to exploit this discrepancy and conduct injection attacks; they even might be able to bypass protection mechanisms that assume the original encoding is also being used by the downstream component.::PHASE:Implementation:STRATEGY:Input Validation:DESCRIPTION:Inputs should be decoded and canonicalized to the application's current internal representation before being validated (CWE-180). Make sure that the application does not decode the same input twice (CWE-174). Such errors could be used to bypass allowlist validation schemes by introducing dangerous inputs after they have been checked.::", "observed_examples": "::REFERENCE:CVE-2006-4624:DESCRIPTION:Chain: inject fake log entries with fake timestamps using CRLF injection:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2006-4624::", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "::TAXONOMY NAME:7 Pernicious Kingdoms:ENTRY NAME:Log Forging::TAXONOMY NAME:Software Fault Patterns:ENTRY ID:SFP23:ENTRY NAME:Exposed Data::TAXONOMY NAME:The CERT Oracle Secure Coding Standard for Java (2011):ENTRY ID:IDS03-J:ENTRY NAME:Do not log unsanitized user input:MAPPING FIT:Exact::TAXONOMY NAME:SEI CERT Oracle Coding Standard for Java:ENTRY ID:IDS03-J:ENTRY NAME:Do not log unsanitized user input:MAPPING FIT:Exact::", "related_attack_patterns": "::268::81::93::", "notes": ""}}, {"cwe": "CWE-75", "cves": [], "cwe_info": {"cwe_id": "75", "name": "Failure to Sanitize Special Elements into a Different Plane (Special Element Injection)", "weakness_abstraction": "Class", "status": "Draft", "description": "The software does not adequately filter user-controlled input for special elements with control implications.", "extended_description": "", "related_weaknesses": "::NATURE:ChildOf:CWE ID:74:VIEW ID:1000:ORDINAL:Primary::", "weakness_ordinalities": "", "applicable_platforms": "::LANGUAGE CLASS:Language-Independent:LANGUAGE PREVALENCE:Undetermined::", "background_details": "", "alternate_terms": "", "modes_of_introduction": "::PHASE:Architecture and Design::PHASE:Implementation:NOTE:REALIZATION: This weakness is caused during implementation of an architectural security tactic.::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Integrity:SCOPE:Confidentiality:SCOPE:Availability:IMPACT:Modify Application Data:IMPACT:Execute Unauthorized Code or Commands::", "detection_methods": "", "potential_mitigations": "::PHASE:Requirements:DESCRIPTION:Programming languages and supporting technologies might be chosen which are not subject to these issues.::PHASE:Implementation:DESCRIPTION:Utilize an appropriate mix of allowlist and denylist parsing to filter special element syntax from all input.::", "observed_examples": "", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "::TAXONOMY NAME:PLOVER:ENTRY NAME:Special Element Injection::", "related_attack_patterns": "::81::93::", "notes": ""}}, {"cwe": "CWE-150", "cves": [{"id": "CVE-2002-0542", "score": ["V2", 7.2, "HIGH"], "v2_score": 7.2, "v2_exploitability_score": 3.9, "v2_impact_score": 10.0, "v2_vector": "AV:L/AC:L/Au:N/C:C/I:C/A:C", "access_vector": "LOCAL", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:L/AC:L/Au:N/C:C/I:C/A:C", "accessVector": "LOCAL", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "COMPLETE", "integrityImpact": "COMPLETE", "availabilityImpact": "COMPLETE", "baseScore": 7.2}, "baseSeverity": "HIGH", "exploitabilityScore": 3.9, "impactScore": 10.0, "acInsufInfo": false, "obtainAllPrivilege": true, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "mail in OpenBSD 2.9 and 3.0 processes a tilde (~) escape character in a message even when it is not in interactive mode, which could allow local users to gain root privileges via calls to mail in cron.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:o:openbsd:openbsd:2.9:*:*:*:*:*:*:*", "published": "2002-07-03T04:00:00.000", "last_modified": "2016-10-18T02:20:33.870"}, {"id": "CVE-2000-0703", "score": ["V2", 7.2, "HIGH"], "v2_score": 7.2, "v2_exploitability_score": 3.9, "v2_impact_score": 10.0, "v2_vector": "AV:L/AC:L/Au:N/C:C/I:C/A:C", "access_vector": "LOCAL", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:L/AC:L/Au:N/C:C/I:C/A:C", "accessVector": "LOCAL", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "COMPLETE", "integrityImpact": "COMPLETE", "availabilityImpact": "COMPLETE", "baseScore": 7.2}, "baseSeverity": "HIGH", "exploitabilityScore": 3.9, "impactScore": 10.0, "acInsufInfo": false, "obtainAllPrivilege": true, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "suidperl (aka sperl) does not properly cleanse the escape sequence \"~!\" before calling /bin/mail to send an error report, which allows local users to gain privileges by setting the \"interactive\" environmental variable and calling suidperl with a filename that contains the escape sequence.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:larry_wall:perl:5.4.5:*:*:*:*:*:*:*", "published": "2000-10-20T04:00:00.000", "last_modified": "2008-09-10T19:05:39.807"}, {"id": "CVE-2002-0986", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:P/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "The mail function in PHP 4.x to 4.2.2 does not filter ASCII control characters from its arguments, which could allow remote attackers to modify mail message content, including mail headers, and possibly use PHP as a \"spam proxy.\"", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:php:php:3.0.18:*:*:*:*:*:*:*", "published": "2002-09-24T04:00:00.000", "last_modified": "2017-10-10T01:30:07.987"}, {"id": "CVE-2003-0020", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:P/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "Apache does not filter terminal escape sequences from its error logs, which could make it easier for attackers to insert those sequences into terminal emulators containing vulnerabilities related to escape sequences.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:apache:http_server:*:*:*:*:*:*:*:*", "published": "2003-03-18T05:00:00.000", "last_modified": "2021-06-06T11:15:11.407"}, {"id": "CVE-2003-0083", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:P/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "Apache 1.3 before 1.3.25 and Apache 2.0 before version 2.0.46 does not filter terminal escape sequences from its access logs, which could make it easier for attackers to insert those sequences into terminal emulators containing vulnerabilities related to escape sequences, a different vulnerability than CVE-2003-0020.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:apache:http_server:*:*:*:*:*:*:*:*", "published": "2003-04-02T05:00:00.000", "last_modified": "2021-07-15T20:37:29.807"}, {"id": "CVE-2003-0021", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:P/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "The \"screen dump\" feature in Eterm 0.9.1 and earlier allows attackers to overwrite arbitrary files via a certain character escape sequence when it is echoed to a user's terminal, e.g. when the user views a file containing the malicious sequence.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:michael_jennings:eterm:0.8.10:*:*:*:*:*:*:*", "published": "2003-03-03T05:00:00.000", "last_modified": "2016-10-18T02:28:25.557"}, {"id": "CVE-2003-0022", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:P/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "The \"screen dump\" feature in rxvt 2.7.8 allows attackers to overwrite arbitrary files via a certain character escape sequence when it is echoed to a user's terminal, e.g. when the user views a file containing the malicious sequence.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:rxvt:rxvt:2.6.1:*:*:*:*:*:*:*", "published": "2003-03-03T05:00:00.000", "last_modified": "2016-10-18T02:28:26.933"}, {"id": "CVE-2003-0023", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:P/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "The menuBar feature in rxvt 2.7.8 allows attackers to modify menu options and execute arbitrary commands via a certain character escape sequence that inserts the commands into the menu.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:rxvt:rxvt:2.6.1:*:*:*:*:*:*:*", "published": "2003-03-03T05:00:00.000", "last_modified": "2016-10-18T02:28:28.417"}, {"id": "CVE-2003-0063", "score": ["V2", 7.5, "HIGH"], "v2_score": 7.5, "v2_exploitability_score": 10.0, "v2_impact_score": 6.4, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 7.5}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": true, "userInteractionRequired": false}], "description": "The xterm terminal emulator in XFree86 4.2.0 and earlier allows attackers to modify the window title via a certain character escape sequence and then insert it back to the command line in the user's terminal, e.g. when the user views a file containing the malicious sequence, which could allow the attacker to execute arbitrary commands.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:xfree86_project:x11r6:4.0:*:*:*:*:*:*:*", "published": "2003-03-03T05:00:00.000", "last_modified": "2016-10-18T02:28:58.830"}, {"id": "CVE-2000-0476", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "PARTIAL", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "xterm, Eterm, and rxvt allow an attacker to cause a denial of service by embedding certain escape characters which force the window to be resized.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:michael_jennings:eterm:0.8.10:*:*:*:*:*:*:*", "published": "2000-06-01T04:00:00.000", "last_modified": "2008-09-10T19:04:44.960"}, {"id": "CVE-2001-1556", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:P/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "The log files in Apache web server contain information directly supplied by clients and does not filter or quote control characters, which could allow remote attackers to hide HTTP requests and spoof source IP addresses when logs are viewed with UNIX programs such as cat, tail, and grep.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:apache:http_server:*:*:*:*:*:*:*:*", "published": "2001-12-31T05:00:00.000", "last_modified": "2020-10-14T16:51:00.940"}], "cwe_info": {"cwe_id": "150", "name": "Improper Neutralization of Escape, Meta, or Control Sequences", "weakness_abstraction": "Variant", "status": "Incomplete", "description": "The software receives input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could be interpreted as escape, meta, or control character sequences when they are sent to a downstream component.", "extended_description": "As data is parsed, an injected/absent/malformed delimiter may cause the process to take unexpected actions.", "related_weaknesses": "::NATURE:ChildOf:CWE ID:138:VIEW ID:1000:ORDINAL:Primary::", "weakness_ordinalities": "", "applicable_platforms": "::LANGUAGE CLASS:Language-Independent:LANGUAGE PREVALENCE:Undetermined::", "background_details": "", "alternate_terms": "", "modes_of_introduction": "::PHASE:Implementation:NOTE:REALIZATION: This weakness is caused during implementation of an architectural security tactic.::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Integrity:IMPACT:Unexpected State::", "detection_methods": "", "potential_mitigations": "::PHASE::DESCRIPTION:Developers should anticipate that escape, meta and control characters/sequences will be injected/removed/manipulated in the input vectors of their software system. Use an appropriate combination of denylists and allowlists to ensure only valid, expected and appropriate input is processed by the system.::PHASE:Implementation:STRATEGY:Input Validation:DESCRIPTION:Assume all input is malicious. Use an accept known good input validation strategy, i.e., use a list of acceptable inputs that strictly conform to specifications. Reject any input that does not strictly conform to specifications, or transform it into something that does. When performing input validation, consider all potentially relevant properties, including length, type of input, the full range of acceptable values, missing or extra inputs, syntax, consistency across related fields, and conformance to business rules. As an example of business rule logic, boat may be syntactically valid because it only contains alphanumeric characters, but it is not valid if the input is only expected to contain colors such as red or blue. Do not rely exclusively on looking for malicious or malformed inputs. This is likely to miss at least one undesirable input, especially if the code's environment changes. This can give attackers enough room to bypass the intended validation. However, denylists can be useful for detecting potential attacks or determining which inputs are so malformed that they should be rejected outright.::PHASE:Implementation:STRATEGY:Output Encoding:DESCRIPTION:While it is risky to use dynamically-generated query strings, code, or commands that mix control and data together, sometimes it may be unavoidable. Properly quote arguments and escape any special characters within those arguments. The most conservative approach is to escape or filter all characters that do not pass an extremely strict allowlist (such as everything that is not alphanumeric or white space). If some special characters are still needed, such as white space, wrap each argument in quotes after the escaping/filtering step. Be careful of argument injection (CWE-88).::PHASE:Implementation:STRATEGY:Input Validation:DESCRIPTION:Inputs should be decoded and canonicalized to the application's current internal representation before being validated (CWE-180). Make sure that the application does not decode the same input twice (CWE-174). Such errors could be used to bypass allowlist validation schemes by introducing dangerous inputs after they have been checked.::", "observed_examples": "::REFERENCE:CVE-2002-0542:DESCRIPTION:The mail program processes special ~ escape sequence even when not in interactive mode.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2002-0542::REFERENCE:CVE-2000-0703:DESCRIPTION:Setuid program does not filter escape sequences before calling mail program.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2000-0703::REFERENCE:CVE-2002-0986:DESCRIPTION:Mail function does not filter control characters from arguments, allowing mail message content to be modified.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2002-0986::REFERENCE:CVE-2003-0020:DESCRIPTION:Multi-channel issue. Terminal escape sequences not filtered from log files.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2003-0020::REFERENCE:CVE-2003-0083:DESCRIPTION:Multi-channel issue. Terminal escape sequences not filtered from log files.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2003-0083::REFERENCE:CVE-2003-0021:DESCRIPTION:Terminal escape sequences not filtered by terminals when displaying files.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2003-0021::REFERENCE:CVE-2003-0022:DESCRIPTION:Terminal escape sequences not filtered by terminals when displaying files.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2003-0022::REFERENCE:CVE-2003-0023:DESCRIPTION:Terminal escape sequences not filtered by terminals when displaying files.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2003-0023::REFERENCE:CVE-2003-0063:DESCRIPTION:Terminal escape sequences not filtered by terminals when displaying files.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2003-0063::REFERENCE:CVE-2000-0476:DESCRIPTION:Terminal escape sequences not filtered by terminals when displaying files.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2000-0476::REFERENCE:CVE-2001-1556:DESCRIPTION:MFV. (multi-channel). Injection of control characters into log files that allow information hiding when using raw Unix programs to read the files.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2001-1556::", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "::TAXONOMY NAME:PLOVER:ENTRY NAME:Escape, Meta, or Control Character / Sequence::TAXONOMY NAME:The CERT Oracle Secure Coding Standard for Java (2011):ENTRY ID:IDS03-J:ENTRY NAME:Do not log unsanitized user input::TAXONOMY NAME:Software Fault Patterns:ENTRY ID:SFP24:ENTRY NAME:Tainted input to command::", "related_attack_patterns": "::134::41::81::93::", "notes": ""}}]}]}, {"technique_id": "T1495", "t_findings": [{"capec_id": "CAPEC-93", "c_findings": [{"cwe": "CWE-117", "cves": [{"id": "CVE-2006-4624", "score": ["V2", 2.6, "LOW"], "v2_score": 2.6, "v2_exploitability_score": 4.9, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:H/Au:N/C:N/I:P/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:H/Au:N/C:N/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "HIGH", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 2.6}, "baseSeverity": "LOW", "exploitabilityScore": 4.9, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": true}], "description": "CRLF injection vulnerability in Utils.py in Mailman before 2.1.9rc1 allows remote attackers to spoof messages in the error log and possibly trick the administrator into visiting malicious URLs via CRLF sequences in the URI.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:gnu:mailman:*:*:*:*:*:*:*:*", "published": "2006-09-07T19:04:00.000", "last_modified": "2018-10-17T21:38:43.887"}], "cwe_info": {"cwe_id": "117", "name": "Improper Output Neutralization for Logs", "weakness_abstraction": "Base", "status": "Draft", "description": "The software does not neutralize or incorrectly neutralizes output that is written to logs.", "extended_description": "This can allow an attacker to forge log entries or inject malicious content into logs. Log forging vulnerabilities occur when: Data enters an application from an untrusted source. The data is written to an application or system log file.", "related_weaknesses": "::NATURE:ChildOf:CWE ID:116:VIEW ID:1000:ORDINAL:Primary::NATURE:ChildOf:CWE ID:20:VIEW ID:700:ORDINAL:Primary::", "weakness_ordinalities": "::ORDINALITY:Primary::", "applicable_platforms": "::LANGUAGE CLASS:Language-Independent:LANGUAGE PREVALENCE:Undetermined::", "background_details": "::Applications typically use log files to store a history of events or transactions for later review, statistics gathering, or debugging. Depending on the nature of the application, the task of reviewing log files may be performed manually on an as-needed basis or automated with a tool that automatically culls logs for important events or trending information.::", "alternate_terms": "", "modes_of_introduction": "::PHASE:Implementation:NOTE:REALIZATION: This weakness is caused during implementation of an architectural security tactic.::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Integrity:SCOPE:Confidentiality:SCOPE:Availability:SCOPE:Non-Repudiation:IMPACT:Modify Application Data:IMPACT:Hide Activities:IMPACT:Execute Unauthorized Code or Commands:NOTE:Interpretation of the log files may be hindered or misdirected if an attacker can supply data to the application that is subsequently logged verbatim. In the most benign case, an attacker may be able to insert false entries into the log file by providing the application with input that includes appropriate characters. Forged or otherwise corrupted log files can be used to cover an attacker's tracks, possibly by skewing statistics, or even to implicate another party in the commission of a malicious act. If the log file is processed automatically, the attacker can render the file unusable by corrupting the format of the file or injecting unexpected characters. An attacker may inject code or other commands into the log file and take advantage of a vulnerability in the log processing utility.::", "detection_methods": "", "potential_mitigations": "::PHASE:Implementation:STRATEGY:Input Validation:DESCRIPTION:Assume all input is malicious. Use an accept known good input validation strategy, i.e., use a list of acceptable inputs that strictly conform to specifications. Reject any input that does not strictly conform to specifications, or transform it into something that does. When performing input validation, consider all potentially relevant properties, including length, type of input, the full range of acceptable values, missing or extra inputs, syntax, consistency across related fields, and conformance to business rules. As an example of business rule logic, boat may be syntactically valid because it only contains alphanumeric characters, but it is not valid if the input is only expected to contain colors such as red or blue. Do not rely exclusively on looking for malicious or malformed inputs. This is likely to miss at least one undesirable input, especially if the code's environment changes. This can give attackers enough room to bypass the intended validation. However, denylists can be useful for detecting potential attacks or determining which inputs are so malformed that they should be rejected outright.::PHASE:Implementation:STRATEGY:Output Encoding:DESCRIPTION:Use and specify an output encoding that can be handled by the downstream component that is reading the output. Common encodings include ISO-8859-1, UTF-7, and UTF-8. When an encoding is not specified, a downstream component may choose a different encoding, either by assuming a default encoding or automatically inferring which encoding is being used, which can be erroneous. When the encodings are inconsistent, the downstream component might treat some character or byte sequences as special, even if they are not special in the original encoding. Attackers might then be able to exploit this discrepancy and conduct injection attacks; they even might be able to bypass protection mechanisms that assume the original encoding is also being used by the downstream component.::PHASE:Implementation:STRATEGY:Input Validation:DESCRIPTION:Inputs should be decoded and canonicalized to the application's current internal representation before being validated (CWE-180). Make sure that the application does not decode the same input twice (CWE-174). Such errors could be used to bypass allowlist validation schemes by introducing dangerous inputs after they have been checked.::", "observed_examples": "::REFERENCE:CVE-2006-4624:DESCRIPTION:Chain: inject fake log entries with fake timestamps using CRLF injection:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2006-4624::", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "::TAXONOMY NAME:7 Pernicious Kingdoms:ENTRY NAME:Log Forging::TAXONOMY NAME:Software Fault Patterns:ENTRY ID:SFP23:ENTRY NAME:Exposed Data::TAXONOMY NAME:The CERT Oracle Secure Coding Standard for Java (2011):ENTRY ID:IDS03-J:ENTRY NAME:Do not log unsanitized user input:MAPPING FIT:Exact::TAXONOMY NAME:SEI CERT Oracle Coding Standard for Java:ENTRY ID:IDS03-J:ENTRY NAME:Do not log unsanitized user input:MAPPING FIT:Exact::", "related_attack_patterns": "::268::81::93::", "notes": ""}}, {"cwe": "CWE-75", "cves": [], "cwe_info": {"cwe_id": "75", "name": "Failure to Sanitize Special Elements into a Different Plane (Special Element Injection)", "weakness_abstraction": "Class", "status": "Draft", "description": "The software does not adequately filter user-controlled input for special elements with control implications.", "extended_description": "", "related_weaknesses": "::NATURE:ChildOf:CWE ID:74:VIEW ID:1000:ORDINAL:Primary::", "weakness_ordinalities": "", "applicable_platforms": "::LANGUAGE CLASS:Language-Independent:LANGUAGE PREVALENCE:Undetermined::", "background_details": "", "alternate_terms": "", "modes_of_introduction": "::PHASE:Architecture and Design::PHASE:Implementation:NOTE:REALIZATION: This weakness is caused during implementation of an architectural security tactic.::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Integrity:SCOPE:Confidentiality:SCOPE:Availability:IMPACT:Modify Application Data:IMPACT:Execute Unauthorized Code or Commands::", "detection_methods": "", "potential_mitigations": "::PHASE:Requirements:DESCRIPTION:Programming languages and supporting technologies might be chosen which are not subject to these issues.::PHASE:Implementation:DESCRIPTION:Utilize an appropriate mix of allowlist and denylist parsing to filter special element syntax from all input.::", "observed_examples": "", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "::TAXONOMY NAME:PLOVER:ENTRY NAME:Special Element Injection::", "related_attack_patterns": "::81::93::", "notes": ""}}, {"cwe": "CWE-150", "cves": [{"id": "CVE-2002-0542", "score": ["V2", 7.2, "HIGH"], "v2_score": 7.2, "v2_exploitability_score": 3.9, "v2_impact_score": 10.0, "v2_vector": "AV:L/AC:L/Au:N/C:C/I:C/A:C", "access_vector": "LOCAL", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:L/AC:L/Au:N/C:C/I:C/A:C", "accessVector": "LOCAL", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "COMPLETE", "integrityImpact": "COMPLETE", "availabilityImpact": "COMPLETE", "baseScore": 7.2}, "baseSeverity": "HIGH", "exploitabilityScore": 3.9, "impactScore": 10.0, "acInsufInfo": false, "obtainAllPrivilege": true, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "mail in OpenBSD 2.9 and 3.0 processes a tilde (~) escape character in a message even when it is not in interactive mode, which could allow local users to gain root privileges via calls to mail in cron.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:o:openbsd:openbsd:2.9:*:*:*:*:*:*:*", "published": "2002-07-03T04:00:00.000", "last_modified": "2016-10-18T02:20:33.870"}, {"id": "CVE-2000-0703", "score": ["V2", 7.2, "HIGH"], "v2_score": 7.2, "v2_exploitability_score": 3.9, "v2_impact_score": 10.0, "v2_vector": "AV:L/AC:L/Au:N/C:C/I:C/A:C", "access_vector": "LOCAL", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:L/AC:L/Au:N/C:C/I:C/A:C", "accessVector": "LOCAL", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "COMPLETE", "integrityImpact": "COMPLETE", "availabilityImpact": "COMPLETE", "baseScore": 7.2}, "baseSeverity": "HIGH", "exploitabilityScore": 3.9, "impactScore": 10.0, "acInsufInfo": false, "obtainAllPrivilege": true, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "suidperl (aka sperl) does not properly cleanse the escape sequence \"~!\" before calling /bin/mail to send an error report, which allows local users to gain privileges by setting the \"interactive\" environmental variable and calling suidperl with a filename that contains the escape sequence.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:larry_wall:perl:5.4.5:*:*:*:*:*:*:*", "published": "2000-10-20T04:00:00.000", "last_modified": "2008-09-10T19:05:39.807"}, {"id": "CVE-2002-0986", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:P/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "The mail function in PHP 4.x to 4.2.2 does not filter ASCII control characters from its arguments, which could allow remote attackers to modify mail message content, including mail headers, and possibly use PHP as a \"spam proxy.\"", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:php:php:3.0.18:*:*:*:*:*:*:*", "published": "2002-09-24T04:00:00.000", "last_modified": "2017-10-10T01:30:07.987"}, {"id": "CVE-2003-0020", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:P/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "Apache does not filter terminal escape sequences from its error logs, which could make it easier for attackers to insert those sequences into terminal emulators containing vulnerabilities related to escape sequences.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:apache:http_server:*:*:*:*:*:*:*:*", "published": "2003-03-18T05:00:00.000", "last_modified": "2021-06-06T11:15:11.407"}, {"id": "CVE-2003-0083", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:P/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "Apache 1.3 before 1.3.25 and Apache 2.0 before version 2.0.46 does not filter terminal escape sequences from its access logs, which could make it easier for attackers to insert those sequences into terminal emulators containing vulnerabilities related to escape sequences, a different vulnerability than CVE-2003-0020.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:apache:http_server:*:*:*:*:*:*:*:*", "published": "2003-04-02T05:00:00.000", "last_modified": "2021-07-15T20:37:29.807"}, {"id": "CVE-2003-0021", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:P/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "The \"screen dump\" feature in Eterm 0.9.1 and earlier allows attackers to overwrite arbitrary files via a certain character escape sequence when it is echoed to a user's terminal, e.g. when the user views a file containing the malicious sequence.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:michael_jennings:eterm:0.8.10:*:*:*:*:*:*:*", "published": "2003-03-03T05:00:00.000", "last_modified": "2016-10-18T02:28:25.557"}, {"id": "CVE-2003-0022", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:P/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "The \"screen dump\" feature in rxvt 2.7.8 allows attackers to overwrite arbitrary files via a certain character escape sequence when it is echoed to a user's terminal, e.g. when the user views a file containing the malicious sequence.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:rxvt:rxvt:2.6.1:*:*:*:*:*:*:*", "published": "2003-03-03T05:00:00.000", "last_modified": "2016-10-18T02:28:26.933"}, {"id": "CVE-2003-0023", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:P/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "The menuBar feature in rxvt 2.7.8 allows attackers to modify menu options and execute arbitrary commands via a certain character escape sequence that inserts the commands into the menu.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:rxvt:rxvt:2.6.1:*:*:*:*:*:*:*", "published": "2003-03-03T05:00:00.000", "last_modified": "2016-10-18T02:28:28.417"}, {"id": "CVE-2003-0063", "score": ["V2", 7.5, "HIGH"], "v2_score": 7.5, "v2_exploitability_score": 10.0, "v2_impact_score": 6.4, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 7.5}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": true, "userInteractionRequired": false}], "description": "The xterm terminal emulator in XFree86 4.2.0 and earlier allows attackers to modify the window title via a certain character escape sequence and then insert it back to the command line in the user's terminal, e.g. when the user views a file containing the malicious sequence, which could allow the attacker to execute arbitrary commands.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:xfree86_project:x11r6:4.0:*:*:*:*:*:*:*", "published": "2003-03-03T05:00:00.000", "last_modified": "2016-10-18T02:28:58.830"}, {"id": "CVE-2000-0476", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "PARTIAL", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "xterm, Eterm, and rxvt allow an attacker to cause a denial of service by embedding certain escape characters which force the window to be resized.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:michael_jennings:eterm:0.8.10:*:*:*:*:*:*:*", "published": "2000-06-01T04:00:00.000", "last_modified": "2008-09-10T19:04:44.960"}, {"id": "CVE-2001-1556", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:P/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "The log files in Apache web server contain information directly supplied by clients and does not filter or quote control characters, which could allow remote attackers to hide HTTP requests and spoof source IP addresses when logs are viewed with UNIX programs such as cat, tail, and grep.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:apache:http_server:*:*:*:*:*:*:*:*", "published": "2001-12-31T05:00:00.000", "last_modified": "2020-10-14T16:51:00.940"}], "cwe_info": {"cwe_id": "150", "name": "Improper Neutralization of Escape, Meta, or Control Sequences", "weakness_abstraction": "Variant", "status": "Incomplete", "description": "The software receives input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could be interpreted as escape, meta, or control character sequences when they are sent to a downstream component.", "extended_description": "As data is parsed, an injected/absent/malformed delimiter may cause the process to take unexpected actions.", "related_weaknesses": "::NATURE:ChildOf:CWE ID:138:VIEW ID:1000:ORDINAL:Primary::", "weakness_ordinalities": "", "applicable_platforms": "::LANGUAGE CLASS:Language-Independent:LANGUAGE PREVALENCE:Undetermined::", "background_details": "", "alternate_terms": "", "modes_of_introduction": "::PHASE:Implementation:NOTE:REALIZATION: This weakness is caused during implementation of an architectural security tactic.::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Integrity:IMPACT:Unexpected State::", "detection_methods": "", "potential_mitigations": "::PHASE::DESCRIPTION:Developers should anticipate that escape, meta and control characters/sequences will be injected/removed/manipulated in the input vectors of their software system. Use an appropriate combination of denylists and allowlists to ensure only valid, expected and appropriate input is processed by the system.::PHASE:Implementation:STRATEGY:Input Validation:DESCRIPTION:Assume all input is malicious. Use an accept known good input validation strategy, i.e., use a list of acceptable inputs that strictly conform to specifications. Reject any input that does not strictly conform to specifications, or transform it into something that does. When performing input validation, consider all potentially relevant properties, including length, type of input, the full range of acceptable values, missing or extra inputs, syntax, consistency across related fields, and conformance to business rules. As an example of business rule logic, boat may be syntactically valid because it only contains alphanumeric characters, but it is not valid if the input is only expected to contain colors such as red or blue. Do not rely exclusively on looking for malicious or malformed inputs. This is likely to miss at least one undesirable input, especially if the code's environment changes. This can give attackers enough room to bypass the intended validation. However, denylists can be useful for detecting potential attacks or determining which inputs are so malformed that they should be rejected outright.::PHASE:Implementation:STRATEGY:Output Encoding:DESCRIPTION:While it is risky to use dynamically-generated query strings, code, or commands that mix control and data together, sometimes it may be unavoidable. Properly quote arguments and escape any special characters within those arguments. The most conservative approach is to escape or filter all characters that do not pass an extremely strict allowlist (such as everything that is not alphanumeric or white space). If some special characters are still needed, such as white space, wrap each argument in quotes after the escaping/filtering step. Be careful of argument injection (CWE-88).::PHASE:Implementation:STRATEGY:Input Validation:DESCRIPTION:Inputs should be decoded and canonicalized to the application's current internal representation before being validated (CWE-180). Make sure that the application does not decode the same input twice (CWE-174). Such errors could be used to bypass allowlist validation schemes by introducing dangerous inputs after they have been checked.::", "observed_examples": "::REFERENCE:CVE-2002-0542:DESCRIPTION:The mail program processes special ~ escape sequence even when not in interactive mode.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2002-0542::REFERENCE:CVE-2000-0703:DESCRIPTION:Setuid program does not filter escape sequences before calling mail program.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2000-0703::REFERENCE:CVE-2002-0986:DESCRIPTION:Mail function does not filter control characters from arguments, allowing mail message content to be modified.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2002-0986::REFERENCE:CVE-2003-0020:DESCRIPTION:Multi-channel issue. Terminal escape sequences not filtered from log files.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2003-0020::REFERENCE:CVE-2003-0083:DESCRIPTION:Multi-channel issue. Terminal escape sequences not filtered from log files.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2003-0083::REFERENCE:CVE-2003-0021:DESCRIPTION:Terminal escape sequences not filtered by terminals when displaying files.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2003-0021::REFERENCE:CVE-2003-0022:DESCRIPTION:Terminal escape sequences not filtered by terminals when displaying files.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2003-0022::REFERENCE:CVE-2003-0023:DESCRIPTION:Terminal escape sequences not filtered by terminals when displaying files.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2003-0023::REFERENCE:CVE-2003-0063:DESCRIPTION:Terminal escape sequences not filtered by terminals when displaying files.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2003-0063::REFERENCE:CVE-2000-0476:DESCRIPTION:Terminal escape sequences not filtered by terminals when displaying files.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2000-0476::REFERENCE:CVE-2001-1556:DESCRIPTION:MFV. (multi-channel). Injection of control characters into log files that allow information hiding when using raw Unix programs to read the files.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2001-1556::", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "::TAXONOMY NAME:PLOVER:ENTRY NAME:Escape, Meta, or Control Character / Sequence::TAXONOMY NAME:The CERT Oracle Secure Coding Standard for Java (2011):ENTRY ID:IDS03-J:ENTRY NAME:Do not log unsanitized user input::TAXONOMY NAME:Software Fault Patterns:ENTRY ID:SFP24:ENTRY NAME:Tainted input to command::", "related_attack_patterns": "::134::41::81::93::", "notes": ""}}]}]}, {"technique_id": "T1016", "t_findings": [{"capec_id": "CAPEC-309", "c_findings": [{"cwe": "CWE-200", "cves": [{"id": "CVE-2001-1483", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "One-Time Passwords In Everything (a.k.a OPIE) 2.32 and 2.4 allows remote attackers to determine the existence of user accounts by printing random passphrases if the user account does not exist and static passphrases if the user account does exist.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:nrl:opie:2.4:*:*:*:*:*:*:*", "published": "2001-12-31T05:00:00.000", "last_modified": "2017-07-11T01:29:09.633"}, {"id": "CVE-2001-1528", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "AmTote International homebet program returns different error messages when invalid account numbers and PIN codes are provided, which allows remote attackers to determine the existence of valid account numbers via a brute force attack.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:amtote_international:homebet:*:*:*:*:*:*:*:*", "published": "2001-12-31T05:00:00.000", "last_modified": "2008-09-05T20:26:47.077"}, {"id": "CVE-2004-2150", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "Nettica Corporation INTELLIPEER Email Server 1.01 displays different error messages for valid and invalid account names, which allows remote attackers to determine valid account names.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:nettica_corporation:intellipeer_email_server:1.01:*:*:*:*:*:*:*", "published": "2004-12-31T05:00:00.000", "last_modified": "2017-07-11T01:31:40.187"}, {"id": "CVE-2005-1205", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "The Telnet client for Microsoft Windows XP, Windows Server 2003, and Windows Services for UNIX allows remote attackers to read sensitive environment variables via the NEW-ENVIRON option with a SEND ENV_USERVAR command.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:o:microsoft:windows_2003_server:enterprise:*:64-bit:*:*:*:*:*", "published": "2005-06-14T04:00:00.000", "last_modified": "2018-10-12T21:36:25.407"}, {"id": "CVE-2002-1725", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "phpimageview.php in PHPImageView 1.0 allows remote attackers to obtain sensitive information via the pw=show option, which invokes the phpinfo function.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:onlinetools.org:phpimageview:1.0:*:*:*:*:*:*:*", "published": "2002-12-31T05:00:00.000", "last_modified": "2017-07-11T01:29:22.477"}, {"id": "CVE-2002-0515", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "IPFilter 3.4.25 and earlier sets a different TTL when a port is being filtered than when it is not being filtered, which allows remote attackers to identify filtered ports by comparing TTLs.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:darren_reed:ipfilter:3.4.25:*:*:*:*:*:*:*", "published": "2002-08-12T04:00:00.000", "last_modified": "2008-09-05T20:28:13.790"}, {"id": "CVE-2004-0778", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "CVS 1.11.x before 1.11.17, and 1.12.x before 1.12.9, allows remote attackers to determine the existence of arbitrary files and directories via the -X command for an alternate history file, which causes different error messages to be returned.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:cvs:cvs:1.10.6:*:*:*:*:*:*:*", "published": "2004-10-20T04:00:00.000", "last_modified": "2017-10-11T01:29:33.310"}, {"id": "CVE-2000-1117", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "The Extended Control List (ECL) feature of the Java Virtual Machine (JVM) in Lotus Notes Client R5 allows malicious web site operators to determine the existence of files on the client by measuring delays in the execution of the getSystemResource method.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:ibm:lotus_notes:r5:*:*:*:*:*:*:*", "published": "2001-01-09T05:00:00.000", "last_modified": "2008-09-10T19:06:39.507"}, {"id": "CVE-2003-0190", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "OpenSSH-portable (OpenSSH) 3.6.1p1 and earlier with PAM support enabled immediately sends an error message when a user does not exist, which allows remote attackers to determine valid usernames via a timing attack.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:openbsd:openssh:3.4p1:*:*:*:*:*:*:*", "published": "2003-05-12T04:00:00.000", "last_modified": "2022-12-13T12:15:11.477"}, {"id": "CVE-2008-2049", "score": ["V2", 4.3, "MEDIUM"], "v2_score": 4.3, "v2_exploitability_score": 8.6, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:M/Au:N/C:P/I:N/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:M/Au:N/C:P/I:N/A:N", "accessVector": "NETWORK", "accessComplexity": "MEDIUM", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 4.3}, "baseSeverity": "MEDIUM", "exploitabilityScore": 8.6, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "The POP3 server (EPSTPOP3S.EXE) 4.22 in E-Post Mail Server 4.10 allows remote attackers to obtain sensitive information via multiple crafted APOP commands for a known POP3 account, which displays the password in a POP3 error message.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:e-post_corporation:mail_server:4.10:*:*:*:*:*:*:*", "published": "2008-05-01T19:05:00.000", "last_modified": "2017-08-08T01:30:42.823"}, {"id": "CVE-2007-5172", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "Quicksilver Forums before 1.4.1 allows remote attackers to obtain sensitive information by causing unspecified connection errors, which reveals the database password in the resulting error message.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:quicksilver_forums:quicksilver_forums:*:*:*:*:*:*:*:*", "published": "2007-10-01T20:17:00.000", "last_modified": "2017-07-29T01:33:26.287"}, {"id": "CVE-2008-4638", "score": ["V2", 4.6, "MEDIUM"], "v2_score": 4.6, "v2_exploitability_score": 3.1, "v2_impact_score": 6.9, "v2_vector": "AV:L/AC:L/Au:S/C:C/I:N/A:N", "access_vector": "LOCAL", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:L/AC:L/Au:S/C:C/I:N/A:N", "accessVector": "LOCAL", "accessComplexity": "LOW", "authentication": "SINGLE", "confidentialityImpact": "COMPLETE", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 4.6}, "baseSeverity": "MEDIUM", "exploitabilityScore": 3.1, "impactScore": 6.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "qioadmin in the Quick I/O for Database feature in Symantec Veritas File System (VxFS) on HP-UX, and before 5.0 MP3 on Solaris, Linux, and AIX, allows local users to read arbitrary files by causing qioadmin to write a file's content to standard error in an error message.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:symantec:veritas_file_system:5.0:mp2:aix:*:*:*:*:*", "published": "2008-10-21T18:00:01.037", "last_modified": "2018-10-11T20:52:23.293"}, {"id": "CVE-2007-1409", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "WordPress allows remote attackers to obtain sensitive information via a direct request for wp-admin/admin-functions.php, which reveals the path in an error message.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:wordpress:wordpress:2.0:*:*:*:*:*:*:*", "published": "2007-03-10T22:19:00.000", "last_modified": "2018-10-16T16:38:23.643"}, {"id": "CVE-2005-0603", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "viewtopic.php in phpBB 2.0.12 and earlier allows remote attackers to obtain sensitive information via a highlight parameter containing invalid regular expression syntax, which reveals the path in a PHP error message.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:phpbb_group:phpbb:2.0.0:*:*:*:*:*:*:*", "published": "2005-02-28T05:00:00.000", "last_modified": "2016-10-18T03:13:00.080"}, {"id": "CVE-2004-2268", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "PimenGest2 before 1.1.1 allows remote attackers to obtain the database password via debug information in rowLatex.inc.php.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:pimentech:pimengest2:1.10.1:*:*:*:*:*:*:*", "published": "2004-12-31T05:00:00.000", "last_modified": "2017-07-11T01:31:45.450"}, {"id": "CVE-2003-1078", "score": ["V2", 7.5, "HIGH"], "v2_score": 7.5, "v2_exploitability_score": 10.0, "v2_impact_score": 6.4, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 7.5}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": true, "userInteractionRequired": false}], "description": "The FTP client for Solaris 2.6, 7, and 8 with the debug (-d) flag enabled displays the user password on the screen during login.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:o:sun:solaris:2.6:*:*:*:*:*:*:*", "published": "2003-02-28T05:00:00.000", "last_modified": "2018-10-30T16:26:22.763"}], "cwe_info": {"cwe_id": "200", "name": "Exposure of Sensitive Information to an Unauthorized Actor", "weakness_abstraction": "Class", "status": "Draft", "description": "The product exposes sensitive information to an actor that is not explicitly authorized to have access to that information.", "extended_description": "There are many different kinds of mistakes that introduce information exposures. The severity of the error can range widely, depending on the context in which the product operates, the type of sensitive information that is revealed, and the benefits it may provide to an attacker. Some kinds of sensitive information include: private, personal information, such as personal messages, financial data, health records, geographic location, or contact details system status and environment, such as the operating system and installed packages business secrets and intellectual property network status and configuration the product's own code or internal state metadata, e.g. logging of connections or message headers indirect information, such as a discrepancy between two internal operations that can be observed by an outsider Information might be sensitive to different parties, each of which may have their own expectations for whether the information should be protected. These parties include: the product's own users people or organizations whose information is created or used by the product, even if they are not direct product users the product's administrators, including the admins of the system(s) and/or networks on which the product operates the developer Information exposures can occur in different ways: the code explicitly inserts sensitive information into resources or messages that are intentionally made accessible to unauthorized actors, but should not contain the information - i.e., the information should have been scrubbed or sanitized a different weakness or mistake indirectly inserts the sensitive information into resources, such as a web script error revealing the full system path of the program. the code manages resources that intentionally contain sensitive information, but the resources are unintentionally made accessible to unauthorized actors. In this case, the information exposure is resultant - i.e., a different weakness enabled the access to the information in the first place. It is common practice to describe any loss of confidentiality as an information exposure, but this can lead to overuse of CWE-200 in CWE mapping. From the CWE perspective, loss of confidentiality is a technical impact that can arise from dozens of different weaknesses, such as insecure file permissions or out-of-bounds read. CWE-200 and its lower-level descendants are intended to cover the mistakes that occur in behaviors that explicitly manage, store, transfer, or cleanse sensitive information.", "related_weaknesses": "::NATURE:ChildOf:CWE ID:668:VIEW ID:1000:ORDINAL:Primary::", "weakness_ordinalities": "::ORDINALITY:Primary:DESCRIPTION:Developers may insert sensitive information that they do not believe, or they might forget to remove the sensitive information after it has been processed::ORDINALITY:Resultant:DESCRIPTION:Separate mistakes or weaknesses could inadvertently make the sensitive information available to an attacker, such as in a detailed error message that can be read by an unauthorized party::", "applicable_platforms": "::LANGUAGE CLASS:Language-Independent:LANGUAGE PREVALENCE:Undetermined::TECHNOLOGY CLASS:Mobile:TECHNOLOGY PREVALENCE:Undetermined::", "background_details": "", "alternate_terms": "::TERM:Information Disclosure:DESCRIPTION:This term is frequently used in vulnerability advisories to describe a consequence or technical impact, for any vulnerability that has a loss of confidentiality. Often, CWE-200 can be misused to represent the loss of confidentiality, even when the mistake - i.e., the weakness - is not directly related to the mishandling of the information itself, such as an out-of-bounds read that accesses sensitive memory contents; here, the out-of-bounds read is the primary weakness, not the disclosure of the memory. In addition, this phrase is also used frequently in policies and legal documents, but it does not refer to any disclosure of security-relevant information.::TERM:Information Leak:DESCRIPTION:This is a frequently used term, however the leak term has multiple uses within security. In some cases it deals with the accidental exposure of information from a different weakness, but in other cases (such as memory leak), this deals with improper tracking of resources, which can lead to exhaustion. As a result, CWE is actively avoiding usage of the leak term.::", "modes_of_introduction": "::PHASE:Architecture and Design::PHASE:Implementation::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Confidentiality:IMPACT:Read Application Data::", "detection_methods": "::METHOD:Automated Static Analysis - Binary or Bytecode:DESCRIPTION:According to SOAR, the following detection techniques may be useful: Cost effective for partial coverage: Bytecode Weakness Analysis - including disassembler + source code weakness analysis Inter-application Flow Analysis:EFFECTIVENESS:SOAR Partial::METHOD:Dynamic Analysis with Automated Results Interpretation:DESCRIPTION:According to SOAR, the following detection techniques may be useful: Highly cost effective: Web Application Scanner Web Services Scanner Database Scanners:EFFECTIVENESS:High::METHOD:Dynamic Analysis with Manual Results Interpretation:DESCRIPTION:According to SOAR, the following detection techniques may be useful: Cost effective for partial coverage: Fuzz Tester Framework-based Fuzzer Automated Monitored Execution Monitored Virtual Environment - run potentially malicious code in sandbox / wrapper / virtual machine, see if it does anything suspicious:EFFECTIVENESS:SOAR Partial::METHOD:Manual Static Analysis - Source Code:DESCRIPTION:According to SOAR, the following detection techniques may be useful: Highly cost effective: Manual Source Code Review (not inspections):EFFECTIVENESS:High::METHOD:Automated Static Analysis - Source Code:DESCRIPTION:According to SOAR, the following detection techniques may be useful: Highly cost effective: Context-configured Source Code Weakness Analyzer Cost effective for partial coverage: Source code Weakness Analyzer:EFFECTIVENESS:High::METHOD:Architecture or Design Review:DESCRIPTION:According to SOAR, the following detection techniques may be useful: Highly cost effective: Formal Methods / Correct-By-Construction Cost effective for partial coverage: Attack Modeling Inspection (IEEE 1028 standard) (can apply to requirements, design, source code, etc.):EFFECTIVENESS:High::", "potential_mitigations": "::PHASE:Architecture and Design:STRATEGY:Separation of Privilege:DESCRIPTION:Compartmentalize the system to have safe areas where trust boundaries can be unambiguously drawn. Do not allow sensitive data to go outside of the trust boundary and always be careful when interfacing with a compartment outside of the safe area. Ensure that appropriate compartmentalization is built into the system design, and the compartmentalization allows for and reinforces privilege separation functionality. Architects and designers should rely on the principle of least privilege to decide the appropriate time to use privileges and the time to drop privileges.::", "observed_examples": "::REFERENCE:CVE-2001-1483:DESCRIPTION:Enumeration of valid usernames based on inconsistent responses:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2001-1483::REFERENCE:CVE-2001-1528:DESCRIPTION:Account number enumeration via inconsistent responses.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2001-1528::REFERENCE:CVE-2004-2150:DESCRIPTION:User enumeration via discrepancies in error messages.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2004-2150::REFERENCE:CVE-2005-1205:DESCRIPTION:Telnet protocol allows servers to obtain sensitive environment information from clients.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2005-1205::REFERENCE:CVE-2002-1725:DESCRIPTION:Script calls phpinfo(), revealing system configuration to web user:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2002-1725::REFERENCE:CVE-2002-0515:DESCRIPTION:Product sets a different TTL when a port is being filtered than when it is not being filtered, which allows remote attackers to identify filtered ports by comparing TTLs.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2002-0515::REFERENCE:CVE-2004-0778:DESCRIPTION:Version control system allows remote attackers to determine the existence of arbitrary files and directories via the -X command for an alternate history file, which causes different error messages to be returned.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2004-0778::REFERENCE:CVE-2000-1117:DESCRIPTION:Virtual machine allows malicious web site operators to determine the existence of files on the client by measuring delays in the execution of the getSystemResource method.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2000-1117::REFERENCE:CVE-2003-0190:DESCRIPTION:Product immediately sends an error message when a user does not exist, which allows remote attackers to determine valid usernames via a timing attack.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2003-0190::REFERENCE:CVE-2008-2049:DESCRIPTION:POP3 server reveals a password in an error message after multiple APOP commands are sent. Might be resultant from another weakness.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2008-2049::REFERENCE:CVE-2007-5172:DESCRIPTION:Program reveals password in error message if attacker can trigger certain database errors.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2007-5172::REFERENCE:CVE-2008-4638:DESCRIPTION:Composite: application running with high privileges (CWE-250) allows user to specify a restricted file to process, which generates a parsing error that leaks the contents of the file (CWE-209).:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2008-4638::REFERENCE:CVE-2007-1409:DESCRIPTION:Direct request to library file in web application triggers pathname leak in error message.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2007-1409::REFERENCE:CVE-2005-0603:DESCRIPTION:Malformed regexp syntax leads to information exposure in error message.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2005-0603::REFERENCE:CVE-2004-2268:DESCRIPTION:Password exposed in debug information.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2004-2268::REFERENCE:CVE-2003-1078:DESCRIPTION:FTP client with debug option enabled shows password to the screen.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2003-1078::", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "::TAXONOMY NAME:PLOVER:ENTRY NAME:Information Leak (information disclosure)::TAXONOMY NAME:OWASP Top Ten 2007:ENTRY ID:A6:ENTRY NAME:Information Leakage and Improper Error Handling:MAPPING FIT:CWE More Specific::TAXONOMY NAME:WASC:ENTRY ID:13:ENTRY NAME:Information Leakage::", "related_attack_patterns": "::116::13::169::22::224::285::287::290::291::292::293::294::295::296::297::298::299::300::301::302::303::304::305::306::307::308::309::310::312::313::317::318::319::320::321::322::323::324::325::326::327::328::329::330::472::497::508::573::574::575::576::577::59::60::616::643::646::651::79::", "notes": "::TYPE:Maintenance:NOTE:As a result of mapping analysis in the 2020 Top 25, this weakness is under review, since it is frequently misused in mapping to cover many problems that lead to loss of confidentiality. See Extended Decription and Alternate Terms.::"}}]}]}, {"technique_id": "T1611", "t_findings": [{"capec_id": "CAPEC-309", "c_findings": [{"cwe": "CWE-200", "cves": [{"id": "CVE-2001-1483", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "One-Time Passwords In Everything (a.k.a OPIE) 2.32 and 2.4 allows remote attackers to determine the existence of user accounts by printing random passphrases if the user account does not exist and static passphrases if the user account does exist.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:nrl:opie:2.4:*:*:*:*:*:*:*", "published": "2001-12-31T05:00:00.000", "last_modified": "2017-07-11T01:29:09.633"}, {"id": "CVE-2001-1528", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "AmTote International homebet program returns different error messages when invalid account numbers and PIN codes are provided, which allows remote attackers to determine the existence of valid account numbers via a brute force attack.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:amtote_international:homebet:*:*:*:*:*:*:*:*", "published": "2001-12-31T05:00:00.000", "last_modified": "2008-09-05T20:26:47.077"}, {"id": "CVE-2004-2150", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "Nettica Corporation INTELLIPEER Email Server 1.01 displays different error messages for valid and invalid account names, which allows remote attackers to determine valid account names.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:nettica_corporation:intellipeer_email_server:1.01:*:*:*:*:*:*:*", "published": "2004-12-31T05:00:00.000", "last_modified": "2017-07-11T01:31:40.187"}, {"id": "CVE-2005-1205", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "The Telnet client for Microsoft Windows XP, Windows Server 2003, and Windows Services for UNIX allows remote attackers to read sensitive environment variables via the NEW-ENVIRON option with a SEND ENV_USERVAR command.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:o:microsoft:windows_2003_server:enterprise:*:64-bit:*:*:*:*:*", "published": "2005-06-14T04:00:00.000", "last_modified": "2018-10-12T21:36:25.407"}, {"id": "CVE-2002-1725", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "phpimageview.php in PHPImageView 1.0 allows remote attackers to obtain sensitive information via the pw=show option, which invokes the phpinfo function.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:onlinetools.org:phpimageview:1.0:*:*:*:*:*:*:*", "published": "2002-12-31T05:00:00.000", "last_modified": "2017-07-11T01:29:22.477"}, {"id": "CVE-2002-0515", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "IPFilter 3.4.25 and earlier sets a different TTL when a port is being filtered than when it is not being filtered, which allows remote attackers to identify filtered ports by comparing TTLs.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:darren_reed:ipfilter:3.4.25:*:*:*:*:*:*:*", "published": "2002-08-12T04:00:00.000", "last_modified": "2008-09-05T20:28:13.790"}, {"id": "CVE-2004-0778", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "CVS 1.11.x before 1.11.17, and 1.12.x before 1.12.9, allows remote attackers to determine the existence of arbitrary files and directories via the -X command for an alternate history file, which causes different error messages to be returned.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:cvs:cvs:1.10.6:*:*:*:*:*:*:*", "published": "2004-10-20T04:00:00.000", "last_modified": "2017-10-11T01:29:33.310"}, {"id": "CVE-2000-1117", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "The Extended Control List (ECL) feature of the Java Virtual Machine (JVM) in Lotus Notes Client R5 allows malicious web site operators to determine the existence of files on the client by measuring delays in the execution of the getSystemResource method.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:ibm:lotus_notes:r5:*:*:*:*:*:*:*", "published": "2001-01-09T05:00:00.000", "last_modified": "2008-09-10T19:06:39.507"}, {"id": "CVE-2003-0190", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "OpenSSH-portable (OpenSSH) 3.6.1p1 and earlier with PAM support enabled immediately sends an error message when a user does not exist, which allows remote attackers to determine valid usernames via a timing attack.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:openbsd:openssh:3.4p1:*:*:*:*:*:*:*", "published": "2003-05-12T04:00:00.000", "last_modified": "2022-12-13T12:15:11.477"}, {"id": "CVE-2008-2049", "score": ["V2", 4.3, "MEDIUM"], "v2_score": 4.3, "v2_exploitability_score": 8.6, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:M/Au:N/C:P/I:N/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:M/Au:N/C:P/I:N/A:N", "accessVector": "NETWORK", "accessComplexity": "MEDIUM", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 4.3}, "baseSeverity": "MEDIUM", "exploitabilityScore": 8.6, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "The POP3 server (EPSTPOP3S.EXE) 4.22 in E-Post Mail Server 4.10 allows remote attackers to obtain sensitive information via multiple crafted APOP commands for a known POP3 account, which displays the password in a POP3 error message.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:e-post_corporation:mail_server:4.10:*:*:*:*:*:*:*", "published": "2008-05-01T19:05:00.000", "last_modified": "2017-08-08T01:30:42.823"}, {"id": "CVE-2007-5172", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "Quicksilver Forums before 1.4.1 allows remote attackers to obtain sensitive information by causing unspecified connection errors, which reveals the database password in the resulting error message.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:quicksilver_forums:quicksilver_forums:*:*:*:*:*:*:*:*", "published": "2007-10-01T20:17:00.000", "last_modified": "2017-07-29T01:33:26.287"}, {"id": "CVE-2008-4638", "score": ["V2", 4.6, "MEDIUM"], "v2_score": 4.6, "v2_exploitability_score": 3.1, "v2_impact_score": 6.9, "v2_vector": "AV:L/AC:L/Au:S/C:C/I:N/A:N", "access_vector": "LOCAL", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:L/AC:L/Au:S/C:C/I:N/A:N", "accessVector": "LOCAL", "accessComplexity": "LOW", "authentication": "SINGLE", "confidentialityImpact": "COMPLETE", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 4.6}, "baseSeverity": "MEDIUM", "exploitabilityScore": 3.1, "impactScore": 6.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "qioadmin in the Quick I/O for Database feature in Symantec Veritas File System (VxFS) on HP-UX, and before 5.0 MP3 on Solaris, Linux, and AIX, allows local users to read arbitrary files by causing qioadmin to write a file's content to standard error in an error message.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:symantec:veritas_file_system:5.0:mp2:aix:*:*:*:*:*", "published": "2008-10-21T18:00:01.037", "last_modified": "2018-10-11T20:52:23.293"}, {"id": "CVE-2007-1409", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "WordPress allows remote attackers to obtain sensitive information via a direct request for wp-admin/admin-functions.php, which reveals the path in an error message.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:wordpress:wordpress:2.0:*:*:*:*:*:*:*", "published": "2007-03-10T22:19:00.000", "last_modified": "2018-10-16T16:38:23.643"}, {"id": "CVE-2005-0603", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "viewtopic.php in phpBB 2.0.12 and earlier allows remote attackers to obtain sensitive information via a highlight parameter containing invalid regular expression syntax, which reveals the path in a PHP error message.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:phpbb_group:phpbb:2.0.0:*:*:*:*:*:*:*", "published": "2005-02-28T05:00:00.000", "last_modified": "2016-10-18T03:13:00.080"}, {"id": "CVE-2004-2268", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "PimenGest2 before 1.1.1 allows remote attackers to obtain the database password via debug information in rowLatex.inc.php.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:pimentech:pimengest2:1.10.1:*:*:*:*:*:*:*", "published": "2004-12-31T05:00:00.000", "last_modified": "2017-07-11T01:31:45.450"}, {"id": "CVE-2003-1078", "score": ["V2", 7.5, "HIGH"], "v2_score": 7.5, "v2_exploitability_score": 10.0, "v2_impact_score": 6.4, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 7.5}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": true, "userInteractionRequired": false}], "description": "The FTP client for Solaris 2.6, 7, and 8 with the debug (-d) flag enabled displays the user password on the screen during login.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:o:sun:solaris:2.6:*:*:*:*:*:*:*", "published": "2003-02-28T05:00:00.000", "last_modified": "2018-10-30T16:26:22.763"}], "cwe_info": {"cwe_id": "200", "name": "Exposure of Sensitive Information to an Unauthorized Actor", "weakness_abstraction": "Class", "status": "Draft", "description": "The product exposes sensitive information to an actor that is not explicitly authorized to have access to that information.", "extended_description": "There are many different kinds of mistakes that introduce information exposures. The severity of the error can range widely, depending on the context in which the product operates, the type of sensitive information that is revealed, and the benefits it may provide to an attacker. Some kinds of sensitive information include: private, personal information, such as personal messages, financial data, health records, geographic location, or contact details system status and environment, such as the operating system and installed packages business secrets and intellectual property network status and configuration the product's own code or internal state metadata, e.g. logging of connections or message headers indirect information, such as a discrepancy between two internal operations that can be observed by an outsider Information might be sensitive to different parties, each of which may have their own expectations for whether the information should be protected. These parties include: the product's own users people or organizations whose information is created or used by the product, even if they are not direct product users the product's administrators, including the admins of the system(s) and/or networks on which the product operates the developer Information exposures can occur in different ways: the code explicitly inserts sensitive information into resources or messages that are intentionally made accessible to unauthorized actors, but should not contain the information - i.e., the information should have been scrubbed or sanitized a different weakness or mistake indirectly inserts the sensitive information into resources, such as a web script error revealing the full system path of the program. the code manages resources that intentionally contain sensitive information, but the resources are unintentionally made accessible to unauthorized actors. In this case, the information exposure is resultant - i.e., a different weakness enabled the access to the information in the first place. It is common practice to describe any loss of confidentiality as an information exposure, but this can lead to overuse of CWE-200 in CWE mapping. From the CWE perspective, loss of confidentiality is a technical impact that can arise from dozens of different weaknesses, such as insecure file permissions or out-of-bounds read. CWE-200 and its lower-level descendants are intended to cover the mistakes that occur in behaviors that explicitly manage, store, transfer, or cleanse sensitive information.", "related_weaknesses": "::NATURE:ChildOf:CWE ID:668:VIEW ID:1000:ORDINAL:Primary::", "weakness_ordinalities": "::ORDINALITY:Primary:DESCRIPTION:Developers may insert sensitive information that they do not believe, or they might forget to remove the sensitive information after it has been processed::ORDINALITY:Resultant:DESCRIPTION:Separate mistakes or weaknesses could inadvertently make the sensitive information available to an attacker, such as in a detailed error message that can be read by an unauthorized party::", "applicable_platforms": "::LANGUAGE CLASS:Language-Independent:LANGUAGE PREVALENCE:Undetermined::TECHNOLOGY CLASS:Mobile:TECHNOLOGY PREVALENCE:Undetermined::", "background_details": "", "alternate_terms": "::TERM:Information Disclosure:DESCRIPTION:This term is frequently used in vulnerability advisories to describe a consequence or technical impact, for any vulnerability that has a loss of confidentiality. Often, CWE-200 can be misused to represent the loss of confidentiality, even when the mistake - i.e., the weakness - is not directly related to the mishandling of the information itself, such as an out-of-bounds read that accesses sensitive memory contents; here, the out-of-bounds read is the primary weakness, not the disclosure of the memory. In addition, this phrase is also used frequently in policies and legal documents, but it does not refer to any disclosure of security-relevant information.::TERM:Information Leak:DESCRIPTION:This is a frequently used term, however the leak term has multiple uses within security. In some cases it deals with the accidental exposure of information from a different weakness, but in other cases (such as memory leak), this deals with improper tracking of resources, which can lead to exhaustion. As a result, CWE is actively avoiding usage of the leak term.::", "modes_of_introduction": "::PHASE:Architecture and Design::PHASE:Implementation::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Confidentiality:IMPACT:Read Application Data::", "detection_methods": "::METHOD:Automated Static Analysis - Binary or Bytecode:DESCRIPTION:According to SOAR, the following detection techniques may be useful: Cost effective for partial coverage: Bytecode Weakness Analysis - including disassembler + source code weakness analysis Inter-application Flow Analysis:EFFECTIVENESS:SOAR Partial::METHOD:Dynamic Analysis with Automated Results Interpretation:DESCRIPTION:According to SOAR, the following detection techniques may be useful: Highly cost effective: Web Application Scanner Web Services Scanner Database Scanners:EFFECTIVENESS:High::METHOD:Dynamic Analysis with Manual Results Interpretation:DESCRIPTION:According to SOAR, the following detection techniques may be useful: Cost effective for partial coverage: Fuzz Tester Framework-based Fuzzer Automated Monitored Execution Monitored Virtual Environment - run potentially malicious code in sandbox / wrapper / virtual machine, see if it does anything suspicious:EFFECTIVENESS:SOAR Partial::METHOD:Manual Static Analysis - Source Code:DESCRIPTION:According to SOAR, the following detection techniques may be useful: Highly cost effective: Manual Source Code Review (not inspections):EFFECTIVENESS:High::METHOD:Automated Static Analysis - Source Code:DESCRIPTION:According to SOAR, the following detection techniques may be useful: Highly cost effective: Context-configured Source Code Weakness Analyzer Cost effective for partial coverage: Source code Weakness Analyzer:EFFECTIVENESS:High::METHOD:Architecture or Design Review:DESCRIPTION:According to SOAR, the following detection techniques may be useful: Highly cost effective: Formal Methods / Correct-By-Construction Cost effective for partial coverage: Attack Modeling Inspection (IEEE 1028 standard) (can apply to requirements, design, source code, etc.):EFFECTIVENESS:High::", "potential_mitigations": "::PHASE:Architecture and Design:STRATEGY:Separation of Privilege:DESCRIPTION:Compartmentalize the system to have safe areas where trust boundaries can be unambiguously drawn. Do not allow sensitive data to go outside of the trust boundary and always be careful when interfacing with a compartment outside of the safe area. Ensure that appropriate compartmentalization is built into the system design, and the compartmentalization allows for and reinforces privilege separation functionality. Architects and designers should rely on the principle of least privilege to decide the appropriate time to use privileges and the time to drop privileges.::", "observed_examples": "::REFERENCE:CVE-2001-1483:DESCRIPTION:Enumeration of valid usernames based on inconsistent responses:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2001-1483::REFERENCE:CVE-2001-1528:DESCRIPTION:Account number enumeration via inconsistent responses.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2001-1528::REFERENCE:CVE-2004-2150:DESCRIPTION:User enumeration via discrepancies in error messages.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2004-2150::REFERENCE:CVE-2005-1205:DESCRIPTION:Telnet protocol allows servers to obtain sensitive environment information from clients.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2005-1205::REFERENCE:CVE-2002-1725:DESCRIPTION:Script calls phpinfo(), revealing system configuration to web user:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2002-1725::REFERENCE:CVE-2002-0515:DESCRIPTION:Product sets a different TTL when a port is being filtered than when it is not being filtered, which allows remote attackers to identify filtered ports by comparing TTLs.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2002-0515::REFERENCE:CVE-2004-0778:DESCRIPTION:Version control system allows remote attackers to determine the existence of arbitrary files and directories via the -X command for an alternate history file, which causes different error messages to be returned.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2004-0778::REFERENCE:CVE-2000-1117:DESCRIPTION:Virtual machine allows malicious web site operators to determine the existence of files on the client by measuring delays in the execution of the getSystemResource method.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2000-1117::REFERENCE:CVE-2003-0190:DESCRIPTION:Product immediately sends an error message when a user does not exist, which allows remote attackers to determine valid usernames via a timing attack.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2003-0190::REFERENCE:CVE-2008-2049:DESCRIPTION:POP3 server reveals a password in an error message after multiple APOP commands are sent. Might be resultant from another weakness.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2008-2049::REFERENCE:CVE-2007-5172:DESCRIPTION:Program reveals password in error message if attacker can trigger certain database errors.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2007-5172::REFERENCE:CVE-2008-4638:DESCRIPTION:Composite: application running with high privileges (CWE-250) allows user to specify a restricted file to process, which generates a parsing error that leaks the contents of the file (CWE-209).:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2008-4638::REFERENCE:CVE-2007-1409:DESCRIPTION:Direct request to library file in web application triggers pathname leak in error message.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2007-1409::REFERENCE:CVE-2005-0603:DESCRIPTION:Malformed regexp syntax leads to information exposure in error message.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2005-0603::REFERENCE:CVE-2004-2268:DESCRIPTION:Password exposed in debug information.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2004-2268::REFERENCE:CVE-2003-1078:DESCRIPTION:FTP client with debug option enabled shows password to the screen.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2003-1078::", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "::TAXONOMY NAME:PLOVER:ENTRY NAME:Information Leak (information disclosure)::TAXONOMY NAME:OWASP Top Ten 2007:ENTRY ID:A6:ENTRY NAME:Information Leakage and Improper Error Handling:MAPPING FIT:CWE More Specific::TAXONOMY NAME:WASC:ENTRY ID:13:ENTRY NAME:Information Leakage::", "related_attack_patterns": "::116::13::169::22::224::285::287::290::291::292::293::294::295::296::297::298::299::300::301::302::303::304::305::306::307::308::309::310::312::313::317::318::319::320::321::322::323::324::325::326::327::328::329::330::472::497::508::573::574::575::576::577::59::60::616::643::646::651::79::", "notes": "::TYPE:Maintenance:NOTE:As a result of mapping analysis in the 2020 Top 25, this weakness is under review, since it is frequently misused in mapping to cover many problems that lead to loss of confidentiality. See Extended Decription and Alternate Terms.::"}}]}]}, {"technique_id": "T1538", "t_findings": [{"capec_id": "CAPEC-309", "c_findings": [{"cwe": "CWE-200", "cves": [{"id": "CVE-2001-1483", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "One-Time Passwords In Everything (a.k.a OPIE) 2.32 and 2.4 allows remote attackers to determine the existence of user accounts by printing random passphrases if the user account does not exist and static passphrases if the user account does exist.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:nrl:opie:2.4:*:*:*:*:*:*:*", "published": "2001-12-31T05:00:00.000", "last_modified": "2017-07-11T01:29:09.633"}, {"id": "CVE-2001-1528", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "AmTote International homebet program returns different error messages when invalid account numbers and PIN codes are provided, which allows remote attackers to determine the existence of valid account numbers via a brute force attack.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:amtote_international:homebet:*:*:*:*:*:*:*:*", "published": "2001-12-31T05:00:00.000", "last_modified": "2008-09-05T20:26:47.077"}, {"id": "CVE-2004-2150", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "Nettica Corporation INTELLIPEER Email Server 1.01 displays different error messages for valid and invalid account names, which allows remote attackers to determine valid account names.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:nettica_corporation:intellipeer_email_server:1.01:*:*:*:*:*:*:*", "published": "2004-12-31T05:00:00.000", "last_modified": "2017-07-11T01:31:40.187"}, {"id": "CVE-2005-1205", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "The Telnet client for Microsoft Windows XP, Windows Server 2003, and Windows Services for UNIX allows remote attackers to read sensitive environment variables via the NEW-ENVIRON option with a SEND ENV_USERVAR command.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:o:microsoft:windows_2003_server:enterprise:*:64-bit:*:*:*:*:*", "published": "2005-06-14T04:00:00.000", "last_modified": "2018-10-12T21:36:25.407"}, {"id": "CVE-2002-1725", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "phpimageview.php in PHPImageView 1.0 allows remote attackers to obtain sensitive information via the pw=show option, which invokes the phpinfo function.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:onlinetools.org:phpimageview:1.0:*:*:*:*:*:*:*", "published": "2002-12-31T05:00:00.000", "last_modified": "2017-07-11T01:29:22.477"}, {"id": "CVE-2002-0515", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "IPFilter 3.4.25 and earlier sets a different TTL when a port is being filtered than when it is not being filtered, which allows remote attackers to identify filtered ports by comparing TTLs.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:darren_reed:ipfilter:3.4.25:*:*:*:*:*:*:*", "published": "2002-08-12T04:00:00.000", "last_modified": "2008-09-05T20:28:13.790"}, {"id": "CVE-2004-0778", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "CVS 1.11.x before 1.11.17, and 1.12.x before 1.12.9, allows remote attackers to determine the existence of arbitrary files and directories via the -X command for an alternate history file, which causes different error messages to be returned.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:cvs:cvs:1.10.6:*:*:*:*:*:*:*", "published": "2004-10-20T04:00:00.000", "last_modified": "2017-10-11T01:29:33.310"}, {"id": "CVE-2000-1117", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "The Extended Control List (ECL) feature of the Java Virtual Machine (JVM) in Lotus Notes Client R5 allows malicious web site operators to determine the existence of files on the client by measuring delays in the execution of the getSystemResource method.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:ibm:lotus_notes:r5:*:*:*:*:*:*:*", "published": "2001-01-09T05:00:00.000", "last_modified": "2008-09-10T19:06:39.507"}, {"id": "CVE-2003-0190", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "OpenSSH-portable (OpenSSH) 3.6.1p1 and earlier with PAM support enabled immediately sends an error message when a user does not exist, which allows remote attackers to determine valid usernames via a timing attack.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:openbsd:openssh:3.4p1:*:*:*:*:*:*:*", "published": "2003-05-12T04:00:00.000", "last_modified": "2022-12-13T12:15:11.477"}, {"id": "CVE-2008-2049", "score": ["V2", 4.3, "MEDIUM"], "v2_score": 4.3, "v2_exploitability_score": 8.6, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:M/Au:N/C:P/I:N/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:M/Au:N/C:P/I:N/A:N", "accessVector": "NETWORK", "accessComplexity": "MEDIUM", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 4.3}, "baseSeverity": "MEDIUM", "exploitabilityScore": 8.6, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "The POP3 server (EPSTPOP3S.EXE) 4.22 in E-Post Mail Server 4.10 allows remote attackers to obtain sensitive information via multiple crafted APOP commands for a known POP3 account, which displays the password in a POP3 error message.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:e-post_corporation:mail_server:4.10:*:*:*:*:*:*:*", "published": "2008-05-01T19:05:00.000", "last_modified": "2017-08-08T01:30:42.823"}, {"id": "CVE-2007-5172", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "Quicksilver Forums before 1.4.1 allows remote attackers to obtain sensitive information by causing unspecified connection errors, which reveals the database password in the resulting error message.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:quicksilver_forums:quicksilver_forums:*:*:*:*:*:*:*:*", "published": "2007-10-01T20:17:00.000", "last_modified": "2017-07-29T01:33:26.287"}, {"id": "CVE-2008-4638", "score": ["V2", 4.6, "MEDIUM"], "v2_score": 4.6, "v2_exploitability_score": 3.1, "v2_impact_score": 6.9, "v2_vector": "AV:L/AC:L/Au:S/C:C/I:N/A:N", "access_vector": "LOCAL", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:L/AC:L/Au:S/C:C/I:N/A:N", "accessVector": "LOCAL", "accessComplexity": "LOW", "authentication": "SINGLE", "confidentialityImpact": "COMPLETE", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 4.6}, "baseSeverity": "MEDIUM", "exploitabilityScore": 3.1, "impactScore": 6.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "qioadmin in the Quick I/O for Database feature in Symantec Veritas File System (VxFS) on HP-UX, and before 5.0 MP3 on Solaris, Linux, and AIX, allows local users to read arbitrary files by causing qioadmin to write a file's content to standard error in an error message.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:symantec:veritas_file_system:5.0:mp2:aix:*:*:*:*:*", "published": "2008-10-21T18:00:01.037", "last_modified": "2018-10-11T20:52:23.293"}, {"id": "CVE-2007-1409", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "WordPress allows remote attackers to obtain sensitive information via a direct request for wp-admin/admin-functions.php, which reveals the path in an error message.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:wordpress:wordpress:2.0:*:*:*:*:*:*:*", "published": "2007-03-10T22:19:00.000", "last_modified": "2018-10-16T16:38:23.643"}, {"id": "CVE-2005-0603", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "viewtopic.php in phpBB 2.0.12 and earlier allows remote attackers to obtain sensitive information via a highlight parameter containing invalid regular expression syntax, which reveals the path in a PHP error message.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:phpbb_group:phpbb:2.0.0:*:*:*:*:*:*:*", "published": "2005-02-28T05:00:00.000", "last_modified": "2016-10-18T03:13:00.080"}, {"id": "CVE-2004-2268", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "PimenGest2 before 1.1.1 allows remote attackers to obtain the database password via debug information in rowLatex.inc.php.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:pimentech:pimengest2:1.10.1:*:*:*:*:*:*:*", "published": "2004-12-31T05:00:00.000", "last_modified": "2017-07-11T01:31:45.450"}, {"id": "CVE-2003-1078", "score": ["V2", 7.5, "HIGH"], "v2_score": 7.5, "v2_exploitability_score": 10.0, "v2_impact_score": 6.4, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 7.5}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": true, "userInteractionRequired": false}], "description": "The FTP client for Solaris 2.6, 7, and 8 with the debug (-d) flag enabled displays the user password on the screen during login.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:o:sun:solaris:2.6:*:*:*:*:*:*:*", "published": "2003-02-28T05:00:00.000", "last_modified": "2018-10-30T16:26:22.763"}], "cwe_info": {"cwe_id": "200", "name": "Exposure of Sensitive Information to an Unauthorized Actor", "weakness_abstraction": "Class", "status": "Draft", "description": "The product exposes sensitive information to an actor that is not explicitly authorized to have access to that information.", "extended_description": "There are many different kinds of mistakes that introduce information exposures. The severity of the error can range widely, depending on the context in which the product operates, the type of sensitive information that is revealed, and the benefits it may provide to an attacker. Some kinds of sensitive information include: private, personal information, such as personal messages, financial data, health records, geographic location, or contact details system status and environment, such as the operating system and installed packages business secrets and intellectual property network status and configuration the product's own code or internal state metadata, e.g. logging of connections or message headers indirect information, such as a discrepancy between two internal operations that can be observed by an outsider Information might be sensitive to different parties, each of which may have their own expectations for whether the information should be protected. These parties include: the product's own users people or organizations whose information is created or used by the product, even if they are not direct product users the product's administrators, including the admins of the system(s) and/or networks on which the product operates the developer Information exposures can occur in different ways: the code explicitly inserts sensitive information into resources or messages that are intentionally made accessible to unauthorized actors, but should not contain the information - i.e., the information should have been scrubbed or sanitized a different weakness or mistake indirectly inserts the sensitive information into resources, such as a web script error revealing the full system path of the program. the code manages resources that intentionally contain sensitive information, but the resources are unintentionally made accessible to unauthorized actors. In this case, the information exposure is resultant - i.e., a different weakness enabled the access to the information in the first place. It is common practice to describe any loss of confidentiality as an information exposure, but this can lead to overuse of CWE-200 in CWE mapping. From the CWE perspective, loss of confidentiality is a technical impact that can arise from dozens of different weaknesses, such as insecure file permissions or out-of-bounds read. CWE-200 and its lower-level descendants are intended to cover the mistakes that occur in behaviors that explicitly manage, store, transfer, or cleanse sensitive information.", "related_weaknesses": "::NATURE:ChildOf:CWE ID:668:VIEW ID:1000:ORDINAL:Primary::", "weakness_ordinalities": "::ORDINALITY:Primary:DESCRIPTION:Developers may insert sensitive information that they do not believe, or they might forget to remove the sensitive information after it has been processed::ORDINALITY:Resultant:DESCRIPTION:Separate mistakes or weaknesses could inadvertently make the sensitive information available to an attacker, such as in a detailed error message that can be read by an unauthorized party::", "applicable_platforms": "::LANGUAGE CLASS:Language-Independent:LANGUAGE PREVALENCE:Undetermined::TECHNOLOGY CLASS:Mobile:TECHNOLOGY PREVALENCE:Undetermined::", "background_details": "", "alternate_terms": "::TERM:Information Disclosure:DESCRIPTION:This term is frequently used in vulnerability advisories to describe a consequence or technical impact, for any vulnerability that has a loss of confidentiality. Often, CWE-200 can be misused to represent the loss of confidentiality, even when the mistake - i.e., the weakness - is not directly related to the mishandling of the information itself, such as an out-of-bounds read that accesses sensitive memory contents; here, the out-of-bounds read is the primary weakness, not the disclosure of the memory. In addition, this phrase is also used frequently in policies and legal documents, but it does not refer to any disclosure of security-relevant information.::TERM:Information Leak:DESCRIPTION:This is a frequently used term, however the leak term has multiple uses within security. In some cases it deals with the accidental exposure of information from a different weakness, but in other cases (such as memory leak), this deals with improper tracking of resources, which can lead to exhaustion. As a result, CWE is actively avoiding usage of the leak term.::", "modes_of_introduction": "::PHASE:Architecture and Design::PHASE:Implementation::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Confidentiality:IMPACT:Read Application Data::", "detection_methods": "::METHOD:Automated Static Analysis - Binary or Bytecode:DESCRIPTION:According to SOAR, the following detection techniques may be useful: Cost effective for partial coverage: Bytecode Weakness Analysis - including disassembler + source code weakness analysis Inter-application Flow Analysis:EFFECTIVENESS:SOAR Partial::METHOD:Dynamic Analysis with Automated Results Interpretation:DESCRIPTION:According to SOAR, the following detection techniques may be useful: Highly cost effective: Web Application Scanner Web Services Scanner Database Scanners:EFFECTIVENESS:High::METHOD:Dynamic Analysis with Manual Results Interpretation:DESCRIPTION:According to SOAR, the following detection techniques may be useful: Cost effective for partial coverage: Fuzz Tester Framework-based Fuzzer Automated Monitored Execution Monitored Virtual Environment - run potentially malicious code in sandbox / wrapper / virtual machine, see if it does anything suspicious:EFFECTIVENESS:SOAR Partial::METHOD:Manual Static Analysis - Source Code:DESCRIPTION:According to SOAR, the following detection techniques may be useful: Highly cost effective: Manual Source Code Review (not inspections):EFFECTIVENESS:High::METHOD:Automated Static Analysis - Source Code:DESCRIPTION:According to SOAR, the following detection techniques may be useful: Highly cost effective: Context-configured Source Code Weakness Analyzer Cost effective for partial coverage: Source code Weakness Analyzer:EFFECTIVENESS:High::METHOD:Architecture or Design Review:DESCRIPTION:According to SOAR, the following detection techniques may be useful: Highly cost effective: Formal Methods / Correct-By-Construction Cost effective for partial coverage: Attack Modeling Inspection (IEEE 1028 standard) (can apply to requirements, design, source code, etc.):EFFECTIVENESS:High::", "potential_mitigations": "::PHASE:Architecture and Design:STRATEGY:Separation of Privilege:DESCRIPTION:Compartmentalize the system to have safe areas where trust boundaries can be unambiguously drawn. Do not allow sensitive data to go outside of the trust boundary and always be careful when interfacing with a compartment outside of the safe area. Ensure that appropriate compartmentalization is built into the system design, and the compartmentalization allows for and reinforces privilege separation functionality. Architects and designers should rely on the principle of least privilege to decide the appropriate time to use privileges and the time to drop privileges.::", "observed_examples": "::REFERENCE:CVE-2001-1483:DESCRIPTION:Enumeration of valid usernames based on inconsistent responses:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2001-1483::REFERENCE:CVE-2001-1528:DESCRIPTION:Account number enumeration via inconsistent responses.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2001-1528::REFERENCE:CVE-2004-2150:DESCRIPTION:User enumeration via discrepancies in error messages.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2004-2150::REFERENCE:CVE-2005-1205:DESCRIPTION:Telnet protocol allows servers to obtain sensitive environment information from clients.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2005-1205::REFERENCE:CVE-2002-1725:DESCRIPTION:Script calls phpinfo(), revealing system configuration to web user:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2002-1725::REFERENCE:CVE-2002-0515:DESCRIPTION:Product sets a different TTL when a port is being filtered than when it is not being filtered, which allows remote attackers to identify filtered ports by comparing TTLs.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2002-0515::REFERENCE:CVE-2004-0778:DESCRIPTION:Version control system allows remote attackers to determine the existence of arbitrary files and directories via the -X command for an alternate history file, which causes different error messages to be returned.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2004-0778::REFERENCE:CVE-2000-1117:DESCRIPTION:Virtual machine allows malicious web site operators to determine the existence of files on the client by measuring delays in the execution of the getSystemResource method.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2000-1117::REFERENCE:CVE-2003-0190:DESCRIPTION:Product immediately sends an error message when a user does not exist, which allows remote attackers to determine valid usernames via a timing attack.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2003-0190::REFERENCE:CVE-2008-2049:DESCRIPTION:POP3 server reveals a password in an error message after multiple APOP commands are sent. Might be resultant from another weakness.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2008-2049::REFERENCE:CVE-2007-5172:DESCRIPTION:Program reveals password in error message if attacker can trigger certain database errors.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2007-5172::REFERENCE:CVE-2008-4638:DESCRIPTION:Composite: application running with high privileges (CWE-250) allows user to specify a restricted file to process, which generates a parsing error that leaks the contents of the file (CWE-209).:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2008-4638::REFERENCE:CVE-2007-1409:DESCRIPTION:Direct request to library file in web application triggers pathname leak in error message.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2007-1409::REFERENCE:CVE-2005-0603:DESCRIPTION:Malformed regexp syntax leads to information exposure in error message.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2005-0603::REFERENCE:CVE-2004-2268:DESCRIPTION:Password exposed in debug information.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2004-2268::REFERENCE:CVE-2003-1078:DESCRIPTION:FTP client with debug option enabled shows password to the screen.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2003-1078::", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "::TAXONOMY NAME:PLOVER:ENTRY NAME:Information Leak (information disclosure)::TAXONOMY NAME:OWASP Top Ten 2007:ENTRY ID:A6:ENTRY NAME:Information Leakage and Improper Error Handling:MAPPING FIT:CWE More Specific::TAXONOMY NAME:WASC:ENTRY ID:13:ENTRY NAME:Information Leakage::", "related_attack_patterns": "::116::13::169::22::224::285::287::290::291::292::293::294::295::296::297::298::299::300::301::302::303::304::305::306::307::308::309::310::312::313::317::318::319::320::321::322::323::324::325::326::327::328::329::330::472::497::508::573::574::575::576::577::59::60::616::643::646::651::79::", "notes": "::TYPE:Maintenance:NOTE:As a result of mapping analysis in the 2020 Top 25, this weakness is under review, since it is frequently misused in mapping to cover many problems that lead to loss of confidentiality. See Extended Decription and Alternate Terms.::"}}]}]}, {"technique_id": "T1530", "t_findings": [{"capec_id": "CAPEC-309", "c_findings": [{"cwe": "CWE-200", "cves": [{"id": "CVE-2001-1483", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "One-Time Passwords In Everything (a.k.a OPIE) 2.32 and 2.4 allows remote attackers to determine the existence of user accounts by printing random passphrases if the user account does not exist and static passphrases if the user account does exist.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:nrl:opie:2.4:*:*:*:*:*:*:*", "published": "2001-12-31T05:00:00.000", "last_modified": "2017-07-11T01:29:09.633"}, {"id": "CVE-2001-1528", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "AmTote International homebet program returns different error messages when invalid account numbers and PIN codes are provided, which allows remote attackers to determine the existence of valid account numbers via a brute force attack.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:amtote_international:homebet:*:*:*:*:*:*:*:*", "published": "2001-12-31T05:00:00.000", "last_modified": "2008-09-05T20:26:47.077"}, {"id": "CVE-2004-2150", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "Nettica Corporation INTELLIPEER Email Server 1.01 displays different error messages for valid and invalid account names, which allows remote attackers to determine valid account names.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:nettica_corporation:intellipeer_email_server:1.01:*:*:*:*:*:*:*", "published": "2004-12-31T05:00:00.000", "last_modified": "2017-07-11T01:31:40.187"}, {"id": "CVE-2005-1205", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "The Telnet client for Microsoft Windows XP, Windows Server 2003, and Windows Services for UNIX allows remote attackers to read sensitive environment variables via the NEW-ENVIRON option with a SEND ENV_USERVAR command.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:o:microsoft:windows_2003_server:enterprise:*:64-bit:*:*:*:*:*", "published": "2005-06-14T04:00:00.000", "last_modified": "2018-10-12T21:36:25.407"}, {"id": "CVE-2002-1725", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "phpimageview.php in PHPImageView 1.0 allows remote attackers to obtain sensitive information via the pw=show option, which invokes the phpinfo function.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:onlinetools.org:phpimageview:1.0:*:*:*:*:*:*:*", "published": "2002-12-31T05:00:00.000", "last_modified": "2017-07-11T01:29:22.477"}, {"id": "CVE-2002-0515", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "IPFilter 3.4.25 and earlier sets a different TTL when a port is being filtered than when it is not being filtered, which allows remote attackers to identify filtered ports by comparing TTLs.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:darren_reed:ipfilter:3.4.25:*:*:*:*:*:*:*", "published": "2002-08-12T04:00:00.000", "last_modified": "2008-09-05T20:28:13.790"}, {"id": "CVE-2004-0778", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "CVS 1.11.x before 1.11.17, and 1.12.x before 1.12.9, allows remote attackers to determine the existence of arbitrary files and directories via the -X command for an alternate history file, which causes different error messages to be returned.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:cvs:cvs:1.10.6:*:*:*:*:*:*:*", "published": "2004-10-20T04:00:00.000", "last_modified": "2017-10-11T01:29:33.310"}, {"id": "CVE-2000-1117", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "The Extended Control List (ECL) feature of the Java Virtual Machine (JVM) in Lotus Notes Client R5 allows malicious web site operators to determine the existence of files on the client by measuring delays in the execution of the getSystemResource method.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:ibm:lotus_notes:r5:*:*:*:*:*:*:*", "published": "2001-01-09T05:00:00.000", "last_modified": "2008-09-10T19:06:39.507"}, {"id": "CVE-2003-0190", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "OpenSSH-portable (OpenSSH) 3.6.1p1 and earlier with PAM support enabled immediately sends an error message when a user does not exist, which allows remote attackers to determine valid usernames via a timing attack.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:openbsd:openssh:3.4p1:*:*:*:*:*:*:*", "published": "2003-05-12T04:00:00.000", "last_modified": "2022-12-13T12:15:11.477"}, {"id": "CVE-2008-2049", "score": ["V2", 4.3, "MEDIUM"], "v2_score": 4.3, "v2_exploitability_score": 8.6, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:M/Au:N/C:P/I:N/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:M/Au:N/C:P/I:N/A:N", "accessVector": "NETWORK", "accessComplexity": "MEDIUM", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 4.3}, "baseSeverity": "MEDIUM", "exploitabilityScore": 8.6, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "The POP3 server (EPSTPOP3S.EXE) 4.22 in E-Post Mail Server 4.10 allows remote attackers to obtain sensitive information via multiple crafted APOP commands for a known POP3 account, which displays the password in a POP3 error message.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:e-post_corporation:mail_server:4.10:*:*:*:*:*:*:*", "published": "2008-05-01T19:05:00.000", "last_modified": "2017-08-08T01:30:42.823"}, {"id": "CVE-2007-5172", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "Quicksilver Forums before 1.4.1 allows remote attackers to obtain sensitive information by causing unspecified connection errors, which reveals the database password in the resulting error message.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:quicksilver_forums:quicksilver_forums:*:*:*:*:*:*:*:*", "published": "2007-10-01T20:17:00.000", "last_modified": "2017-07-29T01:33:26.287"}, {"id": "CVE-2008-4638", "score": ["V2", 4.6, "MEDIUM"], "v2_score": 4.6, "v2_exploitability_score": 3.1, "v2_impact_score": 6.9, "v2_vector": "AV:L/AC:L/Au:S/C:C/I:N/A:N", "access_vector": "LOCAL", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:L/AC:L/Au:S/C:C/I:N/A:N", "accessVector": "LOCAL", "accessComplexity": "LOW", "authentication": "SINGLE", "confidentialityImpact": "COMPLETE", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 4.6}, "baseSeverity": "MEDIUM", "exploitabilityScore": 3.1, "impactScore": 6.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "qioadmin in the Quick I/O for Database feature in Symantec Veritas File System (VxFS) on HP-UX, and before 5.0 MP3 on Solaris, Linux, and AIX, allows local users to read arbitrary files by causing qioadmin to write a file's content to standard error in an error message.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:symantec:veritas_file_system:5.0:mp2:aix:*:*:*:*:*", "published": "2008-10-21T18:00:01.037", "last_modified": "2018-10-11T20:52:23.293"}, {"id": "CVE-2007-1409", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "WordPress allows remote attackers to obtain sensitive information via a direct request for wp-admin/admin-functions.php, which reveals the path in an error message.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:wordpress:wordpress:2.0:*:*:*:*:*:*:*", "published": "2007-03-10T22:19:00.000", "last_modified": "2018-10-16T16:38:23.643"}, {"id": "CVE-2005-0603", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "viewtopic.php in phpBB 2.0.12 and earlier allows remote attackers to obtain sensitive information via a highlight parameter containing invalid regular expression syntax, which reveals the path in a PHP error message.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:phpbb_group:phpbb:2.0.0:*:*:*:*:*:*:*", "published": "2005-02-28T05:00:00.000", "last_modified": "2016-10-18T03:13:00.080"}, {"id": "CVE-2004-2268", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "PimenGest2 before 1.1.1 allows remote attackers to obtain the database password via debug information in rowLatex.inc.php.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:pimentech:pimengest2:1.10.1:*:*:*:*:*:*:*", "published": "2004-12-31T05:00:00.000", "last_modified": "2017-07-11T01:31:45.450"}, {"id": "CVE-2003-1078", "score": ["V2", 7.5, "HIGH"], "v2_score": 7.5, "v2_exploitability_score": 10.0, "v2_impact_score": 6.4, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 7.5}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": true, "userInteractionRequired": false}], "description": "The FTP client for Solaris 2.6, 7, and 8 with the debug (-d) flag enabled displays the user password on the screen during login.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:o:sun:solaris:2.6:*:*:*:*:*:*:*", "published": "2003-02-28T05:00:00.000", "last_modified": "2018-10-30T16:26:22.763"}], "cwe_info": {"cwe_id": "200", "name": "Exposure of Sensitive Information to an Unauthorized Actor", "weakness_abstraction": "Class", "status": "Draft", "description": "The product exposes sensitive information to an actor that is not explicitly authorized to have access to that information.", "extended_description": "There are many different kinds of mistakes that introduce information exposures. The severity of the error can range widely, depending on the context in which the product operates, the type of sensitive information that is revealed, and the benefits it may provide to an attacker. Some kinds of sensitive information include: private, personal information, such as personal messages, financial data, health records, geographic location, or contact details system status and environment, such as the operating system and installed packages business secrets and intellectual property network status and configuration the product's own code or internal state metadata, e.g. logging of connections or message headers indirect information, such as a discrepancy between two internal operations that can be observed by an outsider Information might be sensitive to different parties, each of which may have their own expectations for whether the information should be protected. These parties include: the product's own users people or organizations whose information is created or used by the product, even if they are not direct product users the product's administrators, including the admins of the system(s) and/or networks on which the product operates the developer Information exposures can occur in different ways: the code explicitly inserts sensitive information into resources or messages that are intentionally made accessible to unauthorized actors, but should not contain the information - i.e., the information should have been scrubbed or sanitized a different weakness or mistake indirectly inserts the sensitive information into resources, such as a web script error revealing the full system path of the program. the code manages resources that intentionally contain sensitive information, but the resources are unintentionally made accessible to unauthorized actors. In this case, the information exposure is resultant - i.e., a different weakness enabled the access to the information in the first place. It is common practice to describe any loss of confidentiality as an information exposure, but this can lead to overuse of CWE-200 in CWE mapping. From the CWE perspective, loss of confidentiality is a technical impact that can arise from dozens of different weaknesses, such as insecure file permissions or out-of-bounds read. CWE-200 and its lower-level descendants are intended to cover the mistakes that occur in behaviors that explicitly manage, store, transfer, or cleanse sensitive information.", "related_weaknesses": "::NATURE:ChildOf:CWE ID:668:VIEW ID:1000:ORDINAL:Primary::", "weakness_ordinalities": "::ORDINALITY:Primary:DESCRIPTION:Developers may insert sensitive information that they do not believe, or they might forget to remove the sensitive information after it has been processed::ORDINALITY:Resultant:DESCRIPTION:Separate mistakes or weaknesses could inadvertently make the sensitive information available to an attacker, such as in a detailed error message that can be read by an unauthorized party::", "applicable_platforms": "::LANGUAGE CLASS:Language-Independent:LANGUAGE PREVALENCE:Undetermined::TECHNOLOGY CLASS:Mobile:TECHNOLOGY PREVALENCE:Undetermined::", "background_details": "", "alternate_terms": "::TERM:Information Disclosure:DESCRIPTION:This term is frequently used in vulnerability advisories to describe a consequence or technical impact, for any vulnerability that has a loss of confidentiality. Often, CWE-200 can be misused to represent the loss of confidentiality, even when the mistake - i.e., the weakness - is not directly related to the mishandling of the information itself, such as an out-of-bounds read that accesses sensitive memory contents; here, the out-of-bounds read is the primary weakness, not the disclosure of the memory. In addition, this phrase is also used frequently in policies and legal documents, but it does not refer to any disclosure of security-relevant information.::TERM:Information Leak:DESCRIPTION:This is a frequently used term, however the leak term has multiple uses within security. In some cases it deals with the accidental exposure of information from a different weakness, but in other cases (such as memory leak), this deals with improper tracking of resources, which can lead to exhaustion. As a result, CWE is actively avoiding usage of the leak term.::", "modes_of_introduction": "::PHASE:Architecture and Design::PHASE:Implementation::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Confidentiality:IMPACT:Read Application Data::", "detection_methods": "::METHOD:Automated Static Analysis - Binary or Bytecode:DESCRIPTION:According to SOAR, the following detection techniques may be useful: Cost effective for partial coverage: Bytecode Weakness Analysis - including disassembler + source code weakness analysis Inter-application Flow Analysis:EFFECTIVENESS:SOAR Partial::METHOD:Dynamic Analysis with Automated Results Interpretation:DESCRIPTION:According to SOAR, the following detection techniques may be useful: Highly cost effective: Web Application Scanner Web Services Scanner Database Scanners:EFFECTIVENESS:High::METHOD:Dynamic Analysis with Manual Results Interpretation:DESCRIPTION:According to SOAR, the following detection techniques may be useful: Cost effective for partial coverage: Fuzz Tester Framework-based Fuzzer Automated Monitored Execution Monitored Virtual Environment - run potentially malicious code in sandbox / wrapper / virtual machine, see if it does anything suspicious:EFFECTIVENESS:SOAR Partial::METHOD:Manual Static Analysis - Source Code:DESCRIPTION:According to SOAR, the following detection techniques may be useful: Highly cost effective: Manual Source Code Review (not inspections):EFFECTIVENESS:High::METHOD:Automated Static Analysis - Source Code:DESCRIPTION:According to SOAR, the following detection techniques may be useful: Highly cost effective: Context-configured Source Code Weakness Analyzer Cost effective for partial coverage: Source code Weakness Analyzer:EFFECTIVENESS:High::METHOD:Architecture or Design Review:DESCRIPTION:According to SOAR, the following detection techniques may be useful: Highly cost effective: Formal Methods / Correct-By-Construction Cost effective for partial coverage: Attack Modeling Inspection (IEEE 1028 standard) (can apply to requirements, design, source code, etc.):EFFECTIVENESS:High::", "potential_mitigations": "::PHASE:Architecture and Design:STRATEGY:Separation of Privilege:DESCRIPTION:Compartmentalize the system to have safe areas where trust boundaries can be unambiguously drawn. Do not allow sensitive data to go outside of the trust boundary and always be careful when interfacing with a compartment outside of the safe area. Ensure that appropriate compartmentalization is built into the system design, and the compartmentalization allows for and reinforces privilege separation functionality. Architects and designers should rely on the principle of least privilege to decide the appropriate time to use privileges and the time to drop privileges.::", "observed_examples": "::REFERENCE:CVE-2001-1483:DESCRIPTION:Enumeration of valid usernames based on inconsistent responses:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2001-1483::REFERENCE:CVE-2001-1528:DESCRIPTION:Account number enumeration via inconsistent responses.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2001-1528::REFERENCE:CVE-2004-2150:DESCRIPTION:User enumeration via discrepancies in error messages.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2004-2150::REFERENCE:CVE-2005-1205:DESCRIPTION:Telnet protocol allows servers to obtain sensitive environment information from clients.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2005-1205::REFERENCE:CVE-2002-1725:DESCRIPTION:Script calls phpinfo(), revealing system configuration to web user:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2002-1725::REFERENCE:CVE-2002-0515:DESCRIPTION:Product sets a different TTL when a port is being filtered than when it is not being filtered, which allows remote attackers to identify filtered ports by comparing TTLs.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2002-0515::REFERENCE:CVE-2004-0778:DESCRIPTION:Version control system allows remote attackers to determine the existence of arbitrary files and directories via the -X command for an alternate history file, which causes different error messages to be returned.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2004-0778::REFERENCE:CVE-2000-1117:DESCRIPTION:Virtual machine allows malicious web site operators to determine the existence of files on the client by measuring delays in the execution of the getSystemResource method.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2000-1117::REFERENCE:CVE-2003-0190:DESCRIPTION:Product immediately sends an error message when a user does not exist, which allows remote attackers to determine valid usernames via a timing attack.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2003-0190::REFERENCE:CVE-2008-2049:DESCRIPTION:POP3 server reveals a password in an error message after multiple APOP commands are sent. Might be resultant from another weakness.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2008-2049::REFERENCE:CVE-2007-5172:DESCRIPTION:Program reveals password in error message if attacker can trigger certain database errors.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2007-5172::REFERENCE:CVE-2008-4638:DESCRIPTION:Composite: application running with high privileges (CWE-250) allows user to specify a restricted file to process, which generates a parsing error that leaks the contents of the file (CWE-209).:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2008-4638::REFERENCE:CVE-2007-1409:DESCRIPTION:Direct request to library file in web application triggers pathname leak in error message.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2007-1409::REFERENCE:CVE-2005-0603:DESCRIPTION:Malformed regexp syntax leads to information exposure in error message.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2005-0603::REFERENCE:CVE-2004-2268:DESCRIPTION:Password exposed in debug information.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2004-2268::REFERENCE:CVE-2003-1078:DESCRIPTION:FTP client with debug option enabled shows password to the screen.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2003-1078::", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "::TAXONOMY NAME:PLOVER:ENTRY NAME:Information Leak (information disclosure)::TAXONOMY NAME:OWASP Top Ten 2007:ENTRY ID:A6:ENTRY NAME:Information Leakage and Improper Error Handling:MAPPING FIT:CWE More Specific::TAXONOMY NAME:WASC:ENTRY ID:13:ENTRY NAME:Information Leakage::", "related_attack_patterns": "::116::13::169::22::224::285::287::290::291::292::293::294::295::296::297::298::299::300::301::302::303::304::305::306::307::308::309::310::312::313::317::318::319::320::321::322::323::324::325::326::327::328::329::330::472::497::508::573::574::575::576::577::59::60::616::643::646::651::79::", "notes": "::TYPE:Maintenance:NOTE:As a result of mapping analysis in the 2020 Top 25, this weakness is under review, since it is frequently misused in mapping to cover many problems that lead to loss of confidentiality. See Extended Decription and Alternate Terms.::"}}]}]}, {"technique_id": "T1499", "t_findings": [{"capec_id": "CAPEC-227", "c_findings": [{"cwe": "CWE-400", "cves": [{"id": "CVE-2020-3566", "score": ["V31", 7.5, "HIGH"], "v2_score": 7.8, "v2_exploitability_score": 10.0, "v2_impact_score": 6.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:N/A:C", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:N/A:C", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "COMPLETE", "baseScore": 7.8}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "A vulnerability in the Distance Vector Multicast Routing Protocol (DVMRP) feature of Cisco IOS XR Software could allow an unauthenticated, remote attacker to exhaust process memory of an affected device. The vulnerability is due to insufficient queue management for Internet Group Management Protocol (IGMP) packets. An attacker could exploit this vulnerability by sending crafted IGMP traffic to an affected device. A successful exploit could allow the attacker to cause memory exhaustion, resulting in instability of other processes. These processes may include, but are not limited to, interior and exterior routing protocols. Cisco will release software updates that address this vulnerability.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:o:cisco:ios_xr:6.4.2:*:*:*:*:*:*:*", "published": "2020-08-29T16:15:09.797", "last_modified": "2022-10-21T19:48:16.433"}, {"id": "CVE-2009-2874", "score": ["V2", 7.8, "HIGH"], "v2_score": 7.8, "v2_exploitability_score": 10.0, "v2_impact_score": 6.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:N/A:C", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:N/A:C", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "COMPLETE", "baseScore": 7.8}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "The TimesTenD process in Cisco Unified Presence 1.x, 6.x before 6.0(6), and 7.x before 7.0(4) allows remote attackers to cause a denial of service (process crash) via a large number of TCP connections to ports 16200 and 22794, aka Bug ID CSCsy17662.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:cisco:unified_presence_server:1.0:*:*:*:*:*:*:*", "published": "2009-10-16T16:30:00.640", "last_modified": "2017-08-17T01:30:56.320"}, {"id": "CVE-2009-1928", "score": ["V2", 7.8, "HIGH"], "v2_score": 7.8, "v2_exploitability_score": 10.0, "v2_impact_score": 6.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:N/A:C", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:N/A:C", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "COMPLETE", "baseScore": 7.8}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "Stack consumption vulnerability in the LDAP service in Active Directory on Microsoft Windows 2000 SP4, Server 2003 SP2, and Server 2008 Gold and SP2; Active Directory Application Mode (ADAM) on Windows XP SP2 and SP3 and Server 2003 SP2; and Active Directory Lightweight Directory Service (AD LDS) on Windows Server 2008 Gold and SP2 allows remote attackers to cause a denial of service (system hang) via a malformed (1) LDAP or (2) LDAPS request, aka \"LSASS Recursive Stack Overflow Vulnerability.\"", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:o:microsoft:windows_2000:*:sp4:*:*:*:*:*:*", "published": "2009-11-11T19:30:00.267", "last_modified": "2019-04-30T14:27:13.913"}, {"id": "CVE-2009-2858", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "PARTIAL", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "Memory leak in the Security component in IBM DB2 8.1 before FP18 on Unix platforms allows attackers to cause a denial of service (memory consumption) via unspecified vectors, related to private memory within the DB2 memory structure.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:ibm:db2:*:fp17:*:*:*:*:*:*", "published": "2009-08-19T17:30:01.187", "last_modified": "2009-08-21T04:00:00.000"}, {"id": "CVE-2009-2726", "score": ["V2", 7.8, "HIGH"], "v2_score": 7.8, "v2_exploitability_score": 10.0, "v2_impact_score": 6.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:N/A:C", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:N/A:C", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "COMPLETE", "baseScore": 7.8}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "The SIP channel driver in Asterisk Open Source 1.2.x before 1.2.34, 1.4.x before 1.4.26.1, 1.6.0.x before 1.6.0.12, and 1.6.1.x before 1.6.1.4; Asterisk Business Edition A.x.x, B.x.x before B.2.5.9, C.2.x before C.2.4.1, and C.3.x before C.3.1; and Asterisk Appliance s800i 1.2.x before 1.3.0.3 does not use a maximum width when invoking sscanf style functions, which allows remote attackers to cause a denial of service (stack memory consumption) via SIP packets containing large sequences of ASCII decimal characters, as demonstrated via vectors related to (1) the CSeq value in a SIP header, (2) large Content-Length value, and (3) SDP.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:asterisk:business_edition:b.1.3.2:*:*:*:*:*:*:*", "published": "2009-08-12T10:30:01.110", "last_modified": "2018-10-10T19:42:05.157"}, {"id": "CVE-2009-2540", "score": ["V2", 4.3, "MEDIUM"], "v2_score": 4.3, "v2_exploitability_score": 8.6, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:M/Au:N/C:N/I:N/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:M/Au:N/C:N/I:N/A:P", "accessVector": "NETWORK", "accessComplexity": "MEDIUM", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "PARTIAL", "baseScore": 4.3}, "baseSeverity": "MEDIUM", "exploitabilityScore": 8.6, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": true}], "description": "Opera, possibly 9.64 and earlier, allows remote attackers to cause a denial of service (memory consumption) via a large integer value for the length property of a Select object, a related issue to CVE-2009-1692.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:opera:opera_browser:*:*:*:*:*:*:*:*", "published": "2009-07-20T18:30:01.233", "last_modified": "2018-10-30T16:26:33.437"}, {"id": "CVE-2009-2299", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "PARTIAL", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "The Artofdefence Hyperguard Web Application Firewall (WAF) module before 2.5.5-11635, 3.0 before 3.0.3-11636, and 3.1 before 3.1.1-11637, a module for the Apache HTTP Server, allows remote attackers to cause a denial of service (memory consumption) via an HTTP request with a large Content-Length value but no POST data.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:hyperguard_web_application_firewall_project:hyperguard_web_application_firewall:*:*:*:*:*:*:*:*", "published": "2009-07-02T10:30:00.407", "last_modified": "2020-11-16T20:48:00.137"}, {"id": "CVE-2009-2054", "score": ["V2", 7.8, "HIGH"], "v2_score": 7.8, "v2_exploitability_score": 10.0, "v2_impact_score": 6.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:N/A:C", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:N/A:C", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "COMPLETE", "baseScore": 7.8}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "Cisco Unified Communications Manager (aka CUCM, formerly CallManager) 4.x, 5.x before 5.1(3g), 6.x before 6.1(4), 7.0 before 7.0(2a)su1, and 7.1 before 7.1(2a)su1 allows remote attackers to cause a denial of service (file-descriptor exhaustion and SIP outage) via a flood of TCP packets, aka Bug ID CSCsx23689.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:cisco:unified_communications_manager:*:*:business:*:*:*:*:*", "published": "2009-08-27T17:00:01.047", "last_modified": "2009-09-02T05:23:46.967"}, {"id": "CVE-2008-5180", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "PARTIAL", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "Microsoft Communicator, and Communicator in Microsoft Office 2010 beta, allows remote attackers to cause a denial of service (memory consumption) via a large number of SIP INVITE requests, which trigger the creation of many sessions.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:microsoft:office_communicator:*:*:*:*:*:*:*:*", "published": "2008-11-20T15:30:00.390", "last_modified": "2017-09-29T01:32:29.867"}, {"id": "CVE-2008-2121", "score": ["V2", 7.8, "HIGH"], "v2_score": 7.8, "v2_exploitability_score": 10.0, "v2_impact_score": 6.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:N/A:C", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:N/A:C", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "COMPLETE", "baseScore": 7.8}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "The TCP implementation in Sun Solaris 8, 9, and 10 allows remote attackers to cause a denial of service (CPU consumption and new connection timeouts) via a TCP SYN flood attack.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:o:sun:sunos:5.8:*:*:*:*:*:*:*", "published": "2008-05-09T15:20:00.000", "last_modified": "2018-10-30T16:25:15.027"}, {"id": "CVE-2008-2122", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "PARTIAL", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "IBM Rational Build Forge 7.0.2 allows remote attackers to cause a denial of service (CPU consumption) via a port scan, which spawns multiple bfagent server processes that attempt to read data from closed sockets.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:ibm:rational_build_forge:7.0.2:*:*:*:*:*:*:*", "published": "2008-05-09T15:20:00.000", "last_modified": "2017-08-08T01:30:47.057"}, {"id": "CVE-2008-1700", "score": ["V2", 9.3, "HIGH"], "v2_score": 9.3, "v2_exploitability_score": 8.6, "v2_impact_score": 10.0, "v2_vector": "AV:N/AC:M/Au:N/C:C/I:C/A:C", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:M/Au:N/C:C/I:C/A:C", "accessVector": "NETWORK", "accessComplexity": "MEDIUM", "authentication": "NONE", "confidentialityImpact": "COMPLETE", "integrityImpact": "COMPLETE", "availabilityImpact": "COMPLETE", "baseScore": 9.3}, "baseSeverity": "HIGH", "exploitabilityScore": 8.6, "impactScore": 10.0, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": true}], "description": "The Web TransferCtrl Class 8,2,1,4 (iManFile.cab), as used in WorkSite Web 8.2 before SP1 P2, allows remote attackers to cause a denial of service (memory consumption) via a large number of SendNrlLink directives, which opens a separate window for each directive.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:interwoven:worksite_web:*:*:*:*:*:*:*:*", "published": "2008-04-08T18:05:00.000", "last_modified": "2017-08-08T01:30:22.713"}, {"id": "CVE-2007-4103", "score": ["V2", 7.8, "HIGH"], "v2_score": 7.8, "v2_exploitability_score": 10.0, "v2_impact_score": 6.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:N/A:C", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:N/A:C", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "COMPLETE", "baseScore": 7.8}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "The IAX2 channel driver (chan_iax2) in Asterisk Open 1.2.x before 1.2.23, 1.4.x before 1.4.9, and Asterisk Appliance Developer Kit before 0.6.0, when configured to allow unauthenticated calls, allows remote attackers to cause a denial of service (resource exhaustion) via a flood of calls that do not complete a 3-way handshake, which causes an ast_channel to be allocated but not released.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:digium:asterisk:1.2.20:*:*:*:*:*:*:*", "published": "2007-07-31T10:17:00.000", "last_modified": "2018-10-15T21:33:14.243"}, {"id": "CVE-2006-1173", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "PARTIAL", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "Sendmail before 8.13.7 allows remote attackers to cause a denial of service via deeply nested, malformed multipart MIME messages that exhaust the stack during the recursive mime8to7 function for performing 8-bit to 7-bit conversion, which prevents Sendmail from delivering queued messages and might lead to disk consumption by core dump files.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:sendmail:sendmail:*:*:*:*:*:*:*:*", "published": "2006-06-07T23:06:00.000", "last_modified": "2018-10-18T16:31:04.043"}, {"id": "CVE-2007-0897", "score": ["V2", 4.3, "MEDIUM"], "v2_score": 4.3, "v2_exploitability_score": 8.6, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:M/Au:N/C:N/I:N/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:M/Au:N/C:N/I:N/A:P", "accessVector": "NETWORK", "accessComplexity": "MEDIUM", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "PARTIAL", "baseScore": 4.3}, "baseSeverity": "MEDIUM", "exploitabilityScore": 8.6, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "Clam AntiVirus ClamAV before 0.90 does not close open file descriptors under certain conditions, which allows remote attackers to cause a denial of service (file descriptor consumption and failed scans) via CAB archives with a cabinet header record length of zero, which causes a function to return without closing a file descriptor.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:clam_anti-virus:clamav:*:*:*:*:*:*:*:*", "published": "2007-02-16T19:28:00.000", "last_modified": "2017-07-29T01:30:29.563"}], "cwe_info": {"cwe_id": "400", "name": "Uncontrolled Resource Consumption", "weakness_abstraction": "Class", "status": "Draft", "description": "The software does not properly control the allocation and maintenance of a limited resource, thereby enabling an actor to influence the amount of resources consumed, eventually leading to the exhaustion of available resources.", "extended_description": "Limited resources include memory, file system storage, database connection pool entries, and CPU. If an attacker can trigger the allocation of these limited resources, but the number or size of the resources is not controlled, then the attacker could cause a denial of service that consumes all available resources. This would prevent valid users from accessing the software, and it could potentially have an impact on the surrounding environment. For example, a memory exhaustion attack against an application could slow down the application as well as its host operating system. There are at least three distinct scenarios which can commonly lead to resource exhaustion: Lack of throttling for the number of allocated resources Losing all references to a resource before reaching the shutdown stage Not closing/returning a resource after processing Resource exhaustion problems are often result due to an incorrect implementation of the following situations: Error conditions and other exceptional circumstances. Confusion over which part of the program is responsible for releasing the resource.", "related_weaknesses": "::NATURE:ChildOf:CWE ID:664:VIEW ID:1000:ORDINAL:Primary::", "weakness_ordinalities": "", "applicable_platforms": "::LANGUAGE CLASS:Language-Independent:LANGUAGE PREVALENCE:Undetermined::", "background_details": "", "alternate_terms": "::TERM:Resource Exhaustion::", "modes_of_introduction": "::PHASE:Operation::PHASE:Architecture and Design::PHASE:Implementation::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Availability:IMPACT:DoS: Crash, Exit, or Restart:IMPACT:DoS: Resource Consumption (CPU):IMPACT:DoS: Resource Consumption (Memory):IMPACT:DoS: Resource Consumption (Other):NOTE:The most common result of resource exhaustion is denial of service. The software may slow down, crash due to unhandled errors, or lock out legitimate users.::SCOPE:Access Control:SCOPE:Other:IMPACT:Bypass Protection Mechanism:IMPACT:Other:NOTE:In some cases it may be possible to force the software to fail open in the event of resource exhaustion. The state of the software -- and possibly the security functionality - may then be compromised.::", "detection_methods": "::METHOD:Automated Static Analysis:DESCRIPTION:Automated static analysis typically has limited utility in recognizing resource exhaustion problems, except for program-independent system resources such as files, sockets, and processes. For system resources, automated static analysis may be able to detect circumstances in which resources are not released after they have expired. Automated analysis of configuration files may be able to detect settings that do not specify a maximum value. Automated static analysis tools will not be appropriate for detecting exhaustion of custom resources, such as an intended security policy in which a bulletin board user is only allowed to make a limited number of posts per day.:EFFECTIVENESS:Limited::METHOD:Automated Dynamic Analysis:DESCRIPTION:Certain automated dynamic analysis techniques may be effective in spotting resource exhaustion problems, especially with resources such as processes, memory, and connections. The technique may involve generating a large number of requests to the software within a short time frame.:EFFECTIVENESS:Moderate::METHOD:Fuzzing:DESCRIPTION:While fuzzing is typically geared toward finding low-level implementation bugs, it can inadvertently find resource exhaustion problems. This can occur when the fuzzer generates a large number of test cases but does not restart the targeted software in between test cases. If an individual test case produces a crash, but it does not do so reliably, then an inability to handle resource exhaustion may be the cause.:EFFECTIVENESS:Opportunistic::", "potential_mitigations": "::PHASE:Architecture and Design:DESCRIPTION:Design throttling mechanisms into the system architecture. The best protection is to limit the amount of resources that an unauthorized user can cause to be expended. A strong authentication and access control model will help prevent such attacks from occurring in the first place. The login application should be protected against DoS attacks as much as possible. Limiting the database access, perhaps by caching result sets, can help minimize the resources expended. To further limit the potential for a DoS attack, consider tracking the rate of requests received from users and blocking requests that exceed a defined rate threshold.::PHASE:Architecture and Design:DESCRIPTION:Mitigation of resource exhaustion attacks requires that the target system either: recognizes the attack and denies that user further access for a given amount of time, or uniformly throttles all requests in order to make it more difficult to consume resources more quickly than they can again be freed. The first of these solutions is an issue in itself though, since it may allow attackers to prevent the use of the system by a particular valid user. If the attacker impersonates the valid user, they may be able to prevent the user from accessing the server in question. The second solution is simply difficult to effectively institute -- and even when properly done, it does not provide a full solution. It simply makes the attack require more resources on the part of the attacker.::PHASE:Architecture and Design:DESCRIPTION:Ensure that protocols have specific limits of scale placed on them.::PHASE:Implementation:DESCRIPTION:Ensure that all failures in resource allocation place the system into a safe posture.::", "observed_examples": "::REFERENCE:CVE-2020-3566:DESCRIPTION:Resource exhaustion in distributed OS because of insufficient IGMP queue management, as exploited in the wild per CISA KEV.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-3566::REFERENCE:CVE-2009-2874:DESCRIPTION:Product allows attackers to cause a crash via a large number of connections.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2009-2874::REFERENCE:CVE-2009-1928:DESCRIPTION:Malformed request triggers uncontrolled recursion, leading to stack exhaustion.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2009-1928::REFERENCE:CVE-2009-2858:DESCRIPTION:Chain: memory leak (CWE-404) leads to resource exhaustion.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2009-2858::REFERENCE:CVE-2009-2726:DESCRIPTION:Driver does not use a maximum width when invoking sscanf style functions, causing stack consumption.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2009-2726::REFERENCE:CVE-2009-2540:DESCRIPTION:Large integer value for a length property in an object causes a large amount of memory allocation.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2009-2540::REFERENCE:CVE-2009-2299:DESCRIPTION:Web application firewall consumes excessive memory when an HTTP request contains a large Content-Length value but no POST data.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2009-2299::REFERENCE:CVE-2009-2054:DESCRIPTION:Product allows exhaustion of file descriptors when processing a large number of TCP packets.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2009-2054::REFERENCE:CVE-2008-5180:DESCRIPTION:Communication product allows memory consumption with a large number of SIP requests, which cause many sessions to be created.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2008-5180::REFERENCE:CVE-2008-2121:DESCRIPTION:TCP implementation allows attackers to consume CPU and prevent new connections using a TCP SYN flood attack.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2008-2121::REFERENCE:CVE-2008-2122:DESCRIPTION:Port scan triggers CPU consumption with processes that attempt to read data from closed sockets.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2008-2122::REFERENCE:CVE-2008-1700:DESCRIPTION:Product allows attackers to cause a denial of service via a large number of directives, each of which opens a separate window.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2008-1700::REFERENCE:CVE-2007-4103:DESCRIPTION:Product allows resource exhaustion via a large number of calls that do not complete a 3-way handshake.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2007-4103::REFERENCE:CVE-2006-1173:DESCRIPTION:Mail server does not properly handle deeply nested multipart MIME messages, leading to stack exhaustion.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2006-1173::REFERENCE:CVE-2007-0897:DESCRIPTION:Chain: anti-virus product encounters a malformed file but returns from a function without closing a file descriptor (CWE-775) leading to file descriptor consumption (CWE-400) and failed scans.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2007-0897::", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "::TAXONOMY NAME:CLASP:ENTRY NAME:Resource exhaustion (file descriptor, disk space, sockets, ...)::TAXONOMY NAME:OWASP Top Ten 2004:ENTRY ID:A9:ENTRY NAME:Denial of Service:MAPPING FIT:CWE More Specific::TAXONOMY NAME:WASC:ENTRY ID:10:ENTRY NAME:Denial of Service::TAXONOMY NAME:WASC:ENTRY ID:41:ENTRY NAME:XML Attribute Blowup::TAXONOMY NAME:The CERT Oracle Secure Coding Standard for Java (2011):ENTRY ID:SER12-J:ENTRY NAME:Avoid memory and resource leaks during serialization::TAXONOMY NAME:The CERT Oracle Secure Coding Standard for Java (2011):ENTRY ID:MSC05-J:ENTRY NAME:Do not exhaust heap space::TAXONOMY NAME:Software Fault Patterns:ENTRY ID:SFP13:ENTRY NAME:Unrestricted Consumption::", "related_attack_patterns": "::147::492::", "notes": "::TYPE:Maintenance:NOTE:Resource consumption could be interpreted as a consequence instead of an insecure behavior, so this entry is being considered for modification. It appears to be referenced too frequently when more precise mappings are available. Some of its children, such as CWE-771, might be better considered as a chain.::TYPE:Theoretical:NOTE:Vulnerability theory is largely about how behaviors and resources interact. Resource exhaustion can be regarded as either a consequence or an attack, depending on the perspective. This entry is an attempt to reflect the underlying weaknesses that enable these attacks (or consequences) to take place.::TYPE:Other:NOTE:Database queries that take a long time to process are good DoS targets. An attacker would have to write a few lines of Perl code to generate enough traffic to exceed the site's ability to keep up. This would effectively prevent authorized users from using the site at all. Resources can be exploited simply by ensuring that the target machine must do much more work and consume more resources in order to service a request than the attacker must do to initiate a request. A prime example of this can be found in old switches that were vulnerable to macof attacks (so named for a tool developed by Dugsong). These attacks flooded a switch with random IP and MAC address combinations, therefore exhausting the switch's cache, which held the information of which port corresponded to which MAC addresses. Once this cache was exhausted, the switch would fail in an insecure way and would begin to act simply as a hub, broadcasting all traffic on all ports and allowing for basic sniffing attacks.::"}}]}, {"capec_id": "CAPEC-131", "c_findings": [{"cwe": "CWE-404", "cves": [{"id": "CVE-1999-1127", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "PARTIAL", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "Windows NT 4.0 does not properly shut down invalid named pipe RPC connections, which allows remote attackers to cause a denial of service (resource exhaustion) via a series of connections containing malformed data, aka the \"Named Pipes Over RPC\" vulnerability.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:o:microsoft:windows_nt:4.0:*:*:*:*:*:*:*", "published": "1999-12-31T05:00:00.000", "last_modified": "2018-10-12T21:29:22.827"}, {"id": "CVE-2001-0830", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "PARTIAL", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "6tunnel 0.08 and earlier does not properly close sockets that were initiated by a client, which allows remote attackers to cause a denial of service (resource exhaustion) by repeatedly connecting to and disconnecting from the server.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:pld:6tunnel:*:*:*:*:*:*:*:*", "published": "2001-12-06T05:00:00.000", "last_modified": "2017-10-10T01:29:53.627"}, {"id": "CVE-2002-1372", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "PARTIAL", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "Common Unix Printing System (CUPS) 1.1.14 through 1.1.17 does not properly check the return values of various file and socket operations, which could allow a remote attacker to cause a denial of service (resource exhaustion) by causing file descriptors to be assigned and not released, as demonstrated by fanta.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:easy_software_products:cups:1.0.4:*:*:*:*:*:*:*", "published": "2002-12-26T05:00:00.000", "last_modified": "2017-10-10T01:30:11.767"}], "cwe_info": {"cwe_id": "404", "name": "Improper Resource Shutdown or Release", "weakness_abstraction": "Class", "status": "Draft", "description": "The program does not release or incorrectly releases a resource before it is made available for re-use.", "extended_description": "When a resource is created or allocated, the developer is responsible for properly releasing the resource as well as accounting for all potential paths of expiration or invalidation, such as a set period of time or revocation.", "related_weaknesses": "::NATURE:ChildOf:CWE ID:664:VIEW ID:1000:ORDINAL:Primary::NATURE:PeerOf:CWE ID:405:VIEW ID:1000::NATURE:CanPrecede:CWE ID:619:VIEW ID:1000::", "weakness_ordinalities": "::ORDINALITY:Primary:DESCRIPTION:Improper release or shutdown of resources can be primary to resource exhaustion, performance, and information confidentiality problems to name a few.::ORDINALITY:Resultant:DESCRIPTION:Improper release or shutdown of resources can be resultant from improper error handling or insufficient resource tracking.::", "applicable_platforms": "::LANGUAGE CLASS:Language-Independent:LANGUAGE PREVALENCE:Undetermined::", "background_details": "", "alternate_terms": "", "modes_of_introduction": "::PHASE:Architecture and Design::PHASE:Implementation::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Availability:SCOPE:Other:IMPACT:DoS: Resource Consumption (Other):IMPACT:Varies by Context:NOTE:Most unreleased resource issues result in general software reliability problems, but if an attacker can intentionally trigger a resource leak, the attacker might be able to launch a denial of service attack by depleting the resource pool.::SCOPE:Confidentiality:IMPACT:Read Application Data:NOTE:When a resource containing sensitive information is not correctly shutdown, it may expose the sensitive data in a subsequent allocation.::", "detection_methods": "::METHOD:Automated Dynamic Analysis:DESCRIPTION:This weakness can be detected using dynamic tools and techniques that interact with the software using large test suites with many diverse inputs, such as fuzz testing (fuzzing), robustness testing, and fault injection. The software's operation may slow down, but it should not become unstable, crash, or generate incorrect results. Resource clean up errors might be detected with a stress-test by calling the software simultaneously from a large number of threads or processes, and look for evidence of any unexpected behavior. The software's operation may slow down, but it should not become unstable, crash, or generate incorrect results.:EFFECTIVENESS:Moderate::METHOD:Manual Dynamic Analysis:DESCRIPTION:Identify error conditions that are not likely to occur during normal usage and trigger them. For example, run the program under low memory conditions, run with insufficient privileges or permissions, interrupt a transaction before it is completed, or disable connectivity to basic network services such as DNS. Monitor the software for any unexpected behavior. If you trigger an unhandled exception or similar error that was discovered and handled by the application's environment, it may still indicate unexpected conditions that were not handled by the application itself.::", "potential_mitigations": "::PHASE:Requirements:STRATEGY:Language Selection:DESCRIPTION:Use a language that does not allow this weakness to occur or provides constructs that make this weakness easier to avoid. For example, languages such as Java, Ruby, and Lisp perform automatic garbage collection that releases memory for objects that have been deallocated.::PHASE:Implementation:DESCRIPTION:It is good practice to be responsible for freeing all resources you allocate and to be consistent with how and where you free memory in a function. If you allocate memory that you intend to free upon completion of the function, you must be sure to free the memory at all exit points for that function including error conditions.::PHASE:Implementation:DESCRIPTION:Memory should be allocated/freed using matching functions such as malloc/free, new/delete, and new[]/delete[].::PHASE:Implementation:DESCRIPTION:When releasing a complex object or structure, ensure that you properly dispose of all of its member components, not just the object itself.::", "observed_examples": "::REFERENCE:CVE-1999-1127:DESCRIPTION:Does not shut down named pipe connections if malformed data is sent.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-1999-1127::REFERENCE:CVE-2001-0830:DESCRIPTION:Sockets not properly closed when attacker repeatedly connects and disconnects from server.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2001-0830::REFERENCE:CVE-2002-1372:DESCRIPTION:Return values of file/socket operations not checked, allowing resultant consumption of file descriptors.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2002-1372::", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "::TAXONOMY NAME:PLOVER:ENTRY NAME:Improper resource shutdown or release::TAXONOMY NAME:7 Pernicious Kingdoms:ENTRY NAME:Unreleased Resource::TAXONOMY NAME:OWASP Top Ten 2004:ENTRY ID:A9:ENTRY NAME:Denial of Service:MAPPING FIT:CWE More Specific::TAXONOMY NAME:CERT C Secure Coding:ENTRY ID:FIO42-C:ENTRY NAME:Close files when they are no longer needed:MAPPING FIT:CWE More Abstract::TAXONOMY NAME:CERT C Secure Coding:ENTRY ID:MEM31-C:ENTRY NAME:Free dynamically allocated memory when no longer needed:MAPPING FIT:CWE More Abstract::TAXONOMY NAME:The CERT Oracle Secure Coding Standard for Java (2011):ENTRY ID:FIO04-J:ENTRY NAME:Release resources when they are no longer needed::TAXONOMY NAME:Software Fault Patterns:ENTRY ID:SFP14:ENTRY NAME:Failure to release resource::", "related_attack_patterns": "::125::130::131::494::495::496::666::", "notes": "::TYPE:Relationship:NOTE:Overlaps memory leaks, asymmetric resource consumption, malformed input errors.::"}}]}, {"capec_id": "CAPEC-130", "c_findings": [{"cwe": "CWE-404", "cves": [{"id": "CVE-1999-1127", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "PARTIAL", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "Windows NT 4.0 does not properly shut down invalid named pipe RPC connections, which allows remote attackers to cause a denial of service (resource exhaustion) via a series of connections containing malformed data, aka the \"Named Pipes Over RPC\" vulnerability.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:o:microsoft:windows_nt:4.0:*:*:*:*:*:*:*", "published": "1999-12-31T05:00:00.000", "last_modified": "2018-10-12T21:29:22.827"}, {"id": "CVE-2001-0830", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "PARTIAL", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "6tunnel 0.08 and earlier does not properly close sockets that were initiated by a client, which allows remote attackers to cause a denial of service (resource exhaustion) by repeatedly connecting to and disconnecting from the server.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:pld:6tunnel:*:*:*:*:*:*:*:*", "published": "2001-12-06T05:00:00.000", "last_modified": "2017-10-10T01:29:53.627"}, {"id": "CVE-2002-1372", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "PARTIAL", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "Common Unix Printing System (CUPS) 1.1.14 through 1.1.17 does not properly check the return values of various file and socket operations, which could allow a remote attacker to cause a denial of service (resource exhaustion) by causing file descriptors to be assigned and not released, as demonstrated by fanta.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:easy_software_products:cups:1.0.4:*:*:*:*:*:*:*", "published": "2002-12-26T05:00:00.000", "last_modified": "2017-10-10T01:30:11.767"}], "cwe_info": {"cwe_id": "404", "name": "Improper Resource Shutdown or Release", "weakness_abstraction": "Class", "status": "Draft", "description": "The program does not release or incorrectly releases a resource before it is made available for re-use.", "extended_description": "When a resource is created or allocated, the developer is responsible for properly releasing the resource as well as accounting for all potential paths of expiration or invalidation, such as a set period of time or revocation.", "related_weaknesses": "::NATURE:ChildOf:CWE ID:664:VIEW ID:1000:ORDINAL:Primary::NATURE:PeerOf:CWE ID:405:VIEW ID:1000::NATURE:CanPrecede:CWE ID:619:VIEW ID:1000::", "weakness_ordinalities": "::ORDINALITY:Primary:DESCRIPTION:Improper release or shutdown of resources can be primary to resource exhaustion, performance, and information confidentiality problems to name a few.::ORDINALITY:Resultant:DESCRIPTION:Improper release or shutdown of resources can be resultant from improper error handling or insufficient resource tracking.::", "applicable_platforms": "::LANGUAGE CLASS:Language-Independent:LANGUAGE PREVALENCE:Undetermined::", "background_details": "", "alternate_terms": "", "modes_of_introduction": "::PHASE:Architecture and Design::PHASE:Implementation::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Availability:SCOPE:Other:IMPACT:DoS: Resource Consumption (Other):IMPACT:Varies by Context:NOTE:Most unreleased resource issues result in general software reliability problems, but if an attacker can intentionally trigger a resource leak, the attacker might be able to launch a denial of service attack by depleting the resource pool.::SCOPE:Confidentiality:IMPACT:Read Application Data:NOTE:When a resource containing sensitive information is not correctly shutdown, it may expose the sensitive data in a subsequent allocation.::", "detection_methods": "::METHOD:Automated Dynamic Analysis:DESCRIPTION:This weakness can be detected using dynamic tools and techniques that interact with the software using large test suites with many diverse inputs, such as fuzz testing (fuzzing), robustness testing, and fault injection. The software's operation may slow down, but it should not become unstable, crash, or generate incorrect results. Resource clean up errors might be detected with a stress-test by calling the software simultaneously from a large number of threads or processes, and look for evidence of any unexpected behavior. The software's operation may slow down, but it should not become unstable, crash, or generate incorrect results.:EFFECTIVENESS:Moderate::METHOD:Manual Dynamic Analysis:DESCRIPTION:Identify error conditions that are not likely to occur during normal usage and trigger them. For example, run the program under low memory conditions, run with insufficient privileges or permissions, interrupt a transaction before it is completed, or disable connectivity to basic network services such as DNS. Monitor the software for any unexpected behavior. If you trigger an unhandled exception or similar error that was discovered and handled by the application's environment, it may still indicate unexpected conditions that were not handled by the application itself.::", "potential_mitigations": "::PHASE:Requirements:STRATEGY:Language Selection:DESCRIPTION:Use a language that does not allow this weakness to occur or provides constructs that make this weakness easier to avoid. For example, languages such as Java, Ruby, and Lisp perform automatic garbage collection that releases memory for objects that have been deallocated.::PHASE:Implementation:DESCRIPTION:It is good practice to be responsible for freeing all resources you allocate and to be consistent with how and where you free memory in a function. If you allocate memory that you intend to free upon completion of the function, you must be sure to free the memory at all exit points for that function including error conditions.::PHASE:Implementation:DESCRIPTION:Memory should be allocated/freed using matching functions such as malloc/free, new/delete, and new[]/delete[].::PHASE:Implementation:DESCRIPTION:When releasing a complex object or structure, ensure that you properly dispose of all of its member components, not just the object itself.::", "observed_examples": "::REFERENCE:CVE-1999-1127:DESCRIPTION:Does not shut down named pipe connections if malformed data is sent.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-1999-1127::REFERENCE:CVE-2001-0830:DESCRIPTION:Sockets not properly closed when attacker repeatedly connects and disconnects from server.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2001-0830::REFERENCE:CVE-2002-1372:DESCRIPTION:Return values of file/socket operations not checked, allowing resultant consumption of file descriptors.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2002-1372::", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "::TAXONOMY NAME:PLOVER:ENTRY NAME:Improper resource shutdown or release::TAXONOMY NAME:7 Pernicious Kingdoms:ENTRY NAME:Unreleased Resource::TAXONOMY NAME:OWASP Top Ten 2004:ENTRY ID:A9:ENTRY NAME:Denial of Service:MAPPING FIT:CWE More Specific::TAXONOMY NAME:CERT C Secure Coding:ENTRY ID:FIO42-C:ENTRY NAME:Close files when they are no longer needed:MAPPING FIT:CWE More Abstract::TAXONOMY NAME:CERT C Secure Coding:ENTRY ID:MEM31-C:ENTRY NAME:Free dynamically allocated memory when no longer needed:MAPPING FIT:CWE More Abstract::TAXONOMY NAME:The CERT Oracle Secure Coding Standard for Java (2011):ENTRY ID:FIO04-J:ENTRY NAME:Release resources when they are no longer needed::TAXONOMY NAME:Software Fault Patterns:ENTRY ID:SFP14:ENTRY NAME:Failure to release resource::", "related_attack_patterns": "::125::130::131::494::495::496::666::", "notes": "::TYPE:Relationship:NOTE:Overlaps memory leaks, asymmetric resource consumption, malformed input errors.::"}}, {"cwe": "CWE-770", "cves": [{"id": "CVE-2009-4017", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "PARTIAL", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "PHP before 5.2.12 and 5.3.x before 5.3.1 does not restrict the number of temporary files created when handling a multipart/form-data POST request, which allows remote attackers to cause a denial of service (resource exhaustion), and makes it easier for remote attackers to exploit local file inclusion vulnerabilities, via multiple requests, related to lack of support for the max_file_uploads directive.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:php:php:5.2.11:*:*:*:*:*:*:*", "published": "2009-11-24T00:30:00.500", "last_modified": "2018-10-10T19:48:06.190"}, {"id": "CVE-2009-2726", "score": ["V2", 7.8, "HIGH"], "v2_score": 7.8, "v2_exploitability_score": 10.0, "v2_impact_score": 6.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:N/A:C", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:N/A:C", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "COMPLETE", "baseScore": 7.8}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "The SIP channel driver in Asterisk Open Source 1.2.x before 1.2.34, 1.4.x before 1.4.26.1, 1.6.0.x before 1.6.0.12, and 1.6.1.x before 1.6.1.4; Asterisk Business Edition A.x.x, B.x.x before B.2.5.9, C.2.x before C.2.4.1, and C.3.x before C.3.1; and Asterisk Appliance s800i 1.2.x before 1.3.0.3 does not use a maximum width when invoking sscanf style functions, which allows remote attackers to cause a denial of service (stack memory consumption) via SIP packets containing large sequences of ASCII decimal characters, as demonstrated via vectors related to (1) the CSeq value in a SIP header, (2) large Content-Length value, and (3) SDP.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:asterisk:business_edition:b.1.3.2:*:*:*:*:*:*:*", "published": "2009-08-12T10:30:01.110", "last_modified": "2018-10-10T19:42:05.157"}, {"id": "CVE-2009-2540", "score": ["V2", 4.3, "MEDIUM"], "v2_score": 4.3, "v2_exploitability_score": 8.6, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:M/Au:N/C:N/I:N/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:M/Au:N/C:N/I:N/A:P", "accessVector": "NETWORK", "accessComplexity": "MEDIUM", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "PARTIAL", "baseScore": 4.3}, "baseSeverity": "MEDIUM", "exploitabilityScore": 8.6, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": true}], "description": "Opera, possibly 9.64 and earlier, allows remote attackers to cause a denial of service (memory consumption) via a large integer value for the length property of a Select object, a related issue to CVE-2009-1692.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:opera:opera_browser:*:*:*:*:*:*:*:*", "published": "2009-07-20T18:30:01.233", "last_modified": "2018-10-30T16:26:33.437"}, {"id": "CVE-2009-2054", "score": ["V2", 7.8, "HIGH"], "v2_score": 7.8, "v2_exploitability_score": 10.0, "v2_impact_score": 6.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:N/A:C", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:N/A:C", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "COMPLETE", "baseScore": 7.8}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "Cisco Unified Communications Manager (aka CUCM, formerly CallManager) 4.x, 5.x before 5.1(3g), 6.x before 6.1(4), 7.0 before 7.0(2a)su1, and 7.1 before 7.1(2a)su1 allows remote attackers to cause a denial of service (file-descriptor exhaustion and SIP outage) via a flood of TCP packets, aka Bug ID CSCsx23689.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:cisco:unified_communications_manager:*:*:business:*:*:*:*:*", "published": "2009-08-27T17:00:01.047", "last_modified": "2009-09-02T05:23:46.967"}, {"id": "CVE-2008-5180", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "PARTIAL", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "Microsoft Communicator, and Communicator in Microsoft Office 2010 beta, allows remote attackers to cause a denial of service (memory consumption) via a large number of SIP INVITE requests, which trigger the creation of many sessions.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:microsoft:office_communicator:*:*:*:*:*:*:*:*", "published": "2008-11-20T15:30:00.390", "last_modified": "2017-09-29T01:32:29.867"}, {"id": "CVE-2008-1700", "score": ["V2", 9.3, "HIGH"], "v2_score": 9.3, "v2_exploitability_score": 8.6, "v2_impact_score": 10.0, "v2_vector": "AV:N/AC:M/Au:N/C:C/I:C/A:C", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:M/Au:N/C:C/I:C/A:C", "accessVector": "NETWORK", "accessComplexity": "MEDIUM", "authentication": "NONE", "confidentialityImpact": "COMPLETE", "integrityImpact": "COMPLETE", "availabilityImpact": "COMPLETE", "baseScore": 9.3}, "baseSeverity": "HIGH", "exploitabilityScore": 8.6, "impactScore": 10.0, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": true}], "description": "The Web TransferCtrl Class 8,2,1,4 (iManFile.cab), as used in WorkSite Web 8.2 before SP1 P2, allows remote attackers to cause a denial of service (memory consumption) via a large number of SendNrlLink directives, which opens a separate window for each directive.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:interwoven:worksite_web:*:*:*:*:*:*:*:*", "published": "2008-04-08T18:05:00.000", "last_modified": "2017-08-08T01:30:22.713"}, {"id": "CVE-2005-4650", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "PARTIAL", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "Joomla! 1.03 does not restrict the number of \"Search\" Mambots, which allows remote attackers to cause a denial of service (resource consumption) via a large number of Search Mambots.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:joomla:joomla:1.03:*:*:*:*:*:*:*", "published": "2005-12-31T05:00:00.000", "last_modified": "2008-09-05T20:57:26.687"}, {"id": "CVE-2020-15100", "score": ["V31", 3.3, "LOW"], "v2_score": 2.1, "v2_exploitability_score": 3.9, "v2_impact_score": 2.9, "v2_vector": "AV:L/AC:L/Au:N/C:N/I:N/A:P", "access_vector": "LOCAL", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:L/AC:L/Au:N/C:N/I:N/A:P", "accessVector": "LOCAL", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "PARTIAL", "baseScore": 2.1}, "baseSeverity": "LOW", "exploitabilityScore": 3.9, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "In freewvs before 0.1.1, a user could create a large file that freewvs will try to read, which will terminate a scan process. This has been patched in 0.1.1.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:schokokeks:freewvs:*:*:*:*:*:*:*:*", "published": "2020-07-14T20:15:11.427", "last_modified": "2021-11-18T18:05:20.650"}], "cwe_info": {"cwe_id": "770", "name": "Allocation of Resources Without Limits or Throttling", "weakness_abstraction": "Base", "status": "Incomplete", "description": "The software allocates a reusable resource or group of resources on behalf of an actor without imposing any restrictions on the size or number of resources that can be allocated, in violation of the intended security policy for that actor.", "extended_description": "Code frequently has to work with limited resources, so programmers must be careful to ensure that resources are not consumed too quickly, or too easily. Without use of quotas, resource limits, or other protection mechanisms, it can be easy for an attacker to consume many resources by rapidly making many requests, or causing larger resources to be used than is needed. When too many resources are allocated, or if a single resource is too large, then it can prevent the code from working correctly, possibly leading to a denial of service.", "related_weaknesses": "::NATURE:ChildOf:CWE ID:400:VIEW ID:1000:ORDINAL:Primary::NATURE:ChildOf:CWE ID:665:VIEW ID:1000::NATURE:ChildOf:CWE ID:400:VIEW ID:1003:ORDINAL:Primary::", "weakness_ordinalities": "", "applicable_platforms": "::LANGUAGE CLASS:Language-Independent:LANGUAGE PREVALENCE:Often::", "background_details": "", "alternate_terms": "", "modes_of_introduction": "::PHASE:Architecture and Design:NOTE:OMISSION: This weakness is caused by missing a security tactic during the architecture and design phase.::PHASE:Implementation::PHASE:Operation::PHASE:System Configuration::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Availability:IMPACT:DoS: Resource Consumption (CPU):IMPACT:DoS: Resource Consumption (Memory):IMPACT:DoS: Resource Consumption (Other):NOTE:When allocating resources without limits, an attacker could prevent other systems, applications, or processes from accessing the same type of resource.::", "detection_methods": "::METHOD:Manual Static Analysis:DESCRIPTION:Manual static analysis can be useful for finding this weakness, but it might not achieve desired code coverage within limited time constraints. If denial-of-service is not considered a significant risk, or if there is strong emphasis on consequences such as code execution, then manual analysis may not focus on this weakness at all.::METHOD:Fuzzing:DESCRIPTION:While fuzzing is typically geared toward finding low-level implementation bugs, it can inadvertently find uncontrolled resource allocation problems. This can occur when the fuzzer generates a large number of test cases but does not restart the targeted software in between test cases. If an individual test case produces a crash, but it does not do so reliably, then an inability to limit resource allocation may be the cause. When the allocation is directly affected by numeric inputs, then fuzzing may produce indications of this weakness.:EFFECTIVENESS:Opportunistic::METHOD:Automated Dynamic Analysis:DESCRIPTION:Certain automated dynamic analysis techniques may be effective in producing side effects of uncontrolled resource allocation problems, especially with resources such as processes, memory, and connections. The technique may involve generating a large number of requests to the software within a short time frame. Manual analysis is likely required to interpret the results.::METHOD:Automated Static Analysis:DESCRIPTION:Specialized configuration or tuning may be required to train automated tools to recognize this weakness. Automated static analysis typically has limited utility in recognizing unlimited allocation problems, except for the missing release of program-independent system resources such as files, sockets, and processes, or unchecked arguments to memory. For system resources, automated static analysis may be able to detect circumstances in which resources are not released after they have expired, or if too much of a resource is requested at once, as can occur with memory. Automated analysis of configuration files may be able to detect settings that do not specify a maximum value. Automated static analysis tools will not be appropriate for detecting exhaustion of custom resources, such as an intended security policy in which a bulletin board user is only allowed to make a limited number of posts per day.::", "potential_mitigations": "::PHASE:Requirements:DESCRIPTION:Clearly specify the minimum and maximum expectations for capabilities, and dictate which behaviors are acceptable when resource allocation reaches limits.::PHASE:Architecture and Design:DESCRIPTION:Limit the amount of resources that are accessible to unprivileged users. Set per-user limits for resources. Allow the system administrator to define these limits. Be careful to avoid CWE-410.::PHASE:Architecture and Design:DESCRIPTION:Design throttling mechanisms into the system architecture. The best protection is to limit the amount of resources that an unauthorized user can cause to be expended. A strong authentication and access control model will help prevent such attacks from occurring in the first place, and it will help the administrator to identify who is committing the abuse. The login application should be protected against DoS attacks as much as possible. Limiting the database access, perhaps by caching result sets, can help minimize the resources expended. To further limit the potential for a DoS attack, consider tracking the rate of requests received from users and blocking requests that exceed a defined rate threshold.::PHASE:Implementation:STRATEGY:Input Validation:DESCRIPTION:Assume all input is malicious. Use an accept known good input validation strategy, i.e., use a list of acceptable inputs that strictly conform to specifications. Reject any input that does not strictly conform to specifications, or transform it into something that does. When performing input validation, consider all potentially relevant properties, including length, type of input, the full range of acceptable values, missing or extra inputs, syntax, consistency across related fields, and conformance to business rules. As an example of business rule logic, boat may be syntactically valid because it only contains alphanumeric characters, but it is not valid if the input is only expected to contain colors such as red or blue. Do not rely exclusively on looking for malicious or malformed inputs. This is likely to miss at least one undesirable input, especially if the code's environment changes. This can give attackers enough room to bypass the intended validation. However, denylists can be useful for detecting potential attacks or determining which inputs are so malformed that they should be rejected outright.::PHASE:Architecture and Design:DESCRIPTION:For any security checks that are performed on the client side, ensure that these checks are duplicated on the server side, in order to avoid CWE-602. Attackers can bypass the client-side checks by modifying values after the checks have been performed, or by changing the client to remove the client-side checks entirely. Then, these modified values would be submitted to the server.::PHASE:Architecture and Design:DESCRIPTION:Mitigation of resource exhaustion attacks requires that the target system either: recognizes the attack and denies that user further access for a given amount of time, typically by using increasing time delays uniformly throttles all requests in order to make it more difficult to consume resources more quickly than they can again be freed. The first of these solutions is an issue in itself though, since it may allow attackers to prevent the use of the system by a particular valid user. If the attacker impersonates the valid user, they may be able to prevent the user from accessing the server in question. The second solution can be difficult to effectively institute -- and even when properly done, it does not provide a full solution. It simply requires more resources on the part of the attacker.::PHASE:Architecture and Design:DESCRIPTION:Ensure that protocols have specific limits of scale placed on them.::PHASE:Architecture and Design Implementation:DESCRIPTION:If the program must fail, ensure that it fails gracefully (fails closed). There may be a temptation to simply let the program fail poorly in cases such as low memory conditions, but an attacker may be able to assert control before the software has fully exited. Alternately, an uncontrolled failure could cause cascading problems with other downstream components; for example, the program could send a signal to a downstream process so the process immediately knows that a problem has occurred and has a better chance of recovery. Ensure that all failures in resource allocation place the system into a safe posture.::PHASE:Operation Architecture and Design:STRATEGY:Resource Limitation:DESCRIPTION:Use resource-limiting settings provided by the operating system or environment. For example, when managing system resources in POSIX, setrlimit() can be used to set limits for certain types of resources, and getrlimit() can determine how many resources are available. However, these functions are not available on all operating systems. When the current levels get close to the maximum that is defined for the application (see CWE-770), then limit the allocation of further resources to privileged users; alternately, begin releasing resources for less-privileged users. While this mitigation may protect the system from attack, it will not necessarily stop attackers from adversely impacting other users. Ensure that the application performs the appropriate error checks and error handling in case resources become unavailable (CWE-703).::", "observed_examples": "::REFERENCE:CVE-2009-4017:DESCRIPTION:Language interpreter does not restrict the number of temporary files being created when handling a MIME request with a large number of parts..:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2009-4017::REFERENCE:CVE-2009-2726:DESCRIPTION:Driver does not use a maximum width when invoking sscanf style functions, causing stack consumption.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2009-2726::REFERENCE:CVE-2009-2540:DESCRIPTION:Large integer value for a length property in an object causes a large amount of memory allocation.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2009-2540::REFERENCE:CVE-2009-2054:DESCRIPTION:Product allows exhaustion of file descriptors when processing a large number of TCP packets.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2009-2054::REFERENCE:CVE-2008-5180:DESCRIPTION:Communication product allows memory consumption with a large number of SIP requests, which cause many sessions to be created.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2008-5180::REFERENCE:CVE-2008-1700:DESCRIPTION:Product allows attackers to cause a denial of service via a large number of directives, each of which opens a separate window.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2008-1700::REFERENCE:CVE-2005-4650:DESCRIPTION:CMS does not restrict the number of searches that can occur simultaneously, leading to resource exhaustion.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2005-4650::REFERENCE:CVE-2020-15100:DESCRIPTION:web application scanner attempts to read an excessively large file created by a user, causing process termination:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-15100::", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "::TAXONOMY NAME:The CERT Oracle Secure Coding Standard for Java (2011):ENTRY ID:FIO04-J:ENTRY NAME:Close resources when they are no longer needed::TAXONOMY NAME:The CERT Oracle Secure Coding Standard for Java (2011):ENTRY ID:SER12-J:ENTRY NAME:Avoid memory and resource leaks during serialization::TAXONOMY NAME:The CERT Oracle Secure Coding Standard for Java (2011):ENTRY ID:MSC05-J:ENTRY NAME:Do not exhaust heap space::", "related_attack_patterns": "::125::130::147::197::229::230::231::469::482::486::487::488::489::490::491::493::494::495::496::528::", "notes": "::TYPE:Relationship:NOTE:This entry is different from uncontrolled resource consumption (CWE-400) in that there are other weaknesses that are related to inability to control resource consumption, such as holding on to a resource too long after use, or not correctly keeping track of active resources so that they can be managed and released when they are finished (CWE-771).::TYPE:Theoretical:NOTE:Vulnerability theory is largely about how behaviors and resources interact. Resource exhaustion can be regarded as either a consequence or an attack, depending on the perspective. This entry is an attempt to reflect one of the underlying weaknesses that enable these attacks (or consequences) to take place.::"}}, {"cwe": "CWE-1325", "cves": [{"id": "CVE-2020-36049", "score": ["V31", 7.5, "HIGH"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "PARTIAL", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "socket.io-parser before 3.4.1 allows attackers to cause a denial of service (memory consumption) via a large packet because a concatenation approach is used.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:socket:socket.io-parser:*:*:*:*:*:node.js:*:*", "published": "2021-01-08T00:15:11.187", "last_modified": "2021-07-21T11:39:23.747"}, {"id": "CVE-2019-20176", "score": ["V31", 7.5, "HIGH"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "PARTIAL", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "In Pure-FTPd 1.0.49, a stack exhaustion issue was discovered in the listdir function in ls.c.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:pureftpd:pure-ftpd:1.0.49:*:*:*:*:*:*:*", "published": "2019-12-31T15:15:11.223", "last_modified": "2023-01-20T20:43:40.457"}, {"id": "CVE-2013-1591", "score": ["V2", 10.0, "HIGH"], "v2_score": 10.0, "v2_exploitability_score": 10.0, "v2_impact_score": 10.0, "v2_vector": "AV:N/AC:L/Au:N/C:C/I:C/A:C", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:C/I:C/A:C", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "COMPLETE", "integrityImpact": "COMPLETE", "availabilityImpact": "COMPLETE", "baseScore": 10.0}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 10.0, "acInsufInfo": true, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "Stack-based buffer overflow in libpixman, as used in Pale Moon before 15.4 and possibly other products, has unspecified impact and context-dependent attack vectors.  NOTE: this issue might be resultant from an integer overflow in the fast_composite_scaled_bilinear function in pixman-inlines.h, which triggers an infinite loop.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:redhat:enterprise_virtualization:3.0:*:*:*:*:*:*:*", "published": "2013-01-31T23:55:01.037", "last_modified": "2019-05-22T13:29:00.273"}], "cwe_info": {"cwe_id": "1325", "name": "Improperly Controlled Sequential Memory Allocation", "weakness_abstraction": "Base", "status": "Incomplete", "description": "The product manages a group of objects or resources and performs a separate memory allocation for each object, but it does not properly limit the total amount of memory that is consumed by all of the combined objects.", "extended_description": "While the product might limit the amount of memory that is allocated in a single operation for a single object (such as a malloc of an array), if an attacker can cause multiple objects to be allocated in separate operations, then this might cause higher total memory consumption than the developer intended, leading to a denial of service.", "related_weaknesses": "::NATURE:ChildOf:CWE ID:770:VIEW ID:1000:ORDINAL:Primary::NATURE:PeerOf:CWE ID:789:VIEW ID:1000:ORDINAL:Primary::NATURE:CanPrecede:CWE ID:476:VIEW ID:1000::", "weakness_ordinalities": "::ORDINALITY:Primary::", "applicable_platforms": "::LANGUAGE NAME:C:LANGUAGE PREVALENCE:Undetermined::LANGUAGE NAME:C++:LANGUAGE PREVALENCE:Undetermined::LANGUAGE CLASS:Language-Independent:LANGUAGE PREVALENCE:Undetermined::", "background_details": "", "alternate_terms": "::TERM:Stack Exhaustion:DESCRIPTION:When a weakness allocates excessive memory on the stack, it is often described as stack exhaustion, which is a technical impact of the weakness. This technical impact is often encountered as a consequence of CWE-789 and/or CWE-1325.::", "modes_of_introduction": "::PHASE:Implementation::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Availability:IMPACT:DoS: Resource Consumption (Memory):NOTE:Not controlling memory allocation can result in a request for too much system memory, possibly leading to a crash of the application due to out-of-memory conditions, or the consumption of a large amount of memory on the system.::", "detection_methods": "", "potential_mitigations": "::PHASE:Implementation:DESCRIPTION:Ensure multiple allocations of the same kind of object are properly tracked - possibly across multiple sessions, requests, or messages. Define an appropriate strategy for handling requests that exceed the limit, and consider supporting a configuration option so that the administrator can extend the amount of memory to be used if necessary.::PHASE:Operation:DESCRIPTION:Run the program using system-provided resource limits for memory. This might still cause the program to crash or exit, but the impact to the rest of the system will be minimized.::", "observed_examples": "::REFERENCE:CVE-2020-36049:DESCRIPTION:JavaScript-based packet decoder uses concatenation of many small strings, causing out-of-memory (OOM) condition:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-36049::REFERENCE:CVE-2019-20176:DESCRIPTION:Product allocates a new buffer on the stack for each file in a directory, allowing stack exhaustion:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-20176::REFERENCE:CVE-2013-1591:DESCRIPTION:Chain: an integer overflow (CWE-190) in the image size calculation causes an infinite loop (CWE-835) which sequentially allocates buffers without limits (CWE-1325) until the stack is full.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2013-1591::", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "", "related_attack_patterns": "::130::", "notes": ""}}]}, {"capec_id": "CAPEC-125", "c_findings": [{"cwe": "CWE-404", "cves": [{"id": "CVE-1999-1127", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "PARTIAL", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "Windows NT 4.0 does not properly shut down invalid named pipe RPC connections, which allows remote attackers to cause a denial of service (resource exhaustion) via a series of connections containing malformed data, aka the \"Named Pipes Over RPC\" vulnerability.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:o:microsoft:windows_nt:4.0:*:*:*:*:*:*:*", "published": "1999-12-31T05:00:00.000", "last_modified": "2018-10-12T21:29:22.827"}, {"id": "CVE-2001-0830", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "PARTIAL", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "6tunnel 0.08 and earlier does not properly close sockets that were initiated by a client, which allows remote attackers to cause a denial of service (resource exhaustion) by repeatedly connecting to and disconnecting from the server.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:pld:6tunnel:*:*:*:*:*:*:*:*", "published": "2001-12-06T05:00:00.000", "last_modified": "2017-10-10T01:29:53.627"}, {"id": "CVE-2002-1372", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "PARTIAL", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "Common Unix Printing System (CUPS) 1.1.14 through 1.1.17 does not properly check the return values of various file and socket operations, which could allow a remote attacker to cause a denial of service (resource exhaustion) by causing file descriptors to be assigned and not released, as demonstrated by fanta.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:easy_software_products:cups:1.0.4:*:*:*:*:*:*:*", "published": "2002-12-26T05:00:00.000", "last_modified": "2017-10-10T01:30:11.767"}], "cwe_info": {"cwe_id": "404", "name": "Improper Resource Shutdown or Release", "weakness_abstraction": "Class", "status": "Draft", "description": "The program does not release or incorrectly releases a resource before it is made available for re-use.", "extended_description": "When a resource is created or allocated, the developer is responsible for properly releasing the resource as well as accounting for all potential paths of expiration or invalidation, such as a set period of time or revocation.", "related_weaknesses": "::NATURE:ChildOf:CWE ID:664:VIEW ID:1000:ORDINAL:Primary::NATURE:PeerOf:CWE ID:405:VIEW ID:1000::NATURE:CanPrecede:CWE ID:619:VIEW ID:1000::", "weakness_ordinalities": "::ORDINALITY:Primary:DESCRIPTION:Improper release or shutdown of resources can be primary to resource exhaustion, performance, and information confidentiality problems to name a few.::ORDINALITY:Resultant:DESCRIPTION:Improper release or shutdown of resources can be resultant from improper error handling or insufficient resource tracking.::", "applicable_platforms": "::LANGUAGE CLASS:Language-Independent:LANGUAGE PREVALENCE:Undetermined::", "background_details": "", "alternate_terms": "", "modes_of_introduction": "::PHASE:Architecture and Design::PHASE:Implementation::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Availability:SCOPE:Other:IMPACT:DoS: Resource Consumption (Other):IMPACT:Varies by Context:NOTE:Most unreleased resource issues result in general software reliability problems, but if an attacker can intentionally trigger a resource leak, the attacker might be able to launch a denial of service attack by depleting the resource pool.::SCOPE:Confidentiality:IMPACT:Read Application Data:NOTE:When a resource containing sensitive information is not correctly shutdown, it may expose the sensitive data in a subsequent allocation.::", "detection_methods": "::METHOD:Automated Dynamic Analysis:DESCRIPTION:This weakness can be detected using dynamic tools and techniques that interact with the software using large test suites with many diverse inputs, such as fuzz testing (fuzzing), robustness testing, and fault injection. The software's operation may slow down, but it should not become unstable, crash, or generate incorrect results. Resource clean up errors might be detected with a stress-test by calling the software simultaneously from a large number of threads or processes, and look for evidence of any unexpected behavior. The software's operation may slow down, but it should not become unstable, crash, or generate incorrect results.:EFFECTIVENESS:Moderate::METHOD:Manual Dynamic Analysis:DESCRIPTION:Identify error conditions that are not likely to occur during normal usage and trigger them. For example, run the program under low memory conditions, run with insufficient privileges or permissions, interrupt a transaction before it is completed, or disable connectivity to basic network services such as DNS. Monitor the software for any unexpected behavior. If you trigger an unhandled exception or similar error that was discovered and handled by the application's environment, it may still indicate unexpected conditions that were not handled by the application itself.::", "potential_mitigations": "::PHASE:Requirements:STRATEGY:Language Selection:DESCRIPTION:Use a language that does not allow this weakness to occur or provides constructs that make this weakness easier to avoid. For example, languages such as Java, Ruby, and Lisp perform automatic garbage collection that releases memory for objects that have been deallocated.::PHASE:Implementation:DESCRIPTION:It is good practice to be responsible for freeing all resources you allocate and to be consistent with how and where you free memory in a function. If you allocate memory that you intend to free upon completion of the function, you must be sure to free the memory at all exit points for that function including error conditions.::PHASE:Implementation:DESCRIPTION:Memory should be allocated/freed using matching functions such as malloc/free, new/delete, and new[]/delete[].::PHASE:Implementation:DESCRIPTION:When releasing a complex object or structure, ensure that you properly dispose of all of its member components, not just the object itself.::", "observed_examples": "::REFERENCE:CVE-1999-1127:DESCRIPTION:Does not shut down named pipe connections if malformed data is sent.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-1999-1127::REFERENCE:CVE-2001-0830:DESCRIPTION:Sockets not properly closed when attacker repeatedly connects and disconnects from server.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2001-0830::REFERENCE:CVE-2002-1372:DESCRIPTION:Return values of file/socket operations not checked, allowing resultant consumption of file descriptors.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2002-1372::", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "::TAXONOMY NAME:PLOVER:ENTRY NAME:Improper resource shutdown or release::TAXONOMY NAME:7 Pernicious Kingdoms:ENTRY NAME:Unreleased Resource::TAXONOMY NAME:OWASP Top Ten 2004:ENTRY ID:A9:ENTRY NAME:Denial of Service:MAPPING FIT:CWE More Specific::TAXONOMY NAME:CERT C Secure Coding:ENTRY ID:FIO42-C:ENTRY NAME:Close files when they are no longer needed:MAPPING FIT:CWE More Abstract::TAXONOMY NAME:CERT C Secure Coding:ENTRY ID:MEM31-C:ENTRY NAME:Free dynamically allocated memory when no longer needed:MAPPING FIT:CWE More Abstract::TAXONOMY NAME:The CERT Oracle Secure Coding Standard for Java (2011):ENTRY ID:FIO04-J:ENTRY NAME:Release resources when they are no longer needed::TAXONOMY NAME:Software Fault Patterns:ENTRY ID:SFP14:ENTRY NAME:Failure to release resource::", "related_attack_patterns": "::125::130::131::494::495::496::666::", "notes": "::TYPE:Relationship:NOTE:Overlaps memory leaks, asymmetric resource consumption, malformed input errors.::"}}, {"cwe": "CWE-770", "cves": [{"id": "CVE-2009-4017", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "PARTIAL", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "PHP before 5.2.12 and 5.3.x before 5.3.1 does not restrict the number of temporary files created when handling a multipart/form-data POST request, which allows remote attackers to cause a denial of service (resource exhaustion), and makes it easier for remote attackers to exploit local file inclusion vulnerabilities, via multiple requests, related to lack of support for the max_file_uploads directive.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:php:php:5.2.11:*:*:*:*:*:*:*", "published": "2009-11-24T00:30:00.500", "last_modified": "2018-10-10T19:48:06.190"}, {"id": "CVE-2009-2726", "score": ["V2", 7.8, "HIGH"], "v2_score": 7.8, "v2_exploitability_score": 10.0, "v2_impact_score": 6.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:N/A:C", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:N/A:C", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "COMPLETE", "baseScore": 7.8}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "The SIP channel driver in Asterisk Open Source 1.2.x before 1.2.34, 1.4.x before 1.4.26.1, 1.6.0.x before 1.6.0.12, and 1.6.1.x before 1.6.1.4; Asterisk Business Edition A.x.x, B.x.x before B.2.5.9, C.2.x before C.2.4.1, and C.3.x before C.3.1; and Asterisk Appliance s800i 1.2.x before 1.3.0.3 does not use a maximum width when invoking sscanf style functions, which allows remote attackers to cause a denial of service (stack memory consumption) via SIP packets containing large sequences of ASCII decimal characters, as demonstrated via vectors related to (1) the CSeq value in a SIP header, (2) large Content-Length value, and (3) SDP.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:asterisk:business_edition:b.1.3.2:*:*:*:*:*:*:*", "published": "2009-08-12T10:30:01.110", "last_modified": "2018-10-10T19:42:05.157"}, {"id": "CVE-2009-2540", "score": ["V2", 4.3, "MEDIUM"], "v2_score": 4.3, "v2_exploitability_score": 8.6, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:M/Au:N/C:N/I:N/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:M/Au:N/C:N/I:N/A:P", "accessVector": "NETWORK", "accessComplexity": "MEDIUM", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "PARTIAL", "baseScore": 4.3}, "baseSeverity": "MEDIUM", "exploitabilityScore": 8.6, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": true}], "description": "Opera, possibly 9.64 and earlier, allows remote attackers to cause a denial of service (memory consumption) via a large integer value for the length property of a Select object, a related issue to CVE-2009-1692.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:opera:opera_browser:*:*:*:*:*:*:*:*", "published": "2009-07-20T18:30:01.233", "last_modified": "2018-10-30T16:26:33.437"}, {"id": "CVE-2009-2054", "score": ["V2", 7.8, "HIGH"], "v2_score": 7.8, "v2_exploitability_score": 10.0, "v2_impact_score": 6.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:N/A:C", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:N/A:C", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "COMPLETE", "baseScore": 7.8}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "Cisco Unified Communications Manager (aka CUCM, formerly CallManager) 4.x, 5.x before 5.1(3g), 6.x before 6.1(4), 7.0 before 7.0(2a)su1, and 7.1 before 7.1(2a)su1 allows remote attackers to cause a denial of service (file-descriptor exhaustion and SIP outage) via a flood of TCP packets, aka Bug ID CSCsx23689.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:cisco:unified_communications_manager:*:*:business:*:*:*:*:*", "published": "2009-08-27T17:00:01.047", "last_modified": "2009-09-02T05:23:46.967"}, {"id": "CVE-2008-5180", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "PARTIAL", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "Microsoft Communicator, and Communicator in Microsoft Office 2010 beta, allows remote attackers to cause a denial of service (memory consumption) via a large number of SIP INVITE requests, which trigger the creation of many sessions.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:microsoft:office_communicator:*:*:*:*:*:*:*:*", "published": "2008-11-20T15:30:00.390", "last_modified": "2017-09-29T01:32:29.867"}, {"id": "CVE-2008-1700", "score": ["V2", 9.3, "HIGH"], "v2_score": 9.3, "v2_exploitability_score": 8.6, "v2_impact_score": 10.0, "v2_vector": "AV:N/AC:M/Au:N/C:C/I:C/A:C", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:M/Au:N/C:C/I:C/A:C", "accessVector": "NETWORK", "accessComplexity": "MEDIUM", "authentication": "NONE", "confidentialityImpact": "COMPLETE", "integrityImpact": "COMPLETE", "availabilityImpact": "COMPLETE", "baseScore": 9.3}, "baseSeverity": "HIGH", "exploitabilityScore": 8.6, "impactScore": 10.0, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": true}], "description": "The Web TransferCtrl Class 8,2,1,4 (iManFile.cab), as used in WorkSite Web 8.2 before SP1 P2, allows remote attackers to cause a denial of service (memory consumption) via a large number of SendNrlLink directives, which opens a separate window for each directive.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:interwoven:worksite_web:*:*:*:*:*:*:*:*", "published": "2008-04-08T18:05:00.000", "last_modified": "2017-08-08T01:30:22.713"}, {"id": "CVE-2005-4650", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "PARTIAL", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "Joomla! 1.03 does not restrict the number of \"Search\" Mambots, which allows remote attackers to cause a denial of service (resource consumption) via a large number of Search Mambots.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:joomla:joomla:1.03:*:*:*:*:*:*:*", "published": "2005-12-31T05:00:00.000", "last_modified": "2008-09-05T20:57:26.687"}, {"id": "CVE-2020-15100", "score": ["V31", 3.3, "LOW"], "v2_score": 2.1, "v2_exploitability_score": 3.9, "v2_impact_score": 2.9, "v2_vector": "AV:L/AC:L/Au:N/C:N/I:N/A:P", "access_vector": "LOCAL", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:L/AC:L/Au:N/C:N/I:N/A:P", "accessVector": "LOCAL", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "PARTIAL", "baseScore": 2.1}, "baseSeverity": "LOW", "exploitabilityScore": 3.9, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "In freewvs before 0.1.1, a user could create a large file that freewvs will try to read, which will terminate a scan process. This has been patched in 0.1.1.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:schokokeks:freewvs:*:*:*:*:*:*:*:*", "published": "2020-07-14T20:15:11.427", "last_modified": "2021-11-18T18:05:20.650"}], "cwe_info": {"cwe_id": "770", "name": "Allocation of Resources Without Limits or Throttling", "weakness_abstraction": "Base", "status": "Incomplete", "description": "The software allocates a reusable resource or group of resources on behalf of an actor without imposing any restrictions on the size or number of resources that can be allocated, in violation of the intended security policy for that actor.", "extended_description": "Code frequently has to work with limited resources, so programmers must be careful to ensure that resources are not consumed too quickly, or too easily. Without use of quotas, resource limits, or other protection mechanisms, it can be easy for an attacker to consume many resources by rapidly making many requests, or causing larger resources to be used than is needed. When too many resources are allocated, or if a single resource is too large, then it can prevent the code from working correctly, possibly leading to a denial of service.", "related_weaknesses": "::NATURE:ChildOf:CWE ID:400:VIEW ID:1000:ORDINAL:Primary::NATURE:ChildOf:CWE ID:665:VIEW ID:1000::NATURE:ChildOf:CWE ID:400:VIEW ID:1003:ORDINAL:Primary::", "weakness_ordinalities": "", "applicable_platforms": "::LANGUAGE CLASS:Language-Independent:LANGUAGE PREVALENCE:Often::", "background_details": "", "alternate_terms": "", "modes_of_introduction": "::PHASE:Architecture and Design:NOTE:OMISSION: This weakness is caused by missing a security tactic during the architecture and design phase.::PHASE:Implementation::PHASE:Operation::PHASE:System Configuration::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Availability:IMPACT:DoS: Resource Consumption (CPU):IMPACT:DoS: Resource Consumption (Memory):IMPACT:DoS: Resource Consumption (Other):NOTE:When allocating resources without limits, an attacker could prevent other systems, applications, or processes from accessing the same type of resource.::", "detection_methods": "::METHOD:Manual Static Analysis:DESCRIPTION:Manual static analysis can be useful for finding this weakness, but it might not achieve desired code coverage within limited time constraints. If denial-of-service is not considered a significant risk, or if there is strong emphasis on consequences such as code execution, then manual analysis may not focus on this weakness at all.::METHOD:Fuzzing:DESCRIPTION:While fuzzing is typically geared toward finding low-level implementation bugs, it can inadvertently find uncontrolled resource allocation problems. This can occur when the fuzzer generates a large number of test cases but does not restart the targeted software in between test cases. If an individual test case produces a crash, but it does not do so reliably, then an inability to limit resource allocation may be the cause. When the allocation is directly affected by numeric inputs, then fuzzing may produce indications of this weakness.:EFFECTIVENESS:Opportunistic::METHOD:Automated Dynamic Analysis:DESCRIPTION:Certain automated dynamic analysis techniques may be effective in producing side effects of uncontrolled resource allocation problems, especially with resources such as processes, memory, and connections. The technique may involve generating a large number of requests to the software within a short time frame. Manual analysis is likely required to interpret the results.::METHOD:Automated Static Analysis:DESCRIPTION:Specialized configuration or tuning may be required to train automated tools to recognize this weakness. Automated static analysis typically has limited utility in recognizing unlimited allocation problems, except for the missing release of program-independent system resources such as files, sockets, and processes, or unchecked arguments to memory. For system resources, automated static analysis may be able to detect circumstances in which resources are not released after they have expired, or if too much of a resource is requested at once, as can occur with memory. Automated analysis of configuration files may be able to detect settings that do not specify a maximum value. Automated static analysis tools will not be appropriate for detecting exhaustion of custom resources, such as an intended security policy in which a bulletin board user is only allowed to make a limited number of posts per day.::", "potential_mitigations": "::PHASE:Requirements:DESCRIPTION:Clearly specify the minimum and maximum expectations for capabilities, and dictate which behaviors are acceptable when resource allocation reaches limits.::PHASE:Architecture and Design:DESCRIPTION:Limit the amount of resources that are accessible to unprivileged users. Set per-user limits for resources. Allow the system administrator to define these limits. Be careful to avoid CWE-410.::PHASE:Architecture and Design:DESCRIPTION:Design throttling mechanisms into the system architecture. The best protection is to limit the amount of resources that an unauthorized user can cause to be expended. A strong authentication and access control model will help prevent such attacks from occurring in the first place, and it will help the administrator to identify who is committing the abuse. The login application should be protected against DoS attacks as much as possible. Limiting the database access, perhaps by caching result sets, can help minimize the resources expended. To further limit the potential for a DoS attack, consider tracking the rate of requests received from users and blocking requests that exceed a defined rate threshold.::PHASE:Implementation:STRATEGY:Input Validation:DESCRIPTION:Assume all input is malicious. Use an accept known good input validation strategy, i.e., use a list of acceptable inputs that strictly conform to specifications. Reject any input that does not strictly conform to specifications, or transform it into something that does. When performing input validation, consider all potentially relevant properties, including length, type of input, the full range of acceptable values, missing or extra inputs, syntax, consistency across related fields, and conformance to business rules. As an example of business rule logic, boat may be syntactically valid because it only contains alphanumeric characters, but it is not valid if the input is only expected to contain colors such as red or blue. Do not rely exclusively on looking for malicious or malformed inputs. This is likely to miss at least one undesirable input, especially if the code's environment changes. This can give attackers enough room to bypass the intended validation. However, denylists can be useful for detecting potential attacks or determining which inputs are so malformed that they should be rejected outright.::PHASE:Architecture and Design:DESCRIPTION:For any security checks that are performed on the client side, ensure that these checks are duplicated on the server side, in order to avoid CWE-602. Attackers can bypass the client-side checks by modifying values after the checks have been performed, or by changing the client to remove the client-side checks entirely. Then, these modified values would be submitted to the server.::PHASE:Architecture and Design:DESCRIPTION:Mitigation of resource exhaustion attacks requires that the target system either: recognizes the attack and denies that user further access for a given amount of time, typically by using increasing time delays uniformly throttles all requests in order to make it more difficult to consume resources more quickly than they can again be freed. The first of these solutions is an issue in itself though, since it may allow attackers to prevent the use of the system by a particular valid user. If the attacker impersonates the valid user, they may be able to prevent the user from accessing the server in question. The second solution can be difficult to effectively institute -- and even when properly done, it does not provide a full solution. It simply requires more resources on the part of the attacker.::PHASE:Architecture and Design:DESCRIPTION:Ensure that protocols have specific limits of scale placed on them.::PHASE:Architecture and Design Implementation:DESCRIPTION:If the program must fail, ensure that it fails gracefully (fails closed). There may be a temptation to simply let the program fail poorly in cases such as low memory conditions, but an attacker may be able to assert control before the software has fully exited. Alternately, an uncontrolled failure could cause cascading problems with other downstream components; for example, the program could send a signal to a downstream process so the process immediately knows that a problem has occurred and has a better chance of recovery. Ensure that all failures in resource allocation place the system into a safe posture.::PHASE:Operation Architecture and Design:STRATEGY:Resource Limitation:DESCRIPTION:Use resource-limiting settings provided by the operating system or environment. For example, when managing system resources in POSIX, setrlimit() can be used to set limits for certain types of resources, and getrlimit() can determine how many resources are available. However, these functions are not available on all operating systems. When the current levels get close to the maximum that is defined for the application (see CWE-770), then limit the allocation of further resources to privileged users; alternately, begin releasing resources for less-privileged users. While this mitigation may protect the system from attack, it will not necessarily stop attackers from adversely impacting other users. Ensure that the application performs the appropriate error checks and error handling in case resources become unavailable (CWE-703).::", "observed_examples": "::REFERENCE:CVE-2009-4017:DESCRIPTION:Language interpreter does not restrict the number of temporary files being created when handling a MIME request with a large number of parts..:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2009-4017::REFERENCE:CVE-2009-2726:DESCRIPTION:Driver does not use a maximum width when invoking sscanf style functions, causing stack consumption.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2009-2726::REFERENCE:CVE-2009-2540:DESCRIPTION:Large integer value for a length property in an object causes a large amount of memory allocation.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2009-2540::REFERENCE:CVE-2009-2054:DESCRIPTION:Product allows exhaustion of file descriptors when processing a large number of TCP packets.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2009-2054::REFERENCE:CVE-2008-5180:DESCRIPTION:Communication product allows memory consumption with a large number of SIP requests, which cause many sessions to be created.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2008-5180::REFERENCE:CVE-2008-1700:DESCRIPTION:Product allows attackers to cause a denial of service via a large number of directives, each of which opens a separate window.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2008-1700::REFERENCE:CVE-2005-4650:DESCRIPTION:CMS does not restrict the number of searches that can occur simultaneously, leading to resource exhaustion.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2005-4650::REFERENCE:CVE-2020-15100:DESCRIPTION:web application scanner attempts to read an excessively large file created by a user, causing process termination:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-15100::", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "::TAXONOMY NAME:The CERT Oracle Secure Coding Standard for Java (2011):ENTRY ID:FIO04-J:ENTRY NAME:Close resources when they are no longer needed::TAXONOMY NAME:The CERT Oracle Secure Coding Standard for Java (2011):ENTRY ID:SER12-J:ENTRY NAME:Avoid memory and resource leaks during serialization::TAXONOMY NAME:The CERT Oracle Secure Coding Standard for Java (2011):ENTRY ID:MSC05-J:ENTRY NAME:Do not exhaust heap space::", "related_attack_patterns": "::125::130::147::197::229::230::231::469::482::486::487::488::489::490::491::493::494::495::496::528::", "notes": "::TYPE:Relationship:NOTE:This entry is different from uncontrolled resource consumption (CWE-400) in that there are other weaknesses that are related to inability to control resource consumption, such as holding on to a resource too long after use, or not correctly keeping track of active resources so that they can be managed and released when they are finished (CWE-771).::TYPE:Theoretical:NOTE:Vulnerability theory is largely about how behaviors and resources interact. Resource exhaustion can be regarded as either a consequence or an attack, depending on the perspective. This entry is an attempt to reflect one of the underlying weaknesses that enable these attacks (or consequences) to take place.::"}}]}]}, {"technique_id": "T1578", "t_findings": [{"capec_id": "CAPEC-227", "c_findings": [{"cwe": "CWE-400", "cves": [{"id": "CVE-2020-3566", "score": ["V31", 7.5, "HIGH"], "v2_score": 7.8, "v2_exploitability_score": 10.0, "v2_impact_score": 6.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:N/A:C", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:N/A:C", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "COMPLETE", "baseScore": 7.8}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "A vulnerability in the Distance Vector Multicast Routing Protocol (DVMRP) feature of Cisco IOS XR Software could allow an unauthenticated, remote attacker to exhaust process memory of an affected device. The vulnerability is due to insufficient queue management for Internet Group Management Protocol (IGMP) packets. An attacker could exploit this vulnerability by sending crafted IGMP traffic to an affected device. A successful exploit could allow the attacker to cause memory exhaustion, resulting in instability of other processes. These processes may include, but are not limited to, interior and exterior routing protocols. Cisco will release software updates that address this vulnerability.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:o:cisco:ios_xr:6.4.2:*:*:*:*:*:*:*", "published": "2020-08-29T16:15:09.797", "last_modified": "2022-10-21T19:48:16.433"}, {"id": "CVE-2009-2874", "score": ["V2", 7.8, "HIGH"], "v2_score": 7.8, "v2_exploitability_score": 10.0, "v2_impact_score": 6.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:N/A:C", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:N/A:C", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "COMPLETE", "baseScore": 7.8}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "The TimesTenD process in Cisco Unified Presence 1.x, 6.x before 6.0(6), and 7.x before 7.0(4) allows remote attackers to cause a denial of service (process crash) via a large number of TCP connections to ports 16200 and 22794, aka Bug ID CSCsy17662.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:cisco:unified_presence_server:1.0:*:*:*:*:*:*:*", "published": "2009-10-16T16:30:00.640", "last_modified": "2017-08-17T01:30:56.320"}, {"id": "CVE-2009-1928", "score": ["V2", 7.8, "HIGH"], "v2_score": 7.8, "v2_exploitability_score": 10.0, "v2_impact_score": 6.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:N/A:C", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:N/A:C", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "COMPLETE", "baseScore": 7.8}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "Stack consumption vulnerability in the LDAP service in Active Directory on Microsoft Windows 2000 SP4, Server 2003 SP2, and Server 2008 Gold and SP2; Active Directory Application Mode (ADAM) on Windows XP SP2 and SP3 and Server 2003 SP2; and Active Directory Lightweight Directory Service (AD LDS) on Windows Server 2008 Gold and SP2 allows remote attackers to cause a denial of service (system hang) via a malformed (1) LDAP or (2) LDAPS request, aka \"LSASS Recursive Stack Overflow Vulnerability.\"", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:o:microsoft:windows_2000:*:sp4:*:*:*:*:*:*", "published": "2009-11-11T19:30:00.267", "last_modified": "2019-04-30T14:27:13.913"}, {"id": "CVE-2009-2858", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "PARTIAL", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "Memory leak in the Security component in IBM DB2 8.1 before FP18 on Unix platforms allows attackers to cause a denial of service (memory consumption) via unspecified vectors, related to private memory within the DB2 memory structure.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:ibm:db2:*:fp17:*:*:*:*:*:*", "published": "2009-08-19T17:30:01.187", "last_modified": "2009-08-21T04:00:00.000"}, {"id": "CVE-2009-2726", "score": ["V2", 7.8, "HIGH"], "v2_score": 7.8, "v2_exploitability_score": 10.0, "v2_impact_score": 6.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:N/A:C", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:N/A:C", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "COMPLETE", "baseScore": 7.8}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "The SIP channel driver in Asterisk Open Source 1.2.x before 1.2.34, 1.4.x before 1.4.26.1, 1.6.0.x before 1.6.0.12, and 1.6.1.x before 1.6.1.4; Asterisk Business Edition A.x.x, B.x.x before B.2.5.9, C.2.x before C.2.4.1, and C.3.x before C.3.1; and Asterisk Appliance s800i 1.2.x before 1.3.0.3 does not use a maximum width when invoking sscanf style functions, which allows remote attackers to cause a denial of service (stack memory consumption) via SIP packets containing large sequences of ASCII decimal characters, as demonstrated via vectors related to (1) the CSeq value in a SIP header, (2) large Content-Length value, and (3) SDP.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:asterisk:business_edition:b.1.3.2:*:*:*:*:*:*:*", "published": "2009-08-12T10:30:01.110", "last_modified": "2018-10-10T19:42:05.157"}, {"id": "CVE-2009-2540", "score": ["V2", 4.3, "MEDIUM"], "v2_score": 4.3, "v2_exploitability_score": 8.6, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:M/Au:N/C:N/I:N/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:M/Au:N/C:N/I:N/A:P", "accessVector": "NETWORK", "accessComplexity": "MEDIUM", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "PARTIAL", "baseScore": 4.3}, "baseSeverity": "MEDIUM", "exploitabilityScore": 8.6, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": true}], "description": "Opera, possibly 9.64 and earlier, allows remote attackers to cause a denial of service (memory consumption) via a large integer value for the length property of a Select object, a related issue to CVE-2009-1692.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:opera:opera_browser:*:*:*:*:*:*:*:*", "published": "2009-07-20T18:30:01.233", "last_modified": "2018-10-30T16:26:33.437"}, {"id": "CVE-2009-2299", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "PARTIAL", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "The Artofdefence Hyperguard Web Application Firewall (WAF) module before 2.5.5-11635, 3.0 before 3.0.3-11636, and 3.1 before 3.1.1-11637, a module for the Apache HTTP Server, allows remote attackers to cause a denial of service (memory consumption) via an HTTP request with a large Content-Length value but no POST data.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:hyperguard_web_application_firewall_project:hyperguard_web_application_firewall:*:*:*:*:*:*:*:*", "published": "2009-07-02T10:30:00.407", "last_modified": "2020-11-16T20:48:00.137"}, {"id": "CVE-2009-2054", "score": ["V2", 7.8, "HIGH"], "v2_score": 7.8, "v2_exploitability_score": 10.0, "v2_impact_score": 6.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:N/A:C", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:N/A:C", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "COMPLETE", "baseScore": 7.8}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "Cisco Unified Communications Manager (aka CUCM, formerly CallManager) 4.x, 5.x before 5.1(3g), 6.x before 6.1(4), 7.0 before 7.0(2a)su1, and 7.1 before 7.1(2a)su1 allows remote attackers to cause a denial of service (file-descriptor exhaustion and SIP outage) via a flood of TCP packets, aka Bug ID CSCsx23689.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:cisco:unified_communications_manager:*:*:business:*:*:*:*:*", "published": "2009-08-27T17:00:01.047", "last_modified": "2009-09-02T05:23:46.967"}, {"id": "CVE-2008-5180", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "PARTIAL", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "Microsoft Communicator, and Communicator in Microsoft Office 2010 beta, allows remote attackers to cause a denial of service (memory consumption) via a large number of SIP INVITE requests, which trigger the creation of many sessions.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:microsoft:office_communicator:*:*:*:*:*:*:*:*", "published": "2008-11-20T15:30:00.390", "last_modified": "2017-09-29T01:32:29.867"}, {"id": "CVE-2008-2121", "score": ["V2", 7.8, "HIGH"], "v2_score": 7.8, "v2_exploitability_score": 10.0, "v2_impact_score": 6.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:N/A:C", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:N/A:C", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "COMPLETE", "baseScore": 7.8}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "The TCP implementation in Sun Solaris 8, 9, and 10 allows remote attackers to cause a denial of service (CPU consumption and new connection timeouts) via a TCP SYN flood attack.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:o:sun:sunos:5.8:*:*:*:*:*:*:*", "published": "2008-05-09T15:20:00.000", "last_modified": "2018-10-30T16:25:15.027"}, {"id": "CVE-2008-2122", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "PARTIAL", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "IBM Rational Build Forge 7.0.2 allows remote attackers to cause a denial of service (CPU consumption) via a port scan, which spawns multiple bfagent server processes that attempt to read data from closed sockets.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:ibm:rational_build_forge:7.0.2:*:*:*:*:*:*:*", "published": "2008-05-09T15:20:00.000", "last_modified": "2017-08-08T01:30:47.057"}, {"id": "CVE-2008-1700", "score": ["V2", 9.3, "HIGH"], "v2_score": 9.3, "v2_exploitability_score": 8.6, "v2_impact_score": 10.0, "v2_vector": "AV:N/AC:M/Au:N/C:C/I:C/A:C", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:M/Au:N/C:C/I:C/A:C", "accessVector": "NETWORK", "accessComplexity": "MEDIUM", "authentication": "NONE", "confidentialityImpact": "COMPLETE", "integrityImpact": "COMPLETE", "availabilityImpact": "COMPLETE", "baseScore": 9.3}, "baseSeverity": "HIGH", "exploitabilityScore": 8.6, "impactScore": 10.0, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": true}], "description": "The Web TransferCtrl Class 8,2,1,4 (iManFile.cab), as used in WorkSite Web 8.2 before SP1 P2, allows remote attackers to cause a denial of service (memory consumption) via a large number of SendNrlLink directives, which opens a separate window for each directive.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:interwoven:worksite_web:*:*:*:*:*:*:*:*", "published": "2008-04-08T18:05:00.000", "last_modified": "2017-08-08T01:30:22.713"}, {"id": "CVE-2007-4103", "score": ["V2", 7.8, "HIGH"], "v2_score": 7.8, "v2_exploitability_score": 10.0, "v2_impact_score": 6.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:N/A:C", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:N/A:C", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "COMPLETE", "baseScore": 7.8}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "The IAX2 channel driver (chan_iax2) in Asterisk Open 1.2.x before 1.2.23, 1.4.x before 1.4.9, and Asterisk Appliance Developer Kit before 0.6.0, when configured to allow unauthenticated calls, allows remote attackers to cause a denial of service (resource exhaustion) via a flood of calls that do not complete a 3-way handshake, which causes an ast_channel to be allocated but not released.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:digium:asterisk:1.2.20:*:*:*:*:*:*:*", "published": "2007-07-31T10:17:00.000", "last_modified": "2018-10-15T21:33:14.243"}, {"id": "CVE-2006-1173", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "PARTIAL", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "Sendmail before 8.13.7 allows remote attackers to cause a denial of service via deeply nested, malformed multipart MIME messages that exhaust the stack during the recursive mime8to7 function for performing 8-bit to 7-bit conversion, which prevents Sendmail from delivering queued messages and might lead to disk consumption by core dump files.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:sendmail:sendmail:*:*:*:*:*:*:*:*", "published": "2006-06-07T23:06:00.000", "last_modified": "2018-10-18T16:31:04.043"}, {"id": "CVE-2007-0897", "score": ["V2", 4.3, "MEDIUM"], "v2_score": 4.3, "v2_exploitability_score": 8.6, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:M/Au:N/C:N/I:N/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:M/Au:N/C:N/I:N/A:P", "accessVector": "NETWORK", "accessComplexity": "MEDIUM", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "PARTIAL", "baseScore": 4.3}, "baseSeverity": "MEDIUM", "exploitabilityScore": 8.6, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "Clam AntiVirus ClamAV before 0.90 does not close open file descriptors under certain conditions, which allows remote attackers to cause a denial of service (file descriptor consumption and failed scans) via CAB archives with a cabinet header record length of zero, which causes a function to return without closing a file descriptor.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:clam_anti-virus:clamav:*:*:*:*:*:*:*:*", "published": "2007-02-16T19:28:00.000", "last_modified": "2017-07-29T01:30:29.563"}], "cwe_info": {"cwe_id": "400", "name": "Uncontrolled Resource Consumption", "weakness_abstraction": "Class", "status": "Draft", "description": "The software does not properly control the allocation and maintenance of a limited resource, thereby enabling an actor to influence the amount of resources consumed, eventually leading to the exhaustion of available resources.", "extended_description": "Limited resources include memory, file system storage, database connection pool entries, and CPU. If an attacker can trigger the allocation of these limited resources, but the number or size of the resources is not controlled, then the attacker could cause a denial of service that consumes all available resources. This would prevent valid users from accessing the software, and it could potentially have an impact on the surrounding environment. For example, a memory exhaustion attack against an application could slow down the application as well as its host operating system. There are at least three distinct scenarios which can commonly lead to resource exhaustion: Lack of throttling for the number of allocated resources Losing all references to a resource before reaching the shutdown stage Not closing/returning a resource after processing Resource exhaustion problems are often result due to an incorrect implementation of the following situations: Error conditions and other exceptional circumstances. Confusion over which part of the program is responsible for releasing the resource.", "related_weaknesses": "::NATURE:ChildOf:CWE ID:664:VIEW ID:1000:ORDINAL:Primary::", "weakness_ordinalities": "", "applicable_platforms": "::LANGUAGE CLASS:Language-Independent:LANGUAGE PREVALENCE:Undetermined::", "background_details": "", "alternate_terms": "::TERM:Resource Exhaustion::", "modes_of_introduction": "::PHASE:Operation::PHASE:Architecture and Design::PHASE:Implementation::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Availability:IMPACT:DoS: Crash, Exit, or Restart:IMPACT:DoS: Resource Consumption (CPU):IMPACT:DoS: Resource Consumption (Memory):IMPACT:DoS: Resource Consumption (Other):NOTE:The most common result of resource exhaustion is denial of service. The software may slow down, crash due to unhandled errors, or lock out legitimate users.::SCOPE:Access Control:SCOPE:Other:IMPACT:Bypass Protection Mechanism:IMPACT:Other:NOTE:In some cases it may be possible to force the software to fail open in the event of resource exhaustion. The state of the software -- and possibly the security functionality - may then be compromised.::", "detection_methods": "::METHOD:Automated Static Analysis:DESCRIPTION:Automated static analysis typically has limited utility in recognizing resource exhaustion problems, except for program-independent system resources such as files, sockets, and processes. For system resources, automated static analysis may be able to detect circumstances in which resources are not released after they have expired. Automated analysis of configuration files may be able to detect settings that do not specify a maximum value. Automated static analysis tools will not be appropriate for detecting exhaustion of custom resources, such as an intended security policy in which a bulletin board user is only allowed to make a limited number of posts per day.:EFFECTIVENESS:Limited::METHOD:Automated Dynamic Analysis:DESCRIPTION:Certain automated dynamic analysis techniques may be effective in spotting resource exhaustion problems, especially with resources such as processes, memory, and connections. The technique may involve generating a large number of requests to the software within a short time frame.:EFFECTIVENESS:Moderate::METHOD:Fuzzing:DESCRIPTION:While fuzzing is typically geared toward finding low-level implementation bugs, it can inadvertently find resource exhaustion problems. This can occur when the fuzzer generates a large number of test cases but does not restart the targeted software in between test cases. If an individual test case produces a crash, but it does not do so reliably, then an inability to handle resource exhaustion may be the cause.:EFFECTIVENESS:Opportunistic::", "potential_mitigations": "::PHASE:Architecture and Design:DESCRIPTION:Design throttling mechanisms into the system architecture. The best protection is to limit the amount of resources that an unauthorized user can cause to be expended. A strong authentication and access control model will help prevent such attacks from occurring in the first place. The login application should be protected against DoS attacks as much as possible. Limiting the database access, perhaps by caching result sets, can help minimize the resources expended. To further limit the potential for a DoS attack, consider tracking the rate of requests received from users and blocking requests that exceed a defined rate threshold.::PHASE:Architecture and Design:DESCRIPTION:Mitigation of resource exhaustion attacks requires that the target system either: recognizes the attack and denies that user further access for a given amount of time, or uniformly throttles all requests in order to make it more difficult to consume resources more quickly than they can again be freed. The first of these solutions is an issue in itself though, since it may allow attackers to prevent the use of the system by a particular valid user. If the attacker impersonates the valid user, they may be able to prevent the user from accessing the server in question. The second solution is simply difficult to effectively institute -- and even when properly done, it does not provide a full solution. It simply makes the attack require more resources on the part of the attacker.::PHASE:Architecture and Design:DESCRIPTION:Ensure that protocols have specific limits of scale placed on them.::PHASE:Implementation:DESCRIPTION:Ensure that all failures in resource allocation place the system into a safe posture.::", "observed_examples": "::REFERENCE:CVE-2020-3566:DESCRIPTION:Resource exhaustion in distributed OS because of insufficient IGMP queue management, as exploited in the wild per CISA KEV.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-3566::REFERENCE:CVE-2009-2874:DESCRIPTION:Product allows attackers to cause a crash via a large number of connections.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2009-2874::REFERENCE:CVE-2009-1928:DESCRIPTION:Malformed request triggers uncontrolled recursion, leading to stack exhaustion.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2009-1928::REFERENCE:CVE-2009-2858:DESCRIPTION:Chain: memory leak (CWE-404) leads to resource exhaustion.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2009-2858::REFERENCE:CVE-2009-2726:DESCRIPTION:Driver does not use a maximum width when invoking sscanf style functions, causing stack consumption.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2009-2726::REFERENCE:CVE-2009-2540:DESCRIPTION:Large integer value for a length property in an object causes a large amount of memory allocation.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2009-2540::REFERENCE:CVE-2009-2299:DESCRIPTION:Web application firewall consumes excessive memory when an HTTP request contains a large Content-Length value but no POST data.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2009-2299::REFERENCE:CVE-2009-2054:DESCRIPTION:Product allows exhaustion of file descriptors when processing a large number of TCP packets.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2009-2054::REFERENCE:CVE-2008-5180:DESCRIPTION:Communication product allows memory consumption with a large number of SIP requests, which cause many sessions to be created.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2008-5180::REFERENCE:CVE-2008-2121:DESCRIPTION:TCP implementation allows attackers to consume CPU and prevent new connections using a TCP SYN flood attack.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2008-2121::REFERENCE:CVE-2008-2122:DESCRIPTION:Port scan triggers CPU consumption with processes that attempt to read data from closed sockets.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2008-2122::REFERENCE:CVE-2008-1700:DESCRIPTION:Product allows attackers to cause a denial of service via a large number of directives, each of which opens a separate window.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2008-1700::REFERENCE:CVE-2007-4103:DESCRIPTION:Product allows resource exhaustion via a large number of calls that do not complete a 3-way handshake.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2007-4103::REFERENCE:CVE-2006-1173:DESCRIPTION:Mail server does not properly handle deeply nested multipart MIME messages, leading to stack exhaustion.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2006-1173::REFERENCE:CVE-2007-0897:DESCRIPTION:Chain: anti-virus product encounters a malformed file but returns from a function without closing a file descriptor (CWE-775) leading to file descriptor consumption (CWE-400) and failed scans.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2007-0897::", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "::TAXONOMY NAME:CLASP:ENTRY NAME:Resource exhaustion (file descriptor, disk space, sockets, ...)::TAXONOMY NAME:OWASP Top Ten 2004:ENTRY ID:A9:ENTRY NAME:Denial of Service:MAPPING FIT:CWE More Specific::TAXONOMY NAME:WASC:ENTRY ID:10:ENTRY NAME:Denial of Service::TAXONOMY NAME:WASC:ENTRY ID:41:ENTRY NAME:XML Attribute Blowup::TAXONOMY NAME:The CERT Oracle Secure Coding Standard for Java (2011):ENTRY ID:SER12-J:ENTRY NAME:Avoid memory and resource leaks during serialization::TAXONOMY NAME:The CERT Oracle Secure Coding Standard for Java (2011):ENTRY ID:MSC05-J:ENTRY NAME:Do not exhaust heap space::TAXONOMY NAME:Software Fault Patterns:ENTRY ID:SFP13:ENTRY NAME:Unrestricted Consumption::", "related_attack_patterns": "::147::492::", "notes": "::TYPE:Maintenance:NOTE:Resource consumption could be interpreted as a consequence instead of an insecure behavior, so this entry is being considered for modification. It appears to be referenced too frequently when more precise mappings are available. Some of its children, such as CWE-771, might be better considered as a chain.::TYPE:Theoretical:NOTE:Vulnerability theory is largely about how behaviors and resources interact. Resource exhaustion can be regarded as either a consequence or an attack, depending on the perspective. This entry is an attempt to reflect the underlying weaknesses that enable these attacks (or consequences) to take place.::TYPE:Other:NOTE:Database queries that take a long time to process are good DoS targets. An attacker would have to write a few lines of Perl code to generate enough traffic to exceed the site's ability to keep up. This would effectively prevent authorized users from using the site at all. Resources can be exploited simply by ensuring that the target machine must do much more work and consume more resources in order to service a request than the attacker must do to initiate a request. A prime example of this can be found in old switches that were vulnerable to macof attacks (so named for a tool developed by Dugsong). These attacks flooded a switch with random IP and MAC address combinations, therefore exhausting the switch's cache, which held the information of which port corresponded to which MAC addresses. Once this cache was exhausted, the switch would fail in an insecure way and would begin to act simply as a hub, broadcasting all traffic on all ports and allowing for basic sniffing attacks.::"}}]}, {"capec_id": "CAPEC-131", "c_findings": [{"cwe": "CWE-404", "cves": [{"id": "CVE-1999-1127", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "PARTIAL", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "Windows NT 4.0 does not properly shut down invalid named pipe RPC connections, which allows remote attackers to cause a denial of service (resource exhaustion) via a series of connections containing malformed data, aka the \"Named Pipes Over RPC\" vulnerability.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:o:microsoft:windows_nt:4.0:*:*:*:*:*:*:*", "published": "1999-12-31T05:00:00.000", "last_modified": "2018-10-12T21:29:22.827"}, {"id": "CVE-2001-0830", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "PARTIAL", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "6tunnel 0.08 and earlier does not properly close sockets that were initiated by a client, which allows remote attackers to cause a denial of service (resource exhaustion) by repeatedly connecting to and disconnecting from the server.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:pld:6tunnel:*:*:*:*:*:*:*:*", "published": "2001-12-06T05:00:00.000", "last_modified": "2017-10-10T01:29:53.627"}, {"id": "CVE-2002-1372", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "PARTIAL", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "Common Unix Printing System (CUPS) 1.1.14 through 1.1.17 does not properly check the return values of various file and socket operations, which could allow a remote attacker to cause a denial of service (resource exhaustion) by causing file descriptors to be assigned and not released, as demonstrated by fanta.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:easy_software_products:cups:1.0.4:*:*:*:*:*:*:*", "published": "2002-12-26T05:00:00.000", "last_modified": "2017-10-10T01:30:11.767"}], "cwe_info": {"cwe_id": "404", "name": "Improper Resource Shutdown or Release", "weakness_abstraction": "Class", "status": "Draft", "description": "The program does not release or incorrectly releases a resource before it is made available for re-use.", "extended_description": "When a resource is created or allocated, the developer is responsible for properly releasing the resource as well as accounting for all potential paths of expiration or invalidation, such as a set period of time or revocation.", "related_weaknesses": "::NATURE:ChildOf:CWE ID:664:VIEW ID:1000:ORDINAL:Primary::NATURE:PeerOf:CWE ID:405:VIEW ID:1000::NATURE:CanPrecede:CWE ID:619:VIEW ID:1000::", "weakness_ordinalities": "::ORDINALITY:Primary:DESCRIPTION:Improper release or shutdown of resources can be primary to resource exhaustion, performance, and information confidentiality problems to name a few.::ORDINALITY:Resultant:DESCRIPTION:Improper release or shutdown of resources can be resultant from improper error handling or insufficient resource tracking.::", "applicable_platforms": "::LANGUAGE CLASS:Language-Independent:LANGUAGE PREVALENCE:Undetermined::", "background_details": "", "alternate_terms": "", "modes_of_introduction": "::PHASE:Architecture and Design::PHASE:Implementation::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Availability:SCOPE:Other:IMPACT:DoS: Resource Consumption (Other):IMPACT:Varies by Context:NOTE:Most unreleased resource issues result in general software reliability problems, but if an attacker can intentionally trigger a resource leak, the attacker might be able to launch a denial of service attack by depleting the resource pool.::SCOPE:Confidentiality:IMPACT:Read Application Data:NOTE:When a resource containing sensitive information is not correctly shutdown, it may expose the sensitive data in a subsequent allocation.::", "detection_methods": "::METHOD:Automated Dynamic Analysis:DESCRIPTION:This weakness can be detected using dynamic tools and techniques that interact with the software using large test suites with many diverse inputs, such as fuzz testing (fuzzing), robustness testing, and fault injection. The software's operation may slow down, but it should not become unstable, crash, or generate incorrect results. Resource clean up errors might be detected with a stress-test by calling the software simultaneously from a large number of threads or processes, and look for evidence of any unexpected behavior. The software's operation may slow down, but it should not become unstable, crash, or generate incorrect results.:EFFECTIVENESS:Moderate::METHOD:Manual Dynamic Analysis:DESCRIPTION:Identify error conditions that are not likely to occur during normal usage and trigger them. For example, run the program under low memory conditions, run with insufficient privileges or permissions, interrupt a transaction before it is completed, or disable connectivity to basic network services such as DNS. Monitor the software for any unexpected behavior. If you trigger an unhandled exception or similar error that was discovered and handled by the application's environment, it may still indicate unexpected conditions that were not handled by the application itself.::", "potential_mitigations": "::PHASE:Requirements:STRATEGY:Language Selection:DESCRIPTION:Use a language that does not allow this weakness to occur or provides constructs that make this weakness easier to avoid. For example, languages such as Java, Ruby, and Lisp perform automatic garbage collection that releases memory for objects that have been deallocated.::PHASE:Implementation:DESCRIPTION:It is good practice to be responsible for freeing all resources you allocate and to be consistent with how and where you free memory in a function. If you allocate memory that you intend to free upon completion of the function, you must be sure to free the memory at all exit points for that function including error conditions.::PHASE:Implementation:DESCRIPTION:Memory should be allocated/freed using matching functions such as malloc/free, new/delete, and new[]/delete[].::PHASE:Implementation:DESCRIPTION:When releasing a complex object or structure, ensure that you properly dispose of all of its member components, not just the object itself.::", "observed_examples": "::REFERENCE:CVE-1999-1127:DESCRIPTION:Does not shut down named pipe connections if malformed data is sent.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-1999-1127::REFERENCE:CVE-2001-0830:DESCRIPTION:Sockets not properly closed when attacker repeatedly connects and disconnects from server.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2001-0830::REFERENCE:CVE-2002-1372:DESCRIPTION:Return values of file/socket operations not checked, allowing resultant consumption of file descriptors.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2002-1372::", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "::TAXONOMY NAME:PLOVER:ENTRY NAME:Improper resource shutdown or release::TAXONOMY NAME:7 Pernicious Kingdoms:ENTRY NAME:Unreleased Resource::TAXONOMY NAME:OWASP Top Ten 2004:ENTRY ID:A9:ENTRY NAME:Denial of Service:MAPPING FIT:CWE More Specific::TAXONOMY NAME:CERT C Secure Coding:ENTRY ID:FIO42-C:ENTRY NAME:Close files when they are no longer needed:MAPPING FIT:CWE More Abstract::TAXONOMY NAME:CERT C Secure Coding:ENTRY ID:MEM31-C:ENTRY NAME:Free dynamically allocated memory when no longer needed:MAPPING FIT:CWE More Abstract::TAXONOMY NAME:The CERT Oracle Secure Coding Standard for Java (2011):ENTRY ID:FIO04-J:ENTRY NAME:Release resources when they are no longer needed::TAXONOMY NAME:Software Fault Patterns:ENTRY ID:SFP14:ENTRY NAME:Failure to release resource::", "related_attack_patterns": "::125::130::131::494::495::496::666::", "notes": "::TYPE:Relationship:NOTE:Overlaps memory leaks, asymmetric resource consumption, malformed input errors.::"}}]}, {"capec_id": "CAPEC-130", "c_findings": [{"cwe": "CWE-404", "cves": [{"id": "CVE-1999-1127", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "PARTIAL", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "Windows NT 4.0 does not properly shut down invalid named pipe RPC connections, which allows remote attackers to cause a denial of service (resource exhaustion) via a series of connections containing malformed data, aka the \"Named Pipes Over RPC\" vulnerability.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:o:microsoft:windows_nt:4.0:*:*:*:*:*:*:*", "published": "1999-12-31T05:00:00.000", "last_modified": "2018-10-12T21:29:22.827"}, {"id": "CVE-2001-0830", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "PARTIAL", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "6tunnel 0.08 and earlier does not properly close sockets that were initiated by a client, which allows remote attackers to cause a denial of service (resource exhaustion) by repeatedly connecting to and disconnecting from the server.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:pld:6tunnel:*:*:*:*:*:*:*:*", "published": "2001-12-06T05:00:00.000", "last_modified": "2017-10-10T01:29:53.627"}, {"id": "CVE-2002-1372", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "PARTIAL", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "Common Unix Printing System (CUPS) 1.1.14 through 1.1.17 does not properly check the return values of various file and socket operations, which could allow a remote attacker to cause a denial of service (resource exhaustion) by causing file descriptors to be assigned and not released, as demonstrated by fanta.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:easy_software_products:cups:1.0.4:*:*:*:*:*:*:*", "published": "2002-12-26T05:00:00.000", "last_modified": "2017-10-10T01:30:11.767"}], "cwe_info": {"cwe_id": "404", "name": "Improper Resource Shutdown or Release", "weakness_abstraction": "Class", "status": "Draft", "description": "The program does not release or incorrectly releases a resource before it is made available for re-use.", "extended_description": "When a resource is created or allocated, the developer is responsible for properly releasing the resource as well as accounting for all potential paths of expiration or invalidation, such as a set period of time or revocation.", "related_weaknesses": "::NATURE:ChildOf:CWE ID:664:VIEW ID:1000:ORDINAL:Primary::NATURE:PeerOf:CWE ID:405:VIEW ID:1000::NATURE:CanPrecede:CWE ID:619:VIEW ID:1000::", "weakness_ordinalities": "::ORDINALITY:Primary:DESCRIPTION:Improper release or shutdown of resources can be primary to resource exhaustion, performance, and information confidentiality problems to name a few.::ORDINALITY:Resultant:DESCRIPTION:Improper release or shutdown of resources can be resultant from improper error handling or insufficient resource tracking.::", "applicable_platforms": "::LANGUAGE CLASS:Language-Independent:LANGUAGE PREVALENCE:Undetermined::", "background_details": "", "alternate_terms": "", "modes_of_introduction": "::PHASE:Architecture and Design::PHASE:Implementation::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Availability:SCOPE:Other:IMPACT:DoS: Resource Consumption (Other):IMPACT:Varies by Context:NOTE:Most unreleased resource issues result in general software reliability problems, but if an attacker can intentionally trigger a resource leak, the attacker might be able to launch a denial of service attack by depleting the resource pool.::SCOPE:Confidentiality:IMPACT:Read Application Data:NOTE:When a resource containing sensitive information is not correctly shutdown, it may expose the sensitive data in a subsequent allocation.::", "detection_methods": "::METHOD:Automated Dynamic Analysis:DESCRIPTION:This weakness can be detected using dynamic tools and techniques that interact with the software using large test suites with many diverse inputs, such as fuzz testing (fuzzing), robustness testing, and fault injection. The software's operation may slow down, but it should not become unstable, crash, or generate incorrect results. Resource clean up errors might be detected with a stress-test by calling the software simultaneously from a large number of threads or processes, and look for evidence of any unexpected behavior. The software's operation may slow down, but it should not become unstable, crash, or generate incorrect results.:EFFECTIVENESS:Moderate::METHOD:Manual Dynamic Analysis:DESCRIPTION:Identify error conditions that are not likely to occur during normal usage and trigger them. For example, run the program under low memory conditions, run with insufficient privileges or permissions, interrupt a transaction before it is completed, or disable connectivity to basic network services such as DNS. Monitor the software for any unexpected behavior. If you trigger an unhandled exception or similar error that was discovered and handled by the application's environment, it may still indicate unexpected conditions that were not handled by the application itself.::", "potential_mitigations": "::PHASE:Requirements:STRATEGY:Language Selection:DESCRIPTION:Use a language that does not allow this weakness to occur or provides constructs that make this weakness easier to avoid. For example, languages such as Java, Ruby, and Lisp perform automatic garbage collection that releases memory for objects that have been deallocated.::PHASE:Implementation:DESCRIPTION:It is good practice to be responsible for freeing all resources you allocate and to be consistent with how and where you free memory in a function. If you allocate memory that you intend to free upon completion of the function, you must be sure to free the memory at all exit points for that function including error conditions.::PHASE:Implementation:DESCRIPTION:Memory should be allocated/freed using matching functions such as malloc/free, new/delete, and new[]/delete[].::PHASE:Implementation:DESCRIPTION:When releasing a complex object or structure, ensure that you properly dispose of all of its member components, not just the object itself.::", "observed_examples": "::REFERENCE:CVE-1999-1127:DESCRIPTION:Does not shut down named pipe connections if malformed data is sent.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-1999-1127::REFERENCE:CVE-2001-0830:DESCRIPTION:Sockets not properly closed when attacker repeatedly connects and disconnects from server.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2001-0830::REFERENCE:CVE-2002-1372:DESCRIPTION:Return values of file/socket operations not checked, allowing resultant consumption of file descriptors.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2002-1372::", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "::TAXONOMY NAME:PLOVER:ENTRY NAME:Improper resource shutdown or release::TAXONOMY NAME:7 Pernicious Kingdoms:ENTRY NAME:Unreleased Resource::TAXONOMY NAME:OWASP Top Ten 2004:ENTRY ID:A9:ENTRY NAME:Denial of Service:MAPPING FIT:CWE More Specific::TAXONOMY NAME:CERT C Secure Coding:ENTRY ID:FIO42-C:ENTRY NAME:Close files when they are no longer needed:MAPPING FIT:CWE More Abstract::TAXONOMY NAME:CERT C Secure Coding:ENTRY ID:MEM31-C:ENTRY NAME:Free dynamically allocated memory when no longer needed:MAPPING FIT:CWE More Abstract::TAXONOMY NAME:The CERT Oracle Secure Coding Standard for Java (2011):ENTRY ID:FIO04-J:ENTRY NAME:Release resources when they are no longer needed::TAXONOMY NAME:Software Fault Patterns:ENTRY ID:SFP14:ENTRY NAME:Failure to release resource::", "related_attack_patterns": "::125::130::131::494::495::496::666::", "notes": "::TYPE:Relationship:NOTE:Overlaps memory leaks, asymmetric resource consumption, malformed input errors.::"}}, {"cwe": "CWE-770", "cves": [{"id": "CVE-2009-4017", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "PARTIAL", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "PHP before 5.2.12 and 5.3.x before 5.3.1 does not restrict the number of temporary files created when handling a multipart/form-data POST request, which allows remote attackers to cause a denial of service (resource exhaustion), and makes it easier for remote attackers to exploit local file inclusion vulnerabilities, via multiple requests, related to lack of support for the max_file_uploads directive.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:php:php:5.2.11:*:*:*:*:*:*:*", "published": "2009-11-24T00:30:00.500", "last_modified": "2018-10-10T19:48:06.190"}, {"id": "CVE-2009-2726", "score": ["V2", 7.8, "HIGH"], "v2_score": 7.8, "v2_exploitability_score": 10.0, "v2_impact_score": 6.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:N/A:C", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:N/A:C", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "COMPLETE", "baseScore": 7.8}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "The SIP channel driver in Asterisk Open Source 1.2.x before 1.2.34, 1.4.x before 1.4.26.1, 1.6.0.x before 1.6.0.12, and 1.6.1.x before 1.6.1.4; Asterisk Business Edition A.x.x, B.x.x before B.2.5.9, C.2.x before C.2.4.1, and C.3.x before C.3.1; and Asterisk Appliance s800i 1.2.x before 1.3.0.3 does not use a maximum width when invoking sscanf style functions, which allows remote attackers to cause a denial of service (stack memory consumption) via SIP packets containing large sequences of ASCII decimal characters, as demonstrated via vectors related to (1) the CSeq value in a SIP header, (2) large Content-Length value, and (3) SDP.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:asterisk:business_edition:b.1.3.2:*:*:*:*:*:*:*", "published": "2009-08-12T10:30:01.110", "last_modified": "2018-10-10T19:42:05.157"}, {"id": "CVE-2009-2540", "score": ["V2", 4.3, "MEDIUM"], "v2_score": 4.3, "v2_exploitability_score": 8.6, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:M/Au:N/C:N/I:N/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:M/Au:N/C:N/I:N/A:P", "accessVector": "NETWORK", "accessComplexity": "MEDIUM", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "PARTIAL", "baseScore": 4.3}, "baseSeverity": "MEDIUM", "exploitabilityScore": 8.6, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": true}], "description": "Opera, possibly 9.64 and earlier, allows remote attackers to cause a denial of service (memory consumption) via a large integer value for the length property of a Select object, a related issue to CVE-2009-1692.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:opera:opera_browser:*:*:*:*:*:*:*:*", "published": "2009-07-20T18:30:01.233", "last_modified": "2018-10-30T16:26:33.437"}, {"id": "CVE-2009-2054", "score": ["V2", 7.8, "HIGH"], "v2_score": 7.8, "v2_exploitability_score": 10.0, "v2_impact_score": 6.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:N/A:C", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:N/A:C", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "COMPLETE", "baseScore": 7.8}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "Cisco Unified Communications Manager (aka CUCM, formerly CallManager) 4.x, 5.x before 5.1(3g), 6.x before 6.1(4), 7.0 before 7.0(2a)su1, and 7.1 before 7.1(2a)su1 allows remote attackers to cause a denial of service (file-descriptor exhaustion and SIP outage) via a flood of TCP packets, aka Bug ID CSCsx23689.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:cisco:unified_communications_manager:*:*:business:*:*:*:*:*", "published": "2009-08-27T17:00:01.047", "last_modified": "2009-09-02T05:23:46.967"}, {"id": "CVE-2008-5180", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "PARTIAL", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "Microsoft Communicator, and Communicator in Microsoft Office 2010 beta, allows remote attackers to cause a denial of service (memory consumption) via a large number of SIP INVITE requests, which trigger the creation of many sessions.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:microsoft:office_communicator:*:*:*:*:*:*:*:*", "published": "2008-11-20T15:30:00.390", "last_modified": "2017-09-29T01:32:29.867"}, {"id": "CVE-2008-1700", "score": ["V2", 9.3, "HIGH"], "v2_score": 9.3, "v2_exploitability_score": 8.6, "v2_impact_score": 10.0, "v2_vector": "AV:N/AC:M/Au:N/C:C/I:C/A:C", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:M/Au:N/C:C/I:C/A:C", "accessVector": "NETWORK", "accessComplexity": "MEDIUM", "authentication": "NONE", "confidentialityImpact": "COMPLETE", "integrityImpact": "COMPLETE", "availabilityImpact": "COMPLETE", "baseScore": 9.3}, "baseSeverity": "HIGH", "exploitabilityScore": 8.6, "impactScore": 10.0, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": true}], "description": "The Web TransferCtrl Class 8,2,1,4 (iManFile.cab), as used in WorkSite Web 8.2 before SP1 P2, allows remote attackers to cause a denial of service (memory consumption) via a large number of SendNrlLink directives, which opens a separate window for each directive.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:interwoven:worksite_web:*:*:*:*:*:*:*:*", "published": "2008-04-08T18:05:00.000", "last_modified": "2017-08-08T01:30:22.713"}, {"id": "CVE-2005-4650", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "PARTIAL", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "Joomla! 1.03 does not restrict the number of \"Search\" Mambots, which allows remote attackers to cause a denial of service (resource consumption) via a large number of Search Mambots.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:joomla:joomla:1.03:*:*:*:*:*:*:*", "published": "2005-12-31T05:00:00.000", "last_modified": "2008-09-05T20:57:26.687"}, {"id": "CVE-2020-15100", "score": ["V31", 3.3, "LOW"], "v2_score": 2.1, "v2_exploitability_score": 3.9, "v2_impact_score": 2.9, "v2_vector": "AV:L/AC:L/Au:N/C:N/I:N/A:P", "access_vector": "LOCAL", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:L/AC:L/Au:N/C:N/I:N/A:P", "accessVector": "LOCAL", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "PARTIAL", "baseScore": 2.1}, "baseSeverity": "LOW", "exploitabilityScore": 3.9, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "In freewvs before 0.1.1, a user could create a large file that freewvs will try to read, which will terminate a scan process. This has been patched in 0.1.1.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:schokokeks:freewvs:*:*:*:*:*:*:*:*", "published": "2020-07-14T20:15:11.427", "last_modified": "2021-11-18T18:05:20.650"}], "cwe_info": {"cwe_id": "770", "name": "Allocation of Resources Without Limits or Throttling", "weakness_abstraction": "Base", "status": "Incomplete", "description": "The software allocates a reusable resource or group of resources on behalf of an actor without imposing any restrictions on the size or number of resources that can be allocated, in violation of the intended security policy for that actor.", "extended_description": "Code frequently has to work with limited resources, so programmers must be careful to ensure that resources are not consumed too quickly, or too easily. Without use of quotas, resource limits, or other protection mechanisms, it can be easy for an attacker to consume many resources by rapidly making many requests, or causing larger resources to be used than is needed. When too many resources are allocated, or if a single resource is too large, then it can prevent the code from working correctly, possibly leading to a denial of service.", "related_weaknesses": "::NATURE:ChildOf:CWE ID:400:VIEW ID:1000:ORDINAL:Primary::NATURE:ChildOf:CWE ID:665:VIEW ID:1000::NATURE:ChildOf:CWE ID:400:VIEW ID:1003:ORDINAL:Primary::", "weakness_ordinalities": "", "applicable_platforms": "::LANGUAGE CLASS:Language-Independent:LANGUAGE PREVALENCE:Often::", "background_details": "", "alternate_terms": "", "modes_of_introduction": "::PHASE:Architecture and Design:NOTE:OMISSION: This weakness is caused by missing a security tactic during the architecture and design phase.::PHASE:Implementation::PHASE:Operation::PHASE:System Configuration::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Availability:IMPACT:DoS: Resource Consumption (CPU):IMPACT:DoS: Resource Consumption (Memory):IMPACT:DoS: Resource Consumption (Other):NOTE:When allocating resources without limits, an attacker could prevent other systems, applications, or processes from accessing the same type of resource.::", "detection_methods": "::METHOD:Manual Static Analysis:DESCRIPTION:Manual static analysis can be useful for finding this weakness, but it might not achieve desired code coverage within limited time constraints. If denial-of-service is not considered a significant risk, or if there is strong emphasis on consequences such as code execution, then manual analysis may not focus on this weakness at all.::METHOD:Fuzzing:DESCRIPTION:While fuzzing is typically geared toward finding low-level implementation bugs, it can inadvertently find uncontrolled resource allocation problems. This can occur when the fuzzer generates a large number of test cases but does not restart the targeted software in between test cases. If an individual test case produces a crash, but it does not do so reliably, then an inability to limit resource allocation may be the cause. When the allocation is directly affected by numeric inputs, then fuzzing may produce indications of this weakness.:EFFECTIVENESS:Opportunistic::METHOD:Automated Dynamic Analysis:DESCRIPTION:Certain automated dynamic analysis techniques may be effective in producing side effects of uncontrolled resource allocation problems, especially with resources such as processes, memory, and connections. The technique may involve generating a large number of requests to the software within a short time frame. Manual analysis is likely required to interpret the results.::METHOD:Automated Static Analysis:DESCRIPTION:Specialized configuration or tuning may be required to train automated tools to recognize this weakness. Automated static analysis typically has limited utility in recognizing unlimited allocation problems, except for the missing release of program-independent system resources such as files, sockets, and processes, or unchecked arguments to memory. For system resources, automated static analysis may be able to detect circumstances in which resources are not released after they have expired, or if too much of a resource is requested at once, as can occur with memory. Automated analysis of configuration files may be able to detect settings that do not specify a maximum value. Automated static analysis tools will not be appropriate for detecting exhaustion of custom resources, such as an intended security policy in which a bulletin board user is only allowed to make a limited number of posts per day.::", "potential_mitigations": "::PHASE:Requirements:DESCRIPTION:Clearly specify the minimum and maximum expectations for capabilities, and dictate which behaviors are acceptable when resource allocation reaches limits.::PHASE:Architecture and Design:DESCRIPTION:Limit the amount of resources that are accessible to unprivileged users. Set per-user limits for resources. Allow the system administrator to define these limits. Be careful to avoid CWE-410.::PHASE:Architecture and Design:DESCRIPTION:Design throttling mechanisms into the system architecture. The best protection is to limit the amount of resources that an unauthorized user can cause to be expended. A strong authentication and access control model will help prevent such attacks from occurring in the first place, and it will help the administrator to identify who is committing the abuse. The login application should be protected against DoS attacks as much as possible. Limiting the database access, perhaps by caching result sets, can help minimize the resources expended. To further limit the potential for a DoS attack, consider tracking the rate of requests received from users and blocking requests that exceed a defined rate threshold.::PHASE:Implementation:STRATEGY:Input Validation:DESCRIPTION:Assume all input is malicious. Use an accept known good input validation strategy, i.e., use a list of acceptable inputs that strictly conform to specifications. Reject any input that does not strictly conform to specifications, or transform it into something that does. When performing input validation, consider all potentially relevant properties, including length, type of input, the full range of acceptable values, missing or extra inputs, syntax, consistency across related fields, and conformance to business rules. As an example of business rule logic, boat may be syntactically valid because it only contains alphanumeric characters, but it is not valid if the input is only expected to contain colors such as red or blue. Do not rely exclusively on looking for malicious or malformed inputs. This is likely to miss at least one undesirable input, especially if the code's environment changes. This can give attackers enough room to bypass the intended validation. However, denylists can be useful for detecting potential attacks or determining which inputs are so malformed that they should be rejected outright.::PHASE:Architecture and Design:DESCRIPTION:For any security checks that are performed on the client side, ensure that these checks are duplicated on the server side, in order to avoid CWE-602. Attackers can bypass the client-side checks by modifying values after the checks have been performed, or by changing the client to remove the client-side checks entirely. Then, these modified values would be submitted to the server.::PHASE:Architecture and Design:DESCRIPTION:Mitigation of resource exhaustion attacks requires that the target system either: recognizes the attack and denies that user further access for a given amount of time, typically by using increasing time delays uniformly throttles all requests in order to make it more difficult to consume resources more quickly than they can again be freed. The first of these solutions is an issue in itself though, since it may allow attackers to prevent the use of the system by a particular valid user. If the attacker impersonates the valid user, they may be able to prevent the user from accessing the server in question. The second solution can be difficult to effectively institute -- and even when properly done, it does not provide a full solution. It simply requires more resources on the part of the attacker.::PHASE:Architecture and Design:DESCRIPTION:Ensure that protocols have specific limits of scale placed on them.::PHASE:Architecture and Design Implementation:DESCRIPTION:If the program must fail, ensure that it fails gracefully (fails closed). There may be a temptation to simply let the program fail poorly in cases such as low memory conditions, but an attacker may be able to assert control before the software has fully exited. Alternately, an uncontrolled failure could cause cascading problems with other downstream components; for example, the program could send a signal to a downstream process so the process immediately knows that a problem has occurred and has a better chance of recovery. Ensure that all failures in resource allocation place the system into a safe posture.::PHASE:Operation Architecture and Design:STRATEGY:Resource Limitation:DESCRIPTION:Use resource-limiting settings provided by the operating system or environment. For example, when managing system resources in POSIX, setrlimit() can be used to set limits for certain types of resources, and getrlimit() can determine how many resources are available. However, these functions are not available on all operating systems. When the current levels get close to the maximum that is defined for the application (see CWE-770), then limit the allocation of further resources to privileged users; alternately, begin releasing resources for less-privileged users. While this mitigation may protect the system from attack, it will not necessarily stop attackers from adversely impacting other users. Ensure that the application performs the appropriate error checks and error handling in case resources become unavailable (CWE-703).::", "observed_examples": "::REFERENCE:CVE-2009-4017:DESCRIPTION:Language interpreter does not restrict the number of temporary files being created when handling a MIME request with a large number of parts..:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2009-4017::REFERENCE:CVE-2009-2726:DESCRIPTION:Driver does not use a maximum width when invoking sscanf style functions, causing stack consumption.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2009-2726::REFERENCE:CVE-2009-2540:DESCRIPTION:Large integer value for a length property in an object causes a large amount of memory allocation.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2009-2540::REFERENCE:CVE-2009-2054:DESCRIPTION:Product allows exhaustion of file descriptors when processing a large number of TCP packets.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2009-2054::REFERENCE:CVE-2008-5180:DESCRIPTION:Communication product allows memory consumption with a large number of SIP requests, which cause many sessions to be created.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2008-5180::REFERENCE:CVE-2008-1700:DESCRIPTION:Product allows attackers to cause a denial of service via a large number of directives, each of which opens a separate window.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2008-1700::REFERENCE:CVE-2005-4650:DESCRIPTION:CMS does not restrict the number of searches that can occur simultaneously, leading to resource exhaustion.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2005-4650::REFERENCE:CVE-2020-15100:DESCRIPTION:web application scanner attempts to read an excessively large file created by a user, causing process termination:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-15100::", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "::TAXONOMY NAME:The CERT Oracle Secure Coding Standard for Java (2011):ENTRY ID:FIO04-J:ENTRY NAME:Close resources when they are no longer needed::TAXONOMY NAME:The CERT Oracle Secure Coding Standard for Java (2011):ENTRY ID:SER12-J:ENTRY NAME:Avoid memory and resource leaks during serialization::TAXONOMY NAME:The CERT Oracle Secure Coding Standard for Java (2011):ENTRY ID:MSC05-J:ENTRY NAME:Do not exhaust heap space::", "related_attack_patterns": "::125::130::147::197::229::230::231::469::482::486::487::488::489::490::491::493::494::495::496::528::", "notes": "::TYPE:Relationship:NOTE:This entry is different from uncontrolled resource consumption (CWE-400) in that there are other weaknesses that are related to inability to control resource consumption, such as holding on to a resource too long after use, or not correctly keeping track of active resources so that they can be managed and released when they are finished (CWE-771).::TYPE:Theoretical:NOTE:Vulnerability theory is largely about how behaviors and resources interact. Resource exhaustion can be regarded as either a consequence or an attack, depending on the perspective. This entry is an attempt to reflect one of the underlying weaknesses that enable these attacks (or consequences) to take place.::"}}, {"cwe": "CWE-1325", "cves": [{"id": "CVE-2020-36049", "score": ["V31", 7.5, "HIGH"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "PARTIAL", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "socket.io-parser before 3.4.1 allows attackers to cause a denial of service (memory consumption) via a large packet because a concatenation approach is used.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:socket:socket.io-parser:*:*:*:*:*:node.js:*:*", "published": "2021-01-08T00:15:11.187", "last_modified": "2021-07-21T11:39:23.747"}, {"id": "CVE-2019-20176", "score": ["V31", 7.5, "HIGH"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "PARTIAL", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "In Pure-FTPd 1.0.49, a stack exhaustion issue was discovered in the listdir function in ls.c.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:pureftpd:pure-ftpd:1.0.49:*:*:*:*:*:*:*", "published": "2019-12-31T15:15:11.223", "last_modified": "2023-01-20T20:43:40.457"}, {"id": "CVE-2013-1591", "score": ["V2", 10.0, "HIGH"], "v2_score": 10.0, "v2_exploitability_score": 10.0, "v2_impact_score": 10.0, "v2_vector": "AV:N/AC:L/Au:N/C:C/I:C/A:C", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:C/I:C/A:C", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "COMPLETE", "integrityImpact": "COMPLETE", "availabilityImpact": "COMPLETE", "baseScore": 10.0}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 10.0, "acInsufInfo": true, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "Stack-based buffer overflow in libpixman, as used in Pale Moon before 15.4 and possibly other products, has unspecified impact and context-dependent attack vectors.  NOTE: this issue might be resultant from an integer overflow in the fast_composite_scaled_bilinear function in pixman-inlines.h, which triggers an infinite loop.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:redhat:enterprise_virtualization:3.0:*:*:*:*:*:*:*", "published": "2013-01-31T23:55:01.037", "last_modified": "2019-05-22T13:29:00.273"}], "cwe_info": {"cwe_id": "1325", "name": "Improperly Controlled Sequential Memory Allocation", "weakness_abstraction": "Base", "status": "Incomplete", "description": "The product manages a group of objects or resources and performs a separate memory allocation for each object, but it does not properly limit the total amount of memory that is consumed by all of the combined objects.", "extended_description": "While the product might limit the amount of memory that is allocated in a single operation for a single object (such as a malloc of an array), if an attacker can cause multiple objects to be allocated in separate operations, then this might cause higher total memory consumption than the developer intended, leading to a denial of service.", "related_weaknesses": "::NATURE:ChildOf:CWE ID:770:VIEW ID:1000:ORDINAL:Primary::NATURE:PeerOf:CWE ID:789:VIEW ID:1000:ORDINAL:Primary::NATURE:CanPrecede:CWE ID:476:VIEW ID:1000::", "weakness_ordinalities": "::ORDINALITY:Primary::", "applicable_platforms": "::LANGUAGE NAME:C:LANGUAGE PREVALENCE:Undetermined::LANGUAGE NAME:C++:LANGUAGE PREVALENCE:Undetermined::LANGUAGE CLASS:Language-Independent:LANGUAGE PREVALENCE:Undetermined::", "background_details": "", "alternate_terms": "::TERM:Stack Exhaustion:DESCRIPTION:When a weakness allocates excessive memory on the stack, it is often described as stack exhaustion, which is a technical impact of the weakness. This technical impact is often encountered as a consequence of CWE-789 and/or CWE-1325.::", "modes_of_introduction": "::PHASE:Implementation::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Availability:IMPACT:DoS: Resource Consumption (Memory):NOTE:Not controlling memory allocation can result in a request for too much system memory, possibly leading to a crash of the application due to out-of-memory conditions, or the consumption of a large amount of memory on the system.::", "detection_methods": "", "potential_mitigations": "::PHASE:Implementation:DESCRIPTION:Ensure multiple allocations of the same kind of object are properly tracked - possibly across multiple sessions, requests, or messages. Define an appropriate strategy for handling requests that exceed the limit, and consider supporting a configuration option so that the administrator can extend the amount of memory to be used if necessary.::PHASE:Operation:DESCRIPTION:Run the program using system-provided resource limits for memory. This might still cause the program to crash or exit, but the impact to the rest of the system will be minimized.::", "observed_examples": "::REFERENCE:CVE-2020-36049:DESCRIPTION:JavaScript-based packet decoder uses concatenation of many small strings, causing out-of-memory (OOM) condition:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-36049::REFERENCE:CVE-2019-20176:DESCRIPTION:Product allocates a new buffer on the stack for each file in a directory, allowing stack exhaustion:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-20176::REFERENCE:CVE-2013-1591:DESCRIPTION:Chain: an integer overflow (CWE-190) in the image size calculation causes an infinite loop (CWE-835) which sequentially allocates buffers without limits (CWE-1325) until the stack is full.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2013-1591::", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "", "related_attack_patterns": "::130::", "notes": ""}}]}, {"capec_id": "CAPEC-125", "c_findings": [{"cwe": "CWE-404", "cves": [{"id": "CVE-1999-1127", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "PARTIAL", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "Windows NT 4.0 does not properly shut down invalid named pipe RPC connections, which allows remote attackers to cause a denial of service (resource exhaustion) via a series of connections containing malformed data, aka the \"Named Pipes Over RPC\" vulnerability.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:o:microsoft:windows_nt:4.0:*:*:*:*:*:*:*", "published": "1999-12-31T05:00:00.000", "last_modified": "2018-10-12T21:29:22.827"}, {"id": "CVE-2001-0830", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "PARTIAL", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "6tunnel 0.08 and earlier does not properly close sockets that were initiated by a client, which allows remote attackers to cause a denial of service (resource exhaustion) by repeatedly connecting to and disconnecting from the server.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:pld:6tunnel:*:*:*:*:*:*:*:*", "published": "2001-12-06T05:00:00.000", "last_modified": "2017-10-10T01:29:53.627"}, {"id": "CVE-2002-1372", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "PARTIAL", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "Common Unix Printing System (CUPS) 1.1.14 through 1.1.17 does not properly check the return values of various file and socket operations, which could allow a remote attacker to cause a denial of service (resource exhaustion) by causing file descriptors to be assigned and not released, as demonstrated by fanta.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:easy_software_products:cups:1.0.4:*:*:*:*:*:*:*", "published": "2002-12-26T05:00:00.000", "last_modified": "2017-10-10T01:30:11.767"}], "cwe_info": {"cwe_id": "404", "name": "Improper Resource Shutdown or Release", "weakness_abstraction": "Class", "status": "Draft", "description": "The program does not release or incorrectly releases a resource before it is made available for re-use.", "extended_description": "When a resource is created or allocated, the developer is responsible for properly releasing the resource as well as accounting for all potential paths of expiration or invalidation, such as a set period of time or revocation.", "related_weaknesses": "::NATURE:ChildOf:CWE ID:664:VIEW ID:1000:ORDINAL:Primary::NATURE:PeerOf:CWE ID:405:VIEW ID:1000::NATURE:CanPrecede:CWE ID:619:VIEW ID:1000::", "weakness_ordinalities": "::ORDINALITY:Primary:DESCRIPTION:Improper release or shutdown of resources can be primary to resource exhaustion, performance, and information confidentiality problems to name a few.::ORDINALITY:Resultant:DESCRIPTION:Improper release or shutdown of resources can be resultant from improper error handling or insufficient resource tracking.::", "applicable_platforms": "::LANGUAGE CLASS:Language-Independent:LANGUAGE PREVALENCE:Undetermined::", "background_details": "", "alternate_terms": "", "modes_of_introduction": "::PHASE:Architecture and Design::PHASE:Implementation::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Availability:SCOPE:Other:IMPACT:DoS: Resource Consumption (Other):IMPACT:Varies by Context:NOTE:Most unreleased resource issues result in general software reliability problems, but if an attacker can intentionally trigger a resource leak, the attacker might be able to launch a denial of service attack by depleting the resource pool.::SCOPE:Confidentiality:IMPACT:Read Application Data:NOTE:When a resource containing sensitive information is not correctly shutdown, it may expose the sensitive data in a subsequent allocation.::", "detection_methods": "::METHOD:Automated Dynamic Analysis:DESCRIPTION:This weakness can be detected using dynamic tools and techniques that interact with the software using large test suites with many diverse inputs, such as fuzz testing (fuzzing), robustness testing, and fault injection. The software's operation may slow down, but it should not become unstable, crash, or generate incorrect results. Resource clean up errors might be detected with a stress-test by calling the software simultaneously from a large number of threads or processes, and look for evidence of any unexpected behavior. The software's operation may slow down, but it should not become unstable, crash, or generate incorrect results.:EFFECTIVENESS:Moderate::METHOD:Manual Dynamic Analysis:DESCRIPTION:Identify error conditions that are not likely to occur during normal usage and trigger them. For example, run the program under low memory conditions, run with insufficient privileges or permissions, interrupt a transaction before it is completed, or disable connectivity to basic network services such as DNS. Monitor the software for any unexpected behavior. If you trigger an unhandled exception or similar error that was discovered and handled by the application's environment, it may still indicate unexpected conditions that were not handled by the application itself.::", "potential_mitigations": "::PHASE:Requirements:STRATEGY:Language Selection:DESCRIPTION:Use a language that does not allow this weakness to occur or provides constructs that make this weakness easier to avoid. For example, languages such as Java, Ruby, and Lisp perform automatic garbage collection that releases memory for objects that have been deallocated.::PHASE:Implementation:DESCRIPTION:It is good practice to be responsible for freeing all resources you allocate and to be consistent with how and where you free memory in a function. If you allocate memory that you intend to free upon completion of the function, you must be sure to free the memory at all exit points for that function including error conditions.::PHASE:Implementation:DESCRIPTION:Memory should be allocated/freed using matching functions such as malloc/free, new/delete, and new[]/delete[].::PHASE:Implementation:DESCRIPTION:When releasing a complex object or structure, ensure that you properly dispose of all of its member components, not just the object itself.::", "observed_examples": "::REFERENCE:CVE-1999-1127:DESCRIPTION:Does not shut down named pipe connections if malformed data is sent.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-1999-1127::REFERENCE:CVE-2001-0830:DESCRIPTION:Sockets not properly closed when attacker repeatedly connects and disconnects from server.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2001-0830::REFERENCE:CVE-2002-1372:DESCRIPTION:Return values of file/socket operations not checked, allowing resultant consumption of file descriptors.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2002-1372::", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "::TAXONOMY NAME:PLOVER:ENTRY NAME:Improper resource shutdown or release::TAXONOMY NAME:7 Pernicious Kingdoms:ENTRY NAME:Unreleased Resource::TAXONOMY NAME:OWASP Top Ten 2004:ENTRY ID:A9:ENTRY NAME:Denial of Service:MAPPING FIT:CWE More Specific::TAXONOMY NAME:CERT C Secure Coding:ENTRY ID:FIO42-C:ENTRY NAME:Close files when they are no longer needed:MAPPING FIT:CWE More Abstract::TAXONOMY NAME:CERT C Secure Coding:ENTRY ID:MEM31-C:ENTRY NAME:Free dynamically allocated memory when no longer needed:MAPPING FIT:CWE More Abstract::TAXONOMY NAME:The CERT Oracle Secure Coding Standard for Java (2011):ENTRY ID:FIO04-J:ENTRY NAME:Release resources when they are no longer needed::TAXONOMY NAME:Software Fault Patterns:ENTRY ID:SFP14:ENTRY NAME:Failure to release resource::", "related_attack_patterns": "::125::130::131::494::495::496::666::", "notes": "::TYPE:Relationship:NOTE:Overlaps memory leaks, asymmetric resource consumption, malformed input errors.::"}}, {"cwe": "CWE-770", "cves": [{"id": "CVE-2009-4017", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "PARTIAL", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "PHP before 5.2.12 and 5.3.x before 5.3.1 does not restrict the number of temporary files created when handling a multipart/form-data POST request, which allows remote attackers to cause a denial of service (resource exhaustion), and makes it easier for remote attackers to exploit local file inclusion vulnerabilities, via multiple requests, related to lack of support for the max_file_uploads directive.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:php:php:5.2.11:*:*:*:*:*:*:*", "published": "2009-11-24T00:30:00.500", "last_modified": "2018-10-10T19:48:06.190"}, {"id": "CVE-2009-2726", "score": ["V2", 7.8, "HIGH"], "v2_score": 7.8, "v2_exploitability_score": 10.0, "v2_impact_score": 6.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:N/A:C", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:N/A:C", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "COMPLETE", "baseScore": 7.8}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "The SIP channel driver in Asterisk Open Source 1.2.x before 1.2.34, 1.4.x before 1.4.26.1, 1.6.0.x before 1.6.0.12, and 1.6.1.x before 1.6.1.4; Asterisk Business Edition A.x.x, B.x.x before B.2.5.9, C.2.x before C.2.4.1, and C.3.x before C.3.1; and Asterisk Appliance s800i 1.2.x before 1.3.0.3 does not use a maximum width when invoking sscanf style functions, which allows remote attackers to cause a denial of service (stack memory consumption) via SIP packets containing large sequences of ASCII decimal characters, as demonstrated via vectors related to (1) the CSeq value in a SIP header, (2) large Content-Length value, and (3) SDP.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:asterisk:business_edition:b.1.3.2:*:*:*:*:*:*:*", "published": "2009-08-12T10:30:01.110", "last_modified": "2018-10-10T19:42:05.157"}, {"id": "CVE-2009-2540", "score": ["V2", 4.3, "MEDIUM"], "v2_score": 4.3, "v2_exploitability_score": 8.6, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:M/Au:N/C:N/I:N/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:M/Au:N/C:N/I:N/A:P", "accessVector": "NETWORK", "accessComplexity": "MEDIUM", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "PARTIAL", "baseScore": 4.3}, "baseSeverity": "MEDIUM", "exploitabilityScore": 8.6, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": true}], "description": "Opera, possibly 9.64 and earlier, allows remote attackers to cause a denial of service (memory consumption) via a large integer value for the length property of a Select object, a related issue to CVE-2009-1692.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:opera:opera_browser:*:*:*:*:*:*:*:*", "published": "2009-07-20T18:30:01.233", "last_modified": "2018-10-30T16:26:33.437"}, {"id": "CVE-2009-2054", "score": ["V2", 7.8, "HIGH"], "v2_score": 7.8, "v2_exploitability_score": 10.0, "v2_impact_score": 6.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:N/A:C", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:N/A:C", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "COMPLETE", "baseScore": 7.8}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "Cisco Unified Communications Manager (aka CUCM, formerly CallManager) 4.x, 5.x before 5.1(3g), 6.x before 6.1(4), 7.0 before 7.0(2a)su1, and 7.1 before 7.1(2a)su1 allows remote attackers to cause a denial of service (file-descriptor exhaustion and SIP outage) via a flood of TCP packets, aka Bug ID CSCsx23689.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:cisco:unified_communications_manager:*:*:business:*:*:*:*:*", "published": "2009-08-27T17:00:01.047", "last_modified": "2009-09-02T05:23:46.967"}, {"id": "CVE-2008-5180", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "PARTIAL", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "Microsoft Communicator, and Communicator in Microsoft Office 2010 beta, allows remote attackers to cause a denial of service (memory consumption) via a large number of SIP INVITE requests, which trigger the creation of many sessions.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:microsoft:office_communicator:*:*:*:*:*:*:*:*", "published": "2008-11-20T15:30:00.390", "last_modified": "2017-09-29T01:32:29.867"}, {"id": "CVE-2008-1700", "score": ["V2", 9.3, "HIGH"], "v2_score": 9.3, "v2_exploitability_score": 8.6, "v2_impact_score": 10.0, "v2_vector": "AV:N/AC:M/Au:N/C:C/I:C/A:C", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:M/Au:N/C:C/I:C/A:C", "accessVector": "NETWORK", "accessComplexity": "MEDIUM", "authentication": "NONE", "confidentialityImpact": "COMPLETE", "integrityImpact": "COMPLETE", "availabilityImpact": "COMPLETE", "baseScore": 9.3}, "baseSeverity": "HIGH", "exploitabilityScore": 8.6, "impactScore": 10.0, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": true}], "description": "The Web TransferCtrl Class 8,2,1,4 (iManFile.cab), as used in WorkSite Web 8.2 before SP1 P2, allows remote attackers to cause a denial of service (memory consumption) via a large number of SendNrlLink directives, which opens a separate window for each directive.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:interwoven:worksite_web:*:*:*:*:*:*:*:*", "published": "2008-04-08T18:05:00.000", "last_modified": "2017-08-08T01:30:22.713"}, {"id": "CVE-2005-4650", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "PARTIAL", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "Joomla! 1.03 does not restrict the number of \"Search\" Mambots, which allows remote attackers to cause a denial of service (resource consumption) via a large number of Search Mambots.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:joomla:joomla:1.03:*:*:*:*:*:*:*", "published": "2005-12-31T05:00:00.000", "last_modified": "2008-09-05T20:57:26.687"}, {"id": "CVE-2020-15100", "score": ["V31", 3.3, "LOW"], "v2_score": 2.1, "v2_exploitability_score": 3.9, "v2_impact_score": 2.9, "v2_vector": "AV:L/AC:L/Au:N/C:N/I:N/A:P", "access_vector": "LOCAL", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:L/AC:L/Au:N/C:N/I:N/A:P", "accessVector": "LOCAL", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "PARTIAL", "baseScore": 2.1}, "baseSeverity": "LOW", "exploitabilityScore": 3.9, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "In freewvs before 0.1.1, a user could create a large file that freewvs will try to read, which will terminate a scan process. This has been patched in 0.1.1.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:schokokeks:freewvs:*:*:*:*:*:*:*:*", "published": "2020-07-14T20:15:11.427", "last_modified": "2021-11-18T18:05:20.650"}], "cwe_info": {"cwe_id": "770", "name": "Allocation of Resources Without Limits or Throttling", "weakness_abstraction": "Base", "status": "Incomplete", "description": "The software allocates a reusable resource or group of resources on behalf of an actor without imposing any restrictions on the size or number of resources that can be allocated, in violation of the intended security policy for that actor.", "extended_description": "Code frequently has to work with limited resources, so programmers must be careful to ensure that resources are not consumed too quickly, or too easily. Without use of quotas, resource limits, or other protection mechanisms, it can be easy for an attacker to consume many resources by rapidly making many requests, or causing larger resources to be used than is needed. When too many resources are allocated, or if a single resource is too large, then it can prevent the code from working correctly, possibly leading to a denial of service.", "related_weaknesses": "::NATURE:ChildOf:CWE ID:400:VIEW ID:1000:ORDINAL:Primary::NATURE:ChildOf:CWE ID:665:VIEW ID:1000::NATURE:ChildOf:CWE ID:400:VIEW ID:1003:ORDINAL:Primary::", "weakness_ordinalities": "", "applicable_platforms": "::LANGUAGE CLASS:Language-Independent:LANGUAGE PREVALENCE:Often::", "background_details": "", "alternate_terms": "", "modes_of_introduction": "::PHASE:Architecture and Design:NOTE:OMISSION: This weakness is caused by missing a security tactic during the architecture and design phase.::PHASE:Implementation::PHASE:Operation::PHASE:System Configuration::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Availability:IMPACT:DoS: Resource Consumption (CPU):IMPACT:DoS: Resource Consumption (Memory):IMPACT:DoS: Resource Consumption (Other):NOTE:When allocating resources without limits, an attacker could prevent other systems, applications, or processes from accessing the same type of resource.::", "detection_methods": "::METHOD:Manual Static Analysis:DESCRIPTION:Manual static analysis can be useful for finding this weakness, but it might not achieve desired code coverage within limited time constraints. If denial-of-service is not considered a significant risk, or if there is strong emphasis on consequences such as code execution, then manual analysis may not focus on this weakness at all.::METHOD:Fuzzing:DESCRIPTION:While fuzzing is typically geared toward finding low-level implementation bugs, it can inadvertently find uncontrolled resource allocation problems. This can occur when the fuzzer generates a large number of test cases but does not restart the targeted software in between test cases. If an individual test case produces a crash, but it does not do so reliably, then an inability to limit resource allocation may be the cause. When the allocation is directly affected by numeric inputs, then fuzzing may produce indications of this weakness.:EFFECTIVENESS:Opportunistic::METHOD:Automated Dynamic Analysis:DESCRIPTION:Certain automated dynamic analysis techniques may be effective in producing side effects of uncontrolled resource allocation problems, especially with resources such as processes, memory, and connections. The technique may involve generating a large number of requests to the software within a short time frame. Manual analysis is likely required to interpret the results.::METHOD:Automated Static Analysis:DESCRIPTION:Specialized configuration or tuning may be required to train automated tools to recognize this weakness. Automated static analysis typically has limited utility in recognizing unlimited allocation problems, except for the missing release of program-independent system resources such as files, sockets, and processes, or unchecked arguments to memory. For system resources, automated static analysis may be able to detect circumstances in which resources are not released after they have expired, or if too much of a resource is requested at once, as can occur with memory. Automated analysis of configuration files may be able to detect settings that do not specify a maximum value. Automated static analysis tools will not be appropriate for detecting exhaustion of custom resources, such as an intended security policy in which a bulletin board user is only allowed to make a limited number of posts per day.::", "potential_mitigations": "::PHASE:Requirements:DESCRIPTION:Clearly specify the minimum and maximum expectations for capabilities, and dictate which behaviors are acceptable when resource allocation reaches limits.::PHASE:Architecture and Design:DESCRIPTION:Limit the amount of resources that are accessible to unprivileged users. Set per-user limits for resources. Allow the system administrator to define these limits. Be careful to avoid CWE-410.::PHASE:Architecture and Design:DESCRIPTION:Design throttling mechanisms into the system architecture. The best protection is to limit the amount of resources that an unauthorized user can cause to be expended. A strong authentication and access control model will help prevent such attacks from occurring in the first place, and it will help the administrator to identify who is committing the abuse. The login application should be protected against DoS attacks as much as possible. Limiting the database access, perhaps by caching result sets, can help minimize the resources expended. To further limit the potential for a DoS attack, consider tracking the rate of requests received from users and blocking requests that exceed a defined rate threshold.::PHASE:Implementation:STRATEGY:Input Validation:DESCRIPTION:Assume all input is malicious. Use an accept known good input validation strategy, i.e., use a list of acceptable inputs that strictly conform to specifications. Reject any input that does not strictly conform to specifications, or transform it into something that does. When performing input validation, consider all potentially relevant properties, including length, type of input, the full range of acceptable values, missing or extra inputs, syntax, consistency across related fields, and conformance to business rules. As an example of business rule logic, boat may be syntactically valid because it only contains alphanumeric characters, but it is not valid if the input is only expected to contain colors such as red or blue. Do not rely exclusively on looking for malicious or malformed inputs. This is likely to miss at least one undesirable input, especially if the code's environment changes. This can give attackers enough room to bypass the intended validation. However, denylists can be useful for detecting potential attacks or determining which inputs are so malformed that they should be rejected outright.::PHASE:Architecture and Design:DESCRIPTION:For any security checks that are performed on the client side, ensure that these checks are duplicated on the server side, in order to avoid CWE-602. Attackers can bypass the client-side checks by modifying values after the checks have been performed, or by changing the client to remove the client-side checks entirely. Then, these modified values would be submitted to the server.::PHASE:Architecture and Design:DESCRIPTION:Mitigation of resource exhaustion attacks requires that the target system either: recognizes the attack and denies that user further access for a given amount of time, typically by using increasing time delays uniformly throttles all requests in order to make it more difficult to consume resources more quickly than they can again be freed. The first of these solutions is an issue in itself though, since it may allow attackers to prevent the use of the system by a particular valid user. If the attacker impersonates the valid user, they may be able to prevent the user from accessing the server in question. The second solution can be difficult to effectively institute -- and even when properly done, it does not provide a full solution. It simply requires more resources on the part of the attacker.::PHASE:Architecture and Design:DESCRIPTION:Ensure that protocols have specific limits of scale placed on them.::PHASE:Architecture and Design Implementation:DESCRIPTION:If the program must fail, ensure that it fails gracefully (fails closed). There may be a temptation to simply let the program fail poorly in cases such as low memory conditions, but an attacker may be able to assert control before the software has fully exited. Alternately, an uncontrolled failure could cause cascading problems with other downstream components; for example, the program could send a signal to a downstream process so the process immediately knows that a problem has occurred and has a better chance of recovery. Ensure that all failures in resource allocation place the system into a safe posture.::PHASE:Operation Architecture and Design:STRATEGY:Resource Limitation:DESCRIPTION:Use resource-limiting settings provided by the operating system or environment. For example, when managing system resources in POSIX, setrlimit() can be used to set limits for certain types of resources, and getrlimit() can determine how many resources are available. However, these functions are not available on all operating systems. When the current levels get close to the maximum that is defined for the application (see CWE-770), then limit the allocation of further resources to privileged users; alternately, begin releasing resources for less-privileged users. While this mitigation may protect the system from attack, it will not necessarily stop attackers from adversely impacting other users. Ensure that the application performs the appropriate error checks and error handling in case resources become unavailable (CWE-703).::", "observed_examples": "::REFERENCE:CVE-2009-4017:DESCRIPTION:Language interpreter does not restrict the number of temporary files being created when handling a MIME request with a large number of parts..:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2009-4017::REFERENCE:CVE-2009-2726:DESCRIPTION:Driver does not use a maximum width when invoking sscanf style functions, causing stack consumption.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2009-2726::REFERENCE:CVE-2009-2540:DESCRIPTION:Large integer value for a length property in an object causes a large amount of memory allocation.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2009-2540::REFERENCE:CVE-2009-2054:DESCRIPTION:Product allows exhaustion of file descriptors when processing a large number of TCP packets.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2009-2054::REFERENCE:CVE-2008-5180:DESCRIPTION:Communication product allows memory consumption with a large number of SIP requests, which cause many sessions to be created.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2008-5180::REFERENCE:CVE-2008-1700:DESCRIPTION:Product allows attackers to cause a denial of service via a large number of directives, each of which opens a separate window.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2008-1700::REFERENCE:CVE-2005-4650:DESCRIPTION:CMS does not restrict the number of searches that can occur simultaneously, leading to resource exhaustion.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2005-4650::REFERENCE:CVE-2020-15100:DESCRIPTION:web application scanner attempts to read an excessively large file created by a user, causing process termination:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-15100::", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "::TAXONOMY NAME:The CERT Oracle Secure Coding Standard for Java (2011):ENTRY ID:FIO04-J:ENTRY NAME:Close resources when they are no longer needed::TAXONOMY NAME:The CERT Oracle Secure Coding Standard for Java (2011):ENTRY ID:SER12-J:ENTRY NAME:Avoid memory and resource leaks during serialization::TAXONOMY NAME:The CERT Oracle Secure Coding Standard for Java (2011):ENTRY ID:MSC05-J:ENTRY NAME:Do not exhaust heap space::", "related_attack_patterns": "::125::130::147::197::229::230::231::469::482::486::487::488::489::490::491::493::494::495::496::528::", "notes": "::TYPE:Relationship:NOTE:This entry is different from uncontrolled resource consumption (CWE-400) in that there are other weaknesses that are related to inability to control resource consumption, such as holding on to a resource too long after use, or not correctly keeping track of active resources so that they can be managed and released when they are finished (CWE-771).::TYPE:Theoretical:NOTE:Vulnerability theory is largely about how behaviors and resources interact. Resource exhaustion can be regarded as either a consequence or an attack, depending on the perspective. This entry is an attempt to reflect one of the underlying weaknesses that enable these attacks (or consequences) to take place.::"}}]}]}]}