{"scan_date": "2024-11-20", "scan_runtime": "00h 21m and 44.50s", "data": [{"technique_id": "T1498", "t_findings": []}, {"technique_id": "T1499", "t_findings": [{"capec_id": "CAPEC-227", "c_findings": [{"cwe": "CWE-400", "cves": [{"id": "CVE-2020-3566", "score": ["V31", 8.6, "HIGH"], "v2_score": 7.8, "v2_exploitability_score": 10.0, "v2_impact_score": 6.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:N/A:C", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:N/A:C", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "COMPLETE", "baseScore": 7.8}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "A vulnerability in the Distance Vector Multicast Routing Protocol (DVMRP) feature of Cisco IOS XR Software could allow an unauthenticated, remote attacker to exhaust process memory of an affected device. The vulnerability is due to insufficient queue management for Internet Group Management Protocol (IGMP) packets. An attacker could exploit this vulnerability by sending crafted IGMP traffic to an affected device. A successful exploit could allow the attacker to cause memory exhaustion, resulting in instability of other processes. These processes may include, but are not limited to, interior and exterior routing protocols. Cisco will release software updates that address this vulnerability.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:o:cisco:ios_xr:6.4.2:*:*:*:*:*:*:*", "published": "2020-08-29T16:15:09.797", "last_modified": "2024-07-26T19:55:20.327"}, {"id": "CVE-2009-2874", "score": ["V2", 7.8, "HIGH"], "v2_score": 7.8, "v2_exploitability_score": 10.0, "v2_impact_score": 6.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:N/A:C", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:N/A:C", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "COMPLETE", "baseScore": 7.8}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "The TimesTenD process in Cisco Unified Presence 1.x, 6.x before 6.0(6), and 7.x before 7.0(4) allows remote attackers to cause a denial of service (process crash) via a large number of TCP connections to ports 16200 and 22794, aka Bug ID CSCsy17662.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:cisco:unified_presence_server:1.0:*:*:*:*:*:*:*", "published": "2009-10-16T16:30:00.640", "last_modified": "2017-08-17T01:30:56.320"}, {"id": "CVE-2009-1928", "score": ["V2", 7.8, "HIGH"], "v2_score": 7.8, "v2_exploitability_score": 10.0, "v2_impact_score": 6.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:N/A:C", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:N/A:C", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "COMPLETE", "baseScore": 7.8}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "Stack consumption vulnerability in the LDAP service in Active Directory on Microsoft Windows 2000 SP4, Server 2003 SP2, and Server 2008 Gold and SP2; Active Directory Application Mode (ADAM) on Windows XP SP2 and SP3 and Server 2003 SP2; and Active Directory Lightweight Directory Service (AD LDS) on Windows Server 2008 Gold and SP2 allows remote attackers to cause a denial of service (system hang) via a malformed (1) LDAP or (2) LDAPS request, aka \"LSASS Recursive Stack Overflow Vulnerability.\"", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:o:microsoft:windows_2000:*:sp4:*:*:*:*:*:*", "published": "2009-11-11T19:30:00.267", "last_modified": "2023-12-07T18:38:56.693"}, {"id": "CVE-2009-2858", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "PARTIAL", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "Memory leak in the Security component in IBM DB2 8.1 before FP18 on Unix platforms allows attackers to cause a denial of service (memory consumption) via unspecified vectors, related to private memory within the DB2 memory structure.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:ibm:db2:*:fp17:*:*:*:*:*:*", "published": "2009-08-19T17:30:01.187", "last_modified": "2009-08-21T04:00:00.000"}, {"id": "CVE-2009-2726", "score": ["V2", 7.8, "HIGH"], "v2_score": 7.8, "v2_exploitability_score": 10.0, "v2_impact_score": 6.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:N/A:C", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:N/A:C", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "COMPLETE", "baseScore": 7.8}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "The SIP channel driver in Asterisk Open Source 1.2.x before 1.2.34, 1.4.x before 1.4.26.1, 1.6.0.x before 1.6.0.12, and 1.6.1.x before 1.6.1.4; Asterisk Business Edition A.x.x, B.x.x before B.2.5.9, C.2.x before C.2.4.1, and C.3.x before C.3.1; and Asterisk Appliance s800i 1.2.x before 1.3.0.3 does not use a maximum width when invoking sscanf style functions, which allows remote attackers to cause a denial of service (stack memory consumption) via SIP packets containing large sequences of ASCII decimal characters, as demonstrated via vectors related to (1) the CSeq value in a SIP header, (2) large Content-Length value, and (3) SDP.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:digium:asterisk:*:*:business:*:*:*:*:*", "published": "2009-08-12T10:30:01.110", "last_modified": "2024-02-15T21:05:21.457"}, {"id": "CVE-2009-2540", "score": ["V2", 4.3, "MEDIUM"], "v2_score": 4.3, "v2_exploitability_score": 8.6, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:M/Au:N/C:N/I:N/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:M/Au:N/C:N/I:N/A:P", "accessVector": "NETWORK", "accessComplexity": "MEDIUM", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "PARTIAL", "baseScore": 4.3}, "baseSeverity": "MEDIUM", "exploitabilityScore": 8.6, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": true}], "description": "Opera, possibly 9.64 and earlier, allows remote attackers to cause a denial of service (memory consumption) via a large integer value for the length property of a Select object, a related issue to CVE-2009-1692.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:opera:opera_browser:*:*:*:*:*:*:*:*", "published": "2009-07-20T18:30:01.233", "last_modified": "2024-02-02T03:07:21.203"}, {"id": "CVE-2009-2299", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "PARTIAL", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "The Artofdefence Hyperguard Web Application Firewall (WAF) module before 2.5.5-11635, 3.0 before 3.0.3-11636, and 3.1 before 3.1.1-11637, a module for the Apache HTTP Server, allows remote attackers to cause a denial of service (memory consumption) via an HTTP request with a large Content-Length value but no POST data.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:hyperguard_web_application_firewall_project:hyperguard_web_application_firewall:*:*:*:*:*:*:*:*", "published": "2009-07-02T10:30:00.407", "last_modified": "2020-11-16T20:48:00.137"}, {"id": "CVE-2009-2054", "score": ["V2", 7.8, "HIGH"], "v2_score": 7.8, "v2_exploitability_score": 10.0, "v2_impact_score": 6.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:N/A:C", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:N/A:C", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "COMPLETE", "baseScore": 7.8}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "Cisco Unified Communications Manager (aka CUCM, formerly CallManager) 4.x, 5.x before 5.1(3g), 6.x before 6.1(4), 7.0 before 7.0(2a)su1, and 7.1 before 7.1(2a)su1 allows remote attackers to cause a denial of service (file-descriptor exhaustion and SIP outage) via a flood of TCP packets, aka Bug ID CSCsx23689.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:cisco:unified_communications_manager:*:*:*:*:*:*:*:*", "published": "2009-08-27T17:00:01.047", "last_modified": "2024-02-15T21:15:40.407"}, {"id": "CVE-2008-5180", "score": ["V31", 5.3, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "PARTIAL", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "Microsoft Communicator, and Communicator in Microsoft Office 2010 beta, allows remote attackers to cause a denial of service (memory consumption) via a large number of SIP INVITE requests, which trigger the creation of many sessions.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:microsoft:office_communicator:*:*:*:*:*:*:*:*", "published": "2008-11-20T15:30:00.390", "last_modified": "2024-10-15T15:35:07.977"}, {"id": "CVE-2008-2121", "score": ["V2", 7.8, "HIGH"], "v2_score": 7.8, "v2_exploitability_score": 10.0, "v2_impact_score": 6.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:N/A:C", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:N/A:C", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "COMPLETE", "baseScore": 7.8}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "The TCP implementation in Sun Solaris 8, 9, and 10 allows remote attackers to cause a denial of service (CPU consumption and new connection timeouts) via a TCP SYN flood attack.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:o:sun:sunos:5.8:*:*:*:*:*:*:*", "published": "2008-05-09T15:20:00.000", "last_modified": "2018-10-30T16:25:15.027"}, {"id": "CVE-2008-2122", "score": ["V31", 7.5, "HIGH"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "PARTIAL", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "IBM Rational Build Forge 7.0.2 allows remote attackers to cause a denial of service (CPU consumption) via a port scan, which spawns multiple bfagent server processes that attempt to read data from closed sockets.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:ibm:rational_build_forge:7.0.2:*:*:*:*:*:*:*", "published": "2008-05-09T15:20:00.000", "last_modified": "2024-02-09T02:54:11.277"}, {"id": "CVE-2008-1700", "score": ["V2", 7.1, "HIGH"], "v2_score": 7.1, "v2_exploitability_score": 8.6, "v2_impact_score": 6.9, "v2_vector": "AV:N/AC:M/Au:N/C:N/I:N/A:C", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:M/Au:N/C:N/I:N/A:C", "accessVector": "NETWORK", "accessComplexity": "MEDIUM", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "COMPLETE", "baseScore": 7.1}, "baseSeverity": "HIGH", "exploitabilityScore": 8.6, "impactScore": 6.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": true}], "description": "The Web TransferCtrl Class 8,2,1,4 (iManFile.cab), as used in WorkSite Web 8.2 before SP1 P2, allows remote attackers to cause a denial of service (memory consumption) via a large number of SendNrlLink directives, which opens a separate window for each directive.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:interwoven:worksite_web:*:*:*:*:*:*:*:*", "published": "2008-04-08T18:05:00.000", "last_modified": "2024-02-02T03:07:30.643"}, {"id": "CVE-2007-4103", "score": ["V31", 7.5, "HIGH"], "v2_score": 7.8, "v2_exploitability_score": 10.0, "v2_impact_score": 6.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:N/A:C", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:N/A:C", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "COMPLETE", "baseScore": 7.8}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "The IAX2 channel driver (chan_iax2) in Asterisk Open 1.2.x before 1.2.23, 1.4.x before 1.4.9, and Asterisk Appliance Developer Kit before 0.6.0, when configured to allow unauthenticated calls, allows remote attackers to cause a denial of service (resource exhaustion) via a flood of calls that do not complete a 3-way handshake, which causes an ast_channel to be allocated but not released.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:digium:asterisk:*:*:*:*:*:*:*:*", "published": "2007-07-31T10:17:00.000", "last_modified": "2024-02-08T20:12:32.380"}, {"id": "CVE-2006-1173", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "PARTIAL", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "Sendmail before 8.13.7 allows remote attackers to cause a denial of service via deeply nested, malformed multipart MIME messages that exhaust the stack during the recursive mime8to7 function for performing 8-bit to 7-bit conversion, which prevents Sendmail from delivering queued messages and might lead to disk consumption by core dump files.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:sendmail:sendmail:*:*:*:*:*:*:*:*", "published": "2006-06-07T23:06:00.000", "last_modified": "2018-10-18T16:31:04.043"}, {"id": "CVE-2007-0897", "score": ["V31", 7.5, "HIGH"], "v2_score": 4.3, "v2_exploitability_score": 8.6, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:M/Au:N/C:N/I:N/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:M/Au:N/C:N/I:N/A:P", "accessVector": "NETWORK", "accessComplexity": "MEDIUM", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "PARTIAL", "baseScore": 4.3}, "baseSeverity": "MEDIUM", "exploitabilityScore": 8.6, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "Clam AntiVirus ClamAV before 0.90 does not close open file descriptors under certain conditions, which allows remote attackers to cause a denial of service (file descriptor consumption and failed scans) via CAB archives with a cabinet header record length of zero, which causes a function to return without closing a file descriptor.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:clamav:clamav:*:*:*:*:*:*:*:*", "published": "2007-02-16T19:28:00.000", "last_modified": "2024-02-09T02:48:50.797"}], "cwe_info": {"cwe_id": "400", "name": "Uncontrolled Resource Consumption", "weakness_abstraction": "Class", "status": "Draft", "description": "The software does not properly control the allocation and maintenance of a limited resource, thereby enabling an actor to influence the amount of resources consumed, eventually leading to the exhaustion of available resources.", "extended_description": "Limited resources include memory, file system storage, database connection pool entries, and CPU. If an attacker can trigger the allocation of these limited resources, but the number or size of the resources is not controlled, then the attacker could cause a denial of service that consumes all available resources. This would prevent valid users from accessing the software, and it could potentially have an impact on the surrounding environment. For example, a memory exhaustion attack against an application could slow down the application as well as its host operating system. There are at least three distinct scenarios which can commonly lead to resource exhaustion: Lack of throttling for the number of allocated resources Losing all references to a resource before reaching the shutdown stage Not closing/returning a resource after processing Resource exhaustion problems are often result due to an incorrect implementation of the following situations: Error conditions and other exceptional circumstances. Confusion over which part of the program is responsible for releasing the resource.", "related_weaknesses": "::NATURE:ChildOf:CWE ID:664:VIEW ID:1000:ORDINAL:Primary::", "weakness_ordinalities": "", "applicable_platforms": "::LANGUAGE CLASS:Language-Independent:LANGUAGE PREVALENCE:Undetermined::", "background_details": "", "alternate_terms": "::TERM:Resource Exhaustion::", "modes_of_introduction": "::PHASE:Operation::PHASE:Architecture and Design::PHASE:Implementation::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Availability:IMPACT:DoS: Crash, Exit, or Restart:IMPACT:DoS: Resource Consumption (CPU):IMPACT:DoS: Resource Consumption (Memory):IMPACT:DoS: Resource Consumption (Other):NOTE:The most common result of resource exhaustion is denial of service. The software may slow down, crash due to unhandled errors, or lock out legitimate users.::SCOPE:Access Control:SCOPE:Other:IMPACT:Bypass Protection Mechanism:IMPACT:Other:NOTE:In some cases it may be possible to force the software to fail open in the event of resource exhaustion. The state of the software -- and possibly the security functionality - may then be compromised.::", "detection_methods": "::METHOD:Automated Static Analysis:DESCRIPTION:Automated static analysis typically has limited utility in recognizing resource exhaustion problems, except for program-independent system resources such as files, sockets, and processes. For system resources, automated static analysis may be able to detect circumstances in which resources are not released after they have expired. Automated analysis of configuration files may be able to detect settings that do not specify a maximum value. Automated static analysis tools will not be appropriate for detecting exhaustion of custom resources, such as an intended security policy in which a bulletin board user is only allowed to make a limited number of posts per day.:EFFECTIVENESS:Limited::METHOD:Automated Dynamic Analysis:DESCRIPTION:Certain automated dynamic analysis techniques may be effective in spotting resource exhaustion problems, especially with resources such as processes, memory, and connections. The technique may involve generating a large number of requests to the software within a short time frame.:EFFECTIVENESS:Moderate::METHOD:Fuzzing:DESCRIPTION:While fuzzing is typically geared toward finding low-level implementation bugs, it can inadvertently find resource exhaustion problems. This can occur when the fuzzer generates a large number of test cases but does not restart the targeted software in between test cases. If an individual test case produces a crash, but it does not do so reliably, then an inability to handle resource exhaustion may be the cause.:EFFECTIVENESS:Opportunistic::", "potential_mitigations": "::PHASE:Architecture and Design:DESCRIPTION:Design throttling mechanisms into the system architecture. The best protection is to limit the amount of resources that an unauthorized user can cause to be expended. A strong authentication and access control model will help prevent such attacks from occurring in the first place. The login application should be protected against DoS attacks as much as possible. Limiting the database access, perhaps by caching result sets, can help minimize the resources expended. To further limit the potential for a DoS attack, consider tracking the rate of requests received from users and blocking requests that exceed a defined rate threshold.::PHASE:Architecture and Design:DESCRIPTION:Mitigation of resource exhaustion attacks requires that the target system either: recognizes the attack and denies that user further access for a given amount of time, or uniformly throttles all requests in order to make it more difficult to consume resources more quickly than they can again be freed. The first of these solutions is an issue in itself though, since it may allow attackers to prevent the use of the system by a particular valid user. If the attacker impersonates the valid user, they may be able to prevent the user from accessing the server in question. The second solution is simply difficult to effectively institute -- and even when properly done, it does not provide a full solution. It simply makes the attack require more resources on the part of the attacker.::PHASE:Architecture and Design:DESCRIPTION:Ensure that protocols have specific limits of scale placed on them.::PHASE:Implementation:DESCRIPTION:Ensure that all failures in resource allocation place the system into a safe posture.::", "observed_examples": "::REFERENCE:CVE-2020-3566:DESCRIPTION:Resource exhaustion in distributed OS because of insufficient IGMP queue management, as exploited in the wild per CISA KEV.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-3566::REFERENCE:CVE-2009-2874:DESCRIPTION:Product allows attackers to cause a crash via a large number of connections.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2009-2874::REFERENCE:CVE-2009-1928:DESCRIPTION:Malformed request triggers uncontrolled recursion, leading to stack exhaustion.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2009-1928::REFERENCE:CVE-2009-2858:DESCRIPTION:Chain: memory leak (CWE-404) leads to resource exhaustion.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2009-2858::REFERENCE:CVE-2009-2726:DESCRIPTION:Driver does not use a maximum width when invoking sscanf style functions, causing stack consumption.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2009-2726::REFERENCE:CVE-2009-2540:DESCRIPTION:Large integer value for a length property in an object causes a large amount of memory allocation.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2009-2540::REFERENCE:CVE-2009-2299:DESCRIPTION:Web application firewall consumes excessive memory when an HTTP request contains a large Content-Length value but no POST data.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2009-2299::REFERENCE:CVE-2009-2054:DESCRIPTION:Product allows exhaustion of file descriptors when processing a large number of TCP packets.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2009-2054::REFERENCE:CVE-2008-5180:DESCRIPTION:Communication product allows memory consumption with a large number of SIP requests, which cause many sessions to be created.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2008-5180::REFERENCE:CVE-2008-2121:DESCRIPTION:TCP implementation allows attackers to consume CPU and prevent new connections using a TCP SYN flood attack.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2008-2121::REFERENCE:CVE-2008-2122:DESCRIPTION:Port scan triggers CPU consumption with processes that attempt to read data from closed sockets.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2008-2122::REFERENCE:CVE-2008-1700:DESCRIPTION:Product allows attackers to cause a denial of service via a large number of directives, each of which opens a separate window.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2008-1700::REFERENCE:CVE-2007-4103:DESCRIPTION:Product allows resource exhaustion via a large number of calls that do not complete a 3-way handshake.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2007-4103::REFERENCE:CVE-2006-1173:DESCRIPTION:Mail server does not properly handle deeply nested multipart MIME messages, leading to stack exhaustion.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2006-1173::REFERENCE:CVE-2007-0897:DESCRIPTION:Chain: anti-virus product encounters a malformed file but returns from a function without closing a file descriptor (CWE-775) leading to file descriptor consumption (CWE-400) and failed scans.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2007-0897::", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "::TAXONOMY NAME:CLASP:ENTRY NAME:Resource exhaustion (file descriptor, disk space, sockets, ...)::TAXONOMY NAME:OWASP Top Ten 2004:ENTRY ID:A9:ENTRY NAME:Denial of Service:MAPPING FIT:CWE More Specific::TAXONOMY NAME:WASC:ENTRY ID:10:ENTRY NAME:Denial of Service::TAXONOMY NAME:WASC:ENTRY ID:41:ENTRY NAME:XML Attribute Blowup::TAXONOMY NAME:The CERT Oracle Secure Coding Standard for Java (2011):ENTRY ID:SER12-J:ENTRY NAME:Avoid memory and resource leaks during serialization::TAXONOMY NAME:The CERT Oracle Secure Coding Standard for Java (2011):ENTRY ID:MSC05-J:ENTRY NAME:Do not exhaust heap space::TAXONOMY NAME:Software Fault Patterns:ENTRY ID:SFP13:ENTRY NAME:Unrestricted Consumption::", "related_attack_patterns": "::147::492::", "notes": "::TYPE:Maintenance:NOTE:Resource consumption could be interpreted as a consequence instead of an insecure behavior, so this entry is being considered for modification. It appears to be referenced too frequently when more precise mappings are available. Some of its children, such as CWE-771, might be better considered as a chain.::TYPE:Theoretical:NOTE:Vulnerability theory is largely about how behaviors and resources interact. Resource exhaustion can be regarded as either a consequence or an attack, depending on the perspective. This entry is an attempt to reflect the underlying weaknesses that enable these attacks (or consequences) to take place.::TYPE:Other:NOTE:Database queries that take a long time to process are good DoS targets. An attacker would have to write a few lines of Perl code to generate enough traffic to exceed the site's ability to keep up. This would effectively prevent authorized users from using the site at all. Resources can be exploited simply by ensuring that the target machine must do much more work and consume more resources in order to service a request than the attacker must do to initiate a request. A prime example of this can be found in old switches that were vulnerable to macof attacks (so named for a tool developed by Dugsong). These attacks flooded a switch with random IP and MAC address combinations, therefore exhausting the switch's cache, which held the information of which port corresponded to which MAC addresses. Once this cache was exhausted, the switch would fail in an insecure way and would begin to act simply as a hub, broadcasting all traffic on all ports and allowing for basic sniffing attacks.::"}}]}, {"capec_id": "CAPEC-131", "c_findings": [{"cwe": "CWE-404", "cves": [{"id": "CVE-1999-1127", "score": ["V31", 7.5, "HIGH"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "PARTIAL", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "Windows NT 4.0 does not properly shut down invalid named pipe RPC connections, which allows remote attackers to cause a denial of service (resource exhaustion) via a series of connections containing malformed data, aka the \"Named Pipes Over RPC\" vulnerability.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:o:microsoft:windows_nt:4.0:-:*:*:enterprise:*:*:*", "published": "1999-12-31T05:00:00.000", "last_modified": "2024-02-08T20:35:19.420"}, {"id": "CVE-2001-0830", "score": ["V31", 7.5, "HIGH"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "PARTIAL", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "6tunnel 0.08 and earlier does not properly close sockets that were initiated by a client, which allows remote attackers to cause a denial of service (resource exhaustion) by repeatedly connecting to and disconnecting from the server.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:6tunnel_project:6tunnel:*:*:*:*:*:*:*:*", "published": "2001-12-06T05:00:00.000", "last_modified": "2024-02-09T02:52:21.457"}, {"id": "CVE-2002-1372", "score": ["V31", 7.5, "HIGH"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "PARTIAL", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "Common Unix Printing System (CUPS) 1.1.14 through 1.1.17 does not properly check the return values of various file and socket operations, which could allow a remote attacker to cause a denial of service (resource exhaustion) by causing file descriptors to be assigned and not released, as demonstrated by fanta.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:apple:cups:*:*:*:*:*:*:*:*", "published": "2002-12-26T05:00:00.000", "last_modified": "2024-01-21T01:39:35.663"}], "cwe_info": {"cwe_id": "404", "name": "Improper Resource Shutdown or Release", "weakness_abstraction": "Class", "status": "Draft", "description": "The program does not release or incorrectly releases a resource before it is made available for re-use.", "extended_description": "When a resource is created or allocated, the developer is responsible for properly releasing the resource as well as accounting for all potential paths of expiration or invalidation, such as a set period of time or revocation.", "related_weaknesses": "::NATURE:ChildOf:CWE ID:664:VIEW ID:1000:ORDINAL:Primary::NATURE:PeerOf:CWE ID:405:VIEW ID:1000::NATURE:CanPrecede:CWE ID:619:VIEW ID:1000::", "weakness_ordinalities": "::ORDINALITY:Primary:DESCRIPTION:Improper release or shutdown of resources can be primary to resource exhaustion, performance, and information confidentiality problems to name a few.::ORDINALITY:Resultant:DESCRIPTION:Improper release or shutdown of resources can be resultant from improper error handling or insufficient resource tracking.::", "applicable_platforms": "::LANGUAGE CLASS:Language-Independent:LANGUAGE PREVALENCE:Undetermined::", "background_details": "", "alternate_terms": "", "modes_of_introduction": "::PHASE:Architecture and Design::PHASE:Implementation::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Availability:SCOPE:Other:IMPACT:DoS: Resource Consumption (Other):IMPACT:Varies by Context:NOTE:Most unreleased resource issues result in general software reliability problems, but if an attacker can intentionally trigger a resource leak, the attacker might be able to launch a denial of service attack by depleting the resource pool.::SCOPE:Confidentiality:IMPACT:Read Application Data:NOTE:When a resource containing sensitive information is not correctly shutdown, it may expose the sensitive data in a subsequent allocation.::", "detection_methods": "::METHOD:Automated Dynamic Analysis:DESCRIPTION:This weakness can be detected using dynamic tools and techniques that interact with the software using large test suites with many diverse inputs, such as fuzz testing (fuzzing), robustness testing, and fault injection. The software's operation may slow down, but it should not become unstable, crash, or generate incorrect results. Resource clean up errors might be detected with a stress-test by calling the software simultaneously from a large number of threads or processes, and look for evidence of any unexpected behavior. The software's operation may slow down, but it should not become unstable, crash, or generate incorrect results.:EFFECTIVENESS:Moderate::METHOD:Manual Dynamic Analysis:DESCRIPTION:Identify error conditions that are not likely to occur during normal usage and trigger them. For example, run the program under low memory conditions, run with insufficient privileges or permissions, interrupt a transaction before it is completed, or disable connectivity to basic network services such as DNS. Monitor the software for any unexpected behavior. If you trigger an unhandled exception or similar error that was discovered and handled by the application's environment, it may still indicate unexpected conditions that were not handled by the application itself.::", "potential_mitigations": "::PHASE:Requirements:STRATEGY:Language Selection:DESCRIPTION:Use a language that does not allow this weakness to occur or provides constructs that make this weakness easier to avoid. For example, languages such as Java, Ruby, and Lisp perform automatic garbage collection that releases memory for objects that have been deallocated.::PHASE:Implementation:DESCRIPTION:It is good practice to be responsible for freeing all resources you allocate and to be consistent with how and where you free memory in a function. If you allocate memory that you intend to free upon completion of the function, you must be sure to free the memory at all exit points for that function including error conditions.::PHASE:Implementation:DESCRIPTION:Memory should be allocated/freed using matching functions such as malloc/free, new/delete, and new[]/delete[].::PHASE:Implementation:DESCRIPTION:When releasing a complex object or structure, ensure that you properly dispose of all of its member components, not just the object itself.::", "observed_examples": "::REFERENCE:CVE-1999-1127:DESCRIPTION:Does not shut down named pipe connections if malformed data is sent.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-1999-1127::REFERENCE:CVE-2001-0830:DESCRIPTION:Sockets not properly closed when attacker repeatedly connects and disconnects from server.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2001-0830::REFERENCE:CVE-2002-1372:DESCRIPTION:Return values of file/socket operations not checked, allowing resultant consumption of file descriptors.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2002-1372::", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "::TAXONOMY NAME:PLOVER:ENTRY NAME:Improper resource shutdown or release::TAXONOMY NAME:7 Pernicious Kingdoms:ENTRY NAME:Unreleased Resource::TAXONOMY NAME:OWASP Top Ten 2004:ENTRY ID:A9:ENTRY NAME:Denial of Service:MAPPING FIT:CWE More Specific::TAXONOMY NAME:CERT C Secure Coding:ENTRY ID:FIO42-C:ENTRY NAME:Close files when they are no longer needed:MAPPING FIT:CWE More Abstract::TAXONOMY NAME:CERT C Secure Coding:ENTRY ID:MEM31-C:ENTRY NAME:Free dynamically allocated memory when no longer needed:MAPPING FIT:CWE More Abstract::TAXONOMY NAME:The CERT Oracle Secure Coding Standard for Java (2011):ENTRY ID:FIO04-J:ENTRY NAME:Release resources when they are no longer needed::TAXONOMY NAME:Software Fault Patterns:ENTRY ID:SFP14:ENTRY NAME:Failure to release resource::", "related_attack_patterns": "::125::130::131::494::495::496::666::", "notes": "::TYPE:Relationship:NOTE:Overlaps memory leaks, asymmetric resource consumption, malformed input errors.::"}}]}, {"capec_id": "CAPEC-130", "c_findings": [{"cwe": "CWE-404", "cves": [{"id": "CVE-1999-1127", "score": ["V31", 7.5, "HIGH"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "PARTIAL", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "Windows NT 4.0 does not properly shut down invalid named pipe RPC connections, which allows remote attackers to cause a denial of service (resource exhaustion) via a series of connections containing malformed data, aka the \"Named Pipes Over RPC\" vulnerability.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:o:microsoft:windows_nt:4.0:-:*:*:enterprise:*:*:*", "published": "1999-12-31T05:00:00.000", "last_modified": "2024-02-08T20:35:19.420"}, {"id": "CVE-2001-0830", "score": ["V31", 7.5, "HIGH"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "PARTIAL", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "6tunnel 0.08 and earlier does not properly close sockets that were initiated by a client, which allows remote attackers to cause a denial of service (resource exhaustion) by repeatedly connecting to and disconnecting from the server.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:6tunnel_project:6tunnel:*:*:*:*:*:*:*:*", "published": "2001-12-06T05:00:00.000", "last_modified": "2024-02-09T02:52:21.457"}, {"id": "CVE-2002-1372", "score": ["V31", 7.5, "HIGH"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "PARTIAL", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "Common Unix Printing System (CUPS) 1.1.14 through 1.1.17 does not properly check the return values of various file and socket operations, which could allow a remote attacker to cause a denial of service (resource exhaustion) by causing file descriptors to be assigned and not released, as demonstrated by fanta.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:apple:cups:*:*:*:*:*:*:*:*", "published": "2002-12-26T05:00:00.000", "last_modified": "2024-01-21T01:39:35.663"}], "cwe_info": {"cwe_id": "404", "name": "Improper Resource Shutdown or Release", "weakness_abstraction": "Class", "status": "Draft", "description": "The program does not release or incorrectly releases a resource before it is made available for re-use.", "extended_description": "When a resource is created or allocated, the developer is responsible for properly releasing the resource as well as accounting for all potential paths of expiration or invalidation, such as a set period of time or revocation.", "related_weaknesses": "::NATURE:ChildOf:CWE ID:664:VIEW ID:1000:ORDINAL:Primary::NATURE:PeerOf:CWE ID:405:VIEW ID:1000::NATURE:CanPrecede:CWE ID:619:VIEW ID:1000::", "weakness_ordinalities": "::ORDINALITY:Primary:DESCRIPTION:Improper release or shutdown of resources can be primary to resource exhaustion, performance, and information confidentiality problems to name a few.::ORDINALITY:Resultant:DESCRIPTION:Improper release or shutdown of resources can be resultant from improper error handling or insufficient resource tracking.::", "applicable_platforms": "::LANGUAGE CLASS:Language-Independent:LANGUAGE PREVALENCE:Undetermined::", "background_details": "", "alternate_terms": "", "modes_of_introduction": "::PHASE:Architecture and Design::PHASE:Implementation::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Availability:SCOPE:Other:IMPACT:DoS: Resource Consumption (Other):IMPACT:Varies by Context:NOTE:Most unreleased resource issues result in general software reliability problems, but if an attacker can intentionally trigger a resource leak, the attacker might be able to launch a denial of service attack by depleting the resource pool.::SCOPE:Confidentiality:IMPACT:Read Application Data:NOTE:When a resource containing sensitive information is not correctly shutdown, it may expose the sensitive data in a subsequent allocation.::", "detection_methods": "::METHOD:Automated Dynamic Analysis:DESCRIPTION:This weakness can be detected using dynamic tools and techniques that interact with the software using large test suites with many diverse inputs, such as fuzz testing (fuzzing), robustness testing, and fault injection. The software's operation may slow down, but it should not become unstable, crash, or generate incorrect results. Resource clean up errors might be detected with a stress-test by calling the software simultaneously from a large number of threads or processes, and look for evidence of any unexpected behavior. The software's operation may slow down, but it should not become unstable, crash, or generate incorrect results.:EFFECTIVENESS:Moderate::METHOD:Manual Dynamic Analysis:DESCRIPTION:Identify error conditions that are not likely to occur during normal usage and trigger them. For example, run the program under low memory conditions, run with insufficient privileges or permissions, interrupt a transaction before it is completed, or disable connectivity to basic network services such as DNS. Monitor the software for any unexpected behavior. If you trigger an unhandled exception or similar error that was discovered and handled by the application's environment, it may still indicate unexpected conditions that were not handled by the application itself.::", "potential_mitigations": "::PHASE:Requirements:STRATEGY:Language Selection:DESCRIPTION:Use a language that does not allow this weakness to occur or provides constructs that make this weakness easier to avoid. For example, languages such as Java, Ruby, and Lisp perform automatic garbage collection that releases memory for objects that have been deallocated.::PHASE:Implementation:DESCRIPTION:It is good practice to be responsible for freeing all resources you allocate and to be consistent with how and where you free memory in a function. If you allocate memory that you intend to free upon completion of the function, you must be sure to free the memory at all exit points for that function including error conditions.::PHASE:Implementation:DESCRIPTION:Memory should be allocated/freed using matching functions such as malloc/free, new/delete, and new[]/delete[].::PHASE:Implementation:DESCRIPTION:When releasing a complex object or structure, ensure that you properly dispose of all of its member components, not just the object itself.::", "observed_examples": "::REFERENCE:CVE-1999-1127:DESCRIPTION:Does not shut down named pipe connections if malformed data is sent.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-1999-1127::REFERENCE:CVE-2001-0830:DESCRIPTION:Sockets not properly closed when attacker repeatedly connects and disconnects from server.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2001-0830::REFERENCE:CVE-2002-1372:DESCRIPTION:Return values of file/socket operations not checked, allowing resultant consumption of file descriptors.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2002-1372::", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "::TAXONOMY NAME:PLOVER:ENTRY NAME:Improper resource shutdown or release::TAXONOMY NAME:7 Pernicious Kingdoms:ENTRY NAME:Unreleased Resource::TAXONOMY NAME:OWASP Top Ten 2004:ENTRY ID:A9:ENTRY NAME:Denial of Service:MAPPING FIT:CWE More Specific::TAXONOMY NAME:CERT C Secure Coding:ENTRY ID:FIO42-C:ENTRY NAME:Close files when they are no longer needed:MAPPING FIT:CWE More Abstract::TAXONOMY NAME:CERT C Secure Coding:ENTRY ID:MEM31-C:ENTRY NAME:Free dynamically allocated memory when no longer needed:MAPPING FIT:CWE More Abstract::TAXONOMY NAME:The CERT Oracle Secure Coding Standard for Java (2011):ENTRY ID:FIO04-J:ENTRY NAME:Release resources when they are no longer needed::TAXONOMY NAME:Software Fault Patterns:ENTRY ID:SFP14:ENTRY NAME:Failure to release resource::", "related_attack_patterns": "::125::130::131::494::495::496::666::", "notes": "::TYPE:Relationship:NOTE:Overlaps memory leaks, asymmetric resource consumption, malformed input errors.::"}}, {"cwe": "CWE-770", "cves": [{"id": "CVE-2009-4017", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "PARTIAL", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "PHP before 5.2.12 and 5.3.x before 5.3.1 does not restrict the number of temporary files created when handling a multipart/form-data POST request, which allows remote attackers to cause a denial of service (resource exhaustion), and makes it easier for remote attackers to exploit local file inclusion vulnerabilities, via multiple requests, related to lack of support for the max_file_uploads directive.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:php:php:*:*:*:*:*:*:*:*", "published": "2009-11-24T00:30:00.500", "last_modified": "2024-02-15T21:16:16.510"}, {"id": "CVE-2009-2726", "score": ["V2", 7.8, "HIGH"], "v2_score": 7.8, "v2_exploitability_score": 10.0, "v2_impact_score": 6.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:N/A:C", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:N/A:C", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "COMPLETE", "baseScore": 7.8}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "The SIP channel driver in Asterisk Open Source 1.2.x before 1.2.34, 1.4.x before 1.4.26.1, 1.6.0.x before 1.6.0.12, and 1.6.1.x before 1.6.1.4; Asterisk Business Edition A.x.x, B.x.x before B.2.5.9, C.2.x before C.2.4.1, and C.3.x before C.3.1; and Asterisk Appliance s800i 1.2.x before 1.3.0.3 does not use a maximum width when invoking sscanf style functions, which allows remote attackers to cause a denial of service (stack memory consumption) via SIP packets containing large sequences of ASCII decimal characters, as demonstrated via vectors related to (1) the CSeq value in a SIP header, (2) large Content-Length value, and (3) SDP.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:digium:asterisk:*:*:business:*:*:*:*:*", "published": "2009-08-12T10:30:01.110", "last_modified": "2024-02-15T21:05:21.457"}, {"id": "CVE-2009-2540", "score": ["V2", 4.3, "MEDIUM"], "v2_score": 4.3, "v2_exploitability_score": 8.6, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:M/Au:N/C:N/I:N/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:M/Au:N/C:N/I:N/A:P", "accessVector": "NETWORK", "accessComplexity": "MEDIUM", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "PARTIAL", "baseScore": 4.3}, "baseSeverity": "MEDIUM", "exploitabilityScore": 8.6, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": true}], "description": "Opera, possibly 9.64 and earlier, allows remote attackers to cause a denial of service (memory consumption) via a large integer value for the length property of a Select object, a related issue to CVE-2009-1692.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:opera:opera_browser:*:*:*:*:*:*:*:*", "published": "2009-07-20T18:30:01.233", "last_modified": "2024-02-02T03:07:21.203"}, {"id": "CVE-2009-2054", "score": ["V2", 7.8, "HIGH"], "v2_score": 7.8, "v2_exploitability_score": 10.0, "v2_impact_score": 6.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:N/A:C", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:N/A:C", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "COMPLETE", "baseScore": 7.8}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "Cisco Unified Communications Manager (aka CUCM, formerly CallManager) 4.x, 5.x before 5.1(3g), 6.x before 6.1(4), 7.0 before 7.0(2a)su1, and 7.1 before 7.1(2a)su1 allows remote attackers to cause a denial of service (file-descriptor exhaustion and SIP outage) via a flood of TCP packets, aka Bug ID CSCsx23689.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:cisco:unified_communications_manager:*:*:*:*:*:*:*:*", "published": "2009-08-27T17:00:01.047", "last_modified": "2024-02-15T21:15:40.407"}, {"id": "CVE-2008-5180", "score": ["V31", 5.3, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "PARTIAL", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "Microsoft Communicator, and Communicator in Microsoft Office 2010 beta, allows remote attackers to cause a denial of service (memory consumption) via a large number of SIP INVITE requests, which trigger the creation of many sessions.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:microsoft:office_communicator:*:*:*:*:*:*:*:*", "published": "2008-11-20T15:30:00.390", "last_modified": "2024-10-15T15:35:07.977"}, {"id": "CVE-2008-1700", "score": ["V2", 7.1, "HIGH"], "v2_score": 7.1, "v2_exploitability_score": 8.6, "v2_impact_score": 6.9, "v2_vector": "AV:N/AC:M/Au:N/C:N/I:N/A:C", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:M/Au:N/C:N/I:N/A:C", "accessVector": "NETWORK", "accessComplexity": "MEDIUM", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "COMPLETE", "baseScore": 7.1}, "baseSeverity": "HIGH", "exploitabilityScore": 8.6, "impactScore": 6.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": true}], "description": "The Web TransferCtrl Class 8,2,1,4 (iManFile.cab), as used in WorkSite Web 8.2 before SP1 P2, allows remote attackers to cause a denial of service (memory consumption) via a large number of SendNrlLink directives, which opens a separate window for each directive.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:interwoven:worksite_web:*:*:*:*:*:*:*:*", "published": "2008-04-08T18:05:00.000", "last_modified": "2024-02-02T03:07:30.643"}, {"id": "CVE-2005-4650", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "PARTIAL", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "Joomla! 1.03 does not restrict the number of \"Search\" Mambots, which allows remote attackers to cause a denial of service (resource consumption) via a large number of Search Mambots.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:joomla:joomla\\!:1.0.3:*:*:*:*:*:*:*", "published": "2005-12-31T05:00:00.000", "last_modified": "2024-02-02T03:07:38.527"}, {"id": "CVE-2020-15100", "score": ["V31", 3.3, "LOW"], "v2_score": 2.1, "v2_exploitability_score": 3.9, "v2_impact_score": 2.9, "v2_vector": "AV:L/AC:L/Au:N/C:N/I:N/A:P", "access_vector": "LOCAL", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:L/AC:L/Au:N/C:N/I:N/A:P", "accessVector": "LOCAL", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "PARTIAL", "baseScore": 2.1}, "baseSeverity": "LOW", "exploitabilityScore": 3.9, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "In freewvs before 0.1.1, a user could create a large file that freewvs will try to read, which will terminate a scan process. This has been patched in 0.1.1.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:schokokeks:freewvs:*:*:*:*:*:*:*:*", "published": "2020-07-14T20:15:11.427", "last_modified": "2021-11-18T18:05:20.650"}], "cwe_info": {"cwe_id": "770", "name": "Allocation of Resources Without Limits or Throttling", "weakness_abstraction": "Base", "status": "Incomplete", "description": "The software allocates a reusable resource or group of resources on behalf of an actor without imposing any restrictions on the size or number of resources that can be allocated, in violation of the intended security policy for that actor.", "extended_description": "Code frequently has to work with limited resources, so programmers must be careful to ensure that resources are not consumed too quickly, or too easily. Without use of quotas, resource limits, or other protection mechanisms, it can be easy for an attacker to consume many resources by rapidly making many requests, or causing larger resources to be used than is needed. When too many resources are allocated, or if a single resource is too large, then it can prevent the code from working correctly, possibly leading to a denial of service.", "related_weaknesses": "::NATURE:ChildOf:CWE ID:400:VIEW ID:1000:ORDINAL:Primary::NATURE:ChildOf:CWE ID:665:VIEW ID:1000::NATURE:ChildOf:CWE ID:400:VIEW ID:1003:ORDINAL:Primary::", "weakness_ordinalities": "", "applicable_platforms": "::LANGUAGE CLASS:Language-Independent:LANGUAGE PREVALENCE:Often::", "background_details": "", "alternate_terms": "", "modes_of_introduction": "::PHASE:Architecture and Design:NOTE:OMISSION: This weakness is caused by missing a security tactic during the architecture and design phase.::PHASE:Implementation::PHASE:Operation::PHASE:System Configuration::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Availability:IMPACT:DoS: Resource Consumption (CPU):IMPACT:DoS: Resource Consumption (Memory):IMPACT:DoS: Resource Consumption (Other):NOTE:When allocating resources without limits, an attacker could prevent other systems, applications, or processes from accessing the same type of resource.::", "detection_methods": "::METHOD:Manual Static Analysis:DESCRIPTION:Manual static analysis can be useful for finding this weakness, but it might not achieve desired code coverage within limited time constraints. If denial-of-service is not considered a significant risk, or if there is strong emphasis on consequences such as code execution, then manual analysis may not focus on this weakness at all.::METHOD:Fuzzing:DESCRIPTION:While fuzzing is typically geared toward finding low-level implementation bugs, it can inadvertently find uncontrolled resource allocation problems. This can occur when the fuzzer generates a large number of test cases but does not restart the targeted software in between test cases. If an individual test case produces a crash, but it does not do so reliably, then an inability to limit resource allocation may be the cause. When the allocation is directly affected by numeric inputs, then fuzzing may produce indications of this weakness.:EFFECTIVENESS:Opportunistic::METHOD:Automated Dynamic Analysis:DESCRIPTION:Certain automated dynamic analysis techniques may be effective in producing side effects of uncontrolled resource allocation problems, especially with resources such as processes, memory, and connections. The technique may involve generating a large number of requests to the software within a short time frame. Manual analysis is likely required to interpret the results.::METHOD:Automated Static Analysis:DESCRIPTION:Specialized configuration or tuning may be required to train automated tools to recognize this weakness. Automated static analysis typically has limited utility in recognizing unlimited allocation problems, except for the missing release of program-independent system resources such as files, sockets, and processes, or unchecked arguments to memory. For system resources, automated static analysis may be able to detect circumstances in which resources are not released after they have expired, or if too much of a resource is requested at once, as can occur with memory. Automated analysis of configuration files may be able to detect settings that do not specify a maximum value. Automated static analysis tools will not be appropriate for detecting exhaustion of custom resources, such as an intended security policy in which a bulletin board user is only allowed to make a limited number of posts per day.::", "potential_mitigations": "::PHASE:Requirements:DESCRIPTION:Clearly specify the minimum and maximum expectations for capabilities, and dictate which behaviors are acceptable when resource allocation reaches limits.::PHASE:Architecture and Design:DESCRIPTION:Limit the amount of resources that are accessible to unprivileged users. Set per-user limits for resources. Allow the system administrator to define these limits. Be careful to avoid CWE-410.::PHASE:Architecture and Design:DESCRIPTION:Design throttling mechanisms into the system architecture. The best protection is to limit the amount of resources that an unauthorized user can cause to be expended. A strong authentication and access control model will help prevent such attacks from occurring in the first place, and it will help the administrator to identify who is committing the abuse. The login application should be protected against DoS attacks as much as possible. Limiting the database access, perhaps by caching result sets, can help minimize the resources expended. To further limit the potential for a DoS attack, consider tracking the rate of requests received from users and blocking requests that exceed a defined rate threshold.::PHASE:Implementation:STRATEGY:Input Validation:DESCRIPTION:Assume all input is malicious. Use an accept known good input validation strategy, i.e., use a list of acceptable inputs that strictly conform to specifications. Reject any input that does not strictly conform to specifications, or transform it into something that does. When performing input validation, consider all potentially relevant properties, including length, type of input, the full range of acceptable values, missing or extra inputs, syntax, consistency across related fields, and conformance to business rules. As an example of business rule logic, boat may be syntactically valid because it only contains alphanumeric characters, but it is not valid if the input is only expected to contain colors such as red or blue. Do not rely exclusively on looking for malicious or malformed inputs. This is likely to miss at least one undesirable input, especially if the code's environment changes. This can give attackers enough room to bypass the intended validation. However, denylists can be useful for detecting potential attacks or determining which inputs are so malformed that they should be rejected outright.::PHASE:Architecture and Design:DESCRIPTION:For any security checks that are performed on the client side, ensure that these checks are duplicated on the server side, in order to avoid CWE-602. Attackers can bypass the client-side checks by modifying values after the checks have been performed, or by changing the client to remove the client-side checks entirely. Then, these modified values would be submitted to the server.::PHASE:Architecture and Design:DESCRIPTION:Mitigation of resource exhaustion attacks requires that the target system either: recognizes the attack and denies that user further access for a given amount of time, typically by using increasing time delays uniformly throttles all requests in order to make it more difficult to consume resources more quickly than they can again be freed. The first of these solutions is an issue in itself though, since it may allow attackers to prevent the use of the system by a particular valid user. If the attacker impersonates the valid user, they may be able to prevent the user from accessing the server in question. The second solution can be difficult to effectively institute -- and even when properly done, it does not provide a full solution. It simply requires more resources on the part of the attacker.::PHASE:Architecture and Design:DESCRIPTION:Ensure that protocols have specific limits of scale placed on them.::PHASE:Architecture and Design Implementation:DESCRIPTION:If the program must fail, ensure that it fails gracefully (fails closed). There may be a temptation to simply let the program fail poorly in cases such as low memory conditions, but an attacker may be able to assert control before the software has fully exited. Alternately, an uncontrolled failure could cause cascading problems with other downstream components; for example, the program could send a signal to a downstream process so the process immediately knows that a problem has occurred and has a better chance of recovery. Ensure that all failures in resource allocation place the system into a safe posture.::PHASE:Operation Architecture and Design:STRATEGY:Resource Limitation:DESCRIPTION:Use resource-limiting settings provided by the operating system or environment. For example, when managing system resources in POSIX, setrlimit() can be used to set limits for certain types of resources, and getrlimit() can determine how many resources are available. However, these functions are not available on all operating systems. When the current levels get close to the maximum that is defined for the application (see CWE-770), then limit the allocation of further resources to privileged users; alternately, begin releasing resources for less-privileged users. While this mitigation may protect the system from attack, it will not necessarily stop attackers from adversely impacting other users. Ensure that the application performs the appropriate error checks and error handling in case resources become unavailable (CWE-703).::", "observed_examples": "::REFERENCE:CVE-2009-4017:DESCRIPTION:Language interpreter does not restrict the number of temporary files being created when handling a MIME request with a large number of parts..:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2009-4017::REFERENCE:CVE-2009-2726:DESCRIPTION:Driver does not use a maximum width when invoking sscanf style functions, causing stack consumption.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2009-2726::REFERENCE:CVE-2009-2540:DESCRIPTION:Large integer value for a length property in an object causes a large amount of memory allocation.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2009-2540::REFERENCE:CVE-2009-2054:DESCRIPTION:Product allows exhaustion of file descriptors when processing a large number of TCP packets.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2009-2054::REFERENCE:CVE-2008-5180:DESCRIPTION:Communication product allows memory consumption with a large number of SIP requests, which cause many sessions to be created.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2008-5180::REFERENCE:CVE-2008-1700:DESCRIPTION:Product allows attackers to cause a denial of service via a large number of directives, each of which opens a separate window.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2008-1700::REFERENCE:CVE-2005-4650:DESCRIPTION:CMS does not restrict the number of searches that can occur simultaneously, leading to resource exhaustion.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2005-4650::REFERENCE:CVE-2020-15100:DESCRIPTION:web application scanner attempts to read an excessively large file created by a user, causing process termination:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-15100::", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "::TAXONOMY NAME:The CERT Oracle Secure Coding Standard for Java (2011):ENTRY ID:FIO04-J:ENTRY NAME:Close resources when they are no longer needed::TAXONOMY NAME:The CERT Oracle Secure Coding Standard for Java (2011):ENTRY ID:SER12-J:ENTRY NAME:Avoid memory and resource leaks during serialization::TAXONOMY NAME:The CERT Oracle Secure Coding Standard for Java (2011):ENTRY ID:MSC05-J:ENTRY NAME:Do not exhaust heap space::", "related_attack_patterns": "::125::130::147::197::229::230::231::469::482::486::487::488::489::490::491::493::494::495::496::528::", "notes": "::TYPE:Relationship:NOTE:This entry is different from uncontrolled resource consumption (CWE-400) in that there are other weaknesses that are related to inability to control resource consumption, such as holding on to a resource too long after use, or not correctly keeping track of active resources so that they can be managed and released when they are finished (CWE-771).::TYPE:Theoretical:NOTE:Vulnerability theory is largely about how behaviors and resources interact. Resource exhaustion can be regarded as either a consequence or an attack, depending on the perspective. This entry is an attempt to reflect one of the underlying weaknesses that enable these attacks (or consequences) to take place.::"}}, {"cwe": "CWE-1325", "cves": [{"id": "CVE-2020-36049", "score": ["V31", 7.5, "HIGH"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "PARTIAL", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "socket.io-parser before 3.4.1 allows attackers to cause a denial of service (memory consumption) via a large packet because a concatenation approach is used.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:socket:socket.io-parser:*:*:*:*:*:node.js:*:*", "published": "2021-01-08T00:15:11.187", "last_modified": "2021-07-21T11:39:23.747"}, {"id": "CVE-2019-20176", "score": ["V31", 7.5, "HIGH"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "PARTIAL", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "In Pure-FTPd 1.0.49, a stack exhaustion issue was discovered in the listdir function in ls.c.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:pureftpd:pure-ftpd:1.0.49:*:*:*:*:*:*:*", "published": "2019-12-31T15:15:11.223", "last_modified": "2023-11-07T03:08:40.020"}, {"id": "CVE-2013-1591", "score": ["V31", 9.8, "CRITICAL"], "v2_score": 10.0, "v2_exploitability_score": 10.0, "v2_impact_score": 10.0, "v2_vector": "AV:N/AC:L/Au:N/C:C/I:C/A:C", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:C/I:C/A:C", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "COMPLETE", "integrityImpact": "COMPLETE", "availabilityImpact": "COMPLETE", "baseScore": 10.0}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 10.0, "acInsufInfo": true, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "Stack-based buffer overflow in libpixman, as used in Pale Moon before 15.4 and possibly other products, has unspecified impact and context-dependent attack vectors.  NOTE: this issue might be resultant from an integer overflow in the fast_composite_scaled_bilinear function in pixman-inlines.h, which triggers an infinite loop.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:redhat:enterprise_virtualization:3.0:*:*:*:*:*:*:*", "published": "2013-01-31T23:55:01.037", "last_modified": "2024-02-15T21:08:00.480"}], "cwe_info": {"cwe_id": "1325", "name": "Improperly Controlled Sequential Memory Allocation", "weakness_abstraction": "Base", "status": "Incomplete", "description": "The product manages a group of objects or resources and performs a separate memory allocation for each object, but it does not properly limit the total amount of memory that is consumed by all of the combined objects.", "extended_description": "While the product might limit the amount of memory that is allocated in a single operation for a single object (such as a malloc of an array), if an attacker can cause multiple objects to be allocated in separate operations, then this might cause higher total memory consumption than the developer intended, leading to a denial of service.", "related_weaknesses": "::NATURE:ChildOf:CWE ID:770:VIEW ID:1000:ORDINAL:Primary::NATURE:PeerOf:CWE ID:789:VIEW ID:1000:ORDINAL:Primary::NATURE:CanPrecede:CWE ID:476:VIEW ID:1000::", "weakness_ordinalities": "::ORDINALITY:Primary::", "applicable_platforms": "::LANGUAGE NAME:C:LANGUAGE PREVALENCE:Undetermined::LANGUAGE NAME:C++:LANGUAGE PREVALENCE:Undetermined::LANGUAGE CLASS:Language-Independent:LANGUAGE PREVALENCE:Undetermined::", "background_details": "", "alternate_terms": "::TERM:Stack Exhaustion:DESCRIPTION:When a weakness allocates excessive memory on the stack, it is often described as stack exhaustion, which is a technical impact of the weakness. This technical impact is often encountered as a consequence of CWE-789 and/or CWE-1325.::", "modes_of_introduction": "::PHASE:Implementation::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Availability:IMPACT:DoS: Resource Consumption (Memory):NOTE:Not controlling memory allocation can result in a request for too much system memory, possibly leading to a crash of the application due to out-of-memory conditions, or the consumption of a large amount of memory on the system.::", "detection_methods": "", "potential_mitigations": "::PHASE:Implementation:DESCRIPTION:Ensure multiple allocations of the same kind of object are properly tracked - possibly across multiple sessions, requests, or messages. Define an appropriate strategy for handling requests that exceed the limit, and consider supporting a configuration option so that the administrator can extend the amount of memory to be used if necessary.::PHASE:Operation:DESCRIPTION:Run the program using system-provided resource limits for memory. This might still cause the program to crash or exit, but the impact to the rest of the system will be minimized.::", "observed_examples": "::REFERENCE:CVE-2020-36049:DESCRIPTION:JavaScript-based packet decoder uses concatenation of many small strings, causing out-of-memory (OOM) condition:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-36049::REFERENCE:CVE-2019-20176:DESCRIPTION:Product allocates a new buffer on the stack for each file in a directory, allowing stack exhaustion:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-20176::REFERENCE:CVE-2013-1591:DESCRIPTION:Chain: an integer overflow (CWE-190) in the image size calculation causes an infinite loop (CWE-835) which sequentially allocates buffers without limits (CWE-1325) until the stack is full.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2013-1591::", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "", "related_attack_patterns": "::130::", "notes": ""}}]}, {"capec_id": "CAPEC-125", "c_findings": [{"cwe": "CWE-404", "cves": [{"id": "CVE-1999-1127", "score": ["V31", 7.5, "HIGH"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "PARTIAL", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "Windows NT 4.0 does not properly shut down invalid named pipe RPC connections, which allows remote attackers to cause a denial of service (resource exhaustion) via a series of connections containing malformed data, aka the \"Named Pipes Over RPC\" vulnerability.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:o:microsoft:windows_nt:4.0:-:*:*:enterprise:*:*:*", "published": "1999-12-31T05:00:00.000", "last_modified": "2024-02-08T20:35:19.420"}, {"id": "CVE-2001-0830", "score": ["V31", 7.5, "HIGH"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "PARTIAL", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "6tunnel 0.08 and earlier does not properly close sockets that were initiated by a client, which allows remote attackers to cause a denial of service (resource exhaustion) by repeatedly connecting to and disconnecting from the server.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:6tunnel_project:6tunnel:*:*:*:*:*:*:*:*", "published": "2001-12-06T05:00:00.000", "last_modified": "2024-02-09T02:52:21.457"}, {"id": "CVE-2002-1372", "score": ["V31", 7.5, "HIGH"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "PARTIAL", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "Common Unix Printing System (CUPS) 1.1.14 through 1.1.17 does not properly check the return values of various file and socket operations, which could allow a remote attacker to cause a denial of service (resource exhaustion) by causing file descriptors to be assigned and not released, as demonstrated by fanta.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:apple:cups:*:*:*:*:*:*:*:*", "published": "2002-12-26T05:00:00.000", "last_modified": "2024-01-21T01:39:35.663"}], "cwe_info": {"cwe_id": "404", "name": "Improper Resource Shutdown or Release", "weakness_abstraction": "Class", "status": "Draft", "description": "The program does not release or incorrectly releases a resource before it is made available for re-use.", "extended_description": "When a resource is created or allocated, the developer is responsible for properly releasing the resource as well as accounting for all potential paths of expiration or invalidation, such as a set period of time or revocation.", "related_weaknesses": "::NATURE:ChildOf:CWE ID:664:VIEW ID:1000:ORDINAL:Primary::NATURE:PeerOf:CWE ID:405:VIEW ID:1000::NATURE:CanPrecede:CWE ID:619:VIEW ID:1000::", "weakness_ordinalities": "::ORDINALITY:Primary:DESCRIPTION:Improper release or shutdown of resources can be primary to resource exhaustion, performance, and information confidentiality problems to name a few.::ORDINALITY:Resultant:DESCRIPTION:Improper release or shutdown of resources can be resultant from improper error handling or insufficient resource tracking.::", "applicable_platforms": "::LANGUAGE CLASS:Language-Independent:LANGUAGE PREVALENCE:Undetermined::", "background_details": "", "alternate_terms": "", "modes_of_introduction": "::PHASE:Architecture and Design::PHASE:Implementation::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Availability:SCOPE:Other:IMPACT:DoS: Resource Consumption (Other):IMPACT:Varies by Context:NOTE:Most unreleased resource issues result in general software reliability problems, but if an attacker can intentionally trigger a resource leak, the attacker might be able to launch a denial of service attack by depleting the resource pool.::SCOPE:Confidentiality:IMPACT:Read Application Data:NOTE:When a resource containing sensitive information is not correctly shutdown, it may expose the sensitive data in a subsequent allocation.::", "detection_methods": "::METHOD:Automated Dynamic Analysis:DESCRIPTION:This weakness can be detected using dynamic tools and techniques that interact with the software using large test suites with many diverse inputs, such as fuzz testing (fuzzing), robustness testing, and fault injection. The software's operation may slow down, but it should not become unstable, crash, or generate incorrect results. Resource clean up errors might be detected with a stress-test by calling the software simultaneously from a large number of threads or processes, and look for evidence of any unexpected behavior. The software's operation may slow down, but it should not become unstable, crash, or generate incorrect results.:EFFECTIVENESS:Moderate::METHOD:Manual Dynamic Analysis:DESCRIPTION:Identify error conditions that are not likely to occur during normal usage and trigger them. For example, run the program under low memory conditions, run with insufficient privileges or permissions, interrupt a transaction before it is completed, or disable connectivity to basic network services such as DNS. Monitor the software for any unexpected behavior. If you trigger an unhandled exception or similar error that was discovered and handled by the application's environment, it may still indicate unexpected conditions that were not handled by the application itself.::", "potential_mitigations": "::PHASE:Requirements:STRATEGY:Language Selection:DESCRIPTION:Use a language that does not allow this weakness to occur or provides constructs that make this weakness easier to avoid. For example, languages such as Java, Ruby, and Lisp perform automatic garbage collection that releases memory for objects that have been deallocated.::PHASE:Implementation:DESCRIPTION:It is good practice to be responsible for freeing all resources you allocate and to be consistent with how and where you free memory in a function. If you allocate memory that you intend to free upon completion of the function, you must be sure to free the memory at all exit points for that function including error conditions.::PHASE:Implementation:DESCRIPTION:Memory should be allocated/freed using matching functions such as malloc/free, new/delete, and new[]/delete[].::PHASE:Implementation:DESCRIPTION:When releasing a complex object or structure, ensure that you properly dispose of all of its member components, not just the object itself.::", "observed_examples": "::REFERENCE:CVE-1999-1127:DESCRIPTION:Does not shut down named pipe connections if malformed data is sent.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-1999-1127::REFERENCE:CVE-2001-0830:DESCRIPTION:Sockets not properly closed when attacker repeatedly connects and disconnects from server.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2001-0830::REFERENCE:CVE-2002-1372:DESCRIPTION:Return values of file/socket operations not checked, allowing resultant consumption of file descriptors.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2002-1372::", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "::TAXONOMY NAME:PLOVER:ENTRY NAME:Improper resource shutdown or release::TAXONOMY NAME:7 Pernicious Kingdoms:ENTRY NAME:Unreleased Resource::TAXONOMY NAME:OWASP Top Ten 2004:ENTRY ID:A9:ENTRY NAME:Denial of Service:MAPPING FIT:CWE More Specific::TAXONOMY NAME:CERT C Secure Coding:ENTRY ID:FIO42-C:ENTRY NAME:Close files when they are no longer needed:MAPPING FIT:CWE More Abstract::TAXONOMY NAME:CERT C Secure Coding:ENTRY ID:MEM31-C:ENTRY NAME:Free dynamically allocated memory when no longer needed:MAPPING FIT:CWE More Abstract::TAXONOMY NAME:The CERT Oracle Secure Coding Standard for Java (2011):ENTRY ID:FIO04-J:ENTRY NAME:Release resources when they are no longer needed::TAXONOMY NAME:Software Fault Patterns:ENTRY ID:SFP14:ENTRY NAME:Failure to release resource::", "related_attack_patterns": "::125::130::131::494::495::496::666::", "notes": "::TYPE:Relationship:NOTE:Overlaps memory leaks, asymmetric resource consumption, malformed input errors.::"}}, {"cwe": "CWE-770", "cves": [{"id": "CVE-2009-4017", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "PARTIAL", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "PHP before 5.2.12 and 5.3.x before 5.3.1 does not restrict the number of temporary files created when handling a multipart/form-data POST request, which allows remote attackers to cause a denial of service (resource exhaustion), and makes it easier for remote attackers to exploit local file inclusion vulnerabilities, via multiple requests, related to lack of support for the max_file_uploads directive.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:php:php:*:*:*:*:*:*:*:*", "published": "2009-11-24T00:30:00.500", "last_modified": "2024-02-15T21:16:16.510"}, {"id": "CVE-2009-2726", "score": ["V2", 7.8, "HIGH"], "v2_score": 7.8, "v2_exploitability_score": 10.0, "v2_impact_score": 6.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:N/A:C", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:N/A:C", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "COMPLETE", "baseScore": 7.8}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "The SIP channel driver in Asterisk Open Source 1.2.x before 1.2.34, 1.4.x before 1.4.26.1, 1.6.0.x before 1.6.0.12, and 1.6.1.x before 1.6.1.4; Asterisk Business Edition A.x.x, B.x.x before B.2.5.9, C.2.x before C.2.4.1, and C.3.x before C.3.1; and Asterisk Appliance s800i 1.2.x before 1.3.0.3 does not use a maximum width when invoking sscanf style functions, which allows remote attackers to cause a denial of service (stack memory consumption) via SIP packets containing large sequences of ASCII decimal characters, as demonstrated via vectors related to (1) the CSeq value in a SIP header, (2) large Content-Length value, and (3) SDP.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:digium:asterisk:*:*:business:*:*:*:*:*", "published": "2009-08-12T10:30:01.110", "last_modified": "2024-02-15T21:05:21.457"}, {"id": "CVE-2009-2540", "score": ["V2", 4.3, "MEDIUM"], "v2_score": 4.3, "v2_exploitability_score": 8.6, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:M/Au:N/C:N/I:N/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:M/Au:N/C:N/I:N/A:P", "accessVector": "NETWORK", "accessComplexity": "MEDIUM", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "PARTIAL", "baseScore": 4.3}, "baseSeverity": "MEDIUM", "exploitabilityScore": 8.6, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": true}], "description": "Opera, possibly 9.64 and earlier, allows remote attackers to cause a denial of service (memory consumption) via a large integer value for the length property of a Select object, a related issue to CVE-2009-1692.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:opera:opera_browser:*:*:*:*:*:*:*:*", "published": "2009-07-20T18:30:01.233", "last_modified": "2024-02-02T03:07:21.203"}, {"id": "CVE-2009-2054", "score": ["V2", 7.8, "HIGH"], "v2_score": 7.8, "v2_exploitability_score": 10.0, "v2_impact_score": 6.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:N/A:C", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:N/A:C", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "COMPLETE", "baseScore": 7.8}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "Cisco Unified Communications Manager (aka CUCM, formerly CallManager) 4.x, 5.x before 5.1(3g), 6.x before 6.1(4), 7.0 before 7.0(2a)su1, and 7.1 before 7.1(2a)su1 allows remote attackers to cause a denial of service (file-descriptor exhaustion and SIP outage) via a flood of TCP packets, aka Bug ID CSCsx23689.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:cisco:unified_communications_manager:*:*:*:*:*:*:*:*", "published": "2009-08-27T17:00:01.047", "last_modified": "2024-02-15T21:15:40.407"}, {"id": "CVE-2008-5180", "score": ["V31", 5.3, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "PARTIAL", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "Microsoft Communicator, and Communicator in Microsoft Office 2010 beta, allows remote attackers to cause a denial of service (memory consumption) via a large number of SIP INVITE requests, which trigger the creation of many sessions.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:microsoft:office_communicator:*:*:*:*:*:*:*:*", "published": "2008-11-20T15:30:00.390", "last_modified": "2024-10-15T15:35:07.977"}, {"id": "CVE-2008-1700", "score": ["V2", 7.1, "HIGH"], "v2_score": 7.1, "v2_exploitability_score": 8.6, "v2_impact_score": 6.9, "v2_vector": "AV:N/AC:M/Au:N/C:N/I:N/A:C", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:M/Au:N/C:N/I:N/A:C", "accessVector": "NETWORK", "accessComplexity": "MEDIUM", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "COMPLETE", "baseScore": 7.1}, "baseSeverity": "HIGH", "exploitabilityScore": 8.6, "impactScore": 6.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": true}], "description": "The Web TransferCtrl Class 8,2,1,4 (iManFile.cab), as used in WorkSite Web 8.2 before SP1 P2, allows remote attackers to cause a denial of service (memory consumption) via a large number of SendNrlLink directives, which opens a separate window for each directive.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:interwoven:worksite_web:*:*:*:*:*:*:*:*", "published": "2008-04-08T18:05:00.000", "last_modified": "2024-02-02T03:07:30.643"}, {"id": "CVE-2005-4650", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "PARTIAL", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "Joomla! 1.03 does not restrict the number of \"Search\" Mambots, which allows remote attackers to cause a denial of service (resource consumption) via a large number of Search Mambots.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:joomla:joomla\\!:1.0.3:*:*:*:*:*:*:*", "published": "2005-12-31T05:00:00.000", "last_modified": "2024-02-02T03:07:38.527"}, {"id": "CVE-2020-15100", "score": ["V31", 3.3, "LOW"], "v2_score": 2.1, "v2_exploitability_score": 3.9, "v2_impact_score": 2.9, "v2_vector": "AV:L/AC:L/Au:N/C:N/I:N/A:P", "access_vector": "LOCAL", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:L/AC:L/Au:N/C:N/I:N/A:P", "accessVector": "LOCAL", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "PARTIAL", "baseScore": 2.1}, "baseSeverity": "LOW", "exploitabilityScore": 3.9, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "In freewvs before 0.1.1, a user could create a large file that freewvs will try to read, which will terminate a scan process. This has been patched in 0.1.1.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:schokokeks:freewvs:*:*:*:*:*:*:*:*", "published": "2020-07-14T20:15:11.427", "last_modified": "2021-11-18T18:05:20.650"}], "cwe_info": {"cwe_id": "770", "name": "Allocation of Resources Without Limits or Throttling", "weakness_abstraction": "Base", "status": "Incomplete", "description": "The software allocates a reusable resource or group of resources on behalf of an actor without imposing any restrictions on the size or number of resources that can be allocated, in violation of the intended security policy for that actor.", "extended_description": "Code frequently has to work with limited resources, so programmers must be careful to ensure that resources are not consumed too quickly, or too easily. Without use of quotas, resource limits, or other protection mechanisms, it can be easy for an attacker to consume many resources by rapidly making many requests, or causing larger resources to be used than is needed. When too many resources are allocated, or if a single resource is too large, then it can prevent the code from working correctly, possibly leading to a denial of service.", "related_weaknesses": "::NATURE:ChildOf:CWE ID:400:VIEW ID:1000:ORDINAL:Primary::NATURE:ChildOf:CWE ID:665:VIEW ID:1000::NATURE:ChildOf:CWE ID:400:VIEW ID:1003:ORDINAL:Primary::", "weakness_ordinalities": "", "applicable_platforms": "::LANGUAGE CLASS:Language-Independent:LANGUAGE PREVALENCE:Often::", "background_details": "", "alternate_terms": "", "modes_of_introduction": "::PHASE:Architecture and Design:NOTE:OMISSION: This weakness is caused by missing a security tactic during the architecture and design phase.::PHASE:Implementation::PHASE:Operation::PHASE:System Configuration::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Availability:IMPACT:DoS: Resource Consumption (CPU):IMPACT:DoS: Resource Consumption (Memory):IMPACT:DoS: Resource Consumption (Other):NOTE:When allocating resources without limits, an attacker could prevent other systems, applications, or processes from accessing the same type of resource.::", "detection_methods": "::METHOD:Manual Static Analysis:DESCRIPTION:Manual static analysis can be useful for finding this weakness, but it might not achieve desired code coverage within limited time constraints. If denial-of-service is not considered a significant risk, or if there is strong emphasis on consequences such as code execution, then manual analysis may not focus on this weakness at all.::METHOD:Fuzzing:DESCRIPTION:While fuzzing is typically geared toward finding low-level implementation bugs, it can inadvertently find uncontrolled resource allocation problems. This can occur when the fuzzer generates a large number of test cases but does not restart the targeted software in between test cases. If an individual test case produces a crash, but it does not do so reliably, then an inability to limit resource allocation may be the cause. When the allocation is directly affected by numeric inputs, then fuzzing may produce indications of this weakness.:EFFECTIVENESS:Opportunistic::METHOD:Automated Dynamic Analysis:DESCRIPTION:Certain automated dynamic analysis techniques may be effective in producing side effects of uncontrolled resource allocation problems, especially with resources such as processes, memory, and connections. The technique may involve generating a large number of requests to the software within a short time frame. Manual analysis is likely required to interpret the results.::METHOD:Automated Static Analysis:DESCRIPTION:Specialized configuration or tuning may be required to train automated tools to recognize this weakness. Automated static analysis typically has limited utility in recognizing unlimited allocation problems, except for the missing release of program-independent system resources such as files, sockets, and processes, or unchecked arguments to memory. For system resources, automated static analysis may be able to detect circumstances in which resources are not released after they have expired, or if too much of a resource is requested at once, as can occur with memory. Automated analysis of configuration files may be able to detect settings that do not specify a maximum value. Automated static analysis tools will not be appropriate for detecting exhaustion of custom resources, such as an intended security policy in which a bulletin board user is only allowed to make a limited number of posts per day.::", "potential_mitigations": "::PHASE:Requirements:DESCRIPTION:Clearly specify the minimum and maximum expectations for capabilities, and dictate which behaviors are acceptable when resource allocation reaches limits.::PHASE:Architecture and Design:DESCRIPTION:Limit the amount of resources that are accessible to unprivileged users. Set per-user limits for resources. Allow the system administrator to define these limits. Be careful to avoid CWE-410.::PHASE:Architecture and Design:DESCRIPTION:Design throttling mechanisms into the system architecture. The best protection is to limit the amount of resources that an unauthorized user can cause to be expended. A strong authentication and access control model will help prevent such attacks from occurring in the first place, and it will help the administrator to identify who is committing the abuse. The login application should be protected against DoS attacks as much as possible. Limiting the database access, perhaps by caching result sets, can help minimize the resources expended. To further limit the potential for a DoS attack, consider tracking the rate of requests received from users and blocking requests that exceed a defined rate threshold.::PHASE:Implementation:STRATEGY:Input Validation:DESCRIPTION:Assume all input is malicious. Use an accept known good input validation strategy, i.e., use a list of acceptable inputs that strictly conform to specifications. Reject any input that does not strictly conform to specifications, or transform it into something that does. When performing input validation, consider all potentially relevant properties, including length, type of input, the full range of acceptable values, missing or extra inputs, syntax, consistency across related fields, and conformance to business rules. As an example of business rule logic, boat may be syntactically valid because it only contains alphanumeric characters, but it is not valid if the input is only expected to contain colors such as red or blue. Do not rely exclusively on looking for malicious or malformed inputs. This is likely to miss at least one undesirable input, especially if the code's environment changes. This can give attackers enough room to bypass the intended validation. However, denylists can be useful for detecting potential attacks or determining which inputs are so malformed that they should be rejected outright.::PHASE:Architecture and Design:DESCRIPTION:For any security checks that are performed on the client side, ensure that these checks are duplicated on the server side, in order to avoid CWE-602. Attackers can bypass the client-side checks by modifying values after the checks have been performed, or by changing the client to remove the client-side checks entirely. Then, these modified values would be submitted to the server.::PHASE:Architecture and Design:DESCRIPTION:Mitigation of resource exhaustion attacks requires that the target system either: recognizes the attack and denies that user further access for a given amount of time, typically by using increasing time delays uniformly throttles all requests in order to make it more difficult to consume resources more quickly than they can again be freed. The first of these solutions is an issue in itself though, since it may allow attackers to prevent the use of the system by a particular valid user. If the attacker impersonates the valid user, they may be able to prevent the user from accessing the server in question. The second solution can be difficult to effectively institute -- and even when properly done, it does not provide a full solution. It simply requires more resources on the part of the attacker.::PHASE:Architecture and Design:DESCRIPTION:Ensure that protocols have specific limits of scale placed on them.::PHASE:Architecture and Design Implementation:DESCRIPTION:If the program must fail, ensure that it fails gracefully (fails closed). There may be a temptation to simply let the program fail poorly in cases such as low memory conditions, but an attacker may be able to assert control before the software has fully exited. Alternately, an uncontrolled failure could cause cascading problems with other downstream components; for example, the program could send a signal to a downstream process so the process immediately knows that a problem has occurred and has a better chance of recovery. Ensure that all failures in resource allocation place the system into a safe posture.::PHASE:Operation Architecture and Design:STRATEGY:Resource Limitation:DESCRIPTION:Use resource-limiting settings provided by the operating system or environment. For example, when managing system resources in POSIX, setrlimit() can be used to set limits for certain types of resources, and getrlimit() can determine how many resources are available. However, these functions are not available on all operating systems. When the current levels get close to the maximum that is defined for the application (see CWE-770), then limit the allocation of further resources to privileged users; alternately, begin releasing resources for less-privileged users. While this mitigation may protect the system from attack, it will not necessarily stop attackers from adversely impacting other users. Ensure that the application performs the appropriate error checks and error handling in case resources become unavailable (CWE-703).::", "observed_examples": "::REFERENCE:CVE-2009-4017:DESCRIPTION:Language interpreter does not restrict the number of temporary files being created when handling a MIME request with a large number of parts..:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2009-4017::REFERENCE:CVE-2009-2726:DESCRIPTION:Driver does not use a maximum width when invoking sscanf style functions, causing stack consumption.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2009-2726::REFERENCE:CVE-2009-2540:DESCRIPTION:Large integer value for a length property in an object causes a large amount of memory allocation.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2009-2540::REFERENCE:CVE-2009-2054:DESCRIPTION:Product allows exhaustion of file descriptors when processing a large number of TCP packets.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2009-2054::REFERENCE:CVE-2008-5180:DESCRIPTION:Communication product allows memory consumption with a large number of SIP requests, which cause many sessions to be created.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2008-5180::REFERENCE:CVE-2008-1700:DESCRIPTION:Product allows attackers to cause a denial of service via a large number of directives, each of which opens a separate window.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2008-1700::REFERENCE:CVE-2005-4650:DESCRIPTION:CMS does not restrict the number of searches that can occur simultaneously, leading to resource exhaustion.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2005-4650::REFERENCE:CVE-2020-15100:DESCRIPTION:web application scanner attempts to read an excessively large file created by a user, causing process termination:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-15100::", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "::TAXONOMY NAME:The CERT Oracle Secure Coding Standard for Java (2011):ENTRY ID:FIO04-J:ENTRY NAME:Close resources when they are no longer needed::TAXONOMY NAME:The CERT Oracle Secure Coding Standard for Java (2011):ENTRY ID:SER12-J:ENTRY NAME:Avoid memory and resource leaks during serialization::TAXONOMY NAME:The CERT Oracle Secure Coding Standard for Java (2011):ENTRY ID:MSC05-J:ENTRY NAME:Do not exhaust heap space::", "related_attack_patterns": "::125::130::147::197::229::230::231::469::482::486::487::488::489::490::491::493::494::495::496::528::", "notes": "::TYPE:Relationship:NOTE:This entry is different from uncontrolled resource consumption (CWE-400) in that there are other weaknesses that are related to inability to control resource consumption, such as holding on to a resource too long after use, or not correctly keeping track of active resources so that they can be managed and released when they are finished (CWE-771).::TYPE:Theoretical:NOTE:Vulnerability theory is largely about how behaviors and resources interact. Resource exhaustion can be regarded as either a consequence or an attack, depending on the perspective. This entry is an attempt to reflect one of the underlying weaknesses that enable these attacks (or consequences) to take place.::"}}]}]}, {"technique_id": "T1609", "t_findings": [{"capec_id": "CAPEC-227", "c_findings": [{"cwe": "CWE-400", "cves": [{"id": "CVE-2020-3566", "score": ["V31", 8.6, "HIGH"], "v2_score": 7.8, "v2_exploitability_score": 10.0, "v2_impact_score": 6.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:N/A:C", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:N/A:C", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "COMPLETE", "baseScore": 7.8}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "A vulnerability in the Distance Vector Multicast Routing Protocol (DVMRP) feature of Cisco IOS XR Software could allow an unauthenticated, remote attacker to exhaust process memory of an affected device. The vulnerability is due to insufficient queue management for Internet Group Management Protocol (IGMP) packets. An attacker could exploit this vulnerability by sending crafted IGMP traffic to an affected device. A successful exploit could allow the attacker to cause memory exhaustion, resulting in instability of other processes. These processes may include, but are not limited to, interior and exterior routing protocols. Cisco will release software updates that address this vulnerability.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:o:cisco:ios_xr:6.4.2:*:*:*:*:*:*:*", "published": "2020-08-29T16:15:09.797", "last_modified": "2024-07-26T19:55:20.327"}, {"id": "CVE-2009-2874", "score": ["V2", 7.8, "HIGH"], "v2_score": 7.8, "v2_exploitability_score": 10.0, "v2_impact_score": 6.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:N/A:C", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:N/A:C", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "COMPLETE", "baseScore": 7.8}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "The TimesTenD process in Cisco Unified Presence 1.x, 6.x before 6.0(6), and 7.x before 7.0(4) allows remote attackers to cause a denial of service (process crash) via a large number of TCP connections to ports 16200 and 22794, aka Bug ID CSCsy17662.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:cisco:unified_presence_server:1.0:*:*:*:*:*:*:*", "published": "2009-10-16T16:30:00.640", "last_modified": "2017-08-17T01:30:56.320"}, {"id": "CVE-2009-1928", "score": ["V2", 7.8, "HIGH"], "v2_score": 7.8, "v2_exploitability_score": 10.0, "v2_impact_score": 6.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:N/A:C", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:N/A:C", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "COMPLETE", "baseScore": 7.8}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "Stack consumption vulnerability in the LDAP service in Active Directory on Microsoft Windows 2000 SP4, Server 2003 SP2, and Server 2008 Gold and SP2; Active Directory Application Mode (ADAM) on Windows XP SP2 and SP3 and Server 2003 SP2; and Active Directory Lightweight Directory Service (AD LDS) on Windows Server 2008 Gold and SP2 allows remote attackers to cause a denial of service (system hang) via a malformed (1) LDAP or (2) LDAPS request, aka \"LSASS Recursive Stack Overflow Vulnerability.\"", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:o:microsoft:windows_2000:*:sp4:*:*:*:*:*:*", "published": "2009-11-11T19:30:00.267", "last_modified": "2023-12-07T18:38:56.693"}, {"id": "CVE-2009-2858", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "PARTIAL", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "Memory leak in the Security component in IBM DB2 8.1 before FP18 on Unix platforms allows attackers to cause a denial of service (memory consumption) via unspecified vectors, related to private memory within the DB2 memory structure.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:ibm:db2:*:fp17:*:*:*:*:*:*", "published": "2009-08-19T17:30:01.187", "last_modified": "2009-08-21T04:00:00.000"}, {"id": "CVE-2009-2726", "score": ["V2", 7.8, "HIGH"], "v2_score": 7.8, "v2_exploitability_score": 10.0, "v2_impact_score": 6.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:N/A:C", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:N/A:C", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "COMPLETE", "baseScore": 7.8}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "The SIP channel driver in Asterisk Open Source 1.2.x before 1.2.34, 1.4.x before 1.4.26.1, 1.6.0.x before 1.6.0.12, and 1.6.1.x before 1.6.1.4; Asterisk Business Edition A.x.x, B.x.x before B.2.5.9, C.2.x before C.2.4.1, and C.3.x before C.3.1; and Asterisk Appliance s800i 1.2.x before 1.3.0.3 does not use a maximum width when invoking sscanf style functions, which allows remote attackers to cause a denial of service (stack memory consumption) via SIP packets containing large sequences of ASCII decimal characters, as demonstrated via vectors related to (1) the CSeq value in a SIP header, (2) large Content-Length value, and (3) SDP.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:digium:asterisk:*:*:business:*:*:*:*:*", "published": "2009-08-12T10:30:01.110", "last_modified": "2024-02-15T21:05:21.457"}, {"id": "CVE-2009-2540", "score": ["V2", 4.3, "MEDIUM"], "v2_score": 4.3, "v2_exploitability_score": 8.6, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:M/Au:N/C:N/I:N/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:M/Au:N/C:N/I:N/A:P", "accessVector": "NETWORK", "accessComplexity": "MEDIUM", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "PARTIAL", "baseScore": 4.3}, "baseSeverity": "MEDIUM", "exploitabilityScore": 8.6, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": true}], "description": "Opera, possibly 9.64 and earlier, allows remote attackers to cause a denial of service (memory consumption) via a large integer value for the length property of a Select object, a related issue to CVE-2009-1692.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:opera:opera_browser:*:*:*:*:*:*:*:*", "published": "2009-07-20T18:30:01.233", "last_modified": "2024-02-02T03:07:21.203"}, {"id": "CVE-2009-2299", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "PARTIAL", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "The Artofdefence Hyperguard Web Application Firewall (WAF) module before 2.5.5-11635, 3.0 before 3.0.3-11636, and 3.1 before 3.1.1-11637, a module for the Apache HTTP Server, allows remote attackers to cause a denial of service (memory consumption) via an HTTP request with a large Content-Length value but no POST data.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:hyperguard_web_application_firewall_project:hyperguard_web_application_firewall:*:*:*:*:*:*:*:*", "published": "2009-07-02T10:30:00.407", "last_modified": "2020-11-16T20:48:00.137"}, {"id": "CVE-2009-2054", "score": ["V2", 7.8, "HIGH"], "v2_score": 7.8, "v2_exploitability_score": 10.0, "v2_impact_score": 6.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:N/A:C", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:N/A:C", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "COMPLETE", "baseScore": 7.8}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "Cisco Unified Communications Manager (aka CUCM, formerly CallManager) 4.x, 5.x before 5.1(3g), 6.x before 6.1(4), 7.0 before 7.0(2a)su1, and 7.1 before 7.1(2a)su1 allows remote attackers to cause a denial of service (file-descriptor exhaustion and SIP outage) via a flood of TCP packets, aka Bug ID CSCsx23689.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:cisco:unified_communications_manager:*:*:*:*:*:*:*:*", "published": "2009-08-27T17:00:01.047", "last_modified": "2024-02-15T21:15:40.407"}, {"id": "CVE-2008-5180", "score": ["V31", 5.3, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "PARTIAL", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "Microsoft Communicator, and Communicator in Microsoft Office 2010 beta, allows remote attackers to cause a denial of service (memory consumption) via a large number of SIP INVITE requests, which trigger the creation of many sessions.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:microsoft:office_communicator:*:*:*:*:*:*:*:*", "published": "2008-11-20T15:30:00.390", "last_modified": "2024-10-15T15:35:07.977"}, {"id": "CVE-2008-2121", "score": ["V2", 7.8, "HIGH"], "v2_score": 7.8, "v2_exploitability_score": 10.0, "v2_impact_score": 6.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:N/A:C", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:N/A:C", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "COMPLETE", "baseScore": 7.8}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "The TCP implementation in Sun Solaris 8, 9, and 10 allows remote attackers to cause a denial of service (CPU consumption and new connection timeouts) via a TCP SYN flood attack.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:o:sun:sunos:5.8:*:*:*:*:*:*:*", "published": "2008-05-09T15:20:00.000", "last_modified": "2018-10-30T16:25:15.027"}, {"id": "CVE-2008-2122", "score": ["V31", 7.5, "HIGH"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "PARTIAL", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "IBM Rational Build Forge 7.0.2 allows remote attackers to cause a denial of service (CPU consumption) via a port scan, which spawns multiple bfagent server processes that attempt to read data from closed sockets.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:ibm:rational_build_forge:7.0.2:*:*:*:*:*:*:*", "published": "2008-05-09T15:20:00.000", "last_modified": "2024-02-09T02:54:11.277"}, {"id": "CVE-2008-1700", "score": ["V2", 7.1, "HIGH"], "v2_score": 7.1, "v2_exploitability_score": 8.6, "v2_impact_score": 6.9, "v2_vector": "AV:N/AC:M/Au:N/C:N/I:N/A:C", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:M/Au:N/C:N/I:N/A:C", "accessVector": "NETWORK", "accessComplexity": "MEDIUM", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "COMPLETE", "baseScore": 7.1}, "baseSeverity": "HIGH", "exploitabilityScore": 8.6, "impactScore": 6.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": true}], "description": "The Web TransferCtrl Class 8,2,1,4 (iManFile.cab), as used in WorkSite Web 8.2 before SP1 P2, allows remote attackers to cause a denial of service (memory consumption) via a large number of SendNrlLink directives, which opens a separate window for each directive.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:interwoven:worksite_web:*:*:*:*:*:*:*:*", "published": "2008-04-08T18:05:00.000", "last_modified": "2024-02-02T03:07:30.643"}, {"id": "CVE-2007-4103", "score": ["V31", 7.5, "HIGH"], "v2_score": 7.8, "v2_exploitability_score": 10.0, "v2_impact_score": 6.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:N/A:C", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:N/A:C", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "COMPLETE", "baseScore": 7.8}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "The IAX2 channel driver (chan_iax2) in Asterisk Open 1.2.x before 1.2.23, 1.4.x before 1.4.9, and Asterisk Appliance Developer Kit before 0.6.0, when configured to allow unauthenticated calls, allows remote attackers to cause a denial of service (resource exhaustion) via a flood of calls that do not complete a 3-way handshake, which causes an ast_channel to be allocated but not released.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:digium:asterisk:*:*:*:*:*:*:*:*", "published": "2007-07-31T10:17:00.000", "last_modified": "2024-02-08T20:12:32.380"}, {"id": "CVE-2006-1173", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "PARTIAL", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "Sendmail before 8.13.7 allows remote attackers to cause a denial of service via deeply nested, malformed multipart MIME messages that exhaust the stack during the recursive mime8to7 function for performing 8-bit to 7-bit conversion, which prevents Sendmail from delivering queued messages and might lead to disk consumption by core dump files.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:sendmail:sendmail:*:*:*:*:*:*:*:*", "published": "2006-06-07T23:06:00.000", "last_modified": "2018-10-18T16:31:04.043"}, {"id": "CVE-2007-0897", "score": ["V31", 7.5, "HIGH"], "v2_score": 4.3, "v2_exploitability_score": 8.6, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:M/Au:N/C:N/I:N/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:M/Au:N/C:N/I:N/A:P", "accessVector": "NETWORK", "accessComplexity": "MEDIUM", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "PARTIAL", "baseScore": 4.3}, "baseSeverity": "MEDIUM", "exploitabilityScore": 8.6, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "Clam AntiVirus ClamAV before 0.90 does not close open file descriptors under certain conditions, which allows remote attackers to cause a denial of service (file descriptor consumption and failed scans) via CAB archives with a cabinet header record length of zero, which causes a function to return without closing a file descriptor.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:clamav:clamav:*:*:*:*:*:*:*:*", "published": "2007-02-16T19:28:00.000", "last_modified": "2024-02-09T02:48:50.797"}], "cwe_info": {"cwe_id": "400", "name": "Uncontrolled Resource Consumption", "weakness_abstraction": "Class", "status": "Draft", "description": "The software does not properly control the allocation and maintenance of a limited resource, thereby enabling an actor to influence the amount of resources consumed, eventually leading to the exhaustion of available resources.", "extended_description": "Limited resources include memory, file system storage, database connection pool entries, and CPU. If an attacker can trigger the allocation of these limited resources, but the number or size of the resources is not controlled, then the attacker could cause a denial of service that consumes all available resources. This would prevent valid users from accessing the software, and it could potentially have an impact on the surrounding environment. For example, a memory exhaustion attack against an application could slow down the application as well as its host operating system. There are at least three distinct scenarios which can commonly lead to resource exhaustion: Lack of throttling for the number of allocated resources Losing all references to a resource before reaching the shutdown stage Not closing/returning a resource after processing Resource exhaustion problems are often result due to an incorrect implementation of the following situations: Error conditions and other exceptional circumstances. Confusion over which part of the program is responsible for releasing the resource.", "related_weaknesses": "::NATURE:ChildOf:CWE ID:664:VIEW ID:1000:ORDINAL:Primary::", "weakness_ordinalities": "", "applicable_platforms": "::LANGUAGE CLASS:Language-Independent:LANGUAGE PREVALENCE:Undetermined::", "background_details": "", "alternate_terms": "::TERM:Resource Exhaustion::", "modes_of_introduction": "::PHASE:Operation::PHASE:Architecture and Design::PHASE:Implementation::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Availability:IMPACT:DoS: Crash, Exit, or Restart:IMPACT:DoS: Resource Consumption (CPU):IMPACT:DoS: Resource Consumption (Memory):IMPACT:DoS: Resource Consumption (Other):NOTE:The most common result of resource exhaustion is denial of service. The software may slow down, crash due to unhandled errors, or lock out legitimate users.::SCOPE:Access Control:SCOPE:Other:IMPACT:Bypass Protection Mechanism:IMPACT:Other:NOTE:In some cases it may be possible to force the software to fail open in the event of resource exhaustion. The state of the software -- and possibly the security functionality - may then be compromised.::", "detection_methods": "::METHOD:Automated Static Analysis:DESCRIPTION:Automated static analysis typically has limited utility in recognizing resource exhaustion problems, except for program-independent system resources such as files, sockets, and processes. For system resources, automated static analysis may be able to detect circumstances in which resources are not released after they have expired. Automated analysis of configuration files may be able to detect settings that do not specify a maximum value. Automated static analysis tools will not be appropriate for detecting exhaustion of custom resources, such as an intended security policy in which a bulletin board user is only allowed to make a limited number of posts per day.:EFFECTIVENESS:Limited::METHOD:Automated Dynamic Analysis:DESCRIPTION:Certain automated dynamic analysis techniques may be effective in spotting resource exhaustion problems, especially with resources such as processes, memory, and connections. The technique may involve generating a large number of requests to the software within a short time frame.:EFFECTIVENESS:Moderate::METHOD:Fuzzing:DESCRIPTION:While fuzzing is typically geared toward finding low-level implementation bugs, it can inadvertently find resource exhaustion problems. This can occur when the fuzzer generates a large number of test cases but does not restart the targeted software in between test cases. If an individual test case produces a crash, but it does not do so reliably, then an inability to handle resource exhaustion may be the cause.:EFFECTIVENESS:Opportunistic::", "potential_mitigations": "::PHASE:Architecture and Design:DESCRIPTION:Design throttling mechanisms into the system architecture. The best protection is to limit the amount of resources that an unauthorized user can cause to be expended. A strong authentication and access control model will help prevent such attacks from occurring in the first place. The login application should be protected against DoS attacks as much as possible. Limiting the database access, perhaps by caching result sets, can help minimize the resources expended. To further limit the potential for a DoS attack, consider tracking the rate of requests received from users and blocking requests that exceed a defined rate threshold.::PHASE:Architecture and Design:DESCRIPTION:Mitigation of resource exhaustion attacks requires that the target system either: recognizes the attack and denies that user further access for a given amount of time, or uniformly throttles all requests in order to make it more difficult to consume resources more quickly than they can again be freed. The first of these solutions is an issue in itself though, since it may allow attackers to prevent the use of the system by a particular valid user. If the attacker impersonates the valid user, they may be able to prevent the user from accessing the server in question. The second solution is simply difficult to effectively institute -- and even when properly done, it does not provide a full solution. It simply makes the attack require more resources on the part of the attacker.::PHASE:Architecture and Design:DESCRIPTION:Ensure that protocols have specific limits of scale placed on them.::PHASE:Implementation:DESCRIPTION:Ensure that all failures in resource allocation place the system into a safe posture.::", "observed_examples": "::REFERENCE:CVE-2020-3566:DESCRIPTION:Resource exhaustion in distributed OS because of insufficient IGMP queue management, as exploited in the wild per CISA KEV.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-3566::REFERENCE:CVE-2009-2874:DESCRIPTION:Product allows attackers to cause a crash via a large number of connections.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2009-2874::REFERENCE:CVE-2009-1928:DESCRIPTION:Malformed request triggers uncontrolled recursion, leading to stack exhaustion.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2009-1928::REFERENCE:CVE-2009-2858:DESCRIPTION:Chain: memory leak (CWE-404) leads to resource exhaustion.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2009-2858::REFERENCE:CVE-2009-2726:DESCRIPTION:Driver does not use a maximum width when invoking sscanf style functions, causing stack consumption.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2009-2726::REFERENCE:CVE-2009-2540:DESCRIPTION:Large integer value for a length property in an object causes a large amount of memory allocation.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2009-2540::REFERENCE:CVE-2009-2299:DESCRIPTION:Web application firewall consumes excessive memory when an HTTP request contains a large Content-Length value but no POST data.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2009-2299::REFERENCE:CVE-2009-2054:DESCRIPTION:Product allows exhaustion of file descriptors when processing a large number of TCP packets.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2009-2054::REFERENCE:CVE-2008-5180:DESCRIPTION:Communication product allows memory consumption with a large number of SIP requests, which cause many sessions to be created.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2008-5180::REFERENCE:CVE-2008-2121:DESCRIPTION:TCP implementation allows attackers to consume CPU and prevent new connections using a TCP SYN flood attack.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2008-2121::REFERENCE:CVE-2008-2122:DESCRIPTION:Port scan triggers CPU consumption with processes that attempt to read data from closed sockets.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2008-2122::REFERENCE:CVE-2008-1700:DESCRIPTION:Product allows attackers to cause a denial of service via a large number of directives, each of which opens a separate window.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2008-1700::REFERENCE:CVE-2007-4103:DESCRIPTION:Product allows resource exhaustion via a large number of calls that do not complete a 3-way handshake.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2007-4103::REFERENCE:CVE-2006-1173:DESCRIPTION:Mail server does not properly handle deeply nested multipart MIME messages, leading to stack exhaustion.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2006-1173::REFERENCE:CVE-2007-0897:DESCRIPTION:Chain: anti-virus product encounters a malformed file but returns from a function without closing a file descriptor (CWE-775) leading to file descriptor consumption (CWE-400) and failed scans.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2007-0897::", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "::TAXONOMY NAME:CLASP:ENTRY NAME:Resource exhaustion (file descriptor, disk space, sockets, ...)::TAXONOMY NAME:OWASP Top Ten 2004:ENTRY ID:A9:ENTRY NAME:Denial of Service:MAPPING FIT:CWE More Specific::TAXONOMY NAME:WASC:ENTRY ID:10:ENTRY NAME:Denial of Service::TAXONOMY NAME:WASC:ENTRY ID:41:ENTRY NAME:XML Attribute Blowup::TAXONOMY NAME:The CERT Oracle Secure Coding Standard for Java (2011):ENTRY ID:SER12-J:ENTRY NAME:Avoid memory and resource leaks during serialization::TAXONOMY NAME:The CERT Oracle Secure Coding Standard for Java (2011):ENTRY ID:MSC05-J:ENTRY NAME:Do not exhaust heap space::TAXONOMY NAME:Software Fault Patterns:ENTRY ID:SFP13:ENTRY NAME:Unrestricted Consumption::", "related_attack_patterns": "::147::492::", "notes": "::TYPE:Maintenance:NOTE:Resource consumption could be interpreted as a consequence instead of an insecure behavior, so this entry is being considered for modification. It appears to be referenced too frequently when more precise mappings are available. Some of its children, such as CWE-771, might be better considered as a chain.::TYPE:Theoretical:NOTE:Vulnerability theory is largely about how behaviors and resources interact. Resource exhaustion can be regarded as either a consequence or an attack, depending on the perspective. This entry is an attempt to reflect the underlying weaknesses that enable these attacks (or consequences) to take place.::TYPE:Other:NOTE:Database queries that take a long time to process are good DoS targets. An attacker would have to write a few lines of Perl code to generate enough traffic to exceed the site's ability to keep up. This would effectively prevent authorized users from using the site at all. Resources can be exploited simply by ensuring that the target machine must do much more work and consume more resources in order to service a request than the attacker must do to initiate a request. A prime example of this can be found in old switches that were vulnerable to macof attacks (so named for a tool developed by Dugsong). These attacks flooded a switch with random IP and MAC address combinations, therefore exhausting the switch's cache, which held the information of which port corresponded to which MAC addresses. Once this cache was exhausted, the switch would fail in an insecure way and would begin to act simply as a hub, broadcasting all traffic on all ports and allowing for basic sniffing attacks.::"}}]}, {"capec_id": "CAPEC-131", "c_findings": [{"cwe": "CWE-404", "cves": [{"id": "CVE-1999-1127", "score": ["V31", 7.5, "HIGH"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "PARTIAL", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "Windows NT 4.0 does not properly shut down invalid named pipe RPC connections, which allows remote attackers to cause a denial of service (resource exhaustion) via a series of connections containing malformed data, aka the \"Named Pipes Over RPC\" vulnerability.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:o:microsoft:windows_nt:4.0:-:*:*:enterprise:*:*:*", "published": "1999-12-31T05:00:00.000", "last_modified": "2024-02-08T20:35:19.420"}, {"id": "CVE-2001-0830", "score": ["V31", 7.5, "HIGH"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "PARTIAL", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "6tunnel 0.08 and earlier does not properly close sockets that were initiated by a client, which allows remote attackers to cause a denial of service (resource exhaustion) by repeatedly connecting to and disconnecting from the server.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:6tunnel_project:6tunnel:*:*:*:*:*:*:*:*", "published": "2001-12-06T05:00:00.000", "last_modified": "2024-02-09T02:52:21.457"}, {"id": "CVE-2002-1372", "score": ["V31", 7.5, "HIGH"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "PARTIAL", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "Common Unix Printing System (CUPS) 1.1.14 through 1.1.17 does not properly check the return values of various file and socket operations, which could allow a remote attacker to cause a denial of service (resource exhaustion) by causing file descriptors to be assigned and not released, as demonstrated by fanta.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:apple:cups:*:*:*:*:*:*:*:*", "published": "2002-12-26T05:00:00.000", "last_modified": "2024-01-21T01:39:35.663"}], "cwe_info": {"cwe_id": "404", "name": "Improper Resource Shutdown or Release", "weakness_abstraction": "Class", "status": "Draft", "description": "The program does not release or incorrectly releases a resource before it is made available for re-use.", "extended_description": "When a resource is created or allocated, the developer is responsible for properly releasing the resource as well as accounting for all potential paths of expiration or invalidation, such as a set period of time or revocation.", "related_weaknesses": "::NATURE:ChildOf:CWE ID:664:VIEW ID:1000:ORDINAL:Primary::NATURE:PeerOf:CWE ID:405:VIEW ID:1000::NATURE:CanPrecede:CWE ID:619:VIEW ID:1000::", "weakness_ordinalities": "::ORDINALITY:Primary:DESCRIPTION:Improper release or shutdown of resources can be primary to resource exhaustion, performance, and information confidentiality problems to name a few.::ORDINALITY:Resultant:DESCRIPTION:Improper release or shutdown of resources can be resultant from improper error handling or insufficient resource tracking.::", "applicable_platforms": "::LANGUAGE CLASS:Language-Independent:LANGUAGE PREVALENCE:Undetermined::", "background_details": "", "alternate_terms": "", "modes_of_introduction": "::PHASE:Architecture and Design::PHASE:Implementation::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Availability:SCOPE:Other:IMPACT:DoS: Resource Consumption (Other):IMPACT:Varies by Context:NOTE:Most unreleased resource issues result in general software reliability problems, but if an attacker can intentionally trigger a resource leak, the attacker might be able to launch a denial of service attack by depleting the resource pool.::SCOPE:Confidentiality:IMPACT:Read Application Data:NOTE:When a resource containing sensitive information is not correctly shutdown, it may expose the sensitive data in a subsequent allocation.::", "detection_methods": "::METHOD:Automated Dynamic Analysis:DESCRIPTION:This weakness can be detected using dynamic tools and techniques that interact with the software using large test suites with many diverse inputs, such as fuzz testing (fuzzing), robustness testing, and fault injection. The software's operation may slow down, but it should not become unstable, crash, or generate incorrect results. Resource clean up errors might be detected with a stress-test by calling the software simultaneously from a large number of threads or processes, and look for evidence of any unexpected behavior. The software's operation may slow down, but it should not become unstable, crash, or generate incorrect results.:EFFECTIVENESS:Moderate::METHOD:Manual Dynamic Analysis:DESCRIPTION:Identify error conditions that are not likely to occur during normal usage and trigger them. For example, run the program under low memory conditions, run with insufficient privileges or permissions, interrupt a transaction before it is completed, or disable connectivity to basic network services such as DNS. Monitor the software for any unexpected behavior. If you trigger an unhandled exception or similar error that was discovered and handled by the application's environment, it may still indicate unexpected conditions that were not handled by the application itself.::", "potential_mitigations": "::PHASE:Requirements:STRATEGY:Language Selection:DESCRIPTION:Use a language that does not allow this weakness to occur or provides constructs that make this weakness easier to avoid. For example, languages such as Java, Ruby, and Lisp perform automatic garbage collection that releases memory for objects that have been deallocated.::PHASE:Implementation:DESCRIPTION:It is good practice to be responsible for freeing all resources you allocate and to be consistent with how and where you free memory in a function. If you allocate memory that you intend to free upon completion of the function, you must be sure to free the memory at all exit points for that function including error conditions.::PHASE:Implementation:DESCRIPTION:Memory should be allocated/freed using matching functions such as malloc/free, new/delete, and new[]/delete[].::PHASE:Implementation:DESCRIPTION:When releasing a complex object or structure, ensure that you properly dispose of all of its member components, not just the object itself.::", "observed_examples": "::REFERENCE:CVE-1999-1127:DESCRIPTION:Does not shut down named pipe connections if malformed data is sent.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-1999-1127::REFERENCE:CVE-2001-0830:DESCRIPTION:Sockets not properly closed when attacker repeatedly connects and disconnects from server.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2001-0830::REFERENCE:CVE-2002-1372:DESCRIPTION:Return values of file/socket operations not checked, allowing resultant consumption of file descriptors.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2002-1372::", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "::TAXONOMY NAME:PLOVER:ENTRY NAME:Improper resource shutdown or release::TAXONOMY NAME:7 Pernicious Kingdoms:ENTRY NAME:Unreleased Resource::TAXONOMY NAME:OWASP Top Ten 2004:ENTRY ID:A9:ENTRY NAME:Denial of Service:MAPPING FIT:CWE More Specific::TAXONOMY NAME:CERT C Secure Coding:ENTRY ID:FIO42-C:ENTRY NAME:Close files when they are no longer needed:MAPPING FIT:CWE More Abstract::TAXONOMY NAME:CERT C Secure Coding:ENTRY ID:MEM31-C:ENTRY NAME:Free dynamically allocated memory when no longer needed:MAPPING FIT:CWE More Abstract::TAXONOMY NAME:The CERT Oracle Secure Coding Standard for Java (2011):ENTRY ID:FIO04-J:ENTRY NAME:Release resources when they are no longer needed::TAXONOMY NAME:Software Fault Patterns:ENTRY ID:SFP14:ENTRY NAME:Failure to release resource::", "related_attack_patterns": "::125::130::131::494::495::496::666::", "notes": "::TYPE:Relationship:NOTE:Overlaps memory leaks, asymmetric resource consumption, malformed input errors.::"}}]}, {"capec_id": "CAPEC-130", "c_findings": [{"cwe": "CWE-404", "cves": [{"id": "CVE-1999-1127", "score": ["V31", 7.5, "HIGH"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "PARTIAL", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "Windows NT 4.0 does not properly shut down invalid named pipe RPC connections, which allows remote attackers to cause a denial of service (resource exhaustion) via a series of connections containing malformed data, aka the \"Named Pipes Over RPC\" vulnerability.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:o:microsoft:windows_nt:4.0:-:*:*:enterprise:*:*:*", "published": "1999-12-31T05:00:00.000", "last_modified": "2024-02-08T20:35:19.420"}, {"id": "CVE-2001-0830", "score": ["V31", 7.5, "HIGH"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "PARTIAL", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "6tunnel 0.08 and earlier does not properly close sockets that were initiated by a client, which allows remote attackers to cause a denial of service (resource exhaustion) by repeatedly connecting to and disconnecting from the server.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:6tunnel_project:6tunnel:*:*:*:*:*:*:*:*", "published": "2001-12-06T05:00:00.000", "last_modified": "2024-02-09T02:52:21.457"}, {"id": "CVE-2002-1372", "score": ["V31", 7.5, "HIGH"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "PARTIAL", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "Common Unix Printing System (CUPS) 1.1.14 through 1.1.17 does not properly check the return values of various file and socket operations, which could allow a remote attacker to cause a denial of service (resource exhaustion) by causing file descriptors to be assigned and not released, as demonstrated by fanta.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:apple:cups:*:*:*:*:*:*:*:*", "published": "2002-12-26T05:00:00.000", "last_modified": "2024-01-21T01:39:35.663"}], "cwe_info": {"cwe_id": "404", "name": "Improper Resource Shutdown or Release", "weakness_abstraction": "Class", "status": "Draft", "description": "The program does not release or incorrectly releases a resource before it is made available for re-use.", "extended_description": "When a resource is created or allocated, the developer is responsible for properly releasing the resource as well as accounting for all potential paths of expiration or invalidation, such as a set period of time or revocation.", "related_weaknesses": "::NATURE:ChildOf:CWE ID:664:VIEW ID:1000:ORDINAL:Primary::NATURE:PeerOf:CWE ID:405:VIEW ID:1000::NATURE:CanPrecede:CWE ID:619:VIEW ID:1000::", "weakness_ordinalities": "::ORDINALITY:Primary:DESCRIPTION:Improper release or shutdown of resources can be primary to resource exhaustion, performance, and information confidentiality problems to name a few.::ORDINALITY:Resultant:DESCRIPTION:Improper release or shutdown of resources can be resultant from improper error handling or insufficient resource tracking.::", "applicable_platforms": "::LANGUAGE CLASS:Language-Independent:LANGUAGE PREVALENCE:Undetermined::", "background_details": "", "alternate_terms": "", "modes_of_introduction": "::PHASE:Architecture and Design::PHASE:Implementation::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Availability:SCOPE:Other:IMPACT:DoS: Resource Consumption (Other):IMPACT:Varies by Context:NOTE:Most unreleased resource issues result in general software reliability problems, but if an attacker can intentionally trigger a resource leak, the attacker might be able to launch a denial of service attack by depleting the resource pool.::SCOPE:Confidentiality:IMPACT:Read Application Data:NOTE:When a resource containing sensitive information is not correctly shutdown, it may expose the sensitive data in a subsequent allocation.::", "detection_methods": "::METHOD:Automated Dynamic Analysis:DESCRIPTION:This weakness can be detected using dynamic tools and techniques that interact with the software using large test suites with many diverse inputs, such as fuzz testing (fuzzing), robustness testing, and fault injection. The software's operation may slow down, but it should not become unstable, crash, or generate incorrect results. Resource clean up errors might be detected with a stress-test by calling the software simultaneously from a large number of threads or processes, and look for evidence of any unexpected behavior. The software's operation may slow down, but it should not become unstable, crash, or generate incorrect results.:EFFECTIVENESS:Moderate::METHOD:Manual Dynamic Analysis:DESCRIPTION:Identify error conditions that are not likely to occur during normal usage and trigger them. For example, run the program under low memory conditions, run with insufficient privileges or permissions, interrupt a transaction before it is completed, or disable connectivity to basic network services such as DNS. Monitor the software for any unexpected behavior. If you trigger an unhandled exception or similar error that was discovered and handled by the application's environment, it may still indicate unexpected conditions that were not handled by the application itself.::", "potential_mitigations": "::PHASE:Requirements:STRATEGY:Language Selection:DESCRIPTION:Use a language that does not allow this weakness to occur or provides constructs that make this weakness easier to avoid. For example, languages such as Java, Ruby, and Lisp perform automatic garbage collection that releases memory for objects that have been deallocated.::PHASE:Implementation:DESCRIPTION:It is good practice to be responsible for freeing all resources you allocate and to be consistent with how and where you free memory in a function. If you allocate memory that you intend to free upon completion of the function, you must be sure to free the memory at all exit points for that function including error conditions.::PHASE:Implementation:DESCRIPTION:Memory should be allocated/freed using matching functions such as malloc/free, new/delete, and new[]/delete[].::PHASE:Implementation:DESCRIPTION:When releasing a complex object or structure, ensure that you properly dispose of all of its member components, not just the object itself.::", "observed_examples": "::REFERENCE:CVE-1999-1127:DESCRIPTION:Does not shut down named pipe connections if malformed data is sent.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-1999-1127::REFERENCE:CVE-2001-0830:DESCRIPTION:Sockets not properly closed when attacker repeatedly connects and disconnects from server.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2001-0830::REFERENCE:CVE-2002-1372:DESCRIPTION:Return values of file/socket operations not checked, allowing resultant consumption of file descriptors.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2002-1372::", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "::TAXONOMY NAME:PLOVER:ENTRY NAME:Improper resource shutdown or release::TAXONOMY NAME:7 Pernicious Kingdoms:ENTRY NAME:Unreleased Resource::TAXONOMY NAME:OWASP Top Ten 2004:ENTRY ID:A9:ENTRY NAME:Denial of Service:MAPPING FIT:CWE More Specific::TAXONOMY NAME:CERT C Secure Coding:ENTRY ID:FIO42-C:ENTRY NAME:Close files when they are no longer needed:MAPPING FIT:CWE More Abstract::TAXONOMY NAME:CERT C Secure Coding:ENTRY ID:MEM31-C:ENTRY NAME:Free dynamically allocated memory when no longer needed:MAPPING FIT:CWE More Abstract::TAXONOMY NAME:The CERT Oracle Secure Coding Standard for Java (2011):ENTRY ID:FIO04-J:ENTRY NAME:Release resources when they are no longer needed::TAXONOMY NAME:Software Fault Patterns:ENTRY ID:SFP14:ENTRY NAME:Failure to release resource::", "related_attack_patterns": "::125::130::131::494::495::496::666::", "notes": "::TYPE:Relationship:NOTE:Overlaps memory leaks, asymmetric resource consumption, malformed input errors.::"}}, {"cwe": "CWE-770", "cves": [{"id": "CVE-2009-4017", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "PARTIAL", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "PHP before 5.2.12 and 5.3.x before 5.3.1 does not restrict the number of temporary files created when handling a multipart/form-data POST request, which allows remote attackers to cause a denial of service (resource exhaustion), and makes it easier for remote attackers to exploit local file inclusion vulnerabilities, via multiple requests, related to lack of support for the max_file_uploads directive.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:php:php:*:*:*:*:*:*:*:*", "published": "2009-11-24T00:30:00.500", "last_modified": "2024-02-15T21:16:16.510"}, {"id": "CVE-2009-2726", "score": ["V2", 7.8, "HIGH"], "v2_score": 7.8, "v2_exploitability_score": 10.0, "v2_impact_score": 6.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:N/A:C", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:N/A:C", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "COMPLETE", "baseScore": 7.8}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "The SIP channel driver in Asterisk Open Source 1.2.x before 1.2.34, 1.4.x before 1.4.26.1, 1.6.0.x before 1.6.0.12, and 1.6.1.x before 1.6.1.4; Asterisk Business Edition A.x.x, B.x.x before B.2.5.9, C.2.x before C.2.4.1, and C.3.x before C.3.1; and Asterisk Appliance s800i 1.2.x before 1.3.0.3 does not use a maximum width when invoking sscanf style functions, which allows remote attackers to cause a denial of service (stack memory consumption) via SIP packets containing large sequences of ASCII decimal characters, as demonstrated via vectors related to (1) the CSeq value in a SIP header, (2) large Content-Length value, and (3) SDP.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:digium:asterisk:*:*:business:*:*:*:*:*", "published": "2009-08-12T10:30:01.110", "last_modified": "2024-02-15T21:05:21.457"}, {"id": "CVE-2009-2540", "score": ["V2", 4.3, "MEDIUM"], "v2_score": 4.3, "v2_exploitability_score": 8.6, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:M/Au:N/C:N/I:N/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:M/Au:N/C:N/I:N/A:P", "accessVector": "NETWORK", "accessComplexity": "MEDIUM", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "PARTIAL", "baseScore": 4.3}, "baseSeverity": "MEDIUM", "exploitabilityScore": 8.6, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": true}], "description": "Opera, possibly 9.64 and earlier, allows remote attackers to cause a denial of service (memory consumption) via a large integer value for the length property of a Select object, a related issue to CVE-2009-1692.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:opera:opera_browser:*:*:*:*:*:*:*:*", "published": "2009-07-20T18:30:01.233", "last_modified": "2024-02-02T03:07:21.203"}, {"id": "CVE-2009-2054", "score": ["V2", 7.8, "HIGH"], "v2_score": 7.8, "v2_exploitability_score": 10.0, "v2_impact_score": 6.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:N/A:C", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:N/A:C", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "COMPLETE", "baseScore": 7.8}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "Cisco Unified Communications Manager (aka CUCM, formerly CallManager) 4.x, 5.x before 5.1(3g), 6.x before 6.1(4), 7.0 before 7.0(2a)su1, and 7.1 before 7.1(2a)su1 allows remote attackers to cause a denial of service (file-descriptor exhaustion and SIP outage) via a flood of TCP packets, aka Bug ID CSCsx23689.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:cisco:unified_communications_manager:*:*:*:*:*:*:*:*", "published": "2009-08-27T17:00:01.047", "last_modified": "2024-02-15T21:15:40.407"}, {"id": "CVE-2008-5180", "score": ["V31", 5.3, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "PARTIAL", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "Microsoft Communicator, and Communicator in Microsoft Office 2010 beta, allows remote attackers to cause a denial of service (memory consumption) via a large number of SIP INVITE requests, which trigger the creation of many sessions.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:microsoft:office_communicator:*:*:*:*:*:*:*:*", "published": "2008-11-20T15:30:00.390", "last_modified": "2024-10-15T15:35:07.977"}, {"id": "CVE-2008-1700", "score": ["V2", 7.1, "HIGH"], "v2_score": 7.1, "v2_exploitability_score": 8.6, "v2_impact_score": 6.9, "v2_vector": "AV:N/AC:M/Au:N/C:N/I:N/A:C", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:M/Au:N/C:N/I:N/A:C", "accessVector": "NETWORK", "accessComplexity": "MEDIUM", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "COMPLETE", "baseScore": 7.1}, "baseSeverity": "HIGH", "exploitabilityScore": 8.6, "impactScore": 6.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": true}], "description": "The Web TransferCtrl Class 8,2,1,4 (iManFile.cab), as used in WorkSite Web 8.2 before SP1 P2, allows remote attackers to cause a denial of service (memory consumption) via a large number of SendNrlLink directives, which opens a separate window for each directive.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:interwoven:worksite_web:*:*:*:*:*:*:*:*", "published": "2008-04-08T18:05:00.000", "last_modified": "2024-02-02T03:07:30.643"}, {"id": "CVE-2005-4650", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "PARTIAL", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "Joomla! 1.03 does not restrict the number of \"Search\" Mambots, which allows remote attackers to cause a denial of service (resource consumption) via a large number of Search Mambots.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:joomla:joomla\\!:1.0.3:*:*:*:*:*:*:*", "published": "2005-12-31T05:00:00.000", "last_modified": "2024-02-02T03:07:38.527"}, {"id": "CVE-2020-15100", "score": ["V31", 3.3, "LOW"], "v2_score": 2.1, "v2_exploitability_score": 3.9, "v2_impact_score": 2.9, "v2_vector": "AV:L/AC:L/Au:N/C:N/I:N/A:P", "access_vector": "LOCAL", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:L/AC:L/Au:N/C:N/I:N/A:P", "accessVector": "LOCAL", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "PARTIAL", "baseScore": 2.1}, "baseSeverity": "LOW", "exploitabilityScore": 3.9, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "In freewvs before 0.1.1, a user could create a large file that freewvs will try to read, which will terminate a scan process. This has been patched in 0.1.1.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:schokokeks:freewvs:*:*:*:*:*:*:*:*", "published": "2020-07-14T20:15:11.427", "last_modified": "2021-11-18T18:05:20.650"}], "cwe_info": {"cwe_id": "770", "name": "Allocation of Resources Without Limits or Throttling", "weakness_abstraction": "Base", "status": "Incomplete", "description": "The software allocates a reusable resource or group of resources on behalf of an actor without imposing any restrictions on the size or number of resources that can be allocated, in violation of the intended security policy for that actor.", "extended_description": "Code frequently has to work with limited resources, so programmers must be careful to ensure that resources are not consumed too quickly, or too easily. Without use of quotas, resource limits, or other protection mechanisms, it can be easy for an attacker to consume many resources by rapidly making many requests, or causing larger resources to be used than is needed. When too many resources are allocated, or if a single resource is too large, then it can prevent the code from working correctly, possibly leading to a denial of service.", "related_weaknesses": "::NATURE:ChildOf:CWE ID:400:VIEW ID:1000:ORDINAL:Primary::NATURE:ChildOf:CWE ID:665:VIEW ID:1000::NATURE:ChildOf:CWE ID:400:VIEW ID:1003:ORDINAL:Primary::", "weakness_ordinalities": "", "applicable_platforms": "::LANGUAGE CLASS:Language-Independent:LANGUAGE PREVALENCE:Often::", "background_details": "", "alternate_terms": "", "modes_of_introduction": "::PHASE:Architecture and Design:NOTE:OMISSION: This weakness is caused by missing a security tactic during the architecture and design phase.::PHASE:Implementation::PHASE:Operation::PHASE:System Configuration::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Availability:IMPACT:DoS: Resource Consumption (CPU):IMPACT:DoS: Resource Consumption (Memory):IMPACT:DoS: Resource Consumption (Other):NOTE:When allocating resources without limits, an attacker could prevent other systems, applications, or processes from accessing the same type of resource.::", "detection_methods": "::METHOD:Manual Static Analysis:DESCRIPTION:Manual static analysis can be useful for finding this weakness, but it might not achieve desired code coverage within limited time constraints. If denial-of-service is not considered a significant risk, or if there is strong emphasis on consequences such as code execution, then manual analysis may not focus on this weakness at all.::METHOD:Fuzzing:DESCRIPTION:While fuzzing is typically geared toward finding low-level implementation bugs, it can inadvertently find uncontrolled resource allocation problems. This can occur when the fuzzer generates a large number of test cases but does not restart the targeted software in between test cases. If an individual test case produces a crash, but it does not do so reliably, then an inability to limit resource allocation may be the cause. When the allocation is directly affected by numeric inputs, then fuzzing may produce indications of this weakness.:EFFECTIVENESS:Opportunistic::METHOD:Automated Dynamic Analysis:DESCRIPTION:Certain automated dynamic analysis techniques may be effective in producing side effects of uncontrolled resource allocation problems, especially with resources such as processes, memory, and connections. The technique may involve generating a large number of requests to the software within a short time frame. Manual analysis is likely required to interpret the results.::METHOD:Automated Static Analysis:DESCRIPTION:Specialized configuration or tuning may be required to train automated tools to recognize this weakness. Automated static analysis typically has limited utility in recognizing unlimited allocation problems, except for the missing release of program-independent system resources such as files, sockets, and processes, or unchecked arguments to memory. For system resources, automated static analysis may be able to detect circumstances in which resources are not released after they have expired, or if too much of a resource is requested at once, as can occur with memory. Automated analysis of configuration files may be able to detect settings that do not specify a maximum value. Automated static analysis tools will not be appropriate for detecting exhaustion of custom resources, such as an intended security policy in which a bulletin board user is only allowed to make a limited number of posts per day.::", "potential_mitigations": "::PHASE:Requirements:DESCRIPTION:Clearly specify the minimum and maximum expectations for capabilities, and dictate which behaviors are acceptable when resource allocation reaches limits.::PHASE:Architecture and Design:DESCRIPTION:Limit the amount of resources that are accessible to unprivileged users. Set per-user limits for resources. Allow the system administrator to define these limits. Be careful to avoid CWE-410.::PHASE:Architecture and Design:DESCRIPTION:Design throttling mechanisms into the system architecture. The best protection is to limit the amount of resources that an unauthorized user can cause to be expended. A strong authentication and access control model will help prevent such attacks from occurring in the first place, and it will help the administrator to identify who is committing the abuse. The login application should be protected against DoS attacks as much as possible. Limiting the database access, perhaps by caching result sets, can help minimize the resources expended. To further limit the potential for a DoS attack, consider tracking the rate of requests received from users and blocking requests that exceed a defined rate threshold.::PHASE:Implementation:STRATEGY:Input Validation:DESCRIPTION:Assume all input is malicious. Use an accept known good input validation strategy, i.e., use a list of acceptable inputs that strictly conform to specifications. Reject any input that does not strictly conform to specifications, or transform it into something that does. When performing input validation, consider all potentially relevant properties, including length, type of input, the full range of acceptable values, missing or extra inputs, syntax, consistency across related fields, and conformance to business rules. As an example of business rule logic, boat may be syntactically valid because it only contains alphanumeric characters, but it is not valid if the input is only expected to contain colors such as red or blue. Do not rely exclusively on looking for malicious or malformed inputs. This is likely to miss at least one undesirable input, especially if the code's environment changes. This can give attackers enough room to bypass the intended validation. However, denylists can be useful for detecting potential attacks or determining which inputs are so malformed that they should be rejected outright.::PHASE:Architecture and Design:DESCRIPTION:For any security checks that are performed on the client side, ensure that these checks are duplicated on the server side, in order to avoid CWE-602. Attackers can bypass the client-side checks by modifying values after the checks have been performed, or by changing the client to remove the client-side checks entirely. Then, these modified values would be submitted to the server.::PHASE:Architecture and Design:DESCRIPTION:Mitigation of resource exhaustion attacks requires that the target system either: recognizes the attack and denies that user further access for a given amount of time, typically by using increasing time delays uniformly throttles all requests in order to make it more difficult to consume resources more quickly than they can again be freed. The first of these solutions is an issue in itself though, since it may allow attackers to prevent the use of the system by a particular valid user. If the attacker impersonates the valid user, they may be able to prevent the user from accessing the server in question. The second solution can be difficult to effectively institute -- and even when properly done, it does not provide a full solution. It simply requires more resources on the part of the attacker.::PHASE:Architecture and Design:DESCRIPTION:Ensure that protocols have specific limits of scale placed on them.::PHASE:Architecture and Design Implementation:DESCRIPTION:If the program must fail, ensure that it fails gracefully (fails closed). There may be a temptation to simply let the program fail poorly in cases such as low memory conditions, but an attacker may be able to assert control before the software has fully exited. Alternately, an uncontrolled failure could cause cascading problems with other downstream components; for example, the program could send a signal to a downstream process so the process immediately knows that a problem has occurred and has a better chance of recovery. Ensure that all failures in resource allocation place the system into a safe posture.::PHASE:Operation Architecture and Design:STRATEGY:Resource Limitation:DESCRIPTION:Use resource-limiting settings provided by the operating system or environment. For example, when managing system resources in POSIX, setrlimit() can be used to set limits for certain types of resources, and getrlimit() can determine how many resources are available. However, these functions are not available on all operating systems. When the current levels get close to the maximum that is defined for the application (see CWE-770), then limit the allocation of further resources to privileged users; alternately, begin releasing resources for less-privileged users. While this mitigation may protect the system from attack, it will not necessarily stop attackers from adversely impacting other users. Ensure that the application performs the appropriate error checks and error handling in case resources become unavailable (CWE-703).::", "observed_examples": "::REFERENCE:CVE-2009-4017:DESCRIPTION:Language interpreter does not restrict the number of temporary files being created when handling a MIME request with a large number of parts..:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2009-4017::REFERENCE:CVE-2009-2726:DESCRIPTION:Driver does not use a maximum width when invoking sscanf style functions, causing stack consumption.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2009-2726::REFERENCE:CVE-2009-2540:DESCRIPTION:Large integer value for a length property in an object causes a large amount of memory allocation.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2009-2540::REFERENCE:CVE-2009-2054:DESCRIPTION:Product allows exhaustion of file descriptors when processing a large number of TCP packets.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2009-2054::REFERENCE:CVE-2008-5180:DESCRIPTION:Communication product allows memory consumption with a large number of SIP requests, which cause many sessions to be created.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2008-5180::REFERENCE:CVE-2008-1700:DESCRIPTION:Product allows attackers to cause a denial of service via a large number of directives, each of which opens a separate window.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2008-1700::REFERENCE:CVE-2005-4650:DESCRIPTION:CMS does not restrict the number of searches that can occur simultaneously, leading to resource exhaustion.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2005-4650::REFERENCE:CVE-2020-15100:DESCRIPTION:web application scanner attempts to read an excessively large file created by a user, causing process termination:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-15100::", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "::TAXONOMY NAME:The CERT Oracle Secure Coding Standard for Java (2011):ENTRY ID:FIO04-J:ENTRY NAME:Close resources when they are no longer needed::TAXONOMY NAME:The CERT Oracle Secure Coding Standard for Java (2011):ENTRY ID:SER12-J:ENTRY NAME:Avoid memory and resource leaks during serialization::TAXONOMY NAME:The CERT Oracle Secure Coding Standard for Java (2011):ENTRY ID:MSC05-J:ENTRY NAME:Do not exhaust heap space::", "related_attack_patterns": "::125::130::147::197::229::230::231::469::482::486::487::488::489::490::491::493::494::495::496::528::", "notes": "::TYPE:Relationship:NOTE:This entry is different from uncontrolled resource consumption (CWE-400) in that there are other weaknesses that are related to inability to control resource consumption, such as holding on to a resource too long after use, or not correctly keeping track of active resources so that they can be managed and released when they are finished (CWE-771).::TYPE:Theoretical:NOTE:Vulnerability theory is largely about how behaviors and resources interact. Resource exhaustion can be regarded as either a consequence or an attack, depending on the perspective. This entry is an attempt to reflect one of the underlying weaknesses that enable these attacks (or consequences) to take place.::"}}, {"cwe": "CWE-1325", "cves": [{"id": "CVE-2020-36049", "score": ["V31", 7.5, "HIGH"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "PARTIAL", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "socket.io-parser before 3.4.1 allows attackers to cause a denial of service (memory consumption) via a large packet because a concatenation approach is used.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:socket:socket.io-parser:*:*:*:*:*:node.js:*:*", "published": "2021-01-08T00:15:11.187", "last_modified": "2021-07-21T11:39:23.747"}, {"id": "CVE-2019-20176", "score": ["V31", 7.5, "HIGH"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "PARTIAL", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "In Pure-FTPd 1.0.49, a stack exhaustion issue was discovered in the listdir function in ls.c.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:pureftpd:pure-ftpd:1.0.49:*:*:*:*:*:*:*", "published": "2019-12-31T15:15:11.223", "last_modified": "2023-11-07T03:08:40.020"}, {"id": "CVE-2013-1591", "score": ["V31", 9.8, "CRITICAL"], "v2_score": 10.0, "v2_exploitability_score": 10.0, "v2_impact_score": 10.0, "v2_vector": "AV:N/AC:L/Au:N/C:C/I:C/A:C", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:C/I:C/A:C", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "COMPLETE", "integrityImpact": "COMPLETE", "availabilityImpact": "COMPLETE", "baseScore": 10.0}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 10.0, "acInsufInfo": true, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "Stack-based buffer overflow in libpixman, as used in Pale Moon before 15.4 and possibly other products, has unspecified impact and context-dependent attack vectors.  NOTE: this issue might be resultant from an integer overflow in the fast_composite_scaled_bilinear function in pixman-inlines.h, which triggers an infinite loop.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:redhat:enterprise_virtualization:3.0:*:*:*:*:*:*:*", "published": "2013-01-31T23:55:01.037", "last_modified": "2024-02-15T21:08:00.480"}], "cwe_info": {"cwe_id": "1325", "name": "Improperly Controlled Sequential Memory Allocation", "weakness_abstraction": "Base", "status": "Incomplete", "description": "The product manages a group of objects or resources and performs a separate memory allocation for each object, but it does not properly limit the total amount of memory that is consumed by all of the combined objects.", "extended_description": "While the product might limit the amount of memory that is allocated in a single operation for a single object (such as a malloc of an array), if an attacker can cause multiple objects to be allocated in separate operations, then this might cause higher total memory consumption than the developer intended, leading to a denial of service.", "related_weaknesses": "::NATURE:ChildOf:CWE ID:770:VIEW ID:1000:ORDINAL:Primary::NATURE:PeerOf:CWE ID:789:VIEW ID:1000:ORDINAL:Primary::NATURE:CanPrecede:CWE ID:476:VIEW ID:1000::", "weakness_ordinalities": "::ORDINALITY:Primary::", "applicable_platforms": "::LANGUAGE NAME:C:LANGUAGE PREVALENCE:Undetermined::LANGUAGE NAME:C++:LANGUAGE PREVALENCE:Undetermined::LANGUAGE CLASS:Language-Independent:LANGUAGE PREVALENCE:Undetermined::", "background_details": "", "alternate_terms": "::TERM:Stack Exhaustion:DESCRIPTION:When a weakness allocates excessive memory on the stack, it is often described as stack exhaustion, which is a technical impact of the weakness. This technical impact is often encountered as a consequence of CWE-789 and/or CWE-1325.::", "modes_of_introduction": "::PHASE:Implementation::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Availability:IMPACT:DoS: Resource Consumption (Memory):NOTE:Not controlling memory allocation can result in a request for too much system memory, possibly leading to a crash of the application due to out-of-memory conditions, or the consumption of a large amount of memory on the system.::", "detection_methods": "", "potential_mitigations": "::PHASE:Implementation:DESCRIPTION:Ensure multiple allocations of the same kind of object are properly tracked - possibly across multiple sessions, requests, or messages. Define an appropriate strategy for handling requests that exceed the limit, and consider supporting a configuration option so that the administrator can extend the amount of memory to be used if necessary.::PHASE:Operation:DESCRIPTION:Run the program using system-provided resource limits for memory. This might still cause the program to crash or exit, but the impact to the rest of the system will be minimized.::", "observed_examples": "::REFERENCE:CVE-2020-36049:DESCRIPTION:JavaScript-based packet decoder uses concatenation of many small strings, causing out-of-memory (OOM) condition:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-36049::REFERENCE:CVE-2019-20176:DESCRIPTION:Product allocates a new buffer on the stack for each file in a directory, allowing stack exhaustion:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-20176::REFERENCE:CVE-2013-1591:DESCRIPTION:Chain: an integer overflow (CWE-190) in the image size calculation causes an infinite loop (CWE-835) which sequentially allocates buffers without limits (CWE-1325) until the stack is full.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2013-1591::", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "", "related_attack_patterns": "::130::", "notes": ""}}]}, {"capec_id": "CAPEC-125", "c_findings": [{"cwe": "CWE-404", "cves": [{"id": "CVE-1999-1127", "score": ["V31", 7.5, "HIGH"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "PARTIAL", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "Windows NT 4.0 does not properly shut down invalid named pipe RPC connections, which allows remote attackers to cause a denial of service (resource exhaustion) via a series of connections containing malformed data, aka the \"Named Pipes Over RPC\" vulnerability.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:o:microsoft:windows_nt:4.0:-:*:*:enterprise:*:*:*", "published": "1999-12-31T05:00:00.000", "last_modified": "2024-02-08T20:35:19.420"}, {"id": "CVE-2001-0830", "score": ["V31", 7.5, "HIGH"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "PARTIAL", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "6tunnel 0.08 and earlier does not properly close sockets that were initiated by a client, which allows remote attackers to cause a denial of service (resource exhaustion) by repeatedly connecting to and disconnecting from the server.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:6tunnel_project:6tunnel:*:*:*:*:*:*:*:*", "published": "2001-12-06T05:00:00.000", "last_modified": "2024-02-09T02:52:21.457"}, {"id": "CVE-2002-1372", "score": ["V31", 7.5, "HIGH"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "PARTIAL", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "Common Unix Printing System (CUPS) 1.1.14 through 1.1.17 does not properly check the return values of various file and socket operations, which could allow a remote attacker to cause a denial of service (resource exhaustion) by causing file descriptors to be assigned and not released, as demonstrated by fanta.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:apple:cups:*:*:*:*:*:*:*:*", "published": "2002-12-26T05:00:00.000", "last_modified": "2024-01-21T01:39:35.663"}], "cwe_info": {"cwe_id": "404", "name": "Improper Resource Shutdown or Release", "weakness_abstraction": "Class", "status": "Draft", "description": "The program does not release or incorrectly releases a resource before it is made available for re-use.", "extended_description": "When a resource is created or allocated, the developer is responsible for properly releasing the resource as well as accounting for all potential paths of expiration or invalidation, such as a set period of time or revocation.", "related_weaknesses": "::NATURE:ChildOf:CWE ID:664:VIEW ID:1000:ORDINAL:Primary::NATURE:PeerOf:CWE ID:405:VIEW ID:1000::NATURE:CanPrecede:CWE ID:619:VIEW ID:1000::", "weakness_ordinalities": "::ORDINALITY:Primary:DESCRIPTION:Improper release or shutdown of resources can be primary to resource exhaustion, performance, and information confidentiality problems to name a few.::ORDINALITY:Resultant:DESCRIPTION:Improper release or shutdown of resources can be resultant from improper error handling or insufficient resource tracking.::", "applicable_platforms": "::LANGUAGE CLASS:Language-Independent:LANGUAGE PREVALENCE:Undetermined::", "background_details": "", "alternate_terms": "", "modes_of_introduction": "::PHASE:Architecture and Design::PHASE:Implementation::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Availability:SCOPE:Other:IMPACT:DoS: Resource Consumption (Other):IMPACT:Varies by Context:NOTE:Most unreleased resource issues result in general software reliability problems, but if an attacker can intentionally trigger a resource leak, the attacker might be able to launch a denial of service attack by depleting the resource pool.::SCOPE:Confidentiality:IMPACT:Read Application Data:NOTE:When a resource containing sensitive information is not correctly shutdown, it may expose the sensitive data in a subsequent allocation.::", "detection_methods": "::METHOD:Automated Dynamic Analysis:DESCRIPTION:This weakness can be detected using dynamic tools and techniques that interact with the software using large test suites with many diverse inputs, such as fuzz testing (fuzzing), robustness testing, and fault injection. The software's operation may slow down, but it should not become unstable, crash, or generate incorrect results. Resource clean up errors might be detected with a stress-test by calling the software simultaneously from a large number of threads or processes, and look for evidence of any unexpected behavior. The software's operation may slow down, but it should not become unstable, crash, or generate incorrect results.:EFFECTIVENESS:Moderate::METHOD:Manual Dynamic Analysis:DESCRIPTION:Identify error conditions that are not likely to occur during normal usage and trigger them. For example, run the program under low memory conditions, run with insufficient privileges or permissions, interrupt a transaction before it is completed, or disable connectivity to basic network services such as DNS. Monitor the software for any unexpected behavior. If you trigger an unhandled exception or similar error that was discovered and handled by the application's environment, it may still indicate unexpected conditions that were not handled by the application itself.::", "potential_mitigations": "::PHASE:Requirements:STRATEGY:Language Selection:DESCRIPTION:Use a language that does not allow this weakness to occur or provides constructs that make this weakness easier to avoid. For example, languages such as Java, Ruby, and Lisp perform automatic garbage collection that releases memory for objects that have been deallocated.::PHASE:Implementation:DESCRIPTION:It is good practice to be responsible for freeing all resources you allocate and to be consistent with how and where you free memory in a function. If you allocate memory that you intend to free upon completion of the function, you must be sure to free the memory at all exit points for that function including error conditions.::PHASE:Implementation:DESCRIPTION:Memory should be allocated/freed using matching functions such as malloc/free, new/delete, and new[]/delete[].::PHASE:Implementation:DESCRIPTION:When releasing a complex object or structure, ensure that you properly dispose of all of its member components, not just the object itself.::", "observed_examples": "::REFERENCE:CVE-1999-1127:DESCRIPTION:Does not shut down named pipe connections if malformed data is sent.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-1999-1127::REFERENCE:CVE-2001-0830:DESCRIPTION:Sockets not properly closed when attacker repeatedly connects and disconnects from server.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2001-0830::REFERENCE:CVE-2002-1372:DESCRIPTION:Return values of file/socket operations not checked, allowing resultant consumption of file descriptors.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2002-1372::", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "::TAXONOMY NAME:PLOVER:ENTRY NAME:Improper resource shutdown or release::TAXONOMY NAME:7 Pernicious Kingdoms:ENTRY NAME:Unreleased Resource::TAXONOMY NAME:OWASP Top Ten 2004:ENTRY ID:A9:ENTRY NAME:Denial of Service:MAPPING FIT:CWE More Specific::TAXONOMY NAME:CERT C Secure Coding:ENTRY ID:FIO42-C:ENTRY NAME:Close files when they are no longer needed:MAPPING FIT:CWE More Abstract::TAXONOMY NAME:CERT C Secure Coding:ENTRY ID:MEM31-C:ENTRY NAME:Free dynamically allocated memory when no longer needed:MAPPING FIT:CWE More Abstract::TAXONOMY NAME:The CERT Oracle Secure Coding Standard for Java (2011):ENTRY ID:FIO04-J:ENTRY NAME:Release resources when they are no longer needed::TAXONOMY NAME:Software Fault Patterns:ENTRY ID:SFP14:ENTRY NAME:Failure to release resource::", "related_attack_patterns": "::125::130::131::494::495::496::666::", "notes": "::TYPE:Relationship:NOTE:Overlaps memory leaks, asymmetric resource consumption, malformed input errors.::"}}, {"cwe": "CWE-770", "cves": [{"id": "CVE-2009-4017", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "PARTIAL", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "PHP before 5.2.12 and 5.3.x before 5.3.1 does not restrict the number of temporary files created when handling a multipart/form-data POST request, which allows remote attackers to cause a denial of service (resource exhaustion), and makes it easier for remote attackers to exploit local file inclusion vulnerabilities, via multiple requests, related to lack of support for the max_file_uploads directive.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:php:php:*:*:*:*:*:*:*:*", "published": "2009-11-24T00:30:00.500", "last_modified": "2024-02-15T21:16:16.510"}, {"id": "CVE-2009-2726", "score": ["V2", 7.8, "HIGH"], "v2_score": 7.8, "v2_exploitability_score": 10.0, "v2_impact_score": 6.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:N/A:C", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:N/A:C", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "COMPLETE", "baseScore": 7.8}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "The SIP channel driver in Asterisk Open Source 1.2.x before 1.2.34, 1.4.x before 1.4.26.1, 1.6.0.x before 1.6.0.12, and 1.6.1.x before 1.6.1.4; Asterisk Business Edition A.x.x, B.x.x before B.2.5.9, C.2.x before C.2.4.1, and C.3.x before C.3.1; and Asterisk Appliance s800i 1.2.x before 1.3.0.3 does not use a maximum width when invoking sscanf style functions, which allows remote attackers to cause a denial of service (stack memory consumption) via SIP packets containing large sequences of ASCII decimal characters, as demonstrated via vectors related to (1) the CSeq value in a SIP header, (2) large Content-Length value, and (3) SDP.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:digium:asterisk:*:*:business:*:*:*:*:*", "published": "2009-08-12T10:30:01.110", "last_modified": "2024-02-15T21:05:21.457"}, {"id": "CVE-2009-2540", "score": ["V2", 4.3, "MEDIUM"], "v2_score": 4.3, "v2_exploitability_score": 8.6, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:M/Au:N/C:N/I:N/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:M/Au:N/C:N/I:N/A:P", "accessVector": "NETWORK", "accessComplexity": "MEDIUM", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "PARTIAL", "baseScore": 4.3}, "baseSeverity": "MEDIUM", "exploitabilityScore": 8.6, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": true}], "description": "Opera, possibly 9.64 and earlier, allows remote attackers to cause a denial of service (memory consumption) via a large integer value for the length property of a Select object, a related issue to CVE-2009-1692.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:opera:opera_browser:*:*:*:*:*:*:*:*", "published": "2009-07-20T18:30:01.233", "last_modified": "2024-02-02T03:07:21.203"}, {"id": "CVE-2009-2054", "score": ["V2", 7.8, "HIGH"], "v2_score": 7.8, "v2_exploitability_score": 10.0, "v2_impact_score": 6.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:N/A:C", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:N/A:C", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "COMPLETE", "baseScore": 7.8}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "Cisco Unified Communications Manager (aka CUCM, formerly CallManager) 4.x, 5.x before 5.1(3g), 6.x before 6.1(4), 7.0 before 7.0(2a)su1, and 7.1 before 7.1(2a)su1 allows remote attackers to cause a denial of service (file-descriptor exhaustion and SIP outage) via a flood of TCP packets, aka Bug ID CSCsx23689.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:cisco:unified_communications_manager:*:*:*:*:*:*:*:*", "published": "2009-08-27T17:00:01.047", "last_modified": "2024-02-15T21:15:40.407"}, {"id": "CVE-2008-5180", "score": ["V31", 5.3, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "PARTIAL", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "Microsoft Communicator, and Communicator in Microsoft Office 2010 beta, allows remote attackers to cause a denial of service (memory consumption) via a large number of SIP INVITE requests, which trigger the creation of many sessions.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:microsoft:office_communicator:*:*:*:*:*:*:*:*", "published": "2008-11-20T15:30:00.390", "last_modified": "2024-10-15T15:35:07.977"}, {"id": "CVE-2008-1700", "score": ["V2", 7.1, "HIGH"], "v2_score": 7.1, "v2_exploitability_score": 8.6, "v2_impact_score": 6.9, "v2_vector": "AV:N/AC:M/Au:N/C:N/I:N/A:C", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:M/Au:N/C:N/I:N/A:C", "accessVector": "NETWORK", "accessComplexity": "MEDIUM", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "COMPLETE", "baseScore": 7.1}, "baseSeverity": "HIGH", "exploitabilityScore": 8.6, "impactScore": 6.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": true}], "description": "The Web TransferCtrl Class 8,2,1,4 (iManFile.cab), as used in WorkSite Web 8.2 before SP1 P2, allows remote attackers to cause a denial of service (memory consumption) via a large number of SendNrlLink directives, which opens a separate window for each directive.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:interwoven:worksite_web:*:*:*:*:*:*:*:*", "published": "2008-04-08T18:05:00.000", "last_modified": "2024-02-02T03:07:30.643"}, {"id": "CVE-2005-4650", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "PARTIAL", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "Joomla! 1.03 does not restrict the number of \"Search\" Mambots, which allows remote attackers to cause a denial of service (resource consumption) via a large number of Search Mambots.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:joomla:joomla\\!:1.0.3:*:*:*:*:*:*:*", "published": "2005-12-31T05:00:00.000", "last_modified": "2024-02-02T03:07:38.527"}, {"id": "CVE-2020-15100", "score": ["V31", 3.3, "LOW"], "v2_score": 2.1, "v2_exploitability_score": 3.9, "v2_impact_score": 2.9, "v2_vector": "AV:L/AC:L/Au:N/C:N/I:N/A:P", "access_vector": "LOCAL", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:L/AC:L/Au:N/C:N/I:N/A:P", "accessVector": "LOCAL", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "PARTIAL", "baseScore": 2.1}, "baseSeverity": "LOW", "exploitabilityScore": 3.9, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "In freewvs before 0.1.1, a user could create a large file that freewvs will try to read, which will terminate a scan process. This has been patched in 0.1.1.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:schokokeks:freewvs:*:*:*:*:*:*:*:*", "published": "2020-07-14T20:15:11.427", "last_modified": "2021-11-18T18:05:20.650"}], "cwe_info": {"cwe_id": "770", "name": "Allocation of Resources Without Limits or Throttling", "weakness_abstraction": "Base", "status": "Incomplete", "description": "The software allocates a reusable resource or group of resources on behalf of an actor without imposing any restrictions on the size or number of resources that can be allocated, in violation of the intended security policy for that actor.", "extended_description": "Code frequently has to work with limited resources, so programmers must be careful to ensure that resources are not consumed too quickly, or too easily. Without use of quotas, resource limits, or other protection mechanisms, it can be easy for an attacker to consume many resources by rapidly making many requests, or causing larger resources to be used than is needed. When too many resources are allocated, or if a single resource is too large, then it can prevent the code from working correctly, possibly leading to a denial of service.", "related_weaknesses": "::NATURE:ChildOf:CWE ID:400:VIEW ID:1000:ORDINAL:Primary::NATURE:ChildOf:CWE ID:665:VIEW ID:1000::NATURE:ChildOf:CWE ID:400:VIEW ID:1003:ORDINAL:Primary::", "weakness_ordinalities": "", "applicable_platforms": "::LANGUAGE CLASS:Language-Independent:LANGUAGE PREVALENCE:Often::", "background_details": "", "alternate_terms": "", "modes_of_introduction": "::PHASE:Architecture and Design:NOTE:OMISSION: This weakness is caused by missing a security tactic during the architecture and design phase.::PHASE:Implementation::PHASE:Operation::PHASE:System Configuration::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Availability:IMPACT:DoS: Resource Consumption (CPU):IMPACT:DoS: Resource Consumption (Memory):IMPACT:DoS: Resource Consumption (Other):NOTE:When allocating resources without limits, an attacker could prevent other systems, applications, or processes from accessing the same type of resource.::", "detection_methods": "::METHOD:Manual Static Analysis:DESCRIPTION:Manual static analysis can be useful for finding this weakness, but it might not achieve desired code coverage within limited time constraints. If denial-of-service is not considered a significant risk, or if there is strong emphasis on consequences such as code execution, then manual analysis may not focus on this weakness at all.::METHOD:Fuzzing:DESCRIPTION:While fuzzing is typically geared toward finding low-level implementation bugs, it can inadvertently find uncontrolled resource allocation problems. This can occur when the fuzzer generates a large number of test cases but does not restart the targeted software in between test cases. If an individual test case produces a crash, but it does not do so reliably, then an inability to limit resource allocation may be the cause. When the allocation is directly affected by numeric inputs, then fuzzing may produce indications of this weakness.:EFFECTIVENESS:Opportunistic::METHOD:Automated Dynamic Analysis:DESCRIPTION:Certain automated dynamic analysis techniques may be effective in producing side effects of uncontrolled resource allocation problems, especially with resources such as processes, memory, and connections. The technique may involve generating a large number of requests to the software within a short time frame. Manual analysis is likely required to interpret the results.::METHOD:Automated Static Analysis:DESCRIPTION:Specialized configuration or tuning may be required to train automated tools to recognize this weakness. Automated static analysis typically has limited utility in recognizing unlimited allocation problems, except for the missing release of program-independent system resources such as files, sockets, and processes, or unchecked arguments to memory. For system resources, automated static analysis may be able to detect circumstances in which resources are not released after they have expired, or if too much of a resource is requested at once, as can occur with memory. Automated analysis of configuration files may be able to detect settings that do not specify a maximum value. Automated static analysis tools will not be appropriate for detecting exhaustion of custom resources, such as an intended security policy in which a bulletin board user is only allowed to make a limited number of posts per day.::", "potential_mitigations": "::PHASE:Requirements:DESCRIPTION:Clearly specify the minimum and maximum expectations for capabilities, and dictate which behaviors are acceptable when resource allocation reaches limits.::PHASE:Architecture and Design:DESCRIPTION:Limit the amount of resources that are accessible to unprivileged users. Set per-user limits for resources. Allow the system administrator to define these limits. Be careful to avoid CWE-410.::PHASE:Architecture and Design:DESCRIPTION:Design throttling mechanisms into the system architecture. The best protection is to limit the amount of resources that an unauthorized user can cause to be expended. A strong authentication and access control model will help prevent such attacks from occurring in the first place, and it will help the administrator to identify who is committing the abuse. The login application should be protected against DoS attacks as much as possible. Limiting the database access, perhaps by caching result sets, can help minimize the resources expended. To further limit the potential for a DoS attack, consider tracking the rate of requests received from users and blocking requests that exceed a defined rate threshold.::PHASE:Implementation:STRATEGY:Input Validation:DESCRIPTION:Assume all input is malicious. Use an accept known good input validation strategy, i.e., use a list of acceptable inputs that strictly conform to specifications. Reject any input that does not strictly conform to specifications, or transform it into something that does. When performing input validation, consider all potentially relevant properties, including length, type of input, the full range of acceptable values, missing or extra inputs, syntax, consistency across related fields, and conformance to business rules. As an example of business rule logic, boat may be syntactically valid because it only contains alphanumeric characters, but it is not valid if the input is only expected to contain colors such as red or blue. Do not rely exclusively on looking for malicious or malformed inputs. This is likely to miss at least one undesirable input, especially if the code's environment changes. This can give attackers enough room to bypass the intended validation. However, denylists can be useful for detecting potential attacks or determining which inputs are so malformed that they should be rejected outright.::PHASE:Architecture and Design:DESCRIPTION:For any security checks that are performed on the client side, ensure that these checks are duplicated on the server side, in order to avoid CWE-602. Attackers can bypass the client-side checks by modifying values after the checks have been performed, or by changing the client to remove the client-side checks entirely. Then, these modified values would be submitted to the server.::PHASE:Architecture and Design:DESCRIPTION:Mitigation of resource exhaustion attacks requires that the target system either: recognizes the attack and denies that user further access for a given amount of time, typically by using increasing time delays uniformly throttles all requests in order to make it more difficult to consume resources more quickly than they can again be freed. The first of these solutions is an issue in itself though, since it may allow attackers to prevent the use of the system by a particular valid user. If the attacker impersonates the valid user, they may be able to prevent the user from accessing the server in question. The second solution can be difficult to effectively institute -- and even when properly done, it does not provide a full solution. It simply requires more resources on the part of the attacker.::PHASE:Architecture and Design:DESCRIPTION:Ensure that protocols have specific limits of scale placed on them.::PHASE:Architecture and Design Implementation:DESCRIPTION:If the program must fail, ensure that it fails gracefully (fails closed). There may be a temptation to simply let the program fail poorly in cases such as low memory conditions, but an attacker may be able to assert control before the software has fully exited. Alternately, an uncontrolled failure could cause cascading problems with other downstream components; for example, the program could send a signal to a downstream process so the process immediately knows that a problem has occurred and has a better chance of recovery. Ensure that all failures in resource allocation place the system into a safe posture.::PHASE:Operation Architecture and Design:STRATEGY:Resource Limitation:DESCRIPTION:Use resource-limiting settings provided by the operating system or environment. For example, when managing system resources in POSIX, setrlimit() can be used to set limits for certain types of resources, and getrlimit() can determine how many resources are available. However, these functions are not available on all operating systems. When the current levels get close to the maximum that is defined for the application (see CWE-770), then limit the allocation of further resources to privileged users; alternately, begin releasing resources for less-privileged users. While this mitigation may protect the system from attack, it will not necessarily stop attackers from adversely impacting other users. Ensure that the application performs the appropriate error checks and error handling in case resources become unavailable (CWE-703).::", "observed_examples": "::REFERENCE:CVE-2009-4017:DESCRIPTION:Language interpreter does not restrict the number of temporary files being created when handling a MIME request with a large number of parts..:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2009-4017::REFERENCE:CVE-2009-2726:DESCRIPTION:Driver does not use a maximum width when invoking sscanf style functions, causing stack consumption.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2009-2726::REFERENCE:CVE-2009-2540:DESCRIPTION:Large integer value for a length property in an object causes a large amount of memory allocation.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2009-2540::REFERENCE:CVE-2009-2054:DESCRIPTION:Product allows exhaustion of file descriptors when processing a large number of TCP packets.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2009-2054::REFERENCE:CVE-2008-5180:DESCRIPTION:Communication product allows memory consumption with a large number of SIP requests, which cause many sessions to be created.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2008-5180::REFERENCE:CVE-2008-1700:DESCRIPTION:Product allows attackers to cause a denial of service via a large number of directives, each of which opens a separate window.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2008-1700::REFERENCE:CVE-2005-4650:DESCRIPTION:CMS does not restrict the number of searches that can occur simultaneously, leading to resource exhaustion.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2005-4650::REFERENCE:CVE-2020-15100:DESCRIPTION:web application scanner attempts to read an excessively large file created by a user, causing process termination:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-15100::", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "::TAXONOMY NAME:The CERT Oracle Secure Coding Standard for Java (2011):ENTRY ID:FIO04-J:ENTRY NAME:Close resources when they are no longer needed::TAXONOMY NAME:The CERT Oracle Secure Coding Standard for Java (2011):ENTRY ID:SER12-J:ENTRY NAME:Avoid memory and resource leaks during serialization::TAXONOMY NAME:The CERT Oracle Secure Coding Standard for Java (2011):ENTRY ID:MSC05-J:ENTRY NAME:Do not exhaust heap space::", "related_attack_patterns": "::125::130::147::197::229::230::231::469::482::486::487::488::489::490::491::493::494::495::496::528::", "notes": "::TYPE:Relationship:NOTE:This entry is different from uncontrolled resource consumption (CWE-400) in that there are other weaknesses that are related to inability to control resource consumption, such as holding on to a resource too long after use, or not correctly keeping track of active resources so that they can be managed and released when they are finished (CWE-771).::TYPE:Theoretical:NOTE:Vulnerability theory is largely about how behaviors and resources interact. Resource exhaustion can be regarded as either a consequence or an attack, depending on the perspective. This entry is an attempt to reflect one of the underlying weaknesses that enable these attacks (or consequences) to take place.::"}}]}]}, {"technique_id": "T1133", "t_findings": [{"capec_id": "CAPEC-227", "c_findings": [{"cwe": "CWE-400", "cves": [{"id": "CVE-2020-3566", "score": ["V31", 8.6, "HIGH"], "v2_score": 7.8, "v2_exploitability_score": 10.0, "v2_impact_score": 6.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:N/A:C", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:N/A:C", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "COMPLETE", "baseScore": 7.8}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "A vulnerability in the Distance Vector Multicast Routing Protocol (DVMRP) feature of Cisco IOS XR Software could allow an unauthenticated, remote attacker to exhaust process memory of an affected device. The vulnerability is due to insufficient queue management for Internet Group Management Protocol (IGMP) packets. An attacker could exploit this vulnerability by sending crafted IGMP traffic to an affected device. A successful exploit could allow the attacker to cause memory exhaustion, resulting in instability of other processes. These processes may include, but are not limited to, interior and exterior routing protocols. Cisco will release software updates that address this vulnerability.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:o:cisco:ios_xr:6.4.2:*:*:*:*:*:*:*", "published": "2020-08-29T16:15:09.797", "last_modified": "2024-07-26T19:55:20.327"}, {"id": "CVE-2009-2874", "score": ["V2", 7.8, "HIGH"], "v2_score": 7.8, "v2_exploitability_score": 10.0, "v2_impact_score": 6.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:N/A:C", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:N/A:C", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "COMPLETE", "baseScore": 7.8}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "The TimesTenD process in Cisco Unified Presence 1.x, 6.x before 6.0(6), and 7.x before 7.0(4) allows remote attackers to cause a denial of service (process crash) via a large number of TCP connections to ports 16200 and 22794, aka Bug ID CSCsy17662.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:cisco:unified_presence_server:1.0:*:*:*:*:*:*:*", "published": "2009-10-16T16:30:00.640", "last_modified": "2017-08-17T01:30:56.320"}, {"id": "CVE-2009-1928", "score": ["V2", 7.8, "HIGH"], "v2_score": 7.8, "v2_exploitability_score": 10.0, "v2_impact_score": 6.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:N/A:C", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:N/A:C", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "COMPLETE", "baseScore": 7.8}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "Stack consumption vulnerability in the LDAP service in Active Directory on Microsoft Windows 2000 SP4, Server 2003 SP2, and Server 2008 Gold and SP2; Active Directory Application Mode (ADAM) on Windows XP SP2 and SP3 and Server 2003 SP2; and Active Directory Lightweight Directory Service (AD LDS) on Windows Server 2008 Gold and SP2 allows remote attackers to cause a denial of service (system hang) via a malformed (1) LDAP or (2) LDAPS request, aka \"LSASS Recursive Stack Overflow Vulnerability.\"", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:o:microsoft:windows_2000:*:sp4:*:*:*:*:*:*", "published": "2009-11-11T19:30:00.267", "last_modified": "2023-12-07T18:38:56.693"}, {"id": "CVE-2009-2858", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "PARTIAL", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "Memory leak in the Security component in IBM DB2 8.1 before FP18 on Unix platforms allows attackers to cause a denial of service (memory consumption) via unspecified vectors, related to private memory within the DB2 memory structure.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:ibm:db2:*:fp17:*:*:*:*:*:*", "published": "2009-08-19T17:30:01.187", "last_modified": "2009-08-21T04:00:00.000"}, {"id": "CVE-2009-2726", "score": ["V2", 7.8, "HIGH"], "v2_score": 7.8, "v2_exploitability_score": 10.0, "v2_impact_score": 6.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:N/A:C", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:N/A:C", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "COMPLETE", "baseScore": 7.8}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "The SIP channel driver in Asterisk Open Source 1.2.x before 1.2.34, 1.4.x before 1.4.26.1, 1.6.0.x before 1.6.0.12, and 1.6.1.x before 1.6.1.4; Asterisk Business Edition A.x.x, B.x.x before B.2.5.9, C.2.x before C.2.4.1, and C.3.x before C.3.1; and Asterisk Appliance s800i 1.2.x before 1.3.0.3 does not use a maximum width when invoking sscanf style functions, which allows remote attackers to cause a denial of service (stack memory consumption) via SIP packets containing large sequences of ASCII decimal characters, as demonstrated via vectors related to (1) the CSeq value in a SIP header, (2) large Content-Length value, and (3) SDP.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:digium:asterisk:*:*:business:*:*:*:*:*", "published": "2009-08-12T10:30:01.110", "last_modified": "2024-02-15T21:05:21.457"}, {"id": "CVE-2009-2540", "score": ["V2", 4.3, "MEDIUM"], "v2_score": 4.3, "v2_exploitability_score": 8.6, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:M/Au:N/C:N/I:N/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:M/Au:N/C:N/I:N/A:P", "accessVector": "NETWORK", "accessComplexity": "MEDIUM", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "PARTIAL", "baseScore": 4.3}, "baseSeverity": "MEDIUM", "exploitabilityScore": 8.6, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": true}], "description": "Opera, possibly 9.64 and earlier, allows remote attackers to cause a denial of service (memory consumption) via a large integer value for the length property of a Select object, a related issue to CVE-2009-1692.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:opera:opera_browser:*:*:*:*:*:*:*:*", "published": "2009-07-20T18:30:01.233", "last_modified": "2024-02-02T03:07:21.203"}, {"id": "CVE-2009-2299", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "PARTIAL", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "The Artofdefence Hyperguard Web Application Firewall (WAF) module before 2.5.5-11635, 3.0 before 3.0.3-11636, and 3.1 before 3.1.1-11637, a module for the Apache HTTP Server, allows remote attackers to cause a denial of service (memory consumption) via an HTTP request with a large Content-Length value but no POST data.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:hyperguard_web_application_firewall_project:hyperguard_web_application_firewall:*:*:*:*:*:*:*:*", "published": "2009-07-02T10:30:00.407", "last_modified": "2020-11-16T20:48:00.137"}, {"id": "CVE-2009-2054", "score": ["V2", 7.8, "HIGH"], "v2_score": 7.8, "v2_exploitability_score": 10.0, "v2_impact_score": 6.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:N/A:C", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:N/A:C", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "COMPLETE", "baseScore": 7.8}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "Cisco Unified Communications Manager (aka CUCM, formerly CallManager) 4.x, 5.x before 5.1(3g), 6.x before 6.1(4), 7.0 before 7.0(2a)su1, and 7.1 before 7.1(2a)su1 allows remote attackers to cause a denial of service (file-descriptor exhaustion and SIP outage) via a flood of TCP packets, aka Bug ID CSCsx23689.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:cisco:unified_communications_manager:*:*:*:*:*:*:*:*", "published": "2009-08-27T17:00:01.047", "last_modified": "2024-02-15T21:15:40.407"}, {"id": "CVE-2008-5180", "score": ["V31", 5.3, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "PARTIAL", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "Microsoft Communicator, and Communicator in Microsoft Office 2010 beta, allows remote attackers to cause a denial of service (memory consumption) via a large number of SIP INVITE requests, which trigger the creation of many sessions.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:microsoft:office_communicator:*:*:*:*:*:*:*:*", "published": "2008-11-20T15:30:00.390", "last_modified": "2024-10-15T15:35:07.977"}, {"id": "CVE-2008-2121", "score": ["V2", 7.8, "HIGH"], "v2_score": 7.8, "v2_exploitability_score": 10.0, "v2_impact_score": 6.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:N/A:C", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:N/A:C", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "COMPLETE", "baseScore": 7.8}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "The TCP implementation in Sun Solaris 8, 9, and 10 allows remote attackers to cause a denial of service (CPU consumption and new connection timeouts) via a TCP SYN flood attack.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:o:sun:sunos:5.8:*:*:*:*:*:*:*", "published": "2008-05-09T15:20:00.000", "last_modified": "2018-10-30T16:25:15.027"}, {"id": "CVE-2008-2122", "score": ["V31", 7.5, "HIGH"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "PARTIAL", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "IBM Rational Build Forge 7.0.2 allows remote attackers to cause a denial of service (CPU consumption) via a port scan, which spawns multiple bfagent server processes that attempt to read data from closed sockets.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:ibm:rational_build_forge:7.0.2:*:*:*:*:*:*:*", "published": "2008-05-09T15:20:00.000", "last_modified": "2024-02-09T02:54:11.277"}, {"id": "CVE-2008-1700", "score": ["V2", 7.1, "HIGH"], "v2_score": 7.1, "v2_exploitability_score": 8.6, "v2_impact_score": 6.9, "v2_vector": "AV:N/AC:M/Au:N/C:N/I:N/A:C", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:M/Au:N/C:N/I:N/A:C", "accessVector": "NETWORK", "accessComplexity": "MEDIUM", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "COMPLETE", "baseScore": 7.1}, "baseSeverity": "HIGH", "exploitabilityScore": 8.6, "impactScore": 6.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": true}], "description": "The Web TransferCtrl Class 8,2,1,4 (iManFile.cab), as used in WorkSite Web 8.2 before SP1 P2, allows remote attackers to cause a denial of service (memory consumption) via a large number of SendNrlLink directives, which opens a separate window for each directive.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:interwoven:worksite_web:*:*:*:*:*:*:*:*", "published": "2008-04-08T18:05:00.000", "last_modified": "2024-02-02T03:07:30.643"}, {"id": "CVE-2007-4103", "score": ["V31", 7.5, "HIGH"], "v2_score": 7.8, "v2_exploitability_score": 10.0, "v2_impact_score": 6.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:N/A:C", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:N/A:C", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "COMPLETE", "baseScore": 7.8}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "The IAX2 channel driver (chan_iax2) in Asterisk Open 1.2.x before 1.2.23, 1.4.x before 1.4.9, and Asterisk Appliance Developer Kit before 0.6.0, when configured to allow unauthenticated calls, allows remote attackers to cause a denial of service (resource exhaustion) via a flood of calls that do not complete a 3-way handshake, which causes an ast_channel to be allocated but not released.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:digium:asterisk:*:*:*:*:*:*:*:*", "published": "2007-07-31T10:17:00.000", "last_modified": "2024-02-08T20:12:32.380"}, {"id": "CVE-2006-1173", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "PARTIAL", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "Sendmail before 8.13.7 allows remote attackers to cause a denial of service via deeply nested, malformed multipart MIME messages that exhaust the stack during the recursive mime8to7 function for performing 8-bit to 7-bit conversion, which prevents Sendmail from delivering queued messages and might lead to disk consumption by core dump files.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:sendmail:sendmail:*:*:*:*:*:*:*:*", "published": "2006-06-07T23:06:00.000", "last_modified": "2018-10-18T16:31:04.043"}, {"id": "CVE-2007-0897", "score": ["V31", 7.5, "HIGH"], "v2_score": 4.3, "v2_exploitability_score": 8.6, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:M/Au:N/C:N/I:N/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:M/Au:N/C:N/I:N/A:P", "accessVector": "NETWORK", "accessComplexity": "MEDIUM", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "PARTIAL", "baseScore": 4.3}, "baseSeverity": "MEDIUM", "exploitabilityScore": 8.6, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "Clam AntiVirus ClamAV before 0.90 does not close open file descriptors under certain conditions, which allows remote attackers to cause a denial of service (file descriptor consumption and failed scans) via CAB archives with a cabinet header record length of zero, which causes a function to return without closing a file descriptor.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:clamav:clamav:*:*:*:*:*:*:*:*", "published": "2007-02-16T19:28:00.000", "last_modified": "2024-02-09T02:48:50.797"}], "cwe_info": {"cwe_id": "400", "name": "Uncontrolled Resource Consumption", "weakness_abstraction": "Class", "status": "Draft", "description": "The software does not properly control the allocation and maintenance of a limited resource, thereby enabling an actor to influence the amount of resources consumed, eventually leading to the exhaustion of available resources.", "extended_description": "Limited resources include memory, file system storage, database connection pool entries, and CPU. If an attacker can trigger the allocation of these limited resources, but the number or size of the resources is not controlled, then the attacker could cause a denial of service that consumes all available resources. This would prevent valid users from accessing the software, and it could potentially have an impact on the surrounding environment. For example, a memory exhaustion attack against an application could slow down the application as well as its host operating system. There are at least three distinct scenarios which can commonly lead to resource exhaustion: Lack of throttling for the number of allocated resources Losing all references to a resource before reaching the shutdown stage Not closing/returning a resource after processing Resource exhaustion problems are often result due to an incorrect implementation of the following situations: Error conditions and other exceptional circumstances. Confusion over which part of the program is responsible for releasing the resource.", "related_weaknesses": "::NATURE:ChildOf:CWE ID:664:VIEW ID:1000:ORDINAL:Primary::", "weakness_ordinalities": "", "applicable_platforms": "::LANGUAGE CLASS:Language-Independent:LANGUAGE PREVALENCE:Undetermined::", "background_details": "", "alternate_terms": "::TERM:Resource Exhaustion::", "modes_of_introduction": "::PHASE:Operation::PHASE:Architecture and Design::PHASE:Implementation::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Availability:IMPACT:DoS: Crash, Exit, or Restart:IMPACT:DoS: Resource Consumption (CPU):IMPACT:DoS: Resource Consumption (Memory):IMPACT:DoS: Resource Consumption (Other):NOTE:The most common result of resource exhaustion is denial of service. The software may slow down, crash due to unhandled errors, or lock out legitimate users.::SCOPE:Access Control:SCOPE:Other:IMPACT:Bypass Protection Mechanism:IMPACT:Other:NOTE:In some cases it may be possible to force the software to fail open in the event of resource exhaustion. The state of the software -- and possibly the security functionality - may then be compromised.::", "detection_methods": "::METHOD:Automated Static Analysis:DESCRIPTION:Automated static analysis typically has limited utility in recognizing resource exhaustion problems, except for program-independent system resources such as files, sockets, and processes. For system resources, automated static analysis may be able to detect circumstances in which resources are not released after they have expired. Automated analysis of configuration files may be able to detect settings that do not specify a maximum value. Automated static analysis tools will not be appropriate for detecting exhaustion of custom resources, such as an intended security policy in which a bulletin board user is only allowed to make a limited number of posts per day.:EFFECTIVENESS:Limited::METHOD:Automated Dynamic Analysis:DESCRIPTION:Certain automated dynamic analysis techniques may be effective in spotting resource exhaustion problems, especially with resources such as processes, memory, and connections. The technique may involve generating a large number of requests to the software within a short time frame.:EFFECTIVENESS:Moderate::METHOD:Fuzzing:DESCRIPTION:While fuzzing is typically geared toward finding low-level implementation bugs, it can inadvertently find resource exhaustion problems. This can occur when the fuzzer generates a large number of test cases but does not restart the targeted software in between test cases. If an individual test case produces a crash, but it does not do so reliably, then an inability to handle resource exhaustion may be the cause.:EFFECTIVENESS:Opportunistic::", "potential_mitigations": "::PHASE:Architecture and Design:DESCRIPTION:Design throttling mechanisms into the system architecture. The best protection is to limit the amount of resources that an unauthorized user can cause to be expended. A strong authentication and access control model will help prevent such attacks from occurring in the first place. The login application should be protected against DoS attacks as much as possible. Limiting the database access, perhaps by caching result sets, can help minimize the resources expended. To further limit the potential for a DoS attack, consider tracking the rate of requests received from users and blocking requests that exceed a defined rate threshold.::PHASE:Architecture and Design:DESCRIPTION:Mitigation of resource exhaustion attacks requires that the target system either: recognizes the attack and denies that user further access for a given amount of time, or uniformly throttles all requests in order to make it more difficult to consume resources more quickly than they can again be freed. The first of these solutions is an issue in itself though, since it may allow attackers to prevent the use of the system by a particular valid user. If the attacker impersonates the valid user, they may be able to prevent the user from accessing the server in question. The second solution is simply difficult to effectively institute -- and even when properly done, it does not provide a full solution. It simply makes the attack require more resources on the part of the attacker.::PHASE:Architecture and Design:DESCRIPTION:Ensure that protocols have specific limits of scale placed on them.::PHASE:Implementation:DESCRIPTION:Ensure that all failures in resource allocation place the system into a safe posture.::", "observed_examples": "::REFERENCE:CVE-2020-3566:DESCRIPTION:Resource exhaustion in distributed OS because of insufficient IGMP queue management, as exploited in the wild per CISA KEV.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-3566::REFERENCE:CVE-2009-2874:DESCRIPTION:Product allows attackers to cause a crash via a large number of connections.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2009-2874::REFERENCE:CVE-2009-1928:DESCRIPTION:Malformed request triggers uncontrolled recursion, leading to stack exhaustion.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2009-1928::REFERENCE:CVE-2009-2858:DESCRIPTION:Chain: memory leak (CWE-404) leads to resource exhaustion.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2009-2858::REFERENCE:CVE-2009-2726:DESCRIPTION:Driver does not use a maximum width when invoking sscanf style functions, causing stack consumption.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2009-2726::REFERENCE:CVE-2009-2540:DESCRIPTION:Large integer value for a length property in an object causes a large amount of memory allocation.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2009-2540::REFERENCE:CVE-2009-2299:DESCRIPTION:Web application firewall consumes excessive memory when an HTTP request contains a large Content-Length value but no POST data.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2009-2299::REFERENCE:CVE-2009-2054:DESCRIPTION:Product allows exhaustion of file descriptors when processing a large number of TCP packets.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2009-2054::REFERENCE:CVE-2008-5180:DESCRIPTION:Communication product allows memory consumption with a large number of SIP requests, which cause many sessions to be created.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2008-5180::REFERENCE:CVE-2008-2121:DESCRIPTION:TCP implementation allows attackers to consume CPU and prevent new connections using a TCP SYN flood attack.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2008-2121::REFERENCE:CVE-2008-2122:DESCRIPTION:Port scan triggers CPU consumption with processes that attempt to read data from closed sockets.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2008-2122::REFERENCE:CVE-2008-1700:DESCRIPTION:Product allows attackers to cause a denial of service via a large number of directives, each of which opens a separate window.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2008-1700::REFERENCE:CVE-2007-4103:DESCRIPTION:Product allows resource exhaustion via a large number of calls that do not complete a 3-way handshake.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2007-4103::REFERENCE:CVE-2006-1173:DESCRIPTION:Mail server does not properly handle deeply nested multipart MIME messages, leading to stack exhaustion.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2006-1173::REFERENCE:CVE-2007-0897:DESCRIPTION:Chain: anti-virus product encounters a malformed file but returns from a function without closing a file descriptor (CWE-775) leading to file descriptor consumption (CWE-400) and failed scans.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2007-0897::", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "::TAXONOMY NAME:CLASP:ENTRY NAME:Resource exhaustion (file descriptor, disk space, sockets, ...)::TAXONOMY NAME:OWASP Top Ten 2004:ENTRY ID:A9:ENTRY NAME:Denial of Service:MAPPING FIT:CWE More Specific::TAXONOMY NAME:WASC:ENTRY ID:10:ENTRY NAME:Denial of Service::TAXONOMY NAME:WASC:ENTRY ID:41:ENTRY NAME:XML Attribute Blowup::TAXONOMY NAME:The CERT Oracle Secure Coding Standard for Java (2011):ENTRY ID:SER12-J:ENTRY NAME:Avoid memory and resource leaks during serialization::TAXONOMY NAME:The CERT Oracle Secure Coding Standard for Java (2011):ENTRY ID:MSC05-J:ENTRY NAME:Do not exhaust heap space::TAXONOMY NAME:Software Fault Patterns:ENTRY ID:SFP13:ENTRY NAME:Unrestricted Consumption::", "related_attack_patterns": "::147::492::", "notes": "::TYPE:Maintenance:NOTE:Resource consumption could be interpreted as a consequence instead of an insecure behavior, so this entry is being considered for modification. It appears to be referenced too frequently when more precise mappings are available. Some of its children, such as CWE-771, might be better considered as a chain.::TYPE:Theoretical:NOTE:Vulnerability theory is largely about how behaviors and resources interact. Resource exhaustion can be regarded as either a consequence or an attack, depending on the perspective. This entry is an attempt to reflect the underlying weaknesses that enable these attacks (or consequences) to take place.::TYPE:Other:NOTE:Database queries that take a long time to process are good DoS targets. An attacker would have to write a few lines of Perl code to generate enough traffic to exceed the site's ability to keep up. This would effectively prevent authorized users from using the site at all. Resources can be exploited simply by ensuring that the target machine must do much more work and consume more resources in order to service a request than the attacker must do to initiate a request. A prime example of this can be found in old switches that were vulnerable to macof attacks (so named for a tool developed by Dugsong). These attacks flooded a switch with random IP and MAC address combinations, therefore exhausting the switch's cache, which held the information of which port corresponded to which MAC addresses. Once this cache was exhausted, the switch would fail in an insecure way and would begin to act simply as a hub, broadcasting all traffic on all ports and allowing for basic sniffing attacks.::"}}]}, {"capec_id": "CAPEC-131", "c_findings": [{"cwe": "CWE-404", "cves": [{"id": "CVE-1999-1127", "score": ["V31", 7.5, "HIGH"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "PARTIAL", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "Windows NT 4.0 does not properly shut down invalid named pipe RPC connections, which allows remote attackers to cause a denial of service (resource exhaustion) via a series of connections containing malformed data, aka the \"Named Pipes Over RPC\" vulnerability.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:o:microsoft:windows_nt:4.0:-:*:*:enterprise:*:*:*", "published": "1999-12-31T05:00:00.000", "last_modified": "2024-02-08T20:35:19.420"}, {"id": "CVE-2001-0830", "score": ["V31", 7.5, "HIGH"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "PARTIAL", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "6tunnel 0.08 and earlier does not properly close sockets that were initiated by a client, which allows remote attackers to cause a denial of service (resource exhaustion) by repeatedly connecting to and disconnecting from the server.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:6tunnel_project:6tunnel:*:*:*:*:*:*:*:*", "published": "2001-12-06T05:00:00.000", "last_modified": "2024-02-09T02:52:21.457"}, {"id": "CVE-2002-1372", "score": ["V31", 7.5, "HIGH"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "PARTIAL", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "Common Unix Printing System (CUPS) 1.1.14 through 1.1.17 does not properly check the return values of various file and socket operations, which could allow a remote attacker to cause a denial of service (resource exhaustion) by causing file descriptors to be assigned and not released, as demonstrated by fanta.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:apple:cups:*:*:*:*:*:*:*:*", "published": "2002-12-26T05:00:00.000", "last_modified": "2024-01-21T01:39:35.663"}], "cwe_info": {"cwe_id": "404", "name": "Improper Resource Shutdown or Release", "weakness_abstraction": "Class", "status": "Draft", "description": "The program does not release or incorrectly releases a resource before it is made available for re-use.", "extended_description": "When a resource is created or allocated, the developer is responsible for properly releasing the resource as well as accounting for all potential paths of expiration or invalidation, such as a set period of time or revocation.", "related_weaknesses": "::NATURE:ChildOf:CWE ID:664:VIEW ID:1000:ORDINAL:Primary::NATURE:PeerOf:CWE ID:405:VIEW ID:1000::NATURE:CanPrecede:CWE ID:619:VIEW ID:1000::", "weakness_ordinalities": "::ORDINALITY:Primary:DESCRIPTION:Improper release or shutdown of resources can be primary to resource exhaustion, performance, and information confidentiality problems to name a few.::ORDINALITY:Resultant:DESCRIPTION:Improper release or shutdown of resources can be resultant from improper error handling or insufficient resource tracking.::", "applicable_platforms": "::LANGUAGE CLASS:Language-Independent:LANGUAGE PREVALENCE:Undetermined::", "background_details": "", "alternate_terms": "", "modes_of_introduction": "::PHASE:Architecture and Design::PHASE:Implementation::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Availability:SCOPE:Other:IMPACT:DoS: Resource Consumption (Other):IMPACT:Varies by Context:NOTE:Most unreleased resource issues result in general software reliability problems, but if an attacker can intentionally trigger a resource leak, the attacker might be able to launch a denial of service attack by depleting the resource pool.::SCOPE:Confidentiality:IMPACT:Read Application Data:NOTE:When a resource containing sensitive information is not correctly shutdown, it may expose the sensitive data in a subsequent allocation.::", "detection_methods": "::METHOD:Automated Dynamic Analysis:DESCRIPTION:This weakness can be detected using dynamic tools and techniques that interact with the software using large test suites with many diverse inputs, such as fuzz testing (fuzzing), robustness testing, and fault injection. The software's operation may slow down, but it should not become unstable, crash, or generate incorrect results. Resource clean up errors might be detected with a stress-test by calling the software simultaneously from a large number of threads or processes, and look for evidence of any unexpected behavior. The software's operation may slow down, but it should not become unstable, crash, or generate incorrect results.:EFFECTIVENESS:Moderate::METHOD:Manual Dynamic Analysis:DESCRIPTION:Identify error conditions that are not likely to occur during normal usage and trigger them. For example, run the program under low memory conditions, run with insufficient privileges or permissions, interrupt a transaction before it is completed, or disable connectivity to basic network services such as DNS. Monitor the software for any unexpected behavior. If you trigger an unhandled exception or similar error that was discovered and handled by the application's environment, it may still indicate unexpected conditions that were not handled by the application itself.::", "potential_mitigations": "::PHASE:Requirements:STRATEGY:Language Selection:DESCRIPTION:Use a language that does not allow this weakness to occur or provides constructs that make this weakness easier to avoid. For example, languages such as Java, Ruby, and Lisp perform automatic garbage collection that releases memory for objects that have been deallocated.::PHASE:Implementation:DESCRIPTION:It is good practice to be responsible for freeing all resources you allocate and to be consistent with how and where you free memory in a function. If you allocate memory that you intend to free upon completion of the function, you must be sure to free the memory at all exit points for that function including error conditions.::PHASE:Implementation:DESCRIPTION:Memory should be allocated/freed using matching functions such as malloc/free, new/delete, and new[]/delete[].::PHASE:Implementation:DESCRIPTION:When releasing a complex object or structure, ensure that you properly dispose of all of its member components, not just the object itself.::", "observed_examples": "::REFERENCE:CVE-1999-1127:DESCRIPTION:Does not shut down named pipe connections if malformed data is sent.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-1999-1127::REFERENCE:CVE-2001-0830:DESCRIPTION:Sockets not properly closed when attacker repeatedly connects and disconnects from server.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2001-0830::REFERENCE:CVE-2002-1372:DESCRIPTION:Return values of file/socket operations not checked, allowing resultant consumption of file descriptors.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2002-1372::", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "::TAXONOMY NAME:PLOVER:ENTRY NAME:Improper resource shutdown or release::TAXONOMY NAME:7 Pernicious Kingdoms:ENTRY NAME:Unreleased Resource::TAXONOMY NAME:OWASP Top Ten 2004:ENTRY ID:A9:ENTRY NAME:Denial of Service:MAPPING FIT:CWE More Specific::TAXONOMY NAME:CERT C Secure Coding:ENTRY ID:FIO42-C:ENTRY NAME:Close files when they are no longer needed:MAPPING FIT:CWE More Abstract::TAXONOMY NAME:CERT C Secure Coding:ENTRY ID:MEM31-C:ENTRY NAME:Free dynamically allocated memory when no longer needed:MAPPING FIT:CWE More Abstract::TAXONOMY NAME:The CERT Oracle Secure Coding Standard for Java (2011):ENTRY ID:FIO04-J:ENTRY NAME:Release resources when they are no longer needed::TAXONOMY NAME:Software Fault Patterns:ENTRY ID:SFP14:ENTRY NAME:Failure to release resource::", "related_attack_patterns": "::125::130::131::494::495::496::666::", "notes": "::TYPE:Relationship:NOTE:Overlaps memory leaks, asymmetric resource consumption, malformed input errors.::"}}]}, {"capec_id": "CAPEC-130", "c_findings": [{"cwe": "CWE-404", "cves": [{"id": "CVE-1999-1127", "score": ["V31", 7.5, "HIGH"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "PARTIAL", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "Windows NT 4.0 does not properly shut down invalid named pipe RPC connections, which allows remote attackers to cause a denial of service (resource exhaustion) via a series of connections containing malformed data, aka the \"Named Pipes Over RPC\" vulnerability.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:o:microsoft:windows_nt:4.0:-:*:*:enterprise:*:*:*", "published": "1999-12-31T05:00:00.000", "last_modified": "2024-02-08T20:35:19.420"}, {"id": "CVE-2001-0830", "score": ["V31", 7.5, "HIGH"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "PARTIAL", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "6tunnel 0.08 and earlier does not properly close sockets that were initiated by a client, which allows remote attackers to cause a denial of service (resource exhaustion) by repeatedly connecting to and disconnecting from the server.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:6tunnel_project:6tunnel:*:*:*:*:*:*:*:*", "published": "2001-12-06T05:00:00.000", "last_modified": "2024-02-09T02:52:21.457"}, {"id": "CVE-2002-1372", "score": ["V31", 7.5, "HIGH"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "PARTIAL", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "Common Unix Printing System (CUPS) 1.1.14 through 1.1.17 does not properly check the return values of various file and socket operations, which could allow a remote attacker to cause a denial of service (resource exhaustion) by causing file descriptors to be assigned and not released, as demonstrated by fanta.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:apple:cups:*:*:*:*:*:*:*:*", "published": "2002-12-26T05:00:00.000", "last_modified": "2024-01-21T01:39:35.663"}], "cwe_info": {"cwe_id": "404", "name": "Improper Resource Shutdown or Release", "weakness_abstraction": "Class", "status": "Draft", "description": "The program does not release or incorrectly releases a resource before it is made available for re-use.", "extended_description": "When a resource is created or allocated, the developer is responsible for properly releasing the resource as well as accounting for all potential paths of expiration or invalidation, such as a set period of time or revocation.", "related_weaknesses": "::NATURE:ChildOf:CWE ID:664:VIEW ID:1000:ORDINAL:Primary::NATURE:PeerOf:CWE ID:405:VIEW ID:1000::NATURE:CanPrecede:CWE ID:619:VIEW ID:1000::", "weakness_ordinalities": "::ORDINALITY:Primary:DESCRIPTION:Improper release or shutdown of resources can be primary to resource exhaustion, performance, and information confidentiality problems to name a few.::ORDINALITY:Resultant:DESCRIPTION:Improper release or shutdown of resources can be resultant from improper error handling or insufficient resource tracking.::", "applicable_platforms": "::LANGUAGE CLASS:Language-Independent:LANGUAGE PREVALENCE:Undetermined::", "background_details": "", "alternate_terms": "", "modes_of_introduction": "::PHASE:Architecture and Design::PHASE:Implementation::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Availability:SCOPE:Other:IMPACT:DoS: Resource Consumption (Other):IMPACT:Varies by Context:NOTE:Most unreleased resource issues result in general software reliability problems, but if an attacker can intentionally trigger a resource leak, the attacker might be able to launch a denial of service attack by depleting the resource pool.::SCOPE:Confidentiality:IMPACT:Read Application Data:NOTE:When a resource containing sensitive information is not correctly shutdown, it may expose the sensitive data in a subsequent allocation.::", "detection_methods": "::METHOD:Automated Dynamic Analysis:DESCRIPTION:This weakness can be detected using dynamic tools and techniques that interact with the software using large test suites with many diverse inputs, such as fuzz testing (fuzzing), robustness testing, and fault injection. The software's operation may slow down, but it should not become unstable, crash, or generate incorrect results. Resource clean up errors might be detected with a stress-test by calling the software simultaneously from a large number of threads or processes, and look for evidence of any unexpected behavior. The software's operation may slow down, but it should not become unstable, crash, or generate incorrect results.:EFFECTIVENESS:Moderate::METHOD:Manual Dynamic Analysis:DESCRIPTION:Identify error conditions that are not likely to occur during normal usage and trigger them. For example, run the program under low memory conditions, run with insufficient privileges or permissions, interrupt a transaction before it is completed, or disable connectivity to basic network services such as DNS. Monitor the software for any unexpected behavior. If you trigger an unhandled exception or similar error that was discovered and handled by the application's environment, it may still indicate unexpected conditions that were not handled by the application itself.::", "potential_mitigations": "::PHASE:Requirements:STRATEGY:Language Selection:DESCRIPTION:Use a language that does not allow this weakness to occur or provides constructs that make this weakness easier to avoid. For example, languages such as Java, Ruby, and Lisp perform automatic garbage collection that releases memory for objects that have been deallocated.::PHASE:Implementation:DESCRIPTION:It is good practice to be responsible for freeing all resources you allocate and to be consistent with how and where you free memory in a function. If you allocate memory that you intend to free upon completion of the function, you must be sure to free the memory at all exit points for that function including error conditions.::PHASE:Implementation:DESCRIPTION:Memory should be allocated/freed using matching functions such as malloc/free, new/delete, and new[]/delete[].::PHASE:Implementation:DESCRIPTION:When releasing a complex object or structure, ensure that you properly dispose of all of its member components, not just the object itself.::", "observed_examples": "::REFERENCE:CVE-1999-1127:DESCRIPTION:Does not shut down named pipe connections if malformed data is sent.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-1999-1127::REFERENCE:CVE-2001-0830:DESCRIPTION:Sockets not properly closed when attacker repeatedly connects and disconnects from server.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2001-0830::REFERENCE:CVE-2002-1372:DESCRIPTION:Return values of file/socket operations not checked, allowing resultant consumption of file descriptors.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2002-1372::", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "::TAXONOMY NAME:PLOVER:ENTRY NAME:Improper resource shutdown or release::TAXONOMY NAME:7 Pernicious Kingdoms:ENTRY NAME:Unreleased Resource::TAXONOMY NAME:OWASP Top Ten 2004:ENTRY ID:A9:ENTRY NAME:Denial of Service:MAPPING FIT:CWE More Specific::TAXONOMY NAME:CERT C Secure Coding:ENTRY ID:FIO42-C:ENTRY NAME:Close files when they are no longer needed:MAPPING FIT:CWE More Abstract::TAXONOMY NAME:CERT C Secure Coding:ENTRY ID:MEM31-C:ENTRY NAME:Free dynamically allocated memory when no longer needed:MAPPING FIT:CWE More Abstract::TAXONOMY NAME:The CERT Oracle Secure Coding Standard for Java (2011):ENTRY ID:FIO04-J:ENTRY NAME:Release resources when they are no longer needed::TAXONOMY NAME:Software Fault Patterns:ENTRY ID:SFP14:ENTRY NAME:Failure to release resource::", "related_attack_patterns": "::125::130::131::494::495::496::666::", "notes": "::TYPE:Relationship:NOTE:Overlaps memory leaks, asymmetric resource consumption, malformed input errors.::"}}, {"cwe": "CWE-770", "cves": [{"id": "CVE-2009-4017", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "PARTIAL", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "PHP before 5.2.12 and 5.3.x before 5.3.1 does not restrict the number of temporary files created when handling a multipart/form-data POST request, which allows remote attackers to cause a denial of service (resource exhaustion), and makes it easier for remote attackers to exploit local file inclusion vulnerabilities, via multiple requests, related to lack of support for the max_file_uploads directive.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:php:php:*:*:*:*:*:*:*:*", "published": "2009-11-24T00:30:00.500", "last_modified": "2024-02-15T21:16:16.510"}, {"id": "CVE-2009-2726", "score": ["V2", 7.8, "HIGH"], "v2_score": 7.8, "v2_exploitability_score": 10.0, "v2_impact_score": 6.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:N/A:C", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:N/A:C", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "COMPLETE", "baseScore": 7.8}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "The SIP channel driver in Asterisk Open Source 1.2.x before 1.2.34, 1.4.x before 1.4.26.1, 1.6.0.x before 1.6.0.12, and 1.6.1.x before 1.6.1.4; Asterisk Business Edition A.x.x, B.x.x before B.2.5.9, C.2.x before C.2.4.1, and C.3.x before C.3.1; and Asterisk Appliance s800i 1.2.x before 1.3.0.3 does not use a maximum width when invoking sscanf style functions, which allows remote attackers to cause a denial of service (stack memory consumption) via SIP packets containing large sequences of ASCII decimal characters, as demonstrated via vectors related to (1) the CSeq value in a SIP header, (2) large Content-Length value, and (3) SDP.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:digium:asterisk:*:*:business:*:*:*:*:*", "published": "2009-08-12T10:30:01.110", "last_modified": "2024-02-15T21:05:21.457"}, {"id": "CVE-2009-2540", "score": ["V2", 4.3, "MEDIUM"], "v2_score": 4.3, "v2_exploitability_score": 8.6, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:M/Au:N/C:N/I:N/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:M/Au:N/C:N/I:N/A:P", "accessVector": "NETWORK", "accessComplexity": "MEDIUM", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "PARTIAL", "baseScore": 4.3}, "baseSeverity": "MEDIUM", "exploitabilityScore": 8.6, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": true}], "description": "Opera, possibly 9.64 and earlier, allows remote attackers to cause a denial of service (memory consumption) via a large integer value for the length property of a Select object, a related issue to CVE-2009-1692.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:opera:opera_browser:*:*:*:*:*:*:*:*", "published": "2009-07-20T18:30:01.233", "last_modified": "2024-02-02T03:07:21.203"}, {"id": "CVE-2009-2054", "score": ["V2", 7.8, "HIGH"], "v2_score": 7.8, "v2_exploitability_score": 10.0, "v2_impact_score": 6.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:N/A:C", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:N/A:C", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "COMPLETE", "baseScore": 7.8}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "Cisco Unified Communications Manager (aka CUCM, formerly CallManager) 4.x, 5.x before 5.1(3g), 6.x before 6.1(4), 7.0 before 7.0(2a)su1, and 7.1 before 7.1(2a)su1 allows remote attackers to cause a denial of service (file-descriptor exhaustion and SIP outage) via a flood of TCP packets, aka Bug ID CSCsx23689.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:cisco:unified_communications_manager:*:*:*:*:*:*:*:*", "published": "2009-08-27T17:00:01.047", "last_modified": "2024-02-15T21:15:40.407"}, {"id": "CVE-2008-5180", "score": ["V31", 5.3, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "PARTIAL", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "Microsoft Communicator, and Communicator in Microsoft Office 2010 beta, allows remote attackers to cause a denial of service (memory consumption) via a large number of SIP INVITE requests, which trigger the creation of many sessions.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:microsoft:office_communicator:*:*:*:*:*:*:*:*", "published": "2008-11-20T15:30:00.390", "last_modified": "2024-10-15T15:35:07.977"}, {"id": "CVE-2008-1700", "score": ["V2", 7.1, "HIGH"], "v2_score": 7.1, "v2_exploitability_score": 8.6, "v2_impact_score": 6.9, "v2_vector": "AV:N/AC:M/Au:N/C:N/I:N/A:C", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:M/Au:N/C:N/I:N/A:C", "accessVector": "NETWORK", "accessComplexity": "MEDIUM", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "COMPLETE", "baseScore": 7.1}, "baseSeverity": "HIGH", "exploitabilityScore": 8.6, "impactScore": 6.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": true}], "description": "The Web TransferCtrl Class 8,2,1,4 (iManFile.cab), as used in WorkSite Web 8.2 before SP1 P2, allows remote attackers to cause a denial of service (memory consumption) via a large number of SendNrlLink directives, which opens a separate window for each directive.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:interwoven:worksite_web:*:*:*:*:*:*:*:*", "published": "2008-04-08T18:05:00.000", "last_modified": "2024-02-02T03:07:30.643"}, {"id": "CVE-2005-4650", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "PARTIAL", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "Joomla! 1.03 does not restrict the number of \"Search\" Mambots, which allows remote attackers to cause a denial of service (resource consumption) via a large number of Search Mambots.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:joomla:joomla\\!:1.0.3:*:*:*:*:*:*:*", "published": "2005-12-31T05:00:00.000", "last_modified": "2024-02-02T03:07:38.527"}, {"id": "CVE-2020-15100", "score": ["V31", 3.3, "LOW"], "v2_score": 2.1, "v2_exploitability_score": 3.9, "v2_impact_score": 2.9, "v2_vector": "AV:L/AC:L/Au:N/C:N/I:N/A:P", "access_vector": "LOCAL", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:L/AC:L/Au:N/C:N/I:N/A:P", "accessVector": "LOCAL", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "PARTIAL", "baseScore": 2.1}, "baseSeverity": "LOW", "exploitabilityScore": 3.9, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "In freewvs before 0.1.1, a user could create a large file that freewvs will try to read, which will terminate a scan process. This has been patched in 0.1.1.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:schokokeks:freewvs:*:*:*:*:*:*:*:*", "published": "2020-07-14T20:15:11.427", "last_modified": "2021-11-18T18:05:20.650"}], "cwe_info": {"cwe_id": "770", "name": "Allocation of Resources Without Limits or Throttling", "weakness_abstraction": "Base", "status": "Incomplete", "description": "The software allocates a reusable resource or group of resources on behalf of an actor without imposing any restrictions on the size or number of resources that can be allocated, in violation of the intended security policy for that actor.", "extended_description": "Code frequently has to work with limited resources, so programmers must be careful to ensure that resources are not consumed too quickly, or too easily. Without use of quotas, resource limits, or other protection mechanisms, it can be easy for an attacker to consume many resources by rapidly making many requests, or causing larger resources to be used than is needed. When too many resources are allocated, or if a single resource is too large, then it can prevent the code from working correctly, possibly leading to a denial of service.", "related_weaknesses": "::NATURE:ChildOf:CWE ID:400:VIEW ID:1000:ORDINAL:Primary::NATURE:ChildOf:CWE ID:665:VIEW ID:1000::NATURE:ChildOf:CWE ID:400:VIEW ID:1003:ORDINAL:Primary::", "weakness_ordinalities": "", "applicable_platforms": "::LANGUAGE CLASS:Language-Independent:LANGUAGE PREVALENCE:Often::", "background_details": "", "alternate_terms": "", "modes_of_introduction": "::PHASE:Architecture and Design:NOTE:OMISSION: This weakness is caused by missing a security tactic during the architecture and design phase.::PHASE:Implementation::PHASE:Operation::PHASE:System Configuration::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Availability:IMPACT:DoS: Resource Consumption (CPU):IMPACT:DoS: Resource Consumption (Memory):IMPACT:DoS: Resource Consumption (Other):NOTE:When allocating resources without limits, an attacker could prevent other systems, applications, or processes from accessing the same type of resource.::", "detection_methods": "::METHOD:Manual Static Analysis:DESCRIPTION:Manual static analysis can be useful for finding this weakness, but it might not achieve desired code coverage within limited time constraints. If denial-of-service is not considered a significant risk, or if there is strong emphasis on consequences such as code execution, then manual analysis may not focus on this weakness at all.::METHOD:Fuzzing:DESCRIPTION:While fuzzing is typically geared toward finding low-level implementation bugs, it can inadvertently find uncontrolled resource allocation problems. This can occur when the fuzzer generates a large number of test cases but does not restart the targeted software in between test cases. If an individual test case produces a crash, but it does not do so reliably, then an inability to limit resource allocation may be the cause. When the allocation is directly affected by numeric inputs, then fuzzing may produce indications of this weakness.:EFFECTIVENESS:Opportunistic::METHOD:Automated Dynamic Analysis:DESCRIPTION:Certain automated dynamic analysis techniques may be effective in producing side effects of uncontrolled resource allocation problems, especially with resources such as processes, memory, and connections. The technique may involve generating a large number of requests to the software within a short time frame. Manual analysis is likely required to interpret the results.::METHOD:Automated Static Analysis:DESCRIPTION:Specialized configuration or tuning may be required to train automated tools to recognize this weakness. Automated static analysis typically has limited utility in recognizing unlimited allocation problems, except for the missing release of program-independent system resources such as files, sockets, and processes, or unchecked arguments to memory. For system resources, automated static analysis may be able to detect circumstances in which resources are not released after they have expired, or if too much of a resource is requested at once, as can occur with memory. Automated analysis of configuration files may be able to detect settings that do not specify a maximum value. Automated static analysis tools will not be appropriate for detecting exhaustion of custom resources, such as an intended security policy in which a bulletin board user is only allowed to make a limited number of posts per day.::", "potential_mitigations": "::PHASE:Requirements:DESCRIPTION:Clearly specify the minimum and maximum expectations for capabilities, and dictate which behaviors are acceptable when resource allocation reaches limits.::PHASE:Architecture and Design:DESCRIPTION:Limit the amount of resources that are accessible to unprivileged users. Set per-user limits for resources. Allow the system administrator to define these limits. Be careful to avoid CWE-410.::PHASE:Architecture and Design:DESCRIPTION:Design throttling mechanisms into the system architecture. The best protection is to limit the amount of resources that an unauthorized user can cause to be expended. A strong authentication and access control model will help prevent such attacks from occurring in the first place, and it will help the administrator to identify who is committing the abuse. The login application should be protected against DoS attacks as much as possible. Limiting the database access, perhaps by caching result sets, can help minimize the resources expended. To further limit the potential for a DoS attack, consider tracking the rate of requests received from users and blocking requests that exceed a defined rate threshold.::PHASE:Implementation:STRATEGY:Input Validation:DESCRIPTION:Assume all input is malicious. Use an accept known good input validation strategy, i.e., use a list of acceptable inputs that strictly conform to specifications. Reject any input that does not strictly conform to specifications, or transform it into something that does. When performing input validation, consider all potentially relevant properties, including length, type of input, the full range of acceptable values, missing or extra inputs, syntax, consistency across related fields, and conformance to business rules. As an example of business rule logic, boat may be syntactically valid because it only contains alphanumeric characters, but it is not valid if the input is only expected to contain colors such as red or blue. Do not rely exclusively on looking for malicious or malformed inputs. This is likely to miss at least one undesirable input, especially if the code's environment changes. This can give attackers enough room to bypass the intended validation. However, denylists can be useful for detecting potential attacks or determining which inputs are so malformed that they should be rejected outright.::PHASE:Architecture and Design:DESCRIPTION:For any security checks that are performed on the client side, ensure that these checks are duplicated on the server side, in order to avoid CWE-602. Attackers can bypass the client-side checks by modifying values after the checks have been performed, or by changing the client to remove the client-side checks entirely. Then, these modified values would be submitted to the server.::PHASE:Architecture and Design:DESCRIPTION:Mitigation of resource exhaustion attacks requires that the target system either: recognizes the attack and denies that user further access for a given amount of time, typically by using increasing time delays uniformly throttles all requests in order to make it more difficult to consume resources more quickly than they can again be freed. The first of these solutions is an issue in itself though, since it may allow attackers to prevent the use of the system by a particular valid user. If the attacker impersonates the valid user, they may be able to prevent the user from accessing the server in question. The second solution can be difficult to effectively institute -- and even when properly done, it does not provide a full solution. It simply requires more resources on the part of the attacker.::PHASE:Architecture and Design:DESCRIPTION:Ensure that protocols have specific limits of scale placed on them.::PHASE:Architecture and Design Implementation:DESCRIPTION:If the program must fail, ensure that it fails gracefully (fails closed). There may be a temptation to simply let the program fail poorly in cases such as low memory conditions, but an attacker may be able to assert control before the software has fully exited. Alternately, an uncontrolled failure could cause cascading problems with other downstream components; for example, the program could send a signal to a downstream process so the process immediately knows that a problem has occurred and has a better chance of recovery. Ensure that all failures in resource allocation place the system into a safe posture.::PHASE:Operation Architecture and Design:STRATEGY:Resource Limitation:DESCRIPTION:Use resource-limiting settings provided by the operating system or environment. For example, when managing system resources in POSIX, setrlimit() can be used to set limits for certain types of resources, and getrlimit() can determine how many resources are available. However, these functions are not available on all operating systems. When the current levels get close to the maximum that is defined for the application (see CWE-770), then limit the allocation of further resources to privileged users; alternately, begin releasing resources for less-privileged users. While this mitigation may protect the system from attack, it will not necessarily stop attackers from adversely impacting other users. Ensure that the application performs the appropriate error checks and error handling in case resources become unavailable (CWE-703).::", "observed_examples": "::REFERENCE:CVE-2009-4017:DESCRIPTION:Language interpreter does not restrict the number of temporary files being created when handling a MIME request with a large number of parts..:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2009-4017::REFERENCE:CVE-2009-2726:DESCRIPTION:Driver does not use a maximum width when invoking sscanf style functions, causing stack consumption.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2009-2726::REFERENCE:CVE-2009-2540:DESCRIPTION:Large integer value for a length property in an object causes a large amount of memory allocation.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2009-2540::REFERENCE:CVE-2009-2054:DESCRIPTION:Product allows exhaustion of file descriptors when processing a large number of TCP packets.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2009-2054::REFERENCE:CVE-2008-5180:DESCRIPTION:Communication product allows memory consumption with a large number of SIP requests, which cause many sessions to be created.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2008-5180::REFERENCE:CVE-2008-1700:DESCRIPTION:Product allows attackers to cause a denial of service via a large number of directives, each of which opens a separate window.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2008-1700::REFERENCE:CVE-2005-4650:DESCRIPTION:CMS does not restrict the number of searches that can occur simultaneously, leading to resource exhaustion.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2005-4650::REFERENCE:CVE-2020-15100:DESCRIPTION:web application scanner attempts to read an excessively large file created by a user, causing process termination:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-15100::", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "::TAXONOMY NAME:The CERT Oracle Secure Coding Standard for Java (2011):ENTRY ID:FIO04-J:ENTRY NAME:Close resources when they are no longer needed::TAXONOMY NAME:The CERT Oracle Secure Coding Standard for Java (2011):ENTRY ID:SER12-J:ENTRY NAME:Avoid memory and resource leaks during serialization::TAXONOMY NAME:The CERT Oracle Secure Coding Standard for Java (2011):ENTRY ID:MSC05-J:ENTRY NAME:Do not exhaust heap space::", "related_attack_patterns": "::125::130::147::197::229::230::231::469::482::486::487::488::489::490::491::493::494::495::496::528::", "notes": "::TYPE:Relationship:NOTE:This entry is different from uncontrolled resource consumption (CWE-400) in that there are other weaknesses that are related to inability to control resource consumption, such as holding on to a resource too long after use, or not correctly keeping track of active resources so that they can be managed and released when they are finished (CWE-771).::TYPE:Theoretical:NOTE:Vulnerability theory is largely about how behaviors and resources interact. Resource exhaustion can be regarded as either a consequence or an attack, depending on the perspective. This entry is an attempt to reflect one of the underlying weaknesses that enable these attacks (or consequences) to take place.::"}}, {"cwe": "CWE-1325", "cves": [{"id": "CVE-2020-36049", "score": ["V31", 7.5, "HIGH"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "PARTIAL", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "socket.io-parser before 3.4.1 allows attackers to cause a denial of service (memory consumption) via a large packet because a concatenation approach is used.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:socket:socket.io-parser:*:*:*:*:*:node.js:*:*", "published": "2021-01-08T00:15:11.187", "last_modified": "2021-07-21T11:39:23.747"}, {"id": "CVE-2019-20176", "score": ["V31", 7.5, "HIGH"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "PARTIAL", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "In Pure-FTPd 1.0.49, a stack exhaustion issue was discovered in the listdir function in ls.c.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:pureftpd:pure-ftpd:1.0.49:*:*:*:*:*:*:*", "published": "2019-12-31T15:15:11.223", "last_modified": "2023-11-07T03:08:40.020"}, {"id": "CVE-2013-1591", "score": ["V31", 9.8, "CRITICAL"], "v2_score": 10.0, "v2_exploitability_score": 10.0, "v2_impact_score": 10.0, "v2_vector": "AV:N/AC:L/Au:N/C:C/I:C/A:C", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:C/I:C/A:C", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "COMPLETE", "integrityImpact": "COMPLETE", "availabilityImpact": "COMPLETE", "baseScore": 10.0}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 10.0, "acInsufInfo": true, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "Stack-based buffer overflow in libpixman, as used in Pale Moon before 15.4 and possibly other products, has unspecified impact and context-dependent attack vectors.  NOTE: this issue might be resultant from an integer overflow in the fast_composite_scaled_bilinear function in pixman-inlines.h, which triggers an infinite loop.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:redhat:enterprise_virtualization:3.0:*:*:*:*:*:*:*", "published": "2013-01-31T23:55:01.037", "last_modified": "2024-02-15T21:08:00.480"}], "cwe_info": {"cwe_id": "1325", "name": "Improperly Controlled Sequential Memory Allocation", "weakness_abstraction": "Base", "status": "Incomplete", "description": "The product manages a group of objects or resources and performs a separate memory allocation for each object, but it does not properly limit the total amount of memory that is consumed by all of the combined objects.", "extended_description": "While the product might limit the amount of memory that is allocated in a single operation for a single object (such as a malloc of an array), if an attacker can cause multiple objects to be allocated in separate operations, then this might cause higher total memory consumption than the developer intended, leading to a denial of service.", "related_weaknesses": "::NATURE:ChildOf:CWE ID:770:VIEW ID:1000:ORDINAL:Primary::NATURE:PeerOf:CWE ID:789:VIEW ID:1000:ORDINAL:Primary::NATURE:CanPrecede:CWE ID:476:VIEW ID:1000::", "weakness_ordinalities": "::ORDINALITY:Primary::", "applicable_platforms": "::LANGUAGE NAME:C:LANGUAGE PREVALENCE:Undetermined::LANGUAGE NAME:C++:LANGUAGE PREVALENCE:Undetermined::LANGUAGE CLASS:Language-Independent:LANGUAGE PREVALENCE:Undetermined::", "background_details": "", "alternate_terms": "::TERM:Stack Exhaustion:DESCRIPTION:When a weakness allocates excessive memory on the stack, it is often described as stack exhaustion, which is a technical impact of the weakness. This technical impact is often encountered as a consequence of CWE-789 and/or CWE-1325.::", "modes_of_introduction": "::PHASE:Implementation::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Availability:IMPACT:DoS: Resource Consumption (Memory):NOTE:Not controlling memory allocation can result in a request for too much system memory, possibly leading to a crash of the application due to out-of-memory conditions, or the consumption of a large amount of memory on the system.::", "detection_methods": "", "potential_mitigations": "::PHASE:Implementation:DESCRIPTION:Ensure multiple allocations of the same kind of object are properly tracked - possibly across multiple sessions, requests, or messages. Define an appropriate strategy for handling requests that exceed the limit, and consider supporting a configuration option so that the administrator can extend the amount of memory to be used if necessary.::PHASE:Operation:DESCRIPTION:Run the program using system-provided resource limits for memory. This might still cause the program to crash or exit, but the impact to the rest of the system will be minimized.::", "observed_examples": "::REFERENCE:CVE-2020-36049:DESCRIPTION:JavaScript-based packet decoder uses concatenation of many small strings, causing out-of-memory (OOM) condition:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-36049::REFERENCE:CVE-2019-20176:DESCRIPTION:Product allocates a new buffer on the stack for each file in a directory, allowing stack exhaustion:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-20176::REFERENCE:CVE-2013-1591:DESCRIPTION:Chain: an integer overflow (CWE-190) in the image size calculation causes an infinite loop (CWE-835) which sequentially allocates buffers without limits (CWE-1325) until the stack is full.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2013-1591::", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "", "related_attack_patterns": "::130::", "notes": ""}}]}, {"capec_id": "CAPEC-125", "c_findings": [{"cwe": "CWE-404", "cves": [{"id": "CVE-1999-1127", "score": ["V31", 7.5, "HIGH"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "PARTIAL", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "Windows NT 4.0 does not properly shut down invalid named pipe RPC connections, which allows remote attackers to cause a denial of service (resource exhaustion) via a series of connections containing malformed data, aka the \"Named Pipes Over RPC\" vulnerability.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:o:microsoft:windows_nt:4.0:-:*:*:enterprise:*:*:*", "published": "1999-12-31T05:00:00.000", "last_modified": "2024-02-08T20:35:19.420"}, {"id": "CVE-2001-0830", "score": ["V31", 7.5, "HIGH"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "PARTIAL", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "6tunnel 0.08 and earlier does not properly close sockets that were initiated by a client, which allows remote attackers to cause a denial of service (resource exhaustion) by repeatedly connecting to and disconnecting from the server.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:6tunnel_project:6tunnel:*:*:*:*:*:*:*:*", "published": "2001-12-06T05:00:00.000", "last_modified": "2024-02-09T02:52:21.457"}, {"id": "CVE-2002-1372", "score": ["V31", 7.5, "HIGH"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "PARTIAL", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "Common Unix Printing System (CUPS) 1.1.14 through 1.1.17 does not properly check the return values of various file and socket operations, which could allow a remote attacker to cause a denial of service (resource exhaustion) by causing file descriptors to be assigned and not released, as demonstrated by fanta.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:apple:cups:*:*:*:*:*:*:*:*", "published": "2002-12-26T05:00:00.000", "last_modified": "2024-01-21T01:39:35.663"}], "cwe_info": {"cwe_id": "404", "name": "Improper Resource Shutdown or Release", "weakness_abstraction": "Class", "status": "Draft", "description": "The program does not release or incorrectly releases a resource before it is made available for re-use.", "extended_description": "When a resource is created or allocated, the developer is responsible for properly releasing the resource as well as accounting for all potential paths of expiration or invalidation, such as a set period of time or revocation.", "related_weaknesses": "::NATURE:ChildOf:CWE ID:664:VIEW ID:1000:ORDINAL:Primary::NATURE:PeerOf:CWE ID:405:VIEW ID:1000::NATURE:CanPrecede:CWE ID:619:VIEW ID:1000::", "weakness_ordinalities": "::ORDINALITY:Primary:DESCRIPTION:Improper release or shutdown of resources can be primary to resource exhaustion, performance, and information confidentiality problems to name a few.::ORDINALITY:Resultant:DESCRIPTION:Improper release or shutdown of resources can be resultant from improper error handling or insufficient resource tracking.::", "applicable_platforms": "::LANGUAGE CLASS:Language-Independent:LANGUAGE PREVALENCE:Undetermined::", "background_details": "", "alternate_terms": "", "modes_of_introduction": "::PHASE:Architecture and Design::PHASE:Implementation::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Availability:SCOPE:Other:IMPACT:DoS: Resource Consumption (Other):IMPACT:Varies by Context:NOTE:Most unreleased resource issues result in general software reliability problems, but if an attacker can intentionally trigger a resource leak, the attacker might be able to launch a denial of service attack by depleting the resource pool.::SCOPE:Confidentiality:IMPACT:Read Application Data:NOTE:When a resource containing sensitive information is not correctly shutdown, it may expose the sensitive data in a subsequent allocation.::", "detection_methods": "::METHOD:Automated Dynamic Analysis:DESCRIPTION:This weakness can be detected using dynamic tools and techniques that interact with the software using large test suites with many diverse inputs, such as fuzz testing (fuzzing), robustness testing, and fault injection. The software's operation may slow down, but it should not become unstable, crash, or generate incorrect results. Resource clean up errors might be detected with a stress-test by calling the software simultaneously from a large number of threads or processes, and look for evidence of any unexpected behavior. The software's operation may slow down, but it should not become unstable, crash, or generate incorrect results.:EFFECTIVENESS:Moderate::METHOD:Manual Dynamic Analysis:DESCRIPTION:Identify error conditions that are not likely to occur during normal usage and trigger them. For example, run the program under low memory conditions, run with insufficient privileges or permissions, interrupt a transaction before it is completed, or disable connectivity to basic network services such as DNS. Monitor the software for any unexpected behavior. If you trigger an unhandled exception or similar error that was discovered and handled by the application's environment, it may still indicate unexpected conditions that were not handled by the application itself.::", "potential_mitigations": "::PHASE:Requirements:STRATEGY:Language Selection:DESCRIPTION:Use a language that does not allow this weakness to occur or provides constructs that make this weakness easier to avoid. For example, languages such as Java, Ruby, and Lisp perform automatic garbage collection that releases memory for objects that have been deallocated.::PHASE:Implementation:DESCRIPTION:It is good practice to be responsible for freeing all resources you allocate and to be consistent with how and where you free memory in a function. If you allocate memory that you intend to free upon completion of the function, you must be sure to free the memory at all exit points for that function including error conditions.::PHASE:Implementation:DESCRIPTION:Memory should be allocated/freed using matching functions such as malloc/free, new/delete, and new[]/delete[].::PHASE:Implementation:DESCRIPTION:When releasing a complex object or structure, ensure that you properly dispose of all of its member components, not just the object itself.::", "observed_examples": "::REFERENCE:CVE-1999-1127:DESCRIPTION:Does not shut down named pipe connections if malformed data is sent.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-1999-1127::REFERENCE:CVE-2001-0830:DESCRIPTION:Sockets not properly closed when attacker repeatedly connects and disconnects from server.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2001-0830::REFERENCE:CVE-2002-1372:DESCRIPTION:Return values of file/socket operations not checked, allowing resultant consumption of file descriptors.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2002-1372::", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "::TAXONOMY NAME:PLOVER:ENTRY NAME:Improper resource shutdown or release::TAXONOMY NAME:7 Pernicious Kingdoms:ENTRY NAME:Unreleased Resource::TAXONOMY NAME:OWASP Top Ten 2004:ENTRY ID:A9:ENTRY NAME:Denial of Service:MAPPING FIT:CWE More Specific::TAXONOMY NAME:CERT C Secure Coding:ENTRY ID:FIO42-C:ENTRY NAME:Close files when they are no longer needed:MAPPING FIT:CWE More Abstract::TAXONOMY NAME:CERT C Secure Coding:ENTRY ID:MEM31-C:ENTRY NAME:Free dynamically allocated memory when no longer needed:MAPPING FIT:CWE More Abstract::TAXONOMY NAME:The CERT Oracle Secure Coding Standard for Java (2011):ENTRY ID:FIO04-J:ENTRY NAME:Release resources when they are no longer needed::TAXONOMY NAME:Software Fault Patterns:ENTRY ID:SFP14:ENTRY NAME:Failure to release resource::", "related_attack_patterns": "::125::130::131::494::495::496::666::", "notes": "::TYPE:Relationship:NOTE:Overlaps memory leaks, asymmetric resource consumption, malformed input errors.::"}}, {"cwe": "CWE-770", "cves": [{"id": "CVE-2009-4017", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "PARTIAL", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "PHP before 5.2.12 and 5.3.x before 5.3.1 does not restrict the number of temporary files created when handling a multipart/form-data POST request, which allows remote attackers to cause a denial of service (resource exhaustion), and makes it easier for remote attackers to exploit local file inclusion vulnerabilities, via multiple requests, related to lack of support for the max_file_uploads directive.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:php:php:*:*:*:*:*:*:*:*", "published": "2009-11-24T00:30:00.500", "last_modified": "2024-02-15T21:16:16.510"}, {"id": "CVE-2009-2726", "score": ["V2", 7.8, "HIGH"], "v2_score": 7.8, "v2_exploitability_score": 10.0, "v2_impact_score": 6.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:N/A:C", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:N/A:C", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "COMPLETE", "baseScore": 7.8}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "The SIP channel driver in Asterisk Open Source 1.2.x before 1.2.34, 1.4.x before 1.4.26.1, 1.6.0.x before 1.6.0.12, and 1.6.1.x before 1.6.1.4; Asterisk Business Edition A.x.x, B.x.x before B.2.5.9, C.2.x before C.2.4.1, and C.3.x before C.3.1; and Asterisk Appliance s800i 1.2.x before 1.3.0.3 does not use a maximum width when invoking sscanf style functions, which allows remote attackers to cause a denial of service (stack memory consumption) via SIP packets containing large sequences of ASCII decimal characters, as demonstrated via vectors related to (1) the CSeq value in a SIP header, (2) large Content-Length value, and (3) SDP.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:digium:asterisk:*:*:business:*:*:*:*:*", "published": "2009-08-12T10:30:01.110", "last_modified": "2024-02-15T21:05:21.457"}, {"id": "CVE-2009-2540", "score": ["V2", 4.3, "MEDIUM"], "v2_score": 4.3, "v2_exploitability_score": 8.6, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:M/Au:N/C:N/I:N/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:M/Au:N/C:N/I:N/A:P", "accessVector": "NETWORK", "accessComplexity": "MEDIUM", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "PARTIAL", "baseScore": 4.3}, "baseSeverity": "MEDIUM", "exploitabilityScore": 8.6, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": true}], "description": "Opera, possibly 9.64 and earlier, allows remote attackers to cause a denial of service (memory consumption) via a large integer value for the length property of a Select object, a related issue to CVE-2009-1692.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:opera:opera_browser:*:*:*:*:*:*:*:*", "published": "2009-07-20T18:30:01.233", "last_modified": "2024-02-02T03:07:21.203"}, {"id": "CVE-2009-2054", "score": ["V2", 7.8, "HIGH"], "v2_score": 7.8, "v2_exploitability_score": 10.0, "v2_impact_score": 6.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:N/A:C", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:N/A:C", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "COMPLETE", "baseScore": 7.8}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "Cisco Unified Communications Manager (aka CUCM, formerly CallManager) 4.x, 5.x before 5.1(3g), 6.x before 6.1(4), 7.0 before 7.0(2a)su1, and 7.1 before 7.1(2a)su1 allows remote attackers to cause a denial of service (file-descriptor exhaustion and SIP outage) via a flood of TCP packets, aka Bug ID CSCsx23689.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:cisco:unified_communications_manager:*:*:*:*:*:*:*:*", "published": "2009-08-27T17:00:01.047", "last_modified": "2024-02-15T21:15:40.407"}, {"id": "CVE-2008-5180", "score": ["V31", 5.3, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "PARTIAL", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "Microsoft Communicator, and Communicator in Microsoft Office 2010 beta, allows remote attackers to cause a denial of service (memory consumption) via a large number of SIP INVITE requests, which trigger the creation of many sessions.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:microsoft:office_communicator:*:*:*:*:*:*:*:*", "published": "2008-11-20T15:30:00.390", "last_modified": "2024-10-15T15:35:07.977"}, {"id": "CVE-2008-1700", "score": ["V2", 7.1, "HIGH"], "v2_score": 7.1, "v2_exploitability_score": 8.6, "v2_impact_score": 6.9, "v2_vector": "AV:N/AC:M/Au:N/C:N/I:N/A:C", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:M/Au:N/C:N/I:N/A:C", "accessVector": "NETWORK", "accessComplexity": "MEDIUM", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "COMPLETE", "baseScore": 7.1}, "baseSeverity": "HIGH", "exploitabilityScore": 8.6, "impactScore": 6.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": true}], "description": "The Web TransferCtrl Class 8,2,1,4 (iManFile.cab), as used in WorkSite Web 8.2 before SP1 P2, allows remote attackers to cause a denial of service (memory consumption) via a large number of SendNrlLink directives, which opens a separate window for each directive.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:interwoven:worksite_web:*:*:*:*:*:*:*:*", "published": "2008-04-08T18:05:00.000", "last_modified": "2024-02-02T03:07:30.643"}, {"id": "CVE-2005-4650", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "PARTIAL", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "Joomla! 1.03 does not restrict the number of \"Search\" Mambots, which allows remote attackers to cause a denial of service (resource consumption) via a large number of Search Mambots.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:joomla:joomla\\!:1.0.3:*:*:*:*:*:*:*", "published": "2005-12-31T05:00:00.000", "last_modified": "2024-02-02T03:07:38.527"}, {"id": "CVE-2020-15100", "score": ["V31", 3.3, "LOW"], "v2_score": 2.1, "v2_exploitability_score": 3.9, "v2_impact_score": 2.9, "v2_vector": "AV:L/AC:L/Au:N/C:N/I:N/A:P", "access_vector": "LOCAL", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:L/AC:L/Au:N/C:N/I:N/A:P", "accessVector": "LOCAL", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "PARTIAL", "baseScore": 2.1}, "baseSeverity": "LOW", "exploitabilityScore": 3.9, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "In freewvs before 0.1.1, a user could create a large file that freewvs will try to read, which will terminate a scan process. This has been patched in 0.1.1.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:schokokeks:freewvs:*:*:*:*:*:*:*:*", "published": "2020-07-14T20:15:11.427", "last_modified": "2021-11-18T18:05:20.650"}], "cwe_info": {"cwe_id": "770", "name": "Allocation of Resources Without Limits or Throttling", "weakness_abstraction": "Base", "status": "Incomplete", "description": "The software allocates a reusable resource or group of resources on behalf of an actor without imposing any restrictions on the size or number of resources that can be allocated, in violation of the intended security policy for that actor.", "extended_description": "Code frequently has to work with limited resources, so programmers must be careful to ensure that resources are not consumed too quickly, or too easily. Without use of quotas, resource limits, or other protection mechanisms, it can be easy for an attacker to consume many resources by rapidly making many requests, or causing larger resources to be used than is needed. When too many resources are allocated, or if a single resource is too large, then it can prevent the code from working correctly, possibly leading to a denial of service.", "related_weaknesses": "::NATURE:ChildOf:CWE ID:400:VIEW ID:1000:ORDINAL:Primary::NATURE:ChildOf:CWE ID:665:VIEW ID:1000::NATURE:ChildOf:CWE ID:400:VIEW ID:1003:ORDINAL:Primary::", "weakness_ordinalities": "", "applicable_platforms": "::LANGUAGE CLASS:Language-Independent:LANGUAGE PREVALENCE:Often::", "background_details": "", "alternate_terms": "", "modes_of_introduction": "::PHASE:Architecture and Design:NOTE:OMISSION: This weakness is caused by missing a security tactic during the architecture and design phase.::PHASE:Implementation::PHASE:Operation::PHASE:System Configuration::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Availability:IMPACT:DoS: Resource Consumption (CPU):IMPACT:DoS: Resource Consumption (Memory):IMPACT:DoS: Resource Consumption (Other):NOTE:When allocating resources without limits, an attacker could prevent other systems, applications, or processes from accessing the same type of resource.::", "detection_methods": "::METHOD:Manual Static Analysis:DESCRIPTION:Manual static analysis can be useful for finding this weakness, but it might not achieve desired code coverage within limited time constraints. If denial-of-service is not considered a significant risk, or if there is strong emphasis on consequences such as code execution, then manual analysis may not focus on this weakness at all.::METHOD:Fuzzing:DESCRIPTION:While fuzzing is typically geared toward finding low-level implementation bugs, it can inadvertently find uncontrolled resource allocation problems. This can occur when the fuzzer generates a large number of test cases but does not restart the targeted software in between test cases. If an individual test case produces a crash, but it does not do so reliably, then an inability to limit resource allocation may be the cause. When the allocation is directly affected by numeric inputs, then fuzzing may produce indications of this weakness.:EFFECTIVENESS:Opportunistic::METHOD:Automated Dynamic Analysis:DESCRIPTION:Certain automated dynamic analysis techniques may be effective in producing side effects of uncontrolled resource allocation problems, especially with resources such as processes, memory, and connections. The technique may involve generating a large number of requests to the software within a short time frame. Manual analysis is likely required to interpret the results.::METHOD:Automated Static Analysis:DESCRIPTION:Specialized configuration or tuning may be required to train automated tools to recognize this weakness. Automated static analysis typically has limited utility in recognizing unlimited allocation problems, except for the missing release of program-independent system resources such as files, sockets, and processes, or unchecked arguments to memory. For system resources, automated static analysis may be able to detect circumstances in which resources are not released after they have expired, or if too much of a resource is requested at once, as can occur with memory. Automated analysis of configuration files may be able to detect settings that do not specify a maximum value. Automated static analysis tools will not be appropriate for detecting exhaustion of custom resources, such as an intended security policy in which a bulletin board user is only allowed to make a limited number of posts per day.::", "potential_mitigations": "::PHASE:Requirements:DESCRIPTION:Clearly specify the minimum and maximum expectations for capabilities, and dictate which behaviors are acceptable when resource allocation reaches limits.::PHASE:Architecture and Design:DESCRIPTION:Limit the amount of resources that are accessible to unprivileged users. Set per-user limits for resources. Allow the system administrator to define these limits. Be careful to avoid CWE-410.::PHASE:Architecture and Design:DESCRIPTION:Design throttling mechanisms into the system architecture. The best protection is to limit the amount of resources that an unauthorized user can cause to be expended. A strong authentication and access control model will help prevent such attacks from occurring in the first place, and it will help the administrator to identify who is committing the abuse. The login application should be protected against DoS attacks as much as possible. Limiting the database access, perhaps by caching result sets, can help minimize the resources expended. To further limit the potential for a DoS attack, consider tracking the rate of requests received from users and blocking requests that exceed a defined rate threshold.::PHASE:Implementation:STRATEGY:Input Validation:DESCRIPTION:Assume all input is malicious. Use an accept known good input validation strategy, i.e., use a list of acceptable inputs that strictly conform to specifications. Reject any input that does not strictly conform to specifications, or transform it into something that does. When performing input validation, consider all potentially relevant properties, including length, type of input, the full range of acceptable values, missing or extra inputs, syntax, consistency across related fields, and conformance to business rules. As an example of business rule logic, boat may be syntactically valid because it only contains alphanumeric characters, but it is not valid if the input is only expected to contain colors such as red or blue. Do not rely exclusively on looking for malicious or malformed inputs. This is likely to miss at least one undesirable input, especially if the code's environment changes. This can give attackers enough room to bypass the intended validation. However, denylists can be useful for detecting potential attacks or determining which inputs are so malformed that they should be rejected outright.::PHASE:Architecture and Design:DESCRIPTION:For any security checks that are performed on the client side, ensure that these checks are duplicated on the server side, in order to avoid CWE-602. Attackers can bypass the client-side checks by modifying values after the checks have been performed, or by changing the client to remove the client-side checks entirely. Then, these modified values would be submitted to the server.::PHASE:Architecture and Design:DESCRIPTION:Mitigation of resource exhaustion attacks requires that the target system either: recognizes the attack and denies that user further access for a given amount of time, typically by using increasing time delays uniformly throttles all requests in order to make it more difficult to consume resources more quickly than they can again be freed. The first of these solutions is an issue in itself though, since it may allow attackers to prevent the use of the system by a particular valid user. If the attacker impersonates the valid user, they may be able to prevent the user from accessing the server in question. The second solution can be difficult to effectively institute -- and even when properly done, it does not provide a full solution. It simply requires more resources on the part of the attacker.::PHASE:Architecture and Design:DESCRIPTION:Ensure that protocols have specific limits of scale placed on them.::PHASE:Architecture and Design Implementation:DESCRIPTION:If the program must fail, ensure that it fails gracefully (fails closed). There may be a temptation to simply let the program fail poorly in cases such as low memory conditions, but an attacker may be able to assert control before the software has fully exited. Alternately, an uncontrolled failure could cause cascading problems with other downstream components; for example, the program could send a signal to a downstream process so the process immediately knows that a problem has occurred and has a better chance of recovery. Ensure that all failures in resource allocation place the system into a safe posture.::PHASE:Operation Architecture and Design:STRATEGY:Resource Limitation:DESCRIPTION:Use resource-limiting settings provided by the operating system or environment. For example, when managing system resources in POSIX, setrlimit() can be used to set limits for certain types of resources, and getrlimit() can determine how many resources are available. However, these functions are not available on all operating systems. When the current levels get close to the maximum that is defined for the application (see CWE-770), then limit the allocation of further resources to privileged users; alternately, begin releasing resources for less-privileged users. While this mitigation may protect the system from attack, it will not necessarily stop attackers from adversely impacting other users. Ensure that the application performs the appropriate error checks and error handling in case resources become unavailable (CWE-703).::", "observed_examples": "::REFERENCE:CVE-2009-4017:DESCRIPTION:Language interpreter does not restrict the number of temporary files being created when handling a MIME request with a large number of parts..:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2009-4017::REFERENCE:CVE-2009-2726:DESCRIPTION:Driver does not use a maximum width when invoking sscanf style functions, causing stack consumption.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2009-2726::REFERENCE:CVE-2009-2540:DESCRIPTION:Large integer value for a length property in an object causes a large amount of memory allocation.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2009-2540::REFERENCE:CVE-2009-2054:DESCRIPTION:Product allows exhaustion of file descriptors when processing a large number of TCP packets.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2009-2054::REFERENCE:CVE-2008-5180:DESCRIPTION:Communication product allows memory consumption with a large number of SIP requests, which cause many sessions to be created.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2008-5180::REFERENCE:CVE-2008-1700:DESCRIPTION:Product allows attackers to cause a denial of service via a large number of directives, each of which opens a separate window.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2008-1700::REFERENCE:CVE-2005-4650:DESCRIPTION:CMS does not restrict the number of searches that can occur simultaneously, leading to resource exhaustion.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2005-4650::REFERENCE:CVE-2020-15100:DESCRIPTION:web application scanner attempts to read an excessively large file created by a user, causing process termination:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-15100::", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "::TAXONOMY NAME:The CERT Oracle Secure Coding Standard for Java (2011):ENTRY ID:FIO04-J:ENTRY NAME:Close resources when they are no longer needed::TAXONOMY NAME:The CERT Oracle Secure Coding Standard for Java (2011):ENTRY ID:SER12-J:ENTRY NAME:Avoid memory and resource leaks during serialization::TAXONOMY NAME:The CERT Oracle Secure Coding Standard for Java (2011):ENTRY ID:MSC05-J:ENTRY NAME:Do not exhaust heap space::", "related_attack_patterns": "::125::130::147::197::229::230::231::469::482::486::487::488::489::490::491::493::494::495::496::528::", "notes": "::TYPE:Relationship:NOTE:This entry is different from uncontrolled resource consumption (CWE-400) in that there are other weaknesses that are related to inability to control resource consumption, such as holding on to a resource too long after use, or not correctly keeping track of active resources so that they can be managed and released when they are finished (CWE-771).::TYPE:Theoretical:NOTE:Vulnerability theory is largely about how behaviors and resources interact. Resource exhaustion can be regarded as either a consequence or an attack, depending on the perspective. This entry is an attempt to reflect one of the underlying weaknesses that enable these attacks (or consequences) to take place.::"}}]}]}, {"technique_id": "T1078", "t_findings": [{"capec_id": "CAPEC-560", "c_findings": [{"cwe": "CWE-522", "cves": [{"id": "CVE-2007-0681", "score": ["V31", 9.8, "CRITICAL"], "v2_score": 7.5, "v2_exploitability_score": 10.0, "v2_impact_score": 6.4, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 7.5}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": true, "userInteractionRequired": false}], "description": "profile.php in ExtCalendar 2 and earlier allows remote attackers to change the passwords of arbitrary users without providing the original password, and possibly perform other unauthorized actions, via modified values to register.php.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:extcalendar_project:extcalendar:*:*:*:*:*:*:*:*", "published": "2007-02-03T01:28:00.000", "last_modified": "2024-02-09T03:13:40.213"}, {"id": "CVE-2000-0944", "score": ["V31", 9.8, "CRITICAL"], "v2_score": 7.5, "v2_exploitability_score": 10.0, "v2_impact_score": 6.4, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 7.5}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": true, "userInteractionRequired": false}], "description": "CGI Script Center News Update 1.1 does not properly validate the original news administration password during a password change operation, which allows remote attackers to modify the password without knowing the original password.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:cgi:script_center_news_update:1.1:*:*:*:*:*:*:*", "published": "2000-12-19T05:00:00.000", "last_modified": "2024-02-09T03:15:18.653"}, {"id": "CVE-2005-3435", "score": ["V31", 9.8, "CRITICAL"], "v2_score": 7.5, "v2_exploitability_score": 10.0, "v2_impact_score": 6.4, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 7.5}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": true, "userInteractionRequired": false}], "description": "admin_news.php in Archilles Newsworld up to 1.3.0 allows attackers to bypass authentication by obtaining the password hash for another user, for example through another Newsworld vulnerability, and specifying the hash in the pwd argument.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:archilles:newsworld:*:*:*:*:*:*:*:*", "published": "2005-11-02T11:02:00.000", "last_modified": "2024-02-09T03:13:36.147"}, {"id": "CVE-2005-0408", "score": ["V31", 9.8, "CRITICAL"], "v2_score": 7.5, "v2_exploitability_score": 10.0, "v2_impact_score": 6.4, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 7.5}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": true, "userInteractionRequired": false}], "description": "CitrusDB 0.3.6 and earlier generates easily predictable MD5 hashes of the user name for the id_hash cookie, which allows remote attackers to bypass authentication and gain privileges by calculating the MD5 checksum of the user name combined with the \"boogaadeeboo\" string, which is hard-coded in the $hidden_hash variable.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:citrusdb:citrusdb:*:*:*:*:*:*:*:*", "published": "2005-02-14T05:00:00.000", "last_modified": "2024-02-09T03:13:25.890"}], "cwe_info": {"cwe_id": "522", "name": "Insufficiently Protected Credentials", "weakness_abstraction": "Class", "status": "Incomplete", "description": "The product transmits or stores authentication credentials, but it uses an insecure method that is susceptible to unauthorized interception and/or retrieval.", "extended_description": "", "related_weaknesses": "::NATURE:ChildOf:CWE ID:287:VIEW ID:1000:ORDINAL:Primary::NATURE:ChildOf:CWE ID:287:VIEW ID:1003:ORDINAL:Primary::NATURE:ChildOf:CWE ID:668:VIEW ID:1000::", "weakness_ordinalities": "", "applicable_platforms": "", "background_details": "", "alternate_terms": "", "modes_of_introduction": "::PHASE:Architecture and Design:NOTE:COMMISSION: This weakness refers to an incorrect design related to an architectural security tactic.::PHASE:Implementation::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Access Control:IMPACT:Gain Privileges or Assume Identity:NOTE:An attacker could gain access to user accounts and access sensitive data used by the user accounts.::", "detection_methods": "", "potential_mitigations": "::PHASE:Architecture and Design:DESCRIPTION:Use an appropriate security mechanism to protect the credentials.::PHASE:Architecture and Design:DESCRIPTION:Make appropriate use of cryptography to protect the credentials.::PHASE:Implementation:DESCRIPTION:Use industry standards to protect the credentials (e.g. LDAP, keystore, etc.).::", "observed_examples": "::REFERENCE:CVE-2007-0681:DESCRIPTION:Web app allows remote attackers to change the passwords of arbitrary users without providing the original password, and possibly perform other unauthorized actions.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2007-0681::REFERENCE:CVE-2000-0944:DESCRIPTION:Web application password change utility doesn't check the original password.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2000-0944::REFERENCE:CVE-2005-3435:DESCRIPTION:product authentication succeeds if user-provided MD5 hash matches the hash in its database; this can be subjected to replay attacks.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2005-3435::REFERENCE:CVE-2005-0408:DESCRIPTION:chain: product generates predictable MD5 hashes using a constant value combined with username, allowing authentication bypass.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2005-0408::", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "::TAXONOMY NAME:OWASP Top Ten 2007:ENTRY ID:A7:ENTRY NAME:Broken Authentication and Session Management:MAPPING FIT:CWE More Specific::TAXONOMY NAME:OWASP Top Ten 2004:ENTRY ID:A3:ENTRY NAME:Broken Authentication and Session Management:MAPPING FIT:CWE More Specific::", "related_attack_patterns": "::102::474::50::509::551::555::560::561::600::644::645::652::653::", "notes": ""}}, {"cwe": "CWE-307", "cves": [{"id": "CVE-1999-1152", "score": ["V31", 7.5, "HIGH"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "Compaq/Microcom 6000 Access Integrator does not disconnect a client after a certain number of failed login attempts, which allows remote attackers to guess usernames or passwords via a brute force attack.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:o:compaq:microcom_6000_firmware:-:*:*:*:*:*:*:*", "published": "1998-06-03T04:00:00.000", "last_modified": "2024-02-09T03:15:08.037"}, {"id": "CVE-2001-1291", "score": ["V31", 9.8, "CRITICAL"], "v2_score": 10.0, "v2_exploitability_score": 10.0, "v2_impact_score": 10.0, "v2_vector": "AV:N/AC:L/Au:N/C:C/I:C/A:C", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:C/I:C/A:C", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "COMPLETE", "integrityImpact": "COMPLETE", "availabilityImpact": "COMPLETE", "baseScore": 10.0}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 10.0, "acInsufInfo": false, "obtainAllPrivilege": true, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "The telnet server for 3Com hardware such as PS40 SuperStack II does not delay or disconnect remote attackers who provide an incorrect username or password, which makes it easier to break into the server via brute force password guessing.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:o:3com:superstack_ii_ps_hub_40_firmware:-:*:*:*:*:*:*:*", "published": "2001-07-12T04:00:00.000", "last_modified": "2024-02-09T03:14:12.003"}, {"id": "CVE-2001-0395", "score": ["V31", 9.8, "CRITICAL"], "v2_score": 7.5, "v2_exploitability_score": 10.0, "v2_impact_score": 6.4, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 7.5}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "Lightwave ConsoleServer 3200 does not disconnect users after unsuccessful login attempts, which could allow remote attackers to conduct brute force password guessing.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:o:lightwavemo:consoleserver_3200_firmware:-:*:*:*:*:*:*:*", "published": "2001-07-02T04:00:00.000", "last_modified": "2024-02-09T03:14:07.077"}, {"id": "CVE-2001-1339", "score": ["V31", 9.8, "CRITICAL"], "v2_score": 7.5, "v2_exploitability_score": 10.0, "v2_impact_score": 6.4, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 7.5}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": true, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "Beck IPC GmbH IPC@CHIP telnet service does not delay or disconnect users from the service when bad passwords are entered, which makes it easier for remote attackers to conduct brute force password guessing attacks.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:o:anybus:ipc\\@chip_firmware:-:*:*:*:*:*:*:*", "published": "2001-05-24T04:00:00.000", "last_modified": "2024-02-09T03:15:26.757"}, {"id": "CVE-2002-0628", "score": ["V31", 7.5, "HIGH"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "The Telnet service for Polycom ViewStation before 7.2.4 does not restrict the number of failed login attempts, which makes it easier for remote attackers to guess usernames and passwords via a brute force attack.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:h:polycom:viewstation_128:6.5.1:*:*:*:*:*:*:*", "published": "2003-01-07T05:00:00.000", "last_modified": "2024-02-09T03:14:16.373"}, {"id": "CVE-1999-1324", "score": ["V31", 9.8, "CRITICAL"], "v2_score": 7.5, "v2_exploitability_score": 10.0, "v2_impact_score": 6.4, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 7.5}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "VAXstations running Open VMS 5.3 through 5.5-2 with VMS DECwindows or MOTIF do not properly disable access to user accounts that exceed the break-in limit threshold for failed login attempts, which makes it easier for attackers to conduct brute force password guessing.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:o:hp:openvms_vax:*:*:*:*:*:*:*:*", "published": "1999-12-31T05:00:00.000", "last_modified": "2024-02-09T03:15:13.613"}], "cwe_info": {"cwe_id": "307", "name": "Improper Restriction of Excessive Authentication Attempts", "weakness_abstraction": "Base", "status": "Draft", "description": "The software does not implement sufficient measures to prevent multiple failed authentication attempts within in a short time frame, making it more susceptible to brute force attacks.", "extended_description": "", "related_weaknesses": "::NATURE:ChildOf:CWE ID:287:VIEW ID:1000:ORDINAL:Primary::NATURE:ChildOf:CWE ID:287:VIEW ID:1003:ORDINAL:Primary::NATURE:ChildOf:CWE ID:799:VIEW ID:1000::", "weakness_ordinalities": "", "applicable_platforms": "::LANGUAGE CLASS:Language-Independent:LANGUAGE PREVALENCE:Undetermined::", "background_details": "", "alternate_terms": "", "modes_of_introduction": "::PHASE:Architecture and Design:NOTE:COMMISSION: This weakness refers to an incorrect design related to an architectural security tactic.::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Access Control:IMPACT:Bypass Protection Mechanism:NOTE:An attacker could perform an arbitrary number of authentication attempts using different passwords, and eventually gain access to the targeted account.::", "detection_methods": "::METHOD:Dynamic Analysis with Automated Results Interpretation:DESCRIPTION:According to SOAR, the following detection techniques may be useful: Highly cost effective: Web Application Scanner Web Services Scanner Database Scanners Cost effective for partial coverage: Host-based Vulnerability Scanners - Examine configuration for flaws, verifying that audit mechanisms work, ensure host configuration meets certain predefined criteria:EFFECTIVENESS:High::METHOD:Dynamic Analysis with Manual Results Interpretation:DESCRIPTION:According to SOAR, the following detection techniques may be useful: Highly cost effective: Fuzz Tester Framework-based Fuzzer Cost effective for partial coverage: Forced Path Execution:EFFECTIVENESS:High::METHOD:Manual Static Analysis - Source Code:DESCRIPTION:According to SOAR, the following detection techniques may be useful: Highly cost effective: Focused Manual Spotcheck - Focused manual analysis of source Manual Source Code Review (not inspections):EFFECTIVENESS:High::METHOD:Automated Static Analysis - Source Code:DESCRIPTION:According to SOAR, the following detection techniques may be useful: Cost effective for partial coverage: Source code Weakness Analyzer Context-configured Source Code Weakness Analyzer:EFFECTIVENESS:SOAR Partial::METHOD:Automated Static Analysis:DESCRIPTION:According to SOAR, the following detection techniques may be useful: Cost effective for partial coverage: Configuration Checker:EFFECTIVENESS:SOAR Partial::METHOD:Architecture or Design Review:DESCRIPTION:According to SOAR, the following detection techniques may be useful: Highly cost effective: Formal Methods / Correct-By-Construction Cost effective for partial coverage: Inspection (IEEE 1028 standard) (can apply to requirements, design, source code, etc.):EFFECTIVENESS:High::", "potential_mitigations": "::PHASE:Architecture and Design:DESCRIPTION:Common protection mechanisms include: Disconnecting the user after a small number of failed attempts Implementing a timeout Locking out a targeted account Requiring a computational task on the user's part.::PHASE:Architecture and Design:STRATEGY:Libraries or Frameworks:DESCRIPTION:Use a vetted library or framework that does not allow this weakness to occur or provides constructs that make this weakness easier to avoid. Consider using libraries with authentication capabilities such as OpenSSL or the ESAPI Authenticator. [REF-45]::", "observed_examples": "::REFERENCE:CVE-1999-1152:DESCRIPTION:Product does not disconnect or timeout after multiple failed logins.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-1999-1152::REFERENCE:CVE-2001-1291:DESCRIPTION:Product does not disconnect or timeout after multiple failed logins.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2001-1291::REFERENCE:CVE-2001-0395:DESCRIPTION:Product does not disconnect or timeout after multiple failed logins.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2001-0395::REFERENCE:CVE-2001-1339:DESCRIPTION:Product does not disconnect or timeout after multiple failed logins.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2001-1339::REFERENCE:CVE-2002-0628:DESCRIPTION:Product does not disconnect or timeout after multiple failed logins.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2002-0628::REFERENCE:CVE-1999-1324:DESCRIPTION:User accounts not disabled when they exceed a threshold; possibly a resultant problem.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-1999-1324::", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "::TAXONOMY NAME:PLOVER:ENTRY ID:AUTHENT.MULTFAIL:ENTRY NAME:Multiple Failed Authentication Attempts not Prevented::TAXONOMY NAME:Software Fault Patterns:ENTRY ID:SFP34:ENTRY NAME:Unrestricted authentication::", "related_attack_patterns": "::16::49::560::565::600::652::653::", "notes": ""}}, {"cwe": "CWE-308", "cves": [], "cwe_info": {"cwe_id": "308", "name": "Use of Single-factor Authentication", "weakness_abstraction": "Base", "status": "Draft", "description": "The use of single-factor authentication can lead to unnecessary risk of compromise when compared with the benefits of a dual-factor authentication scheme.", "extended_description": "While the use of multiple authentication schemes is simply piling on more complexity on top of authentication, it is inestimably valuable to have such measures of redundancy. The use of weak, reused, and common passwords is rampant on the internet. Without the added protection of multiple authentication schemes, a single mistake can result in the compromise of an account. For this reason, if multiple schemes are possible and also easy to use, they should be implemented and required.", "related_weaknesses": "::NATURE:ChildOf:CWE ID:287:VIEW ID:1000:ORDINAL:Primary::NATURE:ChildOf:CWE ID:654:VIEW ID:1000::NATURE:PeerOf:CWE ID:309:VIEW ID:1000::", "weakness_ordinalities": "", "applicable_platforms": "::LANGUAGE CLASS:Language-Independent:LANGUAGE PREVALENCE:Undetermined::", "background_details": "", "alternate_terms": "", "modes_of_introduction": "::PHASE:Architecture and Design:NOTE:COMMISSION: This weakness refers to an incorrect design related to an architectural security tactic.::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Access Control:IMPACT:Bypass Protection Mechanism:NOTE:If the secret in a single-factor authentication scheme gets compromised, full authentication is possible.::", "detection_methods": "", "potential_mitigations": "::PHASE:Architecture and Design:DESCRIPTION:Use multiple independent authentication schemes, which ensures that -- if one of the methods is compromised -- the system itself is still likely safe from compromise.::", "observed_examples": "", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "::TAXONOMY NAME:CLASP:ENTRY NAME:Using single-factor authentication::", "related_attack_patterns": "::16::49::509::55::555::560::561::565::600::644::645::652::653::70::", "notes": ""}}, {"cwe": "CWE-309", "cves": [], "cwe_info": {"cwe_id": "309", "name": "Use of Password System for Primary Authentication", "weakness_abstraction": "Base", "status": "Draft", "description": "The use of password systems as the primary means of authentication may be subject to several flaws or shortcomings, each reducing the effectiveness of the mechanism.", "extended_description": "", "related_weaknesses": "::NATURE:ChildOf:CWE ID:287:VIEW ID:1000:ORDINAL:Primary::NATURE:ChildOf:CWE ID:654:VIEW ID:1000::NATURE:PeerOf:CWE ID:308:VIEW ID:1000::", "weakness_ordinalities": "", "applicable_platforms": "::LANGUAGE CLASS:Language-Independent:LANGUAGE PREVALENCE:Undetermined::", "background_details": "::Password systems are the simplest and most ubiquitous authentication mechanisms. However, they are subject to such well known attacks,and such frequent compromise that their use in the most simple implementation is not practical.::", "alternate_terms": "", "modes_of_introduction": "::PHASE:Architecture and Design::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Access Control:IMPACT:Bypass Protection Mechanism:IMPACT:Gain Privileges or Assume Identity:NOTE:A password authentication mechanism error will almost always result in attackers being authorized as valid users.::", "detection_methods": "", "potential_mitigations": "::PHASE:Architecture and Design:DESCRIPTION:In order to protect password systems from compromise, the following should be noted: Passwords should be stored safely to prevent insider attack and to ensure that -- if a system is compromised -- the passwords are not retrievable. Due to password reuse, this information may be useful in the compromise of other systems these users work with. In order to protect these passwords, they should be stored encrypted, in a non-reversible state, such that the original text password cannot be extracted from the stored value. Password aging should be strictly enforced to ensure that passwords do not remain unchanged for long periods of time. The longer a password remains in use, the higher the probability that it has been compromised. For this reason, passwords should require refreshing periodically, and users should be informed of the risk of passwords which remain in use for too long. Password strength should be enforced intelligently. Rather than restrict passwords to specific content, or specific length, users should be encouraged to use upper and lower case letters, numbers, and symbols in their passwords. The system should also ensure that no passwords are derived from dictionary words.::PHASE:Architecture and Design:DESCRIPTION:Use a zero-knowledge password protocol, such as SRP.::PHASE:Architecture and Design:DESCRIPTION:Ensure that passwords are stored safely and are not reversible.::PHASE:Architecture and Design:DESCRIPTION:Implement password aging functionality that requires passwords be changed after a certain point.::PHASE:Architecture and Design:DESCRIPTION:Use a mechanism for determining the strength of a password and notify the user of weak password use.::PHASE:Architecture and Design:DESCRIPTION:Inform the user of why password protections are in place, how they work to protect data integrity, and why it is important to heed their warnings.::", "observed_examples": "", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "::TAXONOMY NAME:CLASP:ENTRY NAME:Using password systems::TAXONOMY NAME:OWASP Top Ten 2004:ENTRY ID:A3:ENTRY NAME:Broken Authentication and Session Management:MAPPING FIT:CWE More Specific::", "related_attack_patterns": "::16::49::509::55::555::560::561::565::600::652::653::70::", "notes": ""}}, {"cwe": "CWE-262", "cves": [], "cwe_info": {"cwe_id": "262", "name": "Not Using Password Aging", "weakness_abstraction": "Base", "status": "Draft", "description": "If no mechanism is in place for managing password aging, users will have no incentive to update passwords in a timely manner.", "extended_description": "Security experts have often recommended that users change their passwords regularly and avoid reusing passwords. Although this can be an effective mitigation, if the expiration window is too short, it can cause users to generate poor or predictable passwords. As such, it is important to discourage creating similar passwords. It is also useful to have a password aging mechanism that notifies users when passwords are considered old and requests that they replace them with new, strong passwords. Companion documentation which stresses how important this practice is can help users understand and better support this approach.", "related_weaknesses": "::NATURE:ChildOf:CWE ID:287:VIEW ID:1000:ORDINAL:Primary::NATURE:ChildOf:CWE ID:404:VIEW ID:1000::NATURE:PeerOf:CWE ID:309:VIEW ID:1000::NATURE:PeerOf:CWE ID:263:VIEW ID:1000::NATURE:PeerOf:CWE ID:324:VIEW ID:1000::", "weakness_ordinalities": "", "applicable_platforms": "::LANGUAGE CLASS:Language-Independent:LANGUAGE PREVALENCE:Undetermined::", "background_details": "", "alternate_terms": "", "modes_of_introduction": "::PHASE:Architecture and Design:NOTE:COMMISSION: This weakness refers to an incorrect design related to an architectural security tactic.::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Access Control:IMPACT:Gain Privileges or Assume Identity:NOTE:As passwords age, the probability that they are compromised grows.::", "detection_methods": "", "potential_mitigations": "::PHASE:Architecture and Design:DESCRIPTION:As part of a product's design, require users to change their passwords regularly and avoid reusing previous passwords.::", "observed_examples": "", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "::TAXONOMY NAME:CLASP:ENTRY NAME:Not allowing password aging::", "related_attack_patterns": "::16::49::509::55::555::560::561::565::600::652::653::70::", "notes": ""}}, {"cwe": "CWE-263", "cves": [], "cwe_info": {"cwe_id": "263", "name": "Password Aging with Long Expiration", "weakness_abstraction": "Base", "status": "Draft", "description": "Allowing password aging to occur unchecked can result in the possibility of diminished password integrity.", "extended_description": "Just as neglecting to include functionality for the management of password aging is dangerous, so is allowing password aging to continue unchecked. Passwords must be given a maximum life span, after which a user is required to update with a new and different password.", "related_weaknesses": "::NATURE:ChildOf:CWE ID:287:VIEW ID:1000:ORDINAL:Primary::NATURE:ChildOf:CWE ID:404:VIEW ID:1000::", "weakness_ordinalities": "", "applicable_platforms": "::LANGUAGE CLASS:Language-Independent:LANGUAGE PREVALENCE:Undetermined::", "background_details": "", "alternate_terms": "", "modes_of_introduction": "::PHASE:Architecture and Design:NOTE:COMMISSION: This weakness refers to an incorrect design related to an architectural security tactic.::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Access Control:IMPACT:Gain Privileges or Assume Identity:NOTE:As passwords age, the probability that they are compromised grows.::", "detection_methods": "", "potential_mitigations": "::PHASE:Architecture and Design:DESCRIPTION:Ensure that password aging is limited so that there is a defined maximum age for passwords and so that the user is notified several times leading up to the password expiration.::", "observed_examples": "", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "::TAXONOMY NAME:CLASP:ENTRY NAME:Allowing password aging::", "related_attack_patterns": "::16::49::509::55::555::560::561::565::600::652::653::70::", "notes": ""}}, {"cwe": "CWE-654", "cves": [], "cwe_info": {"cwe_id": "654", "name": "Reliance on a Single Factor in a Security Decision", "weakness_abstraction": "Base", "status": "Draft", "description": "A protection mechanism relies exclusively, or to a large extent, on the evaluation of a single condition or the integrity of a single object or entity in order to make a decision about granting access to restricted resources or functionality.", "extended_description": "", "related_weaknesses": "::NATURE:ChildOf:CWE ID:657:VIEW ID:1000:ORDINAL:Primary::NATURE:ChildOf:CWE ID:693:VIEW ID:1000::", "weakness_ordinalities": "::ORDINALITY:Primary::", "applicable_platforms": "::LANGUAGE CLASS:Language-Independent:LANGUAGE PREVALENCE:Undetermined::", "background_details": "", "alternate_terms": "::TERM:Separation of Privilege:DESCRIPTION:Some people and publications use the term Separation of Privilege to describe this weakness, but this term has dual meanings in current usage. While this entry is closely associated with the original definition of Separation of Privilege by Saltzer and Schroeder, others use the same term to describe poor compartmentalization (CWE-653). Because there are multiple interpretations, use of the Separation of Privilege term is discouraged.::", "modes_of_introduction": "::PHASE:Architecture and Design::PHASE:Implementation::PHASE:Operation::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Access Control:IMPACT:Gain Privileges or Assume Identity:NOTE:If the single factor is compromised (e.g. by theft or spoofing), then the integrity of the entire security mechanism can be violated with respect to the user that is identified by that factor.::SCOPE:Non-Repudiation:IMPACT:Hide Activities:NOTE:It can become difficult or impossible for the product to be able to distinguish between legitimate activities by the entity who provided the factor, versus illegitimate activities by an attacker.::", "detection_methods": "", "potential_mitigations": "::PHASE:Architecture and Design:DESCRIPTION:Use multiple simultaneous checks before granting access to critical operations or granting critical privileges. A weaker but helpful mitigation is to use several successive checks (multiple layers of security).::PHASE:Architecture and Design:DESCRIPTION:Use redundant access rules on different choke points (e.g., firewalls).::", "observed_examples": "", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "", "related_attack_patterns": "::16::274::49::55::560::565::600::652::653::70::", "notes": "::TYPE:Maintenance:NOTE:This entry is closely associated with the term Separation of Privilege. This term is used in several different ways in the industry, but they generally combine two closely related principles: compartmentalization (CWE-653) and using only one factor in a security decision (this entry). Proper compartmentalization implicitly introduces multiple factors into a security decision, but there can be cases in which multiple factors are required for authentication or other mechanisms that do not involve compartmentalization, such as performing all required checks on a submitted certificate. It is likely that CWE-653 and CWE-654 will provoke further discussion.::"}}, {"cwe": "CWE-1273", "cves": [], "cwe_info": {"cwe_id": "1273", "name": "Device Unlock Credential Sharing", "weakness_abstraction": "Base", "status": "Incomplete", "description": "The credentials necessary for unlocking a device are shared across multiple parties and may expose sensitive information.", "extended_description": "\u201cUnlocking a device\u201d often means activating certain, unadvertised, debug and manufacturer-specific capabilities of a device using sensitive credentials. Unlocking a device might be necessary for the purpose of troubleshooting device problems. For example, suppose a device contains the ability to dump the content of the full system memory by disabling the memory-protection mechanisms. Since this is a highly security-sensitive capability, this capability is \u201clocked\u201d in the production part. Unless the device gets unlocked by supplying the proper credentials the debug capabilities are not available. For cases where the chip designer, chip manufacturer (fabricator), and manufacturing and assembly testers are the all employed by the same company, the compromise of the credentials are greatly reduced. However, when the chip designer is employed by one company, the chip manufacturer is employed by another company (a foundry), and the assemblers and testers are employed by yet a third company. Since these different companies will need to perform various tests on the device to verify correct device function, they all need to share the unlock key. Unfortunately, the level of secrecy and policy might be quite different at each company, greatly increasing the risk of sensitive credentials being compromised.", "related_weaknesses": "::NATURE:ChildOf:CWE ID:200:VIEW ID:1000:ORDINAL:Primary::", "weakness_ordinalities": "", "applicable_platforms": "::LANGUAGE NAME:VHDL:LANGUAGE PREVALENCE:Undetermined::LANGUAGE NAME:Verilog:LANGUAGE PREVALENCE:Undetermined::LANGUAGE CLASS:Compiled:LANGUAGE PREVALENCE:Undetermined::OPERATING SYSTEM CLASS:OS-Independent:OPERATING SYSTEM PREVALENCE:Undetermined::ARCHITECTURE CLASS:Architecture-Independent:ARCHITECTURE PREVALENCE:Undetermined::TECHNOLOGY NAME:Other:TECHNOLOGY PREVALENCE:Undetermined::TECHNOLOGY CLASS:Technology-Independent:TECHNOLOGY PREVALENCE:Undetermined::", "background_details": "", "alternate_terms": "", "modes_of_introduction": "::PHASE:Integration::PHASE:Manufacturing::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Confidentiality:SCOPE:Integrity:SCOPE:Availability:SCOPE:Access Control:SCOPE:Accountability:SCOPE:Authentication:SCOPE:Authorization:SCOPE:Non-Repudiation:IMPACT:Modify Memory:IMPACT:Read Memory:IMPACT:Modify Files or Directories:IMPACT:Read Files or Directories:IMPACT:Modify Application Data:IMPACT:Execute Unauthorized Code or Commands:IMPACT:Gain Privileges or Assume Identity:IMPACT:Bypass Protection Mechanism:NOTE:Once unlock credentials are compromised, an attacker can use the credentials to unlock the device and gain unauthorized access to the hidden functionalities protected by those credentials.::", "detection_methods": "", "potential_mitigations": "::PHASE:Integration:DESCRIPTION:Ensure the unlock credentials are shared with the minimum number of parties and with utmost secrecy. To limit the risk associated with compromised credentials, where possible, the credentials should be part-specific.::PHASE:Manufacturing:DESCRIPTION:Ensure the unlock credentials are shared with the minimum number of parties and with utmost secrecy. To limit the risk associated with compromised credentials, where possible, the credentials should be part-specific.::", "observed_examples": "", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "", "related_attack_patterns": "::560::", "notes": "::TYPE:Maintenance:NOTE:This entry is still under development and will continue to see updates and content improvements.::"}}]}]}, {"technique_id": "T1528", "t_findings": [{"capec_id": "CAPEC-560", "c_findings": [{"cwe": "CWE-522", "cves": [{"id": "CVE-2007-0681", "score": ["V31", 9.8, "CRITICAL"], "v2_score": 7.5, "v2_exploitability_score": 10.0, "v2_impact_score": 6.4, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 7.5}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": true, "userInteractionRequired": false}], "description": "profile.php in ExtCalendar 2 and earlier allows remote attackers to change the passwords of arbitrary users without providing the original password, and possibly perform other unauthorized actions, via modified values to register.php.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:extcalendar_project:extcalendar:*:*:*:*:*:*:*:*", "published": "2007-02-03T01:28:00.000", "last_modified": "2024-02-09T03:13:40.213"}, {"id": "CVE-2000-0944", "score": ["V31", 9.8, "CRITICAL"], "v2_score": 7.5, "v2_exploitability_score": 10.0, "v2_impact_score": 6.4, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 7.5}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": true, "userInteractionRequired": false}], "description": "CGI Script Center News Update 1.1 does not properly validate the original news administration password during a password change operation, which allows remote attackers to modify the password without knowing the original password.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:cgi:script_center_news_update:1.1:*:*:*:*:*:*:*", "published": "2000-12-19T05:00:00.000", "last_modified": "2024-02-09T03:15:18.653"}, {"id": "CVE-2005-3435", "score": ["V31", 9.8, "CRITICAL"], "v2_score": 7.5, "v2_exploitability_score": 10.0, "v2_impact_score": 6.4, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 7.5}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": true, "userInteractionRequired": false}], "description": "admin_news.php in Archilles Newsworld up to 1.3.0 allows attackers to bypass authentication by obtaining the password hash for another user, for example through another Newsworld vulnerability, and specifying the hash in the pwd argument.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:archilles:newsworld:*:*:*:*:*:*:*:*", "published": "2005-11-02T11:02:00.000", "last_modified": "2024-02-09T03:13:36.147"}, {"id": "CVE-2005-0408", "score": ["V31", 9.8, "CRITICAL"], "v2_score": 7.5, "v2_exploitability_score": 10.0, "v2_impact_score": 6.4, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 7.5}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": true, "userInteractionRequired": false}], "description": "CitrusDB 0.3.6 and earlier generates easily predictable MD5 hashes of the user name for the id_hash cookie, which allows remote attackers to bypass authentication and gain privileges by calculating the MD5 checksum of the user name combined with the \"boogaadeeboo\" string, which is hard-coded in the $hidden_hash variable.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:citrusdb:citrusdb:*:*:*:*:*:*:*:*", "published": "2005-02-14T05:00:00.000", "last_modified": "2024-02-09T03:13:25.890"}], "cwe_info": {"cwe_id": "522", "name": "Insufficiently Protected Credentials", "weakness_abstraction": "Class", "status": "Incomplete", "description": "The product transmits or stores authentication credentials, but it uses an insecure method that is susceptible to unauthorized interception and/or retrieval.", "extended_description": "", "related_weaknesses": "::NATURE:ChildOf:CWE ID:287:VIEW ID:1000:ORDINAL:Primary::NATURE:ChildOf:CWE ID:287:VIEW ID:1003:ORDINAL:Primary::NATURE:ChildOf:CWE ID:668:VIEW ID:1000::", "weakness_ordinalities": "", "applicable_platforms": "", "background_details": "", "alternate_terms": "", "modes_of_introduction": "::PHASE:Architecture and Design:NOTE:COMMISSION: This weakness refers to an incorrect design related to an architectural security tactic.::PHASE:Implementation::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Access Control:IMPACT:Gain Privileges or Assume Identity:NOTE:An attacker could gain access to user accounts and access sensitive data used by the user accounts.::", "detection_methods": "", "potential_mitigations": "::PHASE:Architecture and Design:DESCRIPTION:Use an appropriate security mechanism to protect the credentials.::PHASE:Architecture and Design:DESCRIPTION:Make appropriate use of cryptography to protect the credentials.::PHASE:Implementation:DESCRIPTION:Use industry standards to protect the credentials (e.g. LDAP, keystore, etc.).::", "observed_examples": "::REFERENCE:CVE-2007-0681:DESCRIPTION:Web app allows remote attackers to change the passwords of arbitrary users without providing the original password, and possibly perform other unauthorized actions.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2007-0681::REFERENCE:CVE-2000-0944:DESCRIPTION:Web application password change utility doesn't check the original password.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2000-0944::REFERENCE:CVE-2005-3435:DESCRIPTION:product authentication succeeds if user-provided MD5 hash matches the hash in its database; this can be subjected to replay attacks.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2005-3435::REFERENCE:CVE-2005-0408:DESCRIPTION:chain: product generates predictable MD5 hashes using a constant value combined with username, allowing authentication bypass.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2005-0408::", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "::TAXONOMY NAME:OWASP Top Ten 2007:ENTRY ID:A7:ENTRY NAME:Broken Authentication and Session Management:MAPPING FIT:CWE More Specific::TAXONOMY NAME:OWASP Top Ten 2004:ENTRY ID:A3:ENTRY NAME:Broken Authentication and Session Management:MAPPING FIT:CWE More Specific::", "related_attack_patterns": "::102::474::50::509::551::555::560::561::600::644::645::652::653::", "notes": ""}}, {"cwe": "CWE-307", "cves": [{"id": "CVE-1999-1152", "score": ["V31", 7.5, "HIGH"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "Compaq/Microcom 6000 Access Integrator does not disconnect a client after a certain number of failed login attempts, which allows remote attackers to guess usernames or passwords via a brute force attack.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:o:compaq:microcom_6000_firmware:-:*:*:*:*:*:*:*", "published": "1998-06-03T04:00:00.000", "last_modified": "2024-02-09T03:15:08.037"}, {"id": "CVE-2001-1291", "score": ["V31", 9.8, "CRITICAL"], "v2_score": 10.0, "v2_exploitability_score": 10.0, "v2_impact_score": 10.0, "v2_vector": "AV:N/AC:L/Au:N/C:C/I:C/A:C", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:C/I:C/A:C", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "COMPLETE", "integrityImpact": "COMPLETE", "availabilityImpact": "COMPLETE", "baseScore": 10.0}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 10.0, "acInsufInfo": false, "obtainAllPrivilege": true, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "The telnet server for 3Com hardware such as PS40 SuperStack II does not delay or disconnect remote attackers who provide an incorrect username or password, which makes it easier to break into the server via brute force password guessing.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:o:3com:superstack_ii_ps_hub_40_firmware:-:*:*:*:*:*:*:*", "published": "2001-07-12T04:00:00.000", "last_modified": "2024-02-09T03:14:12.003"}, {"id": "CVE-2001-0395", "score": ["V31", 9.8, "CRITICAL"], "v2_score": 7.5, "v2_exploitability_score": 10.0, "v2_impact_score": 6.4, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 7.5}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "Lightwave ConsoleServer 3200 does not disconnect users after unsuccessful login attempts, which could allow remote attackers to conduct brute force password guessing.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:o:lightwavemo:consoleserver_3200_firmware:-:*:*:*:*:*:*:*", "published": "2001-07-02T04:00:00.000", "last_modified": "2024-02-09T03:14:07.077"}, {"id": "CVE-2001-1339", "score": ["V31", 9.8, "CRITICAL"], "v2_score": 7.5, "v2_exploitability_score": 10.0, "v2_impact_score": 6.4, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 7.5}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": true, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "Beck IPC GmbH IPC@CHIP telnet service does not delay or disconnect users from the service when bad passwords are entered, which makes it easier for remote attackers to conduct brute force password guessing attacks.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:o:anybus:ipc\\@chip_firmware:-:*:*:*:*:*:*:*", "published": "2001-05-24T04:00:00.000", "last_modified": "2024-02-09T03:15:26.757"}, {"id": "CVE-2002-0628", "score": ["V31", 7.5, "HIGH"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "The Telnet service for Polycom ViewStation before 7.2.4 does not restrict the number of failed login attempts, which makes it easier for remote attackers to guess usernames and passwords via a brute force attack.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:h:polycom:viewstation_128:6.5.1:*:*:*:*:*:*:*", "published": "2003-01-07T05:00:00.000", "last_modified": "2024-02-09T03:14:16.373"}, {"id": "CVE-1999-1324", "score": ["V31", 9.8, "CRITICAL"], "v2_score": 7.5, "v2_exploitability_score": 10.0, "v2_impact_score": 6.4, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 7.5}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "VAXstations running Open VMS 5.3 through 5.5-2 with VMS DECwindows or MOTIF do not properly disable access to user accounts that exceed the break-in limit threshold for failed login attempts, which makes it easier for attackers to conduct brute force password guessing.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:o:hp:openvms_vax:*:*:*:*:*:*:*:*", "published": "1999-12-31T05:00:00.000", "last_modified": "2024-02-09T03:15:13.613"}], "cwe_info": {"cwe_id": "307", "name": "Improper Restriction of Excessive Authentication Attempts", "weakness_abstraction": "Base", "status": "Draft", "description": "The software does not implement sufficient measures to prevent multiple failed authentication attempts within in a short time frame, making it more susceptible to brute force attacks.", "extended_description": "", "related_weaknesses": "::NATURE:ChildOf:CWE ID:287:VIEW ID:1000:ORDINAL:Primary::NATURE:ChildOf:CWE ID:287:VIEW ID:1003:ORDINAL:Primary::NATURE:ChildOf:CWE ID:799:VIEW ID:1000::", "weakness_ordinalities": "", "applicable_platforms": "::LANGUAGE CLASS:Language-Independent:LANGUAGE PREVALENCE:Undetermined::", "background_details": "", "alternate_terms": "", "modes_of_introduction": "::PHASE:Architecture and Design:NOTE:COMMISSION: This weakness refers to an incorrect design related to an architectural security tactic.::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Access Control:IMPACT:Bypass Protection Mechanism:NOTE:An attacker could perform an arbitrary number of authentication attempts using different passwords, and eventually gain access to the targeted account.::", "detection_methods": "::METHOD:Dynamic Analysis with Automated Results Interpretation:DESCRIPTION:According to SOAR, the following detection techniques may be useful: Highly cost effective: Web Application Scanner Web Services Scanner Database Scanners Cost effective for partial coverage: Host-based Vulnerability Scanners - Examine configuration for flaws, verifying that audit mechanisms work, ensure host configuration meets certain predefined criteria:EFFECTIVENESS:High::METHOD:Dynamic Analysis with Manual Results Interpretation:DESCRIPTION:According to SOAR, the following detection techniques may be useful: Highly cost effective: Fuzz Tester Framework-based Fuzzer Cost effective for partial coverage: Forced Path Execution:EFFECTIVENESS:High::METHOD:Manual Static Analysis - Source Code:DESCRIPTION:According to SOAR, the following detection techniques may be useful: Highly cost effective: Focused Manual Spotcheck - Focused manual analysis of source Manual Source Code Review (not inspections):EFFECTIVENESS:High::METHOD:Automated Static Analysis - Source Code:DESCRIPTION:According to SOAR, the following detection techniques may be useful: Cost effective for partial coverage: Source code Weakness Analyzer Context-configured Source Code Weakness Analyzer:EFFECTIVENESS:SOAR Partial::METHOD:Automated Static Analysis:DESCRIPTION:According to SOAR, the following detection techniques may be useful: Cost effective for partial coverage: Configuration Checker:EFFECTIVENESS:SOAR Partial::METHOD:Architecture or Design Review:DESCRIPTION:According to SOAR, the following detection techniques may be useful: Highly cost effective: Formal Methods / Correct-By-Construction Cost effective for partial coverage: Inspection (IEEE 1028 standard) (can apply to requirements, design, source code, etc.):EFFECTIVENESS:High::", "potential_mitigations": "::PHASE:Architecture and Design:DESCRIPTION:Common protection mechanisms include: Disconnecting the user after a small number of failed attempts Implementing a timeout Locking out a targeted account Requiring a computational task on the user's part.::PHASE:Architecture and Design:STRATEGY:Libraries or Frameworks:DESCRIPTION:Use a vetted library or framework that does not allow this weakness to occur or provides constructs that make this weakness easier to avoid. Consider using libraries with authentication capabilities such as OpenSSL or the ESAPI Authenticator. [REF-45]::", "observed_examples": "::REFERENCE:CVE-1999-1152:DESCRIPTION:Product does not disconnect or timeout after multiple failed logins.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-1999-1152::REFERENCE:CVE-2001-1291:DESCRIPTION:Product does not disconnect or timeout after multiple failed logins.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2001-1291::REFERENCE:CVE-2001-0395:DESCRIPTION:Product does not disconnect or timeout after multiple failed logins.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2001-0395::REFERENCE:CVE-2001-1339:DESCRIPTION:Product does not disconnect or timeout after multiple failed logins.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2001-1339::REFERENCE:CVE-2002-0628:DESCRIPTION:Product does not disconnect or timeout after multiple failed logins.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2002-0628::REFERENCE:CVE-1999-1324:DESCRIPTION:User accounts not disabled when they exceed a threshold; possibly a resultant problem.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-1999-1324::", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "::TAXONOMY NAME:PLOVER:ENTRY ID:AUTHENT.MULTFAIL:ENTRY NAME:Multiple Failed Authentication Attempts not Prevented::TAXONOMY NAME:Software Fault Patterns:ENTRY ID:SFP34:ENTRY NAME:Unrestricted authentication::", "related_attack_patterns": "::16::49::560::565::600::652::653::", "notes": ""}}, {"cwe": "CWE-308", "cves": [], "cwe_info": {"cwe_id": "308", "name": "Use of Single-factor Authentication", "weakness_abstraction": "Base", "status": "Draft", "description": "The use of single-factor authentication can lead to unnecessary risk of compromise when compared with the benefits of a dual-factor authentication scheme.", "extended_description": "While the use of multiple authentication schemes is simply piling on more complexity on top of authentication, it is inestimably valuable to have such measures of redundancy. The use of weak, reused, and common passwords is rampant on the internet. Without the added protection of multiple authentication schemes, a single mistake can result in the compromise of an account. For this reason, if multiple schemes are possible and also easy to use, they should be implemented and required.", "related_weaknesses": "::NATURE:ChildOf:CWE ID:287:VIEW ID:1000:ORDINAL:Primary::NATURE:ChildOf:CWE ID:654:VIEW ID:1000::NATURE:PeerOf:CWE ID:309:VIEW ID:1000::", "weakness_ordinalities": "", "applicable_platforms": "::LANGUAGE CLASS:Language-Independent:LANGUAGE PREVALENCE:Undetermined::", "background_details": "", "alternate_terms": "", "modes_of_introduction": "::PHASE:Architecture and Design:NOTE:COMMISSION: This weakness refers to an incorrect design related to an architectural security tactic.::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Access Control:IMPACT:Bypass Protection Mechanism:NOTE:If the secret in a single-factor authentication scheme gets compromised, full authentication is possible.::", "detection_methods": "", "potential_mitigations": "::PHASE:Architecture and Design:DESCRIPTION:Use multiple independent authentication schemes, which ensures that -- if one of the methods is compromised -- the system itself is still likely safe from compromise.::", "observed_examples": "", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "::TAXONOMY NAME:CLASP:ENTRY NAME:Using single-factor authentication::", "related_attack_patterns": "::16::49::509::55::555::560::561::565::600::644::645::652::653::70::", "notes": ""}}, {"cwe": "CWE-309", "cves": [], "cwe_info": {"cwe_id": "309", "name": "Use of Password System for Primary Authentication", "weakness_abstraction": "Base", "status": "Draft", "description": "The use of password systems as the primary means of authentication may be subject to several flaws or shortcomings, each reducing the effectiveness of the mechanism.", "extended_description": "", "related_weaknesses": "::NATURE:ChildOf:CWE ID:287:VIEW ID:1000:ORDINAL:Primary::NATURE:ChildOf:CWE ID:654:VIEW ID:1000::NATURE:PeerOf:CWE ID:308:VIEW ID:1000::", "weakness_ordinalities": "", "applicable_platforms": "::LANGUAGE CLASS:Language-Independent:LANGUAGE PREVALENCE:Undetermined::", "background_details": "::Password systems are the simplest and most ubiquitous authentication mechanisms. However, they are subject to such well known attacks,and such frequent compromise that their use in the most simple implementation is not practical.::", "alternate_terms": "", "modes_of_introduction": "::PHASE:Architecture and Design::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Access Control:IMPACT:Bypass Protection Mechanism:IMPACT:Gain Privileges or Assume Identity:NOTE:A password authentication mechanism error will almost always result in attackers being authorized as valid users.::", "detection_methods": "", "potential_mitigations": "::PHASE:Architecture and Design:DESCRIPTION:In order to protect password systems from compromise, the following should be noted: Passwords should be stored safely to prevent insider attack and to ensure that -- if a system is compromised -- the passwords are not retrievable. Due to password reuse, this information may be useful in the compromise of other systems these users work with. In order to protect these passwords, they should be stored encrypted, in a non-reversible state, such that the original text password cannot be extracted from the stored value. Password aging should be strictly enforced to ensure that passwords do not remain unchanged for long periods of time. The longer a password remains in use, the higher the probability that it has been compromised. For this reason, passwords should require refreshing periodically, and users should be informed of the risk of passwords which remain in use for too long. Password strength should be enforced intelligently. Rather than restrict passwords to specific content, or specific length, users should be encouraged to use upper and lower case letters, numbers, and symbols in their passwords. The system should also ensure that no passwords are derived from dictionary words.::PHASE:Architecture and Design:DESCRIPTION:Use a zero-knowledge password protocol, such as SRP.::PHASE:Architecture and Design:DESCRIPTION:Ensure that passwords are stored safely and are not reversible.::PHASE:Architecture and Design:DESCRIPTION:Implement password aging functionality that requires passwords be changed after a certain point.::PHASE:Architecture and Design:DESCRIPTION:Use a mechanism for determining the strength of a password and notify the user of weak password use.::PHASE:Architecture and Design:DESCRIPTION:Inform the user of why password protections are in place, how they work to protect data integrity, and why it is important to heed their warnings.::", "observed_examples": "", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "::TAXONOMY NAME:CLASP:ENTRY NAME:Using password systems::TAXONOMY NAME:OWASP Top Ten 2004:ENTRY ID:A3:ENTRY NAME:Broken Authentication and Session Management:MAPPING FIT:CWE More Specific::", "related_attack_patterns": "::16::49::509::55::555::560::561::565::600::652::653::70::", "notes": ""}}, {"cwe": "CWE-262", "cves": [], "cwe_info": {"cwe_id": "262", "name": "Not Using Password Aging", "weakness_abstraction": "Base", "status": "Draft", "description": "If no mechanism is in place for managing password aging, users will have no incentive to update passwords in a timely manner.", "extended_description": "Security experts have often recommended that users change their passwords regularly and avoid reusing passwords. Although this can be an effective mitigation, if the expiration window is too short, it can cause users to generate poor or predictable passwords. As such, it is important to discourage creating similar passwords. It is also useful to have a password aging mechanism that notifies users when passwords are considered old and requests that they replace them with new, strong passwords. Companion documentation which stresses how important this practice is can help users understand and better support this approach.", "related_weaknesses": "::NATURE:ChildOf:CWE ID:287:VIEW ID:1000:ORDINAL:Primary::NATURE:ChildOf:CWE ID:404:VIEW ID:1000::NATURE:PeerOf:CWE ID:309:VIEW ID:1000::NATURE:PeerOf:CWE ID:263:VIEW ID:1000::NATURE:PeerOf:CWE ID:324:VIEW ID:1000::", "weakness_ordinalities": "", "applicable_platforms": "::LANGUAGE CLASS:Language-Independent:LANGUAGE PREVALENCE:Undetermined::", "background_details": "", "alternate_terms": "", "modes_of_introduction": "::PHASE:Architecture and Design:NOTE:COMMISSION: This weakness refers to an incorrect design related to an architectural security tactic.::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Access Control:IMPACT:Gain Privileges or Assume Identity:NOTE:As passwords age, the probability that they are compromised grows.::", "detection_methods": "", "potential_mitigations": "::PHASE:Architecture and Design:DESCRIPTION:As part of a product's design, require users to change their passwords regularly and avoid reusing previous passwords.::", "observed_examples": "", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "::TAXONOMY NAME:CLASP:ENTRY NAME:Not allowing password aging::", "related_attack_patterns": "::16::49::509::55::555::560::561::565::600::652::653::70::", "notes": ""}}, {"cwe": "CWE-263", "cves": [], "cwe_info": {"cwe_id": "263", "name": "Password Aging with Long Expiration", "weakness_abstraction": "Base", "status": "Draft", "description": "Allowing password aging to occur unchecked can result in the possibility of diminished password integrity.", "extended_description": "Just as neglecting to include functionality for the management of password aging is dangerous, so is allowing password aging to continue unchecked. Passwords must be given a maximum life span, after which a user is required to update with a new and different password.", "related_weaknesses": "::NATURE:ChildOf:CWE ID:287:VIEW ID:1000:ORDINAL:Primary::NATURE:ChildOf:CWE ID:404:VIEW ID:1000::", "weakness_ordinalities": "", "applicable_platforms": "::LANGUAGE CLASS:Language-Independent:LANGUAGE PREVALENCE:Undetermined::", "background_details": "", "alternate_terms": "", "modes_of_introduction": "::PHASE:Architecture and Design:NOTE:COMMISSION: This weakness refers to an incorrect design related to an architectural security tactic.::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Access Control:IMPACT:Gain Privileges or Assume Identity:NOTE:As passwords age, the probability that they are compromised grows.::", "detection_methods": "", "potential_mitigations": "::PHASE:Architecture and Design:DESCRIPTION:Ensure that password aging is limited so that there is a defined maximum age for passwords and so that the user is notified several times leading up to the password expiration.::", "observed_examples": "", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "::TAXONOMY NAME:CLASP:ENTRY NAME:Allowing password aging::", "related_attack_patterns": "::16::49::509::55::555::560::561::565::600::652::653::70::", "notes": ""}}, {"cwe": "CWE-654", "cves": [], "cwe_info": {"cwe_id": "654", "name": "Reliance on a Single Factor in a Security Decision", "weakness_abstraction": "Base", "status": "Draft", "description": "A protection mechanism relies exclusively, or to a large extent, on the evaluation of a single condition or the integrity of a single object or entity in order to make a decision about granting access to restricted resources or functionality.", "extended_description": "", "related_weaknesses": "::NATURE:ChildOf:CWE ID:657:VIEW ID:1000:ORDINAL:Primary::NATURE:ChildOf:CWE ID:693:VIEW ID:1000::", "weakness_ordinalities": "::ORDINALITY:Primary::", "applicable_platforms": "::LANGUAGE CLASS:Language-Independent:LANGUAGE PREVALENCE:Undetermined::", "background_details": "", "alternate_terms": "::TERM:Separation of Privilege:DESCRIPTION:Some people and publications use the term Separation of Privilege to describe this weakness, but this term has dual meanings in current usage. While this entry is closely associated with the original definition of Separation of Privilege by Saltzer and Schroeder, others use the same term to describe poor compartmentalization (CWE-653). Because there are multiple interpretations, use of the Separation of Privilege term is discouraged.::", "modes_of_introduction": "::PHASE:Architecture and Design::PHASE:Implementation::PHASE:Operation::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Access Control:IMPACT:Gain Privileges or Assume Identity:NOTE:If the single factor is compromised (e.g. by theft or spoofing), then the integrity of the entire security mechanism can be violated with respect to the user that is identified by that factor.::SCOPE:Non-Repudiation:IMPACT:Hide Activities:NOTE:It can become difficult or impossible for the product to be able to distinguish between legitimate activities by the entity who provided the factor, versus illegitimate activities by an attacker.::", "detection_methods": "", "potential_mitigations": "::PHASE:Architecture and Design:DESCRIPTION:Use multiple simultaneous checks before granting access to critical operations or granting critical privileges. A weaker but helpful mitigation is to use several successive checks (multiple layers of security).::PHASE:Architecture and Design:DESCRIPTION:Use redundant access rules on different choke points (e.g., firewalls).::", "observed_examples": "", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "", "related_attack_patterns": "::16::274::49::55::560::565::600::652::653::70::", "notes": "::TYPE:Maintenance:NOTE:This entry is closely associated with the term Separation of Privilege. This term is used in several different ways in the industry, but they generally combine two closely related principles: compartmentalization (CWE-653) and using only one factor in a security decision (this entry). Proper compartmentalization implicitly introduces multiple factors into a security decision, but there can be cases in which multiple factors are required for authentication or other mechanisms that do not involve compartmentalization, such as performing all required checks on a submitted certificate. It is likely that CWE-653 and CWE-654 will provoke further discussion.::"}}, {"cwe": "CWE-1273", "cves": [], "cwe_info": {"cwe_id": "1273", "name": "Device Unlock Credential Sharing", "weakness_abstraction": "Base", "status": "Incomplete", "description": "The credentials necessary for unlocking a device are shared across multiple parties and may expose sensitive information.", "extended_description": "\u201cUnlocking a device\u201d often means activating certain, unadvertised, debug and manufacturer-specific capabilities of a device using sensitive credentials. Unlocking a device might be necessary for the purpose of troubleshooting device problems. For example, suppose a device contains the ability to dump the content of the full system memory by disabling the memory-protection mechanisms. Since this is a highly security-sensitive capability, this capability is \u201clocked\u201d in the production part. Unless the device gets unlocked by supplying the proper credentials the debug capabilities are not available. For cases where the chip designer, chip manufacturer (fabricator), and manufacturing and assembly testers are the all employed by the same company, the compromise of the credentials are greatly reduced. However, when the chip designer is employed by one company, the chip manufacturer is employed by another company (a foundry), and the assemblers and testers are employed by yet a third company. Since these different companies will need to perform various tests on the device to verify correct device function, they all need to share the unlock key. Unfortunately, the level of secrecy and policy might be quite different at each company, greatly increasing the risk of sensitive credentials being compromised.", "related_weaknesses": "::NATURE:ChildOf:CWE ID:200:VIEW ID:1000:ORDINAL:Primary::", "weakness_ordinalities": "", "applicable_platforms": "::LANGUAGE NAME:VHDL:LANGUAGE PREVALENCE:Undetermined::LANGUAGE NAME:Verilog:LANGUAGE PREVALENCE:Undetermined::LANGUAGE CLASS:Compiled:LANGUAGE PREVALENCE:Undetermined::OPERATING SYSTEM CLASS:OS-Independent:OPERATING SYSTEM PREVALENCE:Undetermined::ARCHITECTURE CLASS:Architecture-Independent:ARCHITECTURE PREVALENCE:Undetermined::TECHNOLOGY NAME:Other:TECHNOLOGY PREVALENCE:Undetermined::TECHNOLOGY CLASS:Technology-Independent:TECHNOLOGY PREVALENCE:Undetermined::", "background_details": "", "alternate_terms": "", "modes_of_introduction": "::PHASE:Integration::PHASE:Manufacturing::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Confidentiality:SCOPE:Integrity:SCOPE:Availability:SCOPE:Access Control:SCOPE:Accountability:SCOPE:Authentication:SCOPE:Authorization:SCOPE:Non-Repudiation:IMPACT:Modify Memory:IMPACT:Read Memory:IMPACT:Modify Files or Directories:IMPACT:Read Files or Directories:IMPACT:Modify Application Data:IMPACT:Execute Unauthorized Code or Commands:IMPACT:Gain Privileges or Assume Identity:IMPACT:Bypass Protection Mechanism:NOTE:Once unlock credentials are compromised, an attacker can use the credentials to unlock the device and gain unauthorized access to the hidden functionalities protected by those credentials.::", "detection_methods": "", "potential_mitigations": "::PHASE:Integration:DESCRIPTION:Ensure the unlock credentials are shared with the minimum number of parties and with utmost secrecy. To limit the risk associated with compromised credentials, where possible, the credentials should be part-specific.::PHASE:Manufacturing:DESCRIPTION:Ensure the unlock credentials are shared with the minimum number of parties and with utmost secrecy. To limit the risk associated with compromised credentials, where possible, the credentials should be part-specific.::", "observed_examples": "", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "", "related_attack_patterns": "::560::", "notes": "::TYPE:Maintenance:NOTE:This entry is still under development and will continue to see updates and content improvements.::"}}]}]}, {"technique_id": "T1195.002", "t_findings": [{"capec_id": "CAPEC-560", "c_findings": [{"cwe": "CWE-522", "cves": [{"id": "CVE-2007-0681", "score": ["V31", 9.8, "CRITICAL"], "v2_score": 7.5, "v2_exploitability_score": 10.0, "v2_impact_score": 6.4, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 7.5}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": true, "userInteractionRequired": false}], "description": "profile.php in ExtCalendar 2 and earlier allows remote attackers to change the passwords of arbitrary users without providing the original password, and possibly perform other unauthorized actions, via modified values to register.php.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:extcalendar_project:extcalendar:*:*:*:*:*:*:*:*", "published": "2007-02-03T01:28:00.000", "last_modified": "2024-02-09T03:13:40.213"}, {"id": "CVE-2000-0944", "score": ["V31", 9.8, "CRITICAL"], "v2_score": 7.5, "v2_exploitability_score": 10.0, "v2_impact_score": 6.4, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 7.5}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": true, "userInteractionRequired": false}], "description": "CGI Script Center News Update 1.1 does not properly validate the original news administration password during a password change operation, which allows remote attackers to modify the password without knowing the original password.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:cgi:script_center_news_update:1.1:*:*:*:*:*:*:*", "published": "2000-12-19T05:00:00.000", "last_modified": "2024-02-09T03:15:18.653"}, {"id": "CVE-2005-3435", "score": ["V31", 9.8, "CRITICAL"], "v2_score": 7.5, "v2_exploitability_score": 10.0, "v2_impact_score": 6.4, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 7.5}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": true, "userInteractionRequired": false}], "description": "admin_news.php in Archilles Newsworld up to 1.3.0 allows attackers to bypass authentication by obtaining the password hash for another user, for example through another Newsworld vulnerability, and specifying the hash in the pwd argument.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:archilles:newsworld:*:*:*:*:*:*:*:*", "published": "2005-11-02T11:02:00.000", "last_modified": "2024-02-09T03:13:36.147"}, {"id": "CVE-2005-0408", "score": ["V31", 9.8, "CRITICAL"], "v2_score": 7.5, "v2_exploitability_score": 10.0, "v2_impact_score": 6.4, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 7.5}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": true, "userInteractionRequired": false}], "description": "CitrusDB 0.3.6 and earlier generates easily predictable MD5 hashes of the user name for the id_hash cookie, which allows remote attackers to bypass authentication and gain privileges by calculating the MD5 checksum of the user name combined with the \"boogaadeeboo\" string, which is hard-coded in the $hidden_hash variable.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:citrusdb:citrusdb:*:*:*:*:*:*:*:*", "published": "2005-02-14T05:00:00.000", "last_modified": "2024-02-09T03:13:25.890"}], "cwe_info": {"cwe_id": "522", "name": "Insufficiently Protected Credentials", "weakness_abstraction": "Class", "status": "Incomplete", "description": "The product transmits or stores authentication credentials, but it uses an insecure method that is susceptible to unauthorized interception and/or retrieval.", "extended_description": "", "related_weaknesses": "::NATURE:ChildOf:CWE ID:287:VIEW ID:1000:ORDINAL:Primary::NATURE:ChildOf:CWE ID:287:VIEW ID:1003:ORDINAL:Primary::NATURE:ChildOf:CWE ID:668:VIEW ID:1000::", "weakness_ordinalities": "", "applicable_platforms": "", "background_details": "", "alternate_terms": "", "modes_of_introduction": "::PHASE:Architecture and Design:NOTE:COMMISSION: This weakness refers to an incorrect design related to an architectural security tactic.::PHASE:Implementation::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Access Control:IMPACT:Gain Privileges or Assume Identity:NOTE:An attacker could gain access to user accounts and access sensitive data used by the user accounts.::", "detection_methods": "", "potential_mitigations": "::PHASE:Architecture and Design:DESCRIPTION:Use an appropriate security mechanism to protect the credentials.::PHASE:Architecture and Design:DESCRIPTION:Make appropriate use of cryptography to protect the credentials.::PHASE:Implementation:DESCRIPTION:Use industry standards to protect the credentials (e.g. LDAP, keystore, etc.).::", "observed_examples": "::REFERENCE:CVE-2007-0681:DESCRIPTION:Web app allows remote attackers to change the passwords of arbitrary users without providing the original password, and possibly perform other unauthorized actions.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2007-0681::REFERENCE:CVE-2000-0944:DESCRIPTION:Web application password change utility doesn't check the original password.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2000-0944::REFERENCE:CVE-2005-3435:DESCRIPTION:product authentication succeeds if user-provided MD5 hash matches the hash in its database; this can be subjected to replay attacks.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2005-3435::REFERENCE:CVE-2005-0408:DESCRIPTION:chain: product generates predictable MD5 hashes using a constant value combined with username, allowing authentication bypass.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2005-0408::", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "::TAXONOMY NAME:OWASP Top Ten 2007:ENTRY ID:A7:ENTRY NAME:Broken Authentication and Session Management:MAPPING FIT:CWE More Specific::TAXONOMY NAME:OWASP Top Ten 2004:ENTRY ID:A3:ENTRY NAME:Broken Authentication and Session Management:MAPPING FIT:CWE More Specific::", "related_attack_patterns": "::102::474::50::509::551::555::560::561::600::644::645::652::653::", "notes": ""}}, {"cwe": "CWE-307", "cves": [{"id": "CVE-1999-1152", "score": ["V31", 7.5, "HIGH"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "Compaq/Microcom 6000 Access Integrator does not disconnect a client after a certain number of failed login attempts, which allows remote attackers to guess usernames or passwords via a brute force attack.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:o:compaq:microcom_6000_firmware:-:*:*:*:*:*:*:*", "published": "1998-06-03T04:00:00.000", "last_modified": "2024-02-09T03:15:08.037"}, {"id": "CVE-2001-1291", "score": ["V31", 9.8, "CRITICAL"], "v2_score": 10.0, "v2_exploitability_score": 10.0, "v2_impact_score": 10.0, "v2_vector": "AV:N/AC:L/Au:N/C:C/I:C/A:C", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:C/I:C/A:C", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "COMPLETE", "integrityImpact": "COMPLETE", "availabilityImpact": "COMPLETE", "baseScore": 10.0}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 10.0, "acInsufInfo": false, "obtainAllPrivilege": true, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "The telnet server for 3Com hardware such as PS40 SuperStack II does not delay or disconnect remote attackers who provide an incorrect username or password, which makes it easier to break into the server via brute force password guessing.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:o:3com:superstack_ii_ps_hub_40_firmware:-:*:*:*:*:*:*:*", "published": "2001-07-12T04:00:00.000", "last_modified": "2024-02-09T03:14:12.003"}, {"id": "CVE-2001-0395", "score": ["V31", 9.8, "CRITICAL"], "v2_score": 7.5, "v2_exploitability_score": 10.0, "v2_impact_score": 6.4, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 7.5}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "Lightwave ConsoleServer 3200 does not disconnect users after unsuccessful login attempts, which could allow remote attackers to conduct brute force password guessing.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:o:lightwavemo:consoleserver_3200_firmware:-:*:*:*:*:*:*:*", "published": "2001-07-02T04:00:00.000", "last_modified": "2024-02-09T03:14:07.077"}, {"id": "CVE-2001-1339", "score": ["V31", 9.8, "CRITICAL"], "v2_score": 7.5, "v2_exploitability_score": 10.0, "v2_impact_score": 6.4, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 7.5}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": true, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "Beck IPC GmbH IPC@CHIP telnet service does not delay or disconnect users from the service when bad passwords are entered, which makes it easier for remote attackers to conduct brute force password guessing attacks.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:o:anybus:ipc\\@chip_firmware:-:*:*:*:*:*:*:*", "published": "2001-05-24T04:00:00.000", "last_modified": "2024-02-09T03:15:26.757"}, {"id": "CVE-2002-0628", "score": ["V31", 7.5, "HIGH"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "The Telnet service for Polycom ViewStation before 7.2.4 does not restrict the number of failed login attempts, which makes it easier for remote attackers to guess usernames and passwords via a brute force attack.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:h:polycom:viewstation_128:6.5.1:*:*:*:*:*:*:*", "published": "2003-01-07T05:00:00.000", "last_modified": "2024-02-09T03:14:16.373"}, {"id": "CVE-1999-1324", "score": ["V31", 9.8, "CRITICAL"], "v2_score": 7.5, "v2_exploitability_score": 10.0, "v2_impact_score": 6.4, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 7.5}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "VAXstations running Open VMS 5.3 through 5.5-2 with VMS DECwindows or MOTIF do not properly disable access to user accounts that exceed the break-in limit threshold for failed login attempts, which makes it easier for attackers to conduct brute force password guessing.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:o:hp:openvms_vax:*:*:*:*:*:*:*:*", "published": "1999-12-31T05:00:00.000", "last_modified": "2024-02-09T03:15:13.613"}], "cwe_info": {"cwe_id": "307", "name": "Improper Restriction of Excessive Authentication Attempts", "weakness_abstraction": "Base", "status": "Draft", "description": "The software does not implement sufficient measures to prevent multiple failed authentication attempts within in a short time frame, making it more susceptible to brute force attacks.", "extended_description": "", "related_weaknesses": "::NATURE:ChildOf:CWE ID:287:VIEW ID:1000:ORDINAL:Primary::NATURE:ChildOf:CWE ID:287:VIEW ID:1003:ORDINAL:Primary::NATURE:ChildOf:CWE ID:799:VIEW ID:1000::", "weakness_ordinalities": "", "applicable_platforms": "::LANGUAGE CLASS:Language-Independent:LANGUAGE PREVALENCE:Undetermined::", "background_details": "", "alternate_terms": "", "modes_of_introduction": "::PHASE:Architecture and Design:NOTE:COMMISSION: This weakness refers to an incorrect design related to an architectural security tactic.::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Access Control:IMPACT:Bypass Protection Mechanism:NOTE:An attacker could perform an arbitrary number of authentication attempts using different passwords, and eventually gain access to the targeted account.::", "detection_methods": "::METHOD:Dynamic Analysis with Automated Results Interpretation:DESCRIPTION:According to SOAR, the following detection techniques may be useful: Highly cost effective: Web Application Scanner Web Services Scanner Database Scanners Cost effective for partial coverage: Host-based Vulnerability Scanners - Examine configuration for flaws, verifying that audit mechanisms work, ensure host configuration meets certain predefined criteria:EFFECTIVENESS:High::METHOD:Dynamic Analysis with Manual Results Interpretation:DESCRIPTION:According to SOAR, the following detection techniques may be useful: Highly cost effective: Fuzz Tester Framework-based Fuzzer Cost effective for partial coverage: Forced Path Execution:EFFECTIVENESS:High::METHOD:Manual Static Analysis - Source Code:DESCRIPTION:According to SOAR, the following detection techniques may be useful: Highly cost effective: Focused Manual Spotcheck - Focused manual analysis of source Manual Source Code Review (not inspections):EFFECTIVENESS:High::METHOD:Automated Static Analysis - Source Code:DESCRIPTION:According to SOAR, the following detection techniques may be useful: Cost effective for partial coverage: Source code Weakness Analyzer Context-configured Source Code Weakness Analyzer:EFFECTIVENESS:SOAR Partial::METHOD:Automated Static Analysis:DESCRIPTION:According to SOAR, the following detection techniques may be useful: Cost effective for partial coverage: Configuration Checker:EFFECTIVENESS:SOAR Partial::METHOD:Architecture or Design Review:DESCRIPTION:According to SOAR, the following detection techniques may be useful: Highly cost effective: Formal Methods / Correct-By-Construction Cost effective for partial coverage: Inspection (IEEE 1028 standard) (can apply to requirements, design, source code, etc.):EFFECTIVENESS:High::", "potential_mitigations": "::PHASE:Architecture and Design:DESCRIPTION:Common protection mechanisms include: Disconnecting the user after a small number of failed attempts Implementing a timeout Locking out a targeted account Requiring a computational task on the user's part.::PHASE:Architecture and Design:STRATEGY:Libraries or Frameworks:DESCRIPTION:Use a vetted library or framework that does not allow this weakness to occur or provides constructs that make this weakness easier to avoid. Consider using libraries with authentication capabilities such as OpenSSL or the ESAPI Authenticator. [REF-45]::", "observed_examples": "::REFERENCE:CVE-1999-1152:DESCRIPTION:Product does not disconnect or timeout after multiple failed logins.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-1999-1152::REFERENCE:CVE-2001-1291:DESCRIPTION:Product does not disconnect or timeout after multiple failed logins.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2001-1291::REFERENCE:CVE-2001-0395:DESCRIPTION:Product does not disconnect or timeout after multiple failed logins.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2001-0395::REFERENCE:CVE-2001-1339:DESCRIPTION:Product does not disconnect or timeout after multiple failed logins.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2001-1339::REFERENCE:CVE-2002-0628:DESCRIPTION:Product does not disconnect or timeout after multiple failed logins.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2002-0628::REFERENCE:CVE-1999-1324:DESCRIPTION:User accounts not disabled when they exceed a threshold; possibly a resultant problem.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-1999-1324::", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "::TAXONOMY NAME:PLOVER:ENTRY ID:AUTHENT.MULTFAIL:ENTRY NAME:Multiple Failed Authentication Attempts not Prevented::TAXONOMY NAME:Software Fault Patterns:ENTRY ID:SFP34:ENTRY NAME:Unrestricted authentication::", "related_attack_patterns": "::16::49::560::565::600::652::653::", "notes": ""}}, {"cwe": "CWE-308", "cves": [], "cwe_info": {"cwe_id": "308", "name": "Use of Single-factor Authentication", "weakness_abstraction": "Base", "status": "Draft", "description": "The use of single-factor authentication can lead to unnecessary risk of compromise when compared with the benefits of a dual-factor authentication scheme.", "extended_description": "While the use of multiple authentication schemes is simply piling on more complexity on top of authentication, it is inestimably valuable to have such measures of redundancy. The use of weak, reused, and common passwords is rampant on the internet. Without the added protection of multiple authentication schemes, a single mistake can result in the compromise of an account. For this reason, if multiple schemes are possible and also easy to use, they should be implemented and required.", "related_weaknesses": "::NATURE:ChildOf:CWE ID:287:VIEW ID:1000:ORDINAL:Primary::NATURE:ChildOf:CWE ID:654:VIEW ID:1000::NATURE:PeerOf:CWE ID:309:VIEW ID:1000::", "weakness_ordinalities": "", "applicable_platforms": "::LANGUAGE CLASS:Language-Independent:LANGUAGE PREVALENCE:Undetermined::", "background_details": "", "alternate_terms": "", "modes_of_introduction": "::PHASE:Architecture and Design:NOTE:COMMISSION: This weakness refers to an incorrect design related to an architectural security tactic.::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Access Control:IMPACT:Bypass Protection Mechanism:NOTE:If the secret in a single-factor authentication scheme gets compromised, full authentication is possible.::", "detection_methods": "", "potential_mitigations": "::PHASE:Architecture and Design:DESCRIPTION:Use multiple independent authentication schemes, which ensures that -- if one of the methods is compromised -- the system itself is still likely safe from compromise.::", "observed_examples": "", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "::TAXONOMY NAME:CLASP:ENTRY NAME:Using single-factor authentication::", "related_attack_patterns": "::16::49::509::55::555::560::561::565::600::644::645::652::653::70::", "notes": ""}}, {"cwe": "CWE-309", "cves": [], "cwe_info": {"cwe_id": "309", "name": "Use of Password System for Primary Authentication", "weakness_abstraction": "Base", "status": "Draft", "description": "The use of password systems as the primary means of authentication may be subject to several flaws or shortcomings, each reducing the effectiveness of the mechanism.", "extended_description": "", "related_weaknesses": "::NATURE:ChildOf:CWE ID:287:VIEW ID:1000:ORDINAL:Primary::NATURE:ChildOf:CWE ID:654:VIEW ID:1000::NATURE:PeerOf:CWE ID:308:VIEW ID:1000::", "weakness_ordinalities": "", "applicable_platforms": "::LANGUAGE CLASS:Language-Independent:LANGUAGE PREVALENCE:Undetermined::", "background_details": "::Password systems are the simplest and most ubiquitous authentication mechanisms. However, they are subject to such well known attacks,and such frequent compromise that their use in the most simple implementation is not practical.::", "alternate_terms": "", "modes_of_introduction": "::PHASE:Architecture and Design::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Access Control:IMPACT:Bypass Protection Mechanism:IMPACT:Gain Privileges or Assume Identity:NOTE:A password authentication mechanism error will almost always result in attackers being authorized as valid users.::", "detection_methods": "", "potential_mitigations": "::PHASE:Architecture and Design:DESCRIPTION:In order to protect password systems from compromise, the following should be noted: Passwords should be stored safely to prevent insider attack and to ensure that -- if a system is compromised -- the passwords are not retrievable. Due to password reuse, this information may be useful in the compromise of other systems these users work with. In order to protect these passwords, they should be stored encrypted, in a non-reversible state, such that the original text password cannot be extracted from the stored value. Password aging should be strictly enforced to ensure that passwords do not remain unchanged for long periods of time. The longer a password remains in use, the higher the probability that it has been compromised. For this reason, passwords should require refreshing periodically, and users should be informed of the risk of passwords which remain in use for too long. Password strength should be enforced intelligently. Rather than restrict passwords to specific content, or specific length, users should be encouraged to use upper and lower case letters, numbers, and symbols in their passwords. The system should also ensure that no passwords are derived from dictionary words.::PHASE:Architecture and Design:DESCRIPTION:Use a zero-knowledge password protocol, such as SRP.::PHASE:Architecture and Design:DESCRIPTION:Ensure that passwords are stored safely and are not reversible.::PHASE:Architecture and Design:DESCRIPTION:Implement password aging functionality that requires passwords be changed after a certain point.::PHASE:Architecture and Design:DESCRIPTION:Use a mechanism for determining the strength of a password and notify the user of weak password use.::PHASE:Architecture and Design:DESCRIPTION:Inform the user of why password protections are in place, how they work to protect data integrity, and why it is important to heed their warnings.::", "observed_examples": "", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "::TAXONOMY NAME:CLASP:ENTRY NAME:Using password systems::TAXONOMY NAME:OWASP Top Ten 2004:ENTRY ID:A3:ENTRY NAME:Broken Authentication and Session Management:MAPPING FIT:CWE More Specific::", "related_attack_patterns": "::16::49::509::55::555::560::561::565::600::652::653::70::", "notes": ""}}, {"cwe": "CWE-262", "cves": [], "cwe_info": {"cwe_id": "262", "name": "Not Using Password Aging", "weakness_abstraction": "Base", "status": "Draft", "description": "If no mechanism is in place for managing password aging, users will have no incentive to update passwords in a timely manner.", "extended_description": "Security experts have often recommended that users change their passwords regularly and avoid reusing passwords. Although this can be an effective mitigation, if the expiration window is too short, it can cause users to generate poor or predictable passwords. As such, it is important to discourage creating similar passwords. It is also useful to have a password aging mechanism that notifies users when passwords are considered old and requests that they replace them with new, strong passwords. Companion documentation which stresses how important this practice is can help users understand and better support this approach.", "related_weaknesses": "::NATURE:ChildOf:CWE ID:287:VIEW ID:1000:ORDINAL:Primary::NATURE:ChildOf:CWE ID:404:VIEW ID:1000::NATURE:PeerOf:CWE ID:309:VIEW ID:1000::NATURE:PeerOf:CWE ID:263:VIEW ID:1000::NATURE:PeerOf:CWE ID:324:VIEW ID:1000::", "weakness_ordinalities": "", "applicable_platforms": "::LANGUAGE CLASS:Language-Independent:LANGUAGE PREVALENCE:Undetermined::", "background_details": "", "alternate_terms": "", "modes_of_introduction": "::PHASE:Architecture and Design:NOTE:COMMISSION: This weakness refers to an incorrect design related to an architectural security tactic.::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Access Control:IMPACT:Gain Privileges or Assume Identity:NOTE:As passwords age, the probability that they are compromised grows.::", "detection_methods": "", "potential_mitigations": "::PHASE:Architecture and Design:DESCRIPTION:As part of a product's design, require users to change their passwords regularly and avoid reusing previous passwords.::", "observed_examples": "", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "::TAXONOMY NAME:CLASP:ENTRY NAME:Not allowing password aging::", "related_attack_patterns": "::16::49::509::55::555::560::561::565::600::652::653::70::", "notes": ""}}, {"cwe": "CWE-263", "cves": [], "cwe_info": {"cwe_id": "263", "name": "Password Aging with Long Expiration", "weakness_abstraction": "Base", "status": "Draft", "description": "Allowing password aging to occur unchecked can result in the possibility of diminished password integrity.", "extended_description": "Just as neglecting to include functionality for the management of password aging is dangerous, so is allowing password aging to continue unchecked. Passwords must be given a maximum life span, after which a user is required to update with a new and different password.", "related_weaknesses": "::NATURE:ChildOf:CWE ID:287:VIEW ID:1000:ORDINAL:Primary::NATURE:ChildOf:CWE ID:404:VIEW ID:1000::", "weakness_ordinalities": "", "applicable_platforms": "::LANGUAGE CLASS:Language-Independent:LANGUAGE PREVALENCE:Undetermined::", "background_details": "", "alternate_terms": "", "modes_of_introduction": "::PHASE:Architecture and Design:NOTE:COMMISSION: This weakness refers to an incorrect design related to an architectural security tactic.::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Access Control:IMPACT:Gain Privileges or Assume Identity:NOTE:As passwords age, the probability that they are compromised grows.::", "detection_methods": "", "potential_mitigations": "::PHASE:Architecture and Design:DESCRIPTION:Ensure that password aging is limited so that there is a defined maximum age for passwords and so that the user is notified several times leading up to the password expiration.::", "observed_examples": "", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "::TAXONOMY NAME:CLASP:ENTRY NAME:Allowing password aging::", "related_attack_patterns": "::16::49::509::55::555::560::561::565::600::652::653::70::", "notes": ""}}, {"cwe": "CWE-654", "cves": [], "cwe_info": {"cwe_id": "654", "name": "Reliance on a Single Factor in a Security Decision", "weakness_abstraction": "Base", "status": "Draft", "description": "A protection mechanism relies exclusively, or to a large extent, on the evaluation of a single condition or the integrity of a single object or entity in order to make a decision about granting access to restricted resources or functionality.", "extended_description": "", "related_weaknesses": "::NATURE:ChildOf:CWE ID:657:VIEW ID:1000:ORDINAL:Primary::NATURE:ChildOf:CWE ID:693:VIEW ID:1000::", "weakness_ordinalities": "::ORDINALITY:Primary::", "applicable_platforms": "::LANGUAGE CLASS:Language-Independent:LANGUAGE PREVALENCE:Undetermined::", "background_details": "", "alternate_terms": "::TERM:Separation of Privilege:DESCRIPTION:Some people and publications use the term Separation of Privilege to describe this weakness, but this term has dual meanings in current usage. While this entry is closely associated with the original definition of Separation of Privilege by Saltzer and Schroeder, others use the same term to describe poor compartmentalization (CWE-653). Because there are multiple interpretations, use of the Separation of Privilege term is discouraged.::", "modes_of_introduction": "::PHASE:Architecture and Design::PHASE:Implementation::PHASE:Operation::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Access Control:IMPACT:Gain Privileges or Assume Identity:NOTE:If the single factor is compromised (e.g. by theft or spoofing), then the integrity of the entire security mechanism can be violated with respect to the user that is identified by that factor.::SCOPE:Non-Repudiation:IMPACT:Hide Activities:NOTE:It can become difficult or impossible for the product to be able to distinguish between legitimate activities by the entity who provided the factor, versus illegitimate activities by an attacker.::", "detection_methods": "", "potential_mitigations": "::PHASE:Architecture and Design:DESCRIPTION:Use multiple simultaneous checks before granting access to critical operations or granting critical privileges. A weaker but helpful mitigation is to use several successive checks (multiple layers of security).::PHASE:Architecture and Design:DESCRIPTION:Use redundant access rules on different choke points (e.g., firewalls).::", "observed_examples": "", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "", "related_attack_patterns": "::16::274::49::55::560::565::600::652::653::70::", "notes": "::TYPE:Maintenance:NOTE:This entry is closely associated with the term Separation of Privilege. This term is used in several different ways in the industry, but they generally combine two closely related principles: compartmentalization (CWE-653) and using only one factor in a security decision (this entry). Proper compartmentalization implicitly introduces multiple factors into a security decision, but there can be cases in which multiple factors are required for authentication or other mechanisms that do not involve compartmentalization, such as performing all required checks on a submitted certificate. It is likely that CWE-653 and CWE-654 will provoke further discussion.::"}}, {"cwe": "CWE-1273", "cves": [], "cwe_info": {"cwe_id": "1273", "name": "Device Unlock Credential Sharing", "weakness_abstraction": "Base", "status": "Incomplete", "description": "The credentials necessary for unlocking a device are shared across multiple parties and may expose sensitive information.", "extended_description": "\u201cUnlocking a device\u201d often means activating certain, unadvertised, debug and manufacturer-specific capabilities of a device using sensitive credentials. Unlocking a device might be necessary for the purpose of troubleshooting device problems. For example, suppose a device contains the ability to dump the content of the full system memory by disabling the memory-protection mechanisms. Since this is a highly security-sensitive capability, this capability is \u201clocked\u201d in the production part. Unless the device gets unlocked by supplying the proper credentials the debug capabilities are not available. For cases where the chip designer, chip manufacturer (fabricator), and manufacturing and assembly testers are the all employed by the same company, the compromise of the credentials are greatly reduced. However, when the chip designer is employed by one company, the chip manufacturer is employed by another company (a foundry), and the assemblers and testers are employed by yet a third company. Since these different companies will need to perform various tests on the device to verify correct device function, they all need to share the unlock key. Unfortunately, the level of secrecy and policy might be quite different at each company, greatly increasing the risk of sensitive credentials being compromised.", "related_weaknesses": "::NATURE:ChildOf:CWE ID:200:VIEW ID:1000:ORDINAL:Primary::", "weakness_ordinalities": "", "applicable_platforms": "::LANGUAGE NAME:VHDL:LANGUAGE PREVALENCE:Undetermined::LANGUAGE NAME:Verilog:LANGUAGE PREVALENCE:Undetermined::LANGUAGE CLASS:Compiled:LANGUAGE PREVALENCE:Undetermined::OPERATING SYSTEM CLASS:OS-Independent:OPERATING SYSTEM PREVALENCE:Undetermined::ARCHITECTURE CLASS:Architecture-Independent:ARCHITECTURE PREVALENCE:Undetermined::TECHNOLOGY NAME:Other:TECHNOLOGY PREVALENCE:Undetermined::TECHNOLOGY CLASS:Technology-Independent:TECHNOLOGY PREVALENCE:Undetermined::", "background_details": "", "alternate_terms": "", "modes_of_introduction": "::PHASE:Integration::PHASE:Manufacturing::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Confidentiality:SCOPE:Integrity:SCOPE:Availability:SCOPE:Access Control:SCOPE:Accountability:SCOPE:Authentication:SCOPE:Authorization:SCOPE:Non-Repudiation:IMPACT:Modify Memory:IMPACT:Read Memory:IMPACT:Modify Files or Directories:IMPACT:Read Files or Directories:IMPACT:Modify Application Data:IMPACT:Execute Unauthorized Code or Commands:IMPACT:Gain Privileges or Assume Identity:IMPACT:Bypass Protection Mechanism:NOTE:Once unlock credentials are compromised, an attacker can use the credentials to unlock the device and gain unauthorized access to the hidden functionalities protected by those credentials.::", "detection_methods": "", "potential_mitigations": "::PHASE:Integration:DESCRIPTION:Ensure the unlock credentials are shared with the minimum number of parties and with utmost secrecy. To limit the risk associated with compromised credentials, where possible, the credentials should be part-specific.::PHASE:Manufacturing:DESCRIPTION:Ensure the unlock credentials are shared with the minimum number of parties and with utmost secrecy. To limit the risk associated with compromised credentials, where possible, the credentials should be part-specific.::", "observed_examples": "", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "", "related_attack_patterns": "::560::", "notes": "::TYPE:Maintenance:NOTE:This entry is still under development and will continue to see updates and content improvements.::"}}]}]}, {"technique_id": "T1525", "t_findings": [{"capec_id": "CAPEC-560", "c_findings": [{"cwe": "CWE-522", "cves": [{"id": "CVE-2007-0681", "score": ["V31", 9.8, "CRITICAL"], "v2_score": 7.5, "v2_exploitability_score": 10.0, "v2_impact_score": 6.4, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 7.5}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": true, "userInteractionRequired": false}], "description": "profile.php in ExtCalendar 2 and earlier allows remote attackers to change the passwords of arbitrary users without providing the original password, and possibly perform other unauthorized actions, via modified values to register.php.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:extcalendar_project:extcalendar:*:*:*:*:*:*:*:*", "published": "2007-02-03T01:28:00.000", "last_modified": "2024-02-09T03:13:40.213"}, {"id": "CVE-2000-0944", "score": ["V31", 9.8, "CRITICAL"], "v2_score": 7.5, "v2_exploitability_score": 10.0, "v2_impact_score": 6.4, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 7.5}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": true, "userInteractionRequired": false}], "description": "CGI Script Center News Update 1.1 does not properly validate the original news administration password during a password change operation, which allows remote attackers to modify the password without knowing the original password.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:cgi:script_center_news_update:1.1:*:*:*:*:*:*:*", "published": "2000-12-19T05:00:00.000", "last_modified": "2024-02-09T03:15:18.653"}, {"id": "CVE-2005-3435", "score": ["V31", 9.8, "CRITICAL"], "v2_score": 7.5, "v2_exploitability_score": 10.0, "v2_impact_score": 6.4, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 7.5}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": true, "userInteractionRequired": false}], "description": "admin_news.php in Archilles Newsworld up to 1.3.0 allows attackers to bypass authentication by obtaining the password hash for another user, for example through another Newsworld vulnerability, and specifying the hash in the pwd argument.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:archilles:newsworld:*:*:*:*:*:*:*:*", "published": "2005-11-02T11:02:00.000", "last_modified": "2024-02-09T03:13:36.147"}, {"id": "CVE-2005-0408", "score": ["V31", 9.8, "CRITICAL"], "v2_score": 7.5, "v2_exploitability_score": 10.0, "v2_impact_score": 6.4, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 7.5}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": true, "userInteractionRequired": false}], "description": "CitrusDB 0.3.6 and earlier generates easily predictable MD5 hashes of the user name for the id_hash cookie, which allows remote attackers to bypass authentication and gain privileges by calculating the MD5 checksum of the user name combined with the \"boogaadeeboo\" string, which is hard-coded in the $hidden_hash variable.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:citrusdb:citrusdb:*:*:*:*:*:*:*:*", "published": "2005-02-14T05:00:00.000", "last_modified": "2024-02-09T03:13:25.890"}], "cwe_info": {"cwe_id": "522", "name": "Insufficiently Protected Credentials", "weakness_abstraction": "Class", "status": "Incomplete", "description": "The product transmits or stores authentication credentials, but it uses an insecure method that is susceptible to unauthorized interception and/or retrieval.", "extended_description": "", "related_weaknesses": "::NATURE:ChildOf:CWE ID:287:VIEW ID:1000:ORDINAL:Primary::NATURE:ChildOf:CWE ID:287:VIEW ID:1003:ORDINAL:Primary::NATURE:ChildOf:CWE ID:668:VIEW ID:1000::", "weakness_ordinalities": "", "applicable_platforms": "", "background_details": "", "alternate_terms": "", "modes_of_introduction": "::PHASE:Architecture and Design:NOTE:COMMISSION: This weakness refers to an incorrect design related to an architectural security tactic.::PHASE:Implementation::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Access Control:IMPACT:Gain Privileges or Assume Identity:NOTE:An attacker could gain access to user accounts and access sensitive data used by the user accounts.::", "detection_methods": "", "potential_mitigations": "::PHASE:Architecture and Design:DESCRIPTION:Use an appropriate security mechanism to protect the credentials.::PHASE:Architecture and Design:DESCRIPTION:Make appropriate use of cryptography to protect the credentials.::PHASE:Implementation:DESCRIPTION:Use industry standards to protect the credentials (e.g. LDAP, keystore, etc.).::", "observed_examples": "::REFERENCE:CVE-2007-0681:DESCRIPTION:Web app allows remote attackers to change the passwords of arbitrary users without providing the original password, and possibly perform other unauthorized actions.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2007-0681::REFERENCE:CVE-2000-0944:DESCRIPTION:Web application password change utility doesn't check the original password.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2000-0944::REFERENCE:CVE-2005-3435:DESCRIPTION:product authentication succeeds if user-provided MD5 hash matches the hash in its database; this can be subjected to replay attacks.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2005-3435::REFERENCE:CVE-2005-0408:DESCRIPTION:chain: product generates predictable MD5 hashes using a constant value combined with username, allowing authentication bypass.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2005-0408::", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "::TAXONOMY NAME:OWASP Top Ten 2007:ENTRY ID:A7:ENTRY NAME:Broken Authentication and Session Management:MAPPING FIT:CWE More Specific::TAXONOMY NAME:OWASP Top Ten 2004:ENTRY ID:A3:ENTRY NAME:Broken Authentication and Session Management:MAPPING FIT:CWE More Specific::", "related_attack_patterns": "::102::474::50::509::551::555::560::561::600::644::645::652::653::", "notes": ""}}, {"cwe": "CWE-307", "cves": [{"id": "CVE-1999-1152", "score": ["V31", 7.5, "HIGH"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "Compaq/Microcom 6000 Access Integrator does not disconnect a client after a certain number of failed login attempts, which allows remote attackers to guess usernames or passwords via a brute force attack.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:o:compaq:microcom_6000_firmware:-:*:*:*:*:*:*:*", "published": "1998-06-03T04:00:00.000", "last_modified": "2024-02-09T03:15:08.037"}, {"id": "CVE-2001-1291", "score": ["V31", 9.8, "CRITICAL"], "v2_score": 10.0, "v2_exploitability_score": 10.0, "v2_impact_score": 10.0, "v2_vector": "AV:N/AC:L/Au:N/C:C/I:C/A:C", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:C/I:C/A:C", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "COMPLETE", "integrityImpact": "COMPLETE", "availabilityImpact": "COMPLETE", "baseScore": 10.0}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 10.0, "acInsufInfo": false, "obtainAllPrivilege": true, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "The telnet server for 3Com hardware such as PS40 SuperStack II does not delay or disconnect remote attackers who provide an incorrect username or password, which makes it easier to break into the server via brute force password guessing.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:o:3com:superstack_ii_ps_hub_40_firmware:-:*:*:*:*:*:*:*", "published": "2001-07-12T04:00:00.000", "last_modified": "2024-02-09T03:14:12.003"}, {"id": "CVE-2001-0395", "score": ["V31", 9.8, "CRITICAL"], "v2_score": 7.5, "v2_exploitability_score": 10.0, "v2_impact_score": 6.4, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 7.5}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "Lightwave ConsoleServer 3200 does not disconnect users after unsuccessful login attempts, which could allow remote attackers to conduct brute force password guessing.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:o:lightwavemo:consoleserver_3200_firmware:-:*:*:*:*:*:*:*", "published": "2001-07-02T04:00:00.000", "last_modified": "2024-02-09T03:14:07.077"}, {"id": "CVE-2001-1339", "score": ["V31", 9.8, "CRITICAL"], "v2_score": 7.5, "v2_exploitability_score": 10.0, "v2_impact_score": 6.4, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 7.5}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": true, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "Beck IPC GmbH IPC@CHIP telnet service does not delay or disconnect users from the service when bad passwords are entered, which makes it easier for remote attackers to conduct brute force password guessing attacks.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:o:anybus:ipc\\@chip_firmware:-:*:*:*:*:*:*:*", "published": "2001-05-24T04:00:00.000", "last_modified": "2024-02-09T03:15:26.757"}, {"id": "CVE-2002-0628", "score": ["V31", 7.5, "HIGH"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "The Telnet service for Polycom ViewStation before 7.2.4 does not restrict the number of failed login attempts, which makes it easier for remote attackers to guess usernames and passwords via a brute force attack.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:h:polycom:viewstation_128:6.5.1:*:*:*:*:*:*:*", "published": "2003-01-07T05:00:00.000", "last_modified": "2024-02-09T03:14:16.373"}, {"id": "CVE-1999-1324", "score": ["V31", 9.8, "CRITICAL"], "v2_score": 7.5, "v2_exploitability_score": 10.0, "v2_impact_score": 6.4, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 7.5}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "VAXstations running Open VMS 5.3 through 5.5-2 with VMS DECwindows or MOTIF do not properly disable access to user accounts that exceed the break-in limit threshold for failed login attempts, which makes it easier for attackers to conduct brute force password guessing.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:o:hp:openvms_vax:*:*:*:*:*:*:*:*", "published": "1999-12-31T05:00:00.000", "last_modified": "2024-02-09T03:15:13.613"}], "cwe_info": {"cwe_id": "307", "name": "Improper Restriction of Excessive Authentication Attempts", "weakness_abstraction": "Base", "status": "Draft", "description": "The software does not implement sufficient measures to prevent multiple failed authentication attempts within in a short time frame, making it more susceptible to brute force attacks.", "extended_description": "", "related_weaknesses": "::NATURE:ChildOf:CWE ID:287:VIEW ID:1000:ORDINAL:Primary::NATURE:ChildOf:CWE ID:287:VIEW ID:1003:ORDINAL:Primary::NATURE:ChildOf:CWE ID:799:VIEW ID:1000::", "weakness_ordinalities": "", "applicable_platforms": "::LANGUAGE CLASS:Language-Independent:LANGUAGE PREVALENCE:Undetermined::", "background_details": "", "alternate_terms": "", "modes_of_introduction": "::PHASE:Architecture and Design:NOTE:COMMISSION: This weakness refers to an incorrect design related to an architectural security tactic.::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Access Control:IMPACT:Bypass Protection Mechanism:NOTE:An attacker could perform an arbitrary number of authentication attempts using different passwords, and eventually gain access to the targeted account.::", "detection_methods": "::METHOD:Dynamic Analysis with Automated Results Interpretation:DESCRIPTION:According to SOAR, the following detection techniques may be useful: Highly cost effective: Web Application Scanner Web Services Scanner Database Scanners Cost effective for partial coverage: Host-based Vulnerability Scanners - Examine configuration for flaws, verifying that audit mechanisms work, ensure host configuration meets certain predefined criteria:EFFECTIVENESS:High::METHOD:Dynamic Analysis with Manual Results Interpretation:DESCRIPTION:According to SOAR, the following detection techniques may be useful: Highly cost effective: Fuzz Tester Framework-based Fuzzer Cost effective for partial coverage: Forced Path Execution:EFFECTIVENESS:High::METHOD:Manual Static Analysis - Source Code:DESCRIPTION:According to SOAR, the following detection techniques may be useful: Highly cost effective: Focused Manual Spotcheck - Focused manual analysis of source Manual Source Code Review (not inspections):EFFECTIVENESS:High::METHOD:Automated Static Analysis - Source Code:DESCRIPTION:According to SOAR, the following detection techniques may be useful: Cost effective for partial coverage: Source code Weakness Analyzer Context-configured Source Code Weakness Analyzer:EFFECTIVENESS:SOAR Partial::METHOD:Automated Static Analysis:DESCRIPTION:According to SOAR, the following detection techniques may be useful: Cost effective for partial coverage: Configuration Checker:EFFECTIVENESS:SOAR Partial::METHOD:Architecture or Design Review:DESCRIPTION:According to SOAR, the following detection techniques may be useful: Highly cost effective: Formal Methods / Correct-By-Construction Cost effective for partial coverage: Inspection (IEEE 1028 standard) (can apply to requirements, design, source code, etc.):EFFECTIVENESS:High::", "potential_mitigations": "::PHASE:Architecture and Design:DESCRIPTION:Common protection mechanisms include: Disconnecting the user after a small number of failed attempts Implementing a timeout Locking out a targeted account Requiring a computational task on the user's part.::PHASE:Architecture and Design:STRATEGY:Libraries or Frameworks:DESCRIPTION:Use a vetted library or framework that does not allow this weakness to occur or provides constructs that make this weakness easier to avoid. Consider using libraries with authentication capabilities such as OpenSSL or the ESAPI Authenticator. [REF-45]::", "observed_examples": "::REFERENCE:CVE-1999-1152:DESCRIPTION:Product does not disconnect or timeout after multiple failed logins.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-1999-1152::REFERENCE:CVE-2001-1291:DESCRIPTION:Product does not disconnect or timeout after multiple failed logins.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2001-1291::REFERENCE:CVE-2001-0395:DESCRIPTION:Product does not disconnect or timeout after multiple failed logins.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2001-0395::REFERENCE:CVE-2001-1339:DESCRIPTION:Product does not disconnect or timeout after multiple failed logins.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2001-1339::REFERENCE:CVE-2002-0628:DESCRIPTION:Product does not disconnect or timeout after multiple failed logins.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2002-0628::REFERENCE:CVE-1999-1324:DESCRIPTION:User accounts not disabled when they exceed a threshold; possibly a resultant problem.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-1999-1324::", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "::TAXONOMY NAME:PLOVER:ENTRY ID:AUTHENT.MULTFAIL:ENTRY NAME:Multiple Failed Authentication Attempts not Prevented::TAXONOMY NAME:Software Fault Patterns:ENTRY ID:SFP34:ENTRY NAME:Unrestricted authentication::", "related_attack_patterns": "::16::49::560::565::600::652::653::", "notes": ""}}, {"cwe": "CWE-308", "cves": [], "cwe_info": {"cwe_id": "308", "name": "Use of Single-factor Authentication", "weakness_abstraction": "Base", "status": "Draft", "description": "The use of single-factor authentication can lead to unnecessary risk of compromise when compared with the benefits of a dual-factor authentication scheme.", "extended_description": "While the use of multiple authentication schemes is simply piling on more complexity on top of authentication, it is inestimably valuable to have such measures of redundancy. The use of weak, reused, and common passwords is rampant on the internet. Without the added protection of multiple authentication schemes, a single mistake can result in the compromise of an account. For this reason, if multiple schemes are possible and also easy to use, they should be implemented and required.", "related_weaknesses": "::NATURE:ChildOf:CWE ID:287:VIEW ID:1000:ORDINAL:Primary::NATURE:ChildOf:CWE ID:654:VIEW ID:1000::NATURE:PeerOf:CWE ID:309:VIEW ID:1000::", "weakness_ordinalities": "", "applicable_platforms": "::LANGUAGE CLASS:Language-Independent:LANGUAGE PREVALENCE:Undetermined::", "background_details": "", "alternate_terms": "", "modes_of_introduction": "::PHASE:Architecture and Design:NOTE:COMMISSION: This weakness refers to an incorrect design related to an architectural security tactic.::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Access Control:IMPACT:Bypass Protection Mechanism:NOTE:If the secret in a single-factor authentication scheme gets compromised, full authentication is possible.::", "detection_methods": "", "potential_mitigations": "::PHASE:Architecture and Design:DESCRIPTION:Use multiple independent authentication schemes, which ensures that -- if one of the methods is compromised -- the system itself is still likely safe from compromise.::", "observed_examples": "", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "::TAXONOMY NAME:CLASP:ENTRY NAME:Using single-factor authentication::", "related_attack_patterns": "::16::49::509::55::555::560::561::565::600::644::645::652::653::70::", "notes": ""}}, {"cwe": "CWE-309", "cves": [], "cwe_info": {"cwe_id": "309", "name": "Use of Password System for Primary Authentication", "weakness_abstraction": "Base", "status": "Draft", "description": "The use of password systems as the primary means of authentication may be subject to several flaws or shortcomings, each reducing the effectiveness of the mechanism.", "extended_description": "", "related_weaknesses": "::NATURE:ChildOf:CWE ID:287:VIEW ID:1000:ORDINAL:Primary::NATURE:ChildOf:CWE ID:654:VIEW ID:1000::NATURE:PeerOf:CWE ID:308:VIEW ID:1000::", "weakness_ordinalities": "", "applicable_platforms": "::LANGUAGE CLASS:Language-Independent:LANGUAGE PREVALENCE:Undetermined::", "background_details": "::Password systems are the simplest and most ubiquitous authentication mechanisms. However, they are subject to such well known attacks,and such frequent compromise that their use in the most simple implementation is not practical.::", "alternate_terms": "", "modes_of_introduction": "::PHASE:Architecture and Design::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Access Control:IMPACT:Bypass Protection Mechanism:IMPACT:Gain Privileges or Assume Identity:NOTE:A password authentication mechanism error will almost always result in attackers being authorized as valid users.::", "detection_methods": "", "potential_mitigations": "::PHASE:Architecture and Design:DESCRIPTION:In order to protect password systems from compromise, the following should be noted: Passwords should be stored safely to prevent insider attack and to ensure that -- if a system is compromised -- the passwords are not retrievable. Due to password reuse, this information may be useful in the compromise of other systems these users work with. In order to protect these passwords, they should be stored encrypted, in a non-reversible state, such that the original text password cannot be extracted from the stored value. Password aging should be strictly enforced to ensure that passwords do not remain unchanged for long periods of time. The longer a password remains in use, the higher the probability that it has been compromised. For this reason, passwords should require refreshing periodically, and users should be informed of the risk of passwords which remain in use for too long. Password strength should be enforced intelligently. Rather than restrict passwords to specific content, or specific length, users should be encouraged to use upper and lower case letters, numbers, and symbols in their passwords. The system should also ensure that no passwords are derived from dictionary words.::PHASE:Architecture and Design:DESCRIPTION:Use a zero-knowledge password protocol, such as SRP.::PHASE:Architecture and Design:DESCRIPTION:Ensure that passwords are stored safely and are not reversible.::PHASE:Architecture and Design:DESCRIPTION:Implement password aging functionality that requires passwords be changed after a certain point.::PHASE:Architecture and Design:DESCRIPTION:Use a mechanism for determining the strength of a password and notify the user of weak password use.::PHASE:Architecture and Design:DESCRIPTION:Inform the user of why password protections are in place, how they work to protect data integrity, and why it is important to heed their warnings.::", "observed_examples": "", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "::TAXONOMY NAME:CLASP:ENTRY NAME:Using password systems::TAXONOMY NAME:OWASP Top Ten 2004:ENTRY ID:A3:ENTRY NAME:Broken Authentication and Session Management:MAPPING FIT:CWE More Specific::", "related_attack_patterns": "::16::49::509::55::555::560::561::565::600::652::653::70::", "notes": ""}}, {"cwe": "CWE-262", "cves": [], "cwe_info": {"cwe_id": "262", "name": "Not Using Password Aging", "weakness_abstraction": "Base", "status": "Draft", "description": "If no mechanism is in place for managing password aging, users will have no incentive to update passwords in a timely manner.", "extended_description": "Security experts have often recommended that users change their passwords regularly and avoid reusing passwords. Although this can be an effective mitigation, if the expiration window is too short, it can cause users to generate poor or predictable passwords. As such, it is important to discourage creating similar passwords. It is also useful to have a password aging mechanism that notifies users when passwords are considered old and requests that they replace them with new, strong passwords. Companion documentation which stresses how important this practice is can help users understand and better support this approach.", "related_weaknesses": "::NATURE:ChildOf:CWE ID:287:VIEW ID:1000:ORDINAL:Primary::NATURE:ChildOf:CWE ID:404:VIEW ID:1000::NATURE:PeerOf:CWE ID:309:VIEW ID:1000::NATURE:PeerOf:CWE ID:263:VIEW ID:1000::NATURE:PeerOf:CWE ID:324:VIEW ID:1000::", "weakness_ordinalities": "", "applicable_platforms": "::LANGUAGE CLASS:Language-Independent:LANGUAGE PREVALENCE:Undetermined::", "background_details": "", "alternate_terms": "", "modes_of_introduction": "::PHASE:Architecture and Design:NOTE:COMMISSION: This weakness refers to an incorrect design related to an architectural security tactic.::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Access Control:IMPACT:Gain Privileges or Assume Identity:NOTE:As passwords age, the probability that they are compromised grows.::", "detection_methods": "", "potential_mitigations": "::PHASE:Architecture and Design:DESCRIPTION:As part of a product's design, require users to change their passwords regularly and avoid reusing previous passwords.::", "observed_examples": "", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "::TAXONOMY NAME:CLASP:ENTRY NAME:Not allowing password aging::", "related_attack_patterns": "::16::49::509::55::555::560::561::565::600::652::653::70::", "notes": ""}}, {"cwe": "CWE-263", "cves": [], "cwe_info": {"cwe_id": "263", "name": "Password Aging with Long Expiration", "weakness_abstraction": "Base", "status": "Draft", "description": "Allowing password aging to occur unchecked can result in the possibility of diminished password integrity.", "extended_description": "Just as neglecting to include functionality for the management of password aging is dangerous, so is allowing password aging to continue unchecked. Passwords must be given a maximum life span, after which a user is required to update with a new and different password.", "related_weaknesses": "::NATURE:ChildOf:CWE ID:287:VIEW ID:1000:ORDINAL:Primary::NATURE:ChildOf:CWE ID:404:VIEW ID:1000::", "weakness_ordinalities": "", "applicable_platforms": "::LANGUAGE CLASS:Language-Independent:LANGUAGE PREVALENCE:Undetermined::", "background_details": "", "alternate_terms": "", "modes_of_introduction": "::PHASE:Architecture and Design:NOTE:COMMISSION: This weakness refers to an incorrect design related to an architectural security tactic.::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Access Control:IMPACT:Gain Privileges or Assume Identity:NOTE:As passwords age, the probability that they are compromised grows.::", "detection_methods": "", "potential_mitigations": "::PHASE:Architecture and Design:DESCRIPTION:Ensure that password aging is limited so that there is a defined maximum age for passwords and so that the user is notified several times leading up to the password expiration.::", "observed_examples": "", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "::TAXONOMY NAME:CLASP:ENTRY NAME:Allowing password aging::", "related_attack_patterns": "::16::49::509::55::555::560::561::565::600::652::653::70::", "notes": ""}}, {"cwe": "CWE-654", "cves": [], "cwe_info": {"cwe_id": "654", "name": "Reliance on a Single Factor in a Security Decision", "weakness_abstraction": "Base", "status": "Draft", "description": "A protection mechanism relies exclusively, or to a large extent, on the evaluation of a single condition or the integrity of a single object or entity in order to make a decision about granting access to restricted resources or functionality.", "extended_description": "", "related_weaknesses": "::NATURE:ChildOf:CWE ID:657:VIEW ID:1000:ORDINAL:Primary::NATURE:ChildOf:CWE ID:693:VIEW ID:1000::", "weakness_ordinalities": "::ORDINALITY:Primary::", "applicable_platforms": "::LANGUAGE CLASS:Language-Independent:LANGUAGE PREVALENCE:Undetermined::", "background_details": "", "alternate_terms": "::TERM:Separation of Privilege:DESCRIPTION:Some people and publications use the term Separation of Privilege to describe this weakness, but this term has dual meanings in current usage. While this entry is closely associated with the original definition of Separation of Privilege by Saltzer and Schroeder, others use the same term to describe poor compartmentalization (CWE-653). Because there are multiple interpretations, use of the Separation of Privilege term is discouraged.::", "modes_of_introduction": "::PHASE:Architecture and Design::PHASE:Implementation::PHASE:Operation::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Access Control:IMPACT:Gain Privileges or Assume Identity:NOTE:If the single factor is compromised (e.g. by theft or spoofing), then the integrity of the entire security mechanism can be violated with respect to the user that is identified by that factor.::SCOPE:Non-Repudiation:IMPACT:Hide Activities:NOTE:It can become difficult or impossible for the product to be able to distinguish between legitimate activities by the entity who provided the factor, versus illegitimate activities by an attacker.::", "detection_methods": "", "potential_mitigations": "::PHASE:Architecture and Design:DESCRIPTION:Use multiple simultaneous checks before granting access to critical operations or granting critical privileges. A weaker but helpful mitigation is to use several successive checks (multiple layers of security).::PHASE:Architecture and Design:DESCRIPTION:Use redundant access rules on different choke points (e.g., firewalls).::", "observed_examples": "", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "", "related_attack_patterns": "::16::274::49::55::560::565::600::652::653::70::", "notes": "::TYPE:Maintenance:NOTE:This entry is closely associated with the term Separation of Privilege. This term is used in several different ways in the industry, but they generally combine two closely related principles: compartmentalization (CWE-653) and using only one factor in a security decision (this entry). Proper compartmentalization implicitly introduces multiple factors into a security decision, but there can be cases in which multiple factors are required for authentication or other mechanisms that do not involve compartmentalization, such as performing all required checks on a submitted certificate. It is likely that CWE-653 and CWE-654 will provoke further discussion.::"}}, {"cwe": "CWE-1273", "cves": [], "cwe_info": {"cwe_id": "1273", "name": "Device Unlock Credential Sharing", "weakness_abstraction": "Base", "status": "Incomplete", "description": "The credentials necessary for unlocking a device are shared across multiple parties and may expose sensitive information.", "extended_description": "\u201cUnlocking a device\u201d often means activating certain, unadvertised, debug and manufacturer-specific capabilities of a device using sensitive credentials. Unlocking a device might be necessary for the purpose of troubleshooting device problems. For example, suppose a device contains the ability to dump the content of the full system memory by disabling the memory-protection mechanisms. Since this is a highly security-sensitive capability, this capability is \u201clocked\u201d in the production part. Unless the device gets unlocked by supplying the proper credentials the debug capabilities are not available. For cases where the chip designer, chip manufacturer (fabricator), and manufacturing and assembly testers are the all employed by the same company, the compromise of the credentials are greatly reduced. However, when the chip designer is employed by one company, the chip manufacturer is employed by another company (a foundry), and the assemblers and testers are employed by yet a third company. Since these different companies will need to perform various tests on the device to verify correct device function, they all need to share the unlock key. Unfortunately, the level of secrecy and policy might be quite different at each company, greatly increasing the risk of sensitive credentials being compromised.", "related_weaknesses": "::NATURE:ChildOf:CWE ID:200:VIEW ID:1000:ORDINAL:Primary::", "weakness_ordinalities": "", "applicable_platforms": "::LANGUAGE NAME:VHDL:LANGUAGE PREVALENCE:Undetermined::LANGUAGE NAME:Verilog:LANGUAGE PREVALENCE:Undetermined::LANGUAGE CLASS:Compiled:LANGUAGE PREVALENCE:Undetermined::OPERATING SYSTEM CLASS:OS-Independent:OPERATING SYSTEM PREVALENCE:Undetermined::ARCHITECTURE CLASS:Architecture-Independent:ARCHITECTURE PREVALENCE:Undetermined::TECHNOLOGY NAME:Other:TECHNOLOGY PREVALENCE:Undetermined::TECHNOLOGY CLASS:Technology-Independent:TECHNOLOGY PREVALENCE:Undetermined::", "background_details": "", "alternate_terms": "", "modes_of_introduction": "::PHASE:Integration::PHASE:Manufacturing::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Confidentiality:SCOPE:Integrity:SCOPE:Availability:SCOPE:Access Control:SCOPE:Accountability:SCOPE:Authentication:SCOPE:Authorization:SCOPE:Non-Repudiation:IMPACT:Modify Memory:IMPACT:Read Memory:IMPACT:Modify Files or Directories:IMPACT:Read Files or Directories:IMPACT:Modify Application Data:IMPACT:Execute Unauthorized Code or Commands:IMPACT:Gain Privileges or Assume Identity:IMPACT:Bypass Protection Mechanism:NOTE:Once unlock credentials are compromised, an attacker can use the credentials to unlock the device and gain unauthorized access to the hidden functionalities protected by those credentials.::", "detection_methods": "", "potential_mitigations": "::PHASE:Integration:DESCRIPTION:Ensure the unlock credentials are shared with the minimum number of parties and with utmost secrecy. To limit the risk associated with compromised credentials, where possible, the credentials should be part-specific.::PHASE:Manufacturing:DESCRIPTION:Ensure the unlock credentials are shared with the minimum number of parties and with utmost secrecy. To limit the risk associated with compromised credentials, where possible, the credentials should be part-specific.::", "observed_examples": "", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "", "related_attack_patterns": "::560::", "notes": "::TYPE:Maintenance:NOTE:This entry is still under development and will continue to see updates and content improvements.::"}}]}]}, {"technique_id": "T1190", "t_findings": [{"capec_id": "CAPEC-560", "c_findings": [{"cwe": "CWE-522", "cves": [{"id": "CVE-2007-0681", "score": ["V31", 9.8, "CRITICAL"], "v2_score": 7.5, "v2_exploitability_score": 10.0, "v2_impact_score": 6.4, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 7.5}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": true, "userInteractionRequired": false}], "description": "profile.php in ExtCalendar 2 and earlier allows remote attackers to change the passwords of arbitrary users without providing the original password, and possibly perform other unauthorized actions, via modified values to register.php.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:extcalendar_project:extcalendar:*:*:*:*:*:*:*:*", "published": "2007-02-03T01:28:00.000", "last_modified": "2024-02-09T03:13:40.213"}, {"id": "CVE-2000-0944", "score": ["V31", 9.8, "CRITICAL"], "v2_score": 7.5, "v2_exploitability_score": 10.0, "v2_impact_score": 6.4, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 7.5}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": true, "userInteractionRequired": false}], "description": "CGI Script Center News Update 1.1 does not properly validate the original news administration password during a password change operation, which allows remote attackers to modify the password without knowing the original password.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:cgi:script_center_news_update:1.1:*:*:*:*:*:*:*", "published": "2000-12-19T05:00:00.000", "last_modified": "2024-02-09T03:15:18.653"}, {"id": "CVE-2005-3435", "score": ["V31", 9.8, "CRITICAL"], "v2_score": 7.5, "v2_exploitability_score": 10.0, "v2_impact_score": 6.4, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 7.5}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": true, "userInteractionRequired": false}], "description": "admin_news.php in Archilles Newsworld up to 1.3.0 allows attackers to bypass authentication by obtaining the password hash for another user, for example through another Newsworld vulnerability, and specifying the hash in the pwd argument.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:archilles:newsworld:*:*:*:*:*:*:*:*", "published": "2005-11-02T11:02:00.000", "last_modified": "2024-02-09T03:13:36.147"}, {"id": "CVE-2005-0408", "score": ["V31", 9.8, "CRITICAL"], "v2_score": 7.5, "v2_exploitability_score": 10.0, "v2_impact_score": 6.4, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 7.5}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": true, "userInteractionRequired": false}], "description": "CitrusDB 0.3.6 and earlier generates easily predictable MD5 hashes of the user name for the id_hash cookie, which allows remote attackers to bypass authentication and gain privileges by calculating the MD5 checksum of the user name combined with the \"boogaadeeboo\" string, which is hard-coded in the $hidden_hash variable.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:citrusdb:citrusdb:*:*:*:*:*:*:*:*", "published": "2005-02-14T05:00:00.000", "last_modified": "2024-02-09T03:13:25.890"}], "cwe_info": {"cwe_id": "522", "name": "Insufficiently Protected Credentials", "weakness_abstraction": "Class", "status": "Incomplete", "description": "The product transmits or stores authentication credentials, but it uses an insecure method that is susceptible to unauthorized interception and/or retrieval.", "extended_description": "", "related_weaknesses": "::NATURE:ChildOf:CWE ID:287:VIEW ID:1000:ORDINAL:Primary::NATURE:ChildOf:CWE ID:287:VIEW ID:1003:ORDINAL:Primary::NATURE:ChildOf:CWE ID:668:VIEW ID:1000::", "weakness_ordinalities": "", "applicable_platforms": "", "background_details": "", "alternate_terms": "", "modes_of_introduction": "::PHASE:Architecture and Design:NOTE:COMMISSION: This weakness refers to an incorrect design related to an architectural security tactic.::PHASE:Implementation::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Access Control:IMPACT:Gain Privileges or Assume Identity:NOTE:An attacker could gain access to user accounts and access sensitive data used by the user accounts.::", "detection_methods": "", "potential_mitigations": "::PHASE:Architecture and Design:DESCRIPTION:Use an appropriate security mechanism to protect the credentials.::PHASE:Architecture and Design:DESCRIPTION:Make appropriate use of cryptography to protect the credentials.::PHASE:Implementation:DESCRIPTION:Use industry standards to protect the credentials (e.g. LDAP, keystore, etc.).::", "observed_examples": "::REFERENCE:CVE-2007-0681:DESCRIPTION:Web app allows remote attackers to change the passwords of arbitrary users without providing the original password, and possibly perform other unauthorized actions.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2007-0681::REFERENCE:CVE-2000-0944:DESCRIPTION:Web application password change utility doesn't check the original password.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2000-0944::REFERENCE:CVE-2005-3435:DESCRIPTION:product authentication succeeds if user-provided MD5 hash matches the hash in its database; this can be subjected to replay attacks.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2005-3435::REFERENCE:CVE-2005-0408:DESCRIPTION:chain: product generates predictable MD5 hashes using a constant value combined with username, allowing authentication bypass.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2005-0408::", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "::TAXONOMY NAME:OWASP Top Ten 2007:ENTRY ID:A7:ENTRY NAME:Broken Authentication and Session Management:MAPPING FIT:CWE More Specific::TAXONOMY NAME:OWASP Top Ten 2004:ENTRY ID:A3:ENTRY NAME:Broken Authentication and Session Management:MAPPING FIT:CWE More Specific::", "related_attack_patterns": "::102::474::50::509::551::555::560::561::600::644::645::652::653::", "notes": ""}}, {"cwe": "CWE-307", "cves": [{"id": "CVE-1999-1152", "score": ["V31", 7.5, "HIGH"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "Compaq/Microcom 6000 Access Integrator does not disconnect a client after a certain number of failed login attempts, which allows remote attackers to guess usernames or passwords via a brute force attack.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:o:compaq:microcom_6000_firmware:-:*:*:*:*:*:*:*", "published": "1998-06-03T04:00:00.000", "last_modified": "2024-02-09T03:15:08.037"}, {"id": "CVE-2001-1291", "score": ["V31", 9.8, "CRITICAL"], "v2_score": 10.0, "v2_exploitability_score": 10.0, "v2_impact_score": 10.0, "v2_vector": "AV:N/AC:L/Au:N/C:C/I:C/A:C", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:C/I:C/A:C", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "COMPLETE", "integrityImpact": "COMPLETE", "availabilityImpact": "COMPLETE", "baseScore": 10.0}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 10.0, "acInsufInfo": false, "obtainAllPrivilege": true, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "The telnet server for 3Com hardware such as PS40 SuperStack II does not delay or disconnect remote attackers who provide an incorrect username or password, which makes it easier to break into the server via brute force password guessing.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:o:3com:superstack_ii_ps_hub_40_firmware:-:*:*:*:*:*:*:*", "published": "2001-07-12T04:00:00.000", "last_modified": "2024-02-09T03:14:12.003"}, {"id": "CVE-2001-0395", "score": ["V31", 9.8, "CRITICAL"], "v2_score": 7.5, "v2_exploitability_score": 10.0, "v2_impact_score": 6.4, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 7.5}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "Lightwave ConsoleServer 3200 does not disconnect users after unsuccessful login attempts, which could allow remote attackers to conduct brute force password guessing.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:o:lightwavemo:consoleserver_3200_firmware:-:*:*:*:*:*:*:*", "published": "2001-07-02T04:00:00.000", "last_modified": "2024-02-09T03:14:07.077"}, {"id": "CVE-2001-1339", "score": ["V31", 9.8, "CRITICAL"], "v2_score": 7.5, "v2_exploitability_score": 10.0, "v2_impact_score": 6.4, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 7.5}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": true, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "Beck IPC GmbH IPC@CHIP telnet service does not delay or disconnect users from the service when bad passwords are entered, which makes it easier for remote attackers to conduct brute force password guessing attacks.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:o:anybus:ipc\\@chip_firmware:-:*:*:*:*:*:*:*", "published": "2001-05-24T04:00:00.000", "last_modified": "2024-02-09T03:15:26.757"}, {"id": "CVE-2002-0628", "score": ["V31", 7.5, "HIGH"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "The Telnet service for Polycom ViewStation before 7.2.4 does not restrict the number of failed login attempts, which makes it easier for remote attackers to guess usernames and passwords via a brute force attack.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:h:polycom:viewstation_128:6.5.1:*:*:*:*:*:*:*", "published": "2003-01-07T05:00:00.000", "last_modified": "2024-02-09T03:14:16.373"}, {"id": "CVE-1999-1324", "score": ["V31", 9.8, "CRITICAL"], "v2_score": 7.5, "v2_exploitability_score": 10.0, "v2_impact_score": 6.4, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 7.5}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "VAXstations running Open VMS 5.3 through 5.5-2 with VMS DECwindows or MOTIF do not properly disable access to user accounts that exceed the break-in limit threshold for failed login attempts, which makes it easier for attackers to conduct brute force password guessing.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:o:hp:openvms_vax:*:*:*:*:*:*:*:*", "published": "1999-12-31T05:00:00.000", "last_modified": "2024-02-09T03:15:13.613"}], "cwe_info": {"cwe_id": "307", "name": "Improper Restriction of Excessive Authentication Attempts", "weakness_abstraction": "Base", "status": "Draft", "description": "The software does not implement sufficient measures to prevent multiple failed authentication attempts within in a short time frame, making it more susceptible to brute force attacks.", "extended_description": "", "related_weaknesses": "::NATURE:ChildOf:CWE ID:287:VIEW ID:1000:ORDINAL:Primary::NATURE:ChildOf:CWE ID:287:VIEW ID:1003:ORDINAL:Primary::NATURE:ChildOf:CWE ID:799:VIEW ID:1000::", "weakness_ordinalities": "", "applicable_platforms": "::LANGUAGE CLASS:Language-Independent:LANGUAGE PREVALENCE:Undetermined::", "background_details": "", "alternate_terms": "", "modes_of_introduction": "::PHASE:Architecture and Design:NOTE:COMMISSION: This weakness refers to an incorrect design related to an architectural security tactic.::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Access Control:IMPACT:Bypass Protection Mechanism:NOTE:An attacker could perform an arbitrary number of authentication attempts using different passwords, and eventually gain access to the targeted account.::", "detection_methods": "::METHOD:Dynamic Analysis with Automated Results Interpretation:DESCRIPTION:According to SOAR, the following detection techniques may be useful: Highly cost effective: Web Application Scanner Web Services Scanner Database Scanners Cost effective for partial coverage: Host-based Vulnerability Scanners - Examine configuration for flaws, verifying that audit mechanisms work, ensure host configuration meets certain predefined criteria:EFFECTIVENESS:High::METHOD:Dynamic Analysis with Manual Results Interpretation:DESCRIPTION:According to SOAR, the following detection techniques may be useful: Highly cost effective: Fuzz Tester Framework-based Fuzzer Cost effective for partial coverage: Forced Path Execution:EFFECTIVENESS:High::METHOD:Manual Static Analysis - Source Code:DESCRIPTION:According to SOAR, the following detection techniques may be useful: Highly cost effective: Focused Manual Spotcheck - Focused manual analysis of source Manual Source Code Review (not inspections):EFFECTIVENESS:High::METHOD:Automated Static Analysis - Source Code:DESCRIPTION:According to SOAR, the following detection techniques may be useful: Cost effective for partial coverage: Source code Weakness Analyzer Context-configured Source Code Weakness Analyzer:EFFECTIVENESS:SOAR Partial::METHOD:Automated Static Analysis:DESCRIPTION:According to SOAR, the following detection techniques may be useful: Cost effective for partial coverage: Configuration Checker:EFFECTIVENESS:SOAR Partial::METHOD:Architecture or Design Review:DESCRIPTION:According to SOAR, the following detection techniques may be useful: Highly cost effective: Formal Methods / Correct-By-Construction Cost effective for partial coverage: Inspection (IEEE 1028 standard) (can apply to requirements, design, source code, etc.):EFFECTIVENESS:High::", "potential_mitigations": "::PHASE:Architecture and Design:DESCRIPTION:Common protection mechanisms include: Disconnecting the user after a small number of failed attempts Implementing a timeout Locking out a targeted account Requiring a computational task on the user's part.::PHASE:Architecture and Design:STRATEGY:Libraries or Frameworks:DESCRIPTION:Use a vetted library or framework that does not allow this weakness to occur or provides constructs that make this weakness easier to avoid. Consider using libraries with authentication capabilities such as OpenSSL or the ESAPI Authenticator. [REF-45]::", "observed_examples": "::REFERENCE:CVE-1999-1152:DESCRIPTION:Product does not disconnect or timeout after multiple failed logins.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-1999-1152::REFERENCE:CVE-2001-1291:DESCRIPTION:Product does not disconnect or timeout after multiple failed logins.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2001-1291::REFERENCE:CVE-2001-0395:DESCRIPTION:Product does not disconnect or timeout after multiple failed logins.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2001-0395::REFERENCE:CVE-2001-1339:DESCRIPTION:Product does not disconnect or timeout after multiple failed logins.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2001-1339::REFERENCE:CVE-2002-0628:DESCRIPTION:Product does not disconnect or timeout after multiple failed logins.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2002-0628::REFERENCE:CVE-1999-1324:DESCRIPTION:User accounts not disabled when they exceed a threshold; possibly a resultant problem.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-1999-1324::", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "::TAXONOMY NAME:PLOVER:ENTRY ID:AUTHENT.MULTFAIL:ENTRY NAME:Multiple Failed Authentication Attempts not Prevented::TAXONOMY NAME:Software Fault Patterns:ENTRY ID:SFP34:ENTRY NAME:Unrestricted authentication::", "related_attack_patterns": "::16::49::560::565::600::652::653::", "notes": ""}}, {"cwe": "CWE-308", "cves": [], "cwe_info": {"cwe_id": "308", "name": "Use of Single-factor Authentication", "weakness_abstraction": "Base", "status": "Draft", "description": "The use of single-factor authentication can lead to unnecessary risk of compromise when compared with the benefits of a dual-factor authentication scheme.", "extended_description": "While the use of multiple authentication schemes is simply piling on more complexity on top of authentication, it is inestimably valuable to have such measures of redundancy. The use of weak, reused, and common passwords is rampant on the internet. Without the added protection of multiple authentication schemes, a single mistake can result in the compromise of an account. For this reason, if multiple schemes are possible and also easy to use, they should be implemented and required.", "related_weaknesses": "::NATURE:ChildOf:CWE ID:287:VIEW ID:1000:ORDINAL:Primary::NATURE:ChildOf:CWE ID:654:VIEW ID:1000::NATURE:PeerOf:CWE ID:309:VIEW ID:1000::", "weakness_ordinalities": "", "applicable_platforms": "::LANGUAGE CLASS:Language-Independent:LANGUAGE PREVALENCE:Undetermined::", "background_details": "", "alternate_terms": "", "modes_of_introduction": "::PHASE:Architecture and Design:NOTE:COMMISSION: This weakness refers to an incorrect design related to an architectural security tactic.::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Access Control:IMPACT:Bypass Protection Mechanism:NOTE:If the secret in a single-factor authentication scheme gets compromised, full authentication is possible.::", "detection_methods": "", "potential_mitigations": "::PHASE:Architecture and Design:DESCRIPTION:Use multiple independent authentication schemes, which ensures that -- if one of the methods is compromised -- the system itself is still likely safe from compromise.::", "observed_examples": "", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "::TAXONOMY NAME:CLASP:ENTRY NAME:Using single-factor authentication::", "related_attack_patterns": "::16::49::509::55::555::560::561::565::600::644::645::652::653::70::", "notes": ""}}, {"cwe": "CWE-309", "cves": [], "cwe_info": {"cwe_id": "309", "name": "Use of Password System for Primary Authentication", "weakness_abstraction": "Base", "status": "Draft", "description": "The use of password systems as the primary means of authentication may be subject to several flaws or shortcomings, each reducing the effectiveness of the mechanism.", "extended_description": "", "related_weaknesses": "::NATURE:ChildOf:CWE ID:287:VIEW ID:1000:ORDINAL:Primary::NATURE:ChildOf:CWE ID:654:VIEW ID:1000::NATURE:PeerOf:CWE ID:308:VIEW ID:1000::", "weakness_ordinalities": "", "applicable_platforms": "::LANGUAGE CLASS:Language-Independent:LANGUAGE PREVALENCE:Undetermined::", "background_details": "::Password systems are the simplest and most ubiquitous authentication mechanisms. However, they are subject to such well known attacks,and such frequent compromise that their use in the most simple implementation is not practical.::", "alternate_terms": "", "modes_of_introduction": "::PHASE:Architecture and Design::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Access Control:IMPACT:Bypass Protection Mechanism:IMPACT:Gain Privileges or Assume Identity:NOTE:A password authentication mechanism error will almost always result in attackers being authorized as valid users.::", "detection_methods": "", "potential_mitigations": "::PHASE:Architecture and Design:DESCRIPTION:In order to protect password systems from compromise, the following should be noted: Passwords should be stored safely to prevent insider attack and to ensure that -- if a system is compromised -- the passwords are not retrievable. Due to password reuse, this information may be useful in the compromise of other systems these users work with. In order to protect these passwords, they should be stored encrypted, in a non-reversible state, such that the original text password cannot be extracted from the stored value. Password aging should be strictly enforced to ensure that passwords do not remain unchanged for long periods of time. The longer a password remains in use, the higher the probability that it has been compromised. For this reason, passwords should require refreshing periodically, and users should be informed of the risk of passwords which remain in use for too long. Password strength should be enforced intelligently. Rather than restrict passwords to specific content, or specific length, users should be encouraged to use upper and lower case letters, numbers, and symbols in their passwords. The system should also ensure that no passwords are derived from dictionary words.::PHASE:Architecture and Design:DESCRIPTION:Use a zero-knowledge password protocol, such as SRP.::PHASE:Architecture and Design:DESCRIPTION:Ensure that passwords are stored safely and are not reversible.::PHASE:Architecture and Design:DESCRIPTION:Implement password aging functionality that requires passwords be changed after a certain point.::PHASE:Architecture and Design:DESCRIPTION:Use a mechanism for determining the strength of a password and notify the user of weak password use.::PHASE:Architecture and Design:DESCRIPTION:Inform the user of why password protections are in place, how they work to protect data integrity, and why it is important to heed their warnings.::", "observed_examples": "", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "::TAXONOMY NAME:CLASP:ENTRY NAME:Using password systems::TAXONOMY NAME:OWASP Top Ten 2004:ENTRY ID:A3:ENTRY NAME:Broken Authentication and Session Management:MAPPING FIT:CWE More Specific::", "related_attack_patterns": "::16::49::509::55::555::560::561::565::600::652::653::70::", "notes": ""}}, {"cwe": "CWE-262", "cves": [], "cwe_info": {"cwe_id": "262", "name": "Not Using Password Aging", "weakness_abstraction": "Base", "status": "Draft", "description": "If no mechanism is in place for managing password aging, users will have no incentive to update passwords in a timely manner.", "extended_description": "Security experts have often recommended that users change their passwords regularly and avoid reusing passwords. Although this can be an effective mitigation, if the expiration window is too short, it can cause users to generate poor or predictable passwords. As such, it is important to discourage creating similar passwords. It is also useful to have a password aging mechanism that notifies users when passwords are considered old and requests that they replace them with new, strong passwords. Companion documentation which stresses how important this practice is can help users understand and better support this approach.", "related_weaknesses": "::NATURE:ChildOf:CWE ID:287:VIEW ID:1000:ORDINAL:Primary::NATURE:ChildOf:CWE ID:404:VIEW ID:1000::NATURE:PeerOf:CWE ID:309:VIEW ID:1000::NATURE:PeerOf:CWE ID:263:VIEW ID:1000::NATURE:PeerOf:CWE ID:324:VIEW ID:1000::", "weakness_ordinalities": "", "applicable_platforms": "::LANGUAGE CLASS:Language-Independent:LANGUAGE PREVALENCE:Undetermined::", "background_details": "", "alternate_terms": "", "modes_of_introduction": "::PHASE:Architecture and Design:NOTE:COMMISSION: This weakness refers to an incorrect design related to an architectural security tactic.::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Access Control:IMPACT:Gain Privileges or Assume Identity:NOTE:As passwords age, the probability that they are compromised grows.::", "detection_methods": "", "potential_mitigations": "::PHASE:Architecture and Design:DESCRIPTION:As part of a product's design, require users to change their passwords regularly and avoid reusing previous passwords.::", "observed_examples": "", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "::TAXONOMY NAME:CLASP:ENTRY NAME:Not allowing password aging::", "related_attack_patterns": "::16::49::509::55::555::560::561::565::600::652::653::70::", "notes": ""}}, {"cwe": "CWE-263", "cves": [], "cwe_info": {"cwe_id": "263", "name": "Password Aging with Long Expiration", "weakness_abstraction": "Base", "status": "Draft", "description": "Allowing password aging to occur unchecked can result in the possibility of diminished password integrity.", "extended_description": "Just as neglecting to include functionality for the management of password aging is dangerous, so is allowing password aging to continue unchecked. Passwords must be given a maximum life span, after which a user is required to update with a new and different password.", "related_weaknesses": "::NATURE:ChildOf:CWE ID:287:VIEW ID:1000:ORDINAL:Primary::NATURE:ChildOf:CWE ID:404:VIEW ID:1000::", "weakness_ordinalities": "", "applicable_platforms": "::LANGUAGE CLASS:Language-Independent:LANGUAGE PREVALENCE:Undetermined::", "background_details": "", "alternate_terms": "", "modes_of_introduction": "::PHASE:Architecture and Design:NOTE:COMMISSION: This weakness refers to an incorrect design related to an architectural security tactic.::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Access Control:IMPACT:Gain Privileges or Assume Identity:NOTE:As passwords age, the probability that they are compromised grows.::", "detection_methods": "", "potential_mitigations": "::PHASE:Architecture and Design:DESCRIPTION:Ensure that password aging is limited so that there is a defined maximum age for passwords and so that the user is notified several times leading up to the password expiration.::", "observed_examples": "", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "::TAXONOMY NAME:CLASP:ENTRY NAME:Allowing password aging::", "related_attack_patterns": "::16::49::509::55::555::560::561::565::600::652::653::70::", "notes": ""}}, {"cwe": "CWE-654", "cves": [], "cwe_info": {"cwe_id": "654", "name": "Reliance on a Single Factor in a Security Decision", "weakness_abstraction": "Base", "status": "Draft", "description": "A protection mechanism relies exclusively, or to a large extent, on the evaluation of a single condition or the integrity of a single object or entity in order to make a decision about granting access to restricted resources or functionality.", "extended_description": "", "related_weaknesses": "::NATURE:ChildOf:CWE ID:657:VIEW ID:1000:ORDINAL:Primary::NATURE:ChildOf:CWE ID:693:VIEW ID:1000::", "weakness_ordinalities": "::ORDINALITY:Primary::", "applicable_platforms": "::LANGUAGE CLASS:Language-Independent:LANGUAGE PREVALENCE:Undetermined::", "background_details": "", "alternate_terms": "::TERM:Separation of Privilege:DESCRIPTION:Some people and publications use the term Separation of Privilege to describe this weakness, but this term has dual meanings in current usage. While this entry is closely associated with the original definition of Separation of Privilege by Saltzer and Schroeder, others use the same term to describe poor compartmentalization (CWE-653). Because there are multiple interpretations, use of the Separation of Privilege term is discouraged.::", "modes_of_introduction": "::PHASE:Architecture and Design::PHASE:Implementation::PHASE:Operation::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Access Control:IMPACT:Gain Privileges or Assume Identity:NOTE:If the single factor is compromised (e.g. by theft or spoofing), then the integrity of the entire security mechanism can be violated with respect to the user that is identified by that factor.::SCOPE:Non-Repudiation:IMPACT:Hide Activities:NOTE:It can become difficult or impossible for the product to be able to distinguish between legitimate activities by the entity who provided the factor, versus illegitimate activities by an attacker.::", "detection_methods": "", "potential_mitigations": "::PHASE:Architecture and Design:DESCRIPTION:Use multiple simultaneous checks before granting access to critical operations or granting critical privileges. A weaker but helpful mitigation is to use several successive checks (multiple layers of security).::PHASE:Architecture and Design:DESCRIPTION:Use redundant access rules on different choke points (e.g., firewalls).::", "observed_examples": "", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "", "related_attack_patterns": "::16::274::49::55::560::565::600::652::653::70::", "notes": "::TYPE:Maintenance:NOTE:This entry is closely associated with the term Separation of Privilege. This term is used in several different ways in the industry, but they generally combine two closely related principles: compartmentalization (CWE-653) and using only one factor in a security decision (this entry). Proper compartmentalization implicitly introduces multiple factors into a security decision, but there can be cases in which multiple factors are required for authentication or other mechanisms that do not involve compartmentalization, such as performing all required checks on a submitted certificate. It is likely that CWE-653 and CWE-654 will provoke further discussion.::"}}, {"cwe": "CWE-1273", "cves": [], "cwe_info": {"cwe_id": "1273", "name": "Device Unlock Credential Sharing", "weakness_abstraction": "Base", "status": "Incomplete", "description": "The credentials necessary for unlocking a device are shared across multiple parties and may expose sensitive information.", "extended_description": "\u201cUnlocking a device\u201d often means activating certain, unadvertised, debug and manufacturer-specific capabilities of a device using sensitive credentials. Unlocking a device might be necessary for the purpose of troubleshooting device problems. For example, suppose a device contains the ability to dump the content of the full system memory by disabling the memory-protection mechanisms. Since this is a highly security-sensitive capability, this capability is \u201clocked\u201d in the production part. Unless the device gets unlocked by supplying the proper credentials the debug capabilities are not available. For cases where the chip designer, chip manufacturer (fabricator), and manufacturing and assembly testers are the all employed by the same company, the compromise of the credentials are greatly reduced. However, when the chip designer is employed by one company, the chip manufacturer is employed by another company (a foundry), and the assemblers and testers are employed by yet a third company. Since these different companies will need to perform various tests on the device to verify correct device function, they all need to share the unlock key. Unfortunately, the level of secrecy and policy might be quite different at each company, greatly increasing the risk of sensitive credentials being compromised.", "related_weaknesses": "::NATURE:ChildOf:CWE ID:200:VIEW ID:1000:ORDINAL:Primary::", "weakness_ordinalities": "", "applicable_platforms": "::LANGUAGE NAME:VHDL:LANGUAGE PREVALENCE:Undetermined::LANGUAGE NAME:Verilog:LANGUAGE PREVALENCE:Undetermined::LANGUAGE CLASS:Compiled:LANGUAGE PREVALENCE:Undetermined::OPERATING SYSTEM CLASS:OS-Independent:OPERATING SYSTEM PREVALENCE:Undetermined::ARCHITECTURE CLASS:Architecture-Independent:ARCHITECTURE PREVALENCE:Undetermined::TECHNOLOGY NAME:Other:TECHNOLOGY PREVALENCE:Undetermined::TECHNOLOGY CLASS:Technology-Independent:TECHNOLOGY PREVALENCE:Undetermined::", "background_details": "", "alternate_terms": "", "modes_of_introduction": "::PHASE:Integration::PHASE:Manufacturing::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Confidentiality:SCOPE:Integrity:SCOPE:Availability:SCOPE:Access Control:SCOPE:Accountability:SCOPE:Authentication:SCOPE:Authorization:SCOPE:Non-Repudiation:IMPACT:Modify Memory:IMPACT:Read Memory:IMPACT:Modify Files or Directories:IMPACT:Read Files or Directories:IMPACT:Modify Application Data:IMPACT:Execute Unauthorized Code or Commands:IMPACT:Gain Privileges or Assume Identity:IMPACT:Bypass Protection Mechanism:NOTE:Once unlock credentials are compromised, an attacker can use the credentials to unlock the device and gain unauthorized access to the hidden functionalities protected by those credentials.::", "detection_methods": "", "potential_mitigations": "::PHASE:Integration:DESCRIPTION:Ensure the unlock credentials are shared with the minimum number of parties and with utmost secrecy. To limit the risk associated with compromised credentials, where possible, the credentials should be part-specific.::PHASE:Manufacturing:DESCRIPTION:Ensure the unlock credentials are shared with the minimum number of parties and with utmost secrecy. To limit the risk associated with compromised credentials, where possible, the credentials should be part-specific.::", "observed_examples": "", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "", "related_attack_patterns": "::560::", "notes": "::TYPE:Maintenance:NOTE:This entry is still under development and will continue to see updates and content improvements.::"}}]}]}, {"technique_id": "T1610", "t_findings": [{"capec_id": "CAPEC-560", "c_findings": [{"cwe": "CWE-522", "cves": [{"id": "CVE-2007-0681", "score": ["V31", 9.8, "CRITICAL"], "v2_score": 7.5, "v2_exploitability_score": 10.0, "v2_impact_score": 6.4, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 7.5}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": true, "userInteractionRequired": false}], "description": "profile.php in ExtCalendar 2 and earlier allows remote attackers to change the passwords of arbitrary users without providing the original password, and possibly perform other unauthorized actions, via modified values to register.php.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:extcalendar_project:extcalendar:*:*:*:*:*:*:*:*", "published": "2007-02-03T01:28:00.000", "last_modified": "2024-02-09T03:13:40.213"}, {"id": "CVE-2000-0944", "score": ["V31", 9.8, "CRITICAL"], "v2_score": 7.5, "v2_exploitability_score": 10.0, "v2_impact_score": 6.4, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 7.5}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": true, "userInteractionRequired": false}], "description": "CGI Script Center News Update 1.1 does not properly validate the original news administration password during a password change operation, which allows remote attackers to modify the password without knowing the original password.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:cgi:script_center_news_update:1.1:*:*:*:*:*:*:*", "published": "2000-12-19T05:00:00.000", "last_modified": "2024-02-09T03:15:18.653"}, {"id": "CVE-2005-3435", "score": ["V31", 9.8, "CRITICAL"], "v2_score": 7.5, "v2_exploitability_score": 10.0, "v2_impact_score": 6.4, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 7.5}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": true, "userInteractionRequired": false}], "description": "admin_news.php in Archilles Newsworld up to 1.3.0 allows attackers to bypass authentication by obtaining the password hash for another user, for example through another Newsworld vulnerability, and specifying the hash in the pwd argument.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:archilles:newsworld:*:*:*:*:*:*:*:*", "published": "2005-11-02T11:02:00.000", "last_modified": "2024-02-09T03:13:36.147"}, {"id": "CVE-2005-0408", "score": ["V31", 9.8, "CRITICAL"], "v2_score": 7.5, "v2_exploitability_score": 10.0, "v2_impact_score": 6.4, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 7.5}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": true, "userInteractionRequired": false}], "description": "CitrusDB 0.3.6 and earlier generates easily predictable MD5 hashes of the user name for the id_hash cookie, which allows remote attackers to bypass authentication and gain privileges by calculating the MD5 checksum of the user name combined with the \"boogaadeeboo\" string, which is hard-coded in the $hidden_hash variable.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:citrusdb:citrusdb:*:*:*:*:*:*:*:*", "published": "2005-02-14T05:00:00.000", "last_modified": "2024-02-09T03:13:25.890"}], "cwe_info": {"cwe_id": "522", "name": "Insufficiently Protected Credentials", "weakness_abstraction": "Class", "status": "Incomplete", "description": "The product transmits or stores authentication credentials, but it uses an insecure method that is susceptible to unauthorized interception and/or retrieval.", "extended_description": "", "related_weaknesses": "::NATURE:ChildOf:CWE ID:287:VIEW ID:1000:ORDINAL:Primary::NATURE:ChildOf:CWE ID:287:VIEW ID:1003:ORDINAL:Primary::NATURE:ChildOf:CWE ID:668:VIEW ID:1000::", "weakness_ordinalities": "", "applicable_platforms": "", "background_details": "", "alternate_terms": "", "modes_of_introduction": "::PHASE:Architecture and Design:NOTE:COMMISSION: This weakness refers to an incorrect design related to an architectural security tactic.::PHASE:Implementation::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Access Control:IMPACT:Gain Privileges or Assume Identity:NOTE:An attacker could gain access to user accounts and access sensitive data used by the user accounts.::", "detection_methods": "", "potential_mitigations": "::PHASE:Architecture and Design:DESCRIPTION:Use an appropriate security mechanism to protect the credentials.::PHASE:Architecture and Design:DESCRIPTION:Make appropriate use of cryptography to protect the credentials.::PHASE:Implementation:DESCRIPTION:Use industry standards to protect the credentials (e.g. LDAP, keystore, etc.).::", "observed_examples": "::REFERENCE:CVE-2007-0681:DESCRIPTION:Web app allows remote attackers to change the passwords of arbitrary users without providing the original password, and possibly perform other unauthorized actions.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2007-0681::REFERENCE:CVE-2000-0944:DESCRIPTION:Web application password change utility doesn't check the original password.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2000-0944::REFERENCE:CVE-2005-3435:DESCRIPTION:product authentication succeeds if user-provided MD5 hash matches the hash in its database; this can be subjected to replay attacks.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2005-3435::REFERENCE:CVE-2005-0408:DESCRIPTION:chain: product generates predictable MD5 hashes using a constant value combined with username, allowing authentication bypass.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2005-0408::", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "::TAXONOMY NAME:OWASP Top Ten 2007:ENTRY ID:A7:ENTRY NAME:Broken Authentication and Session Management:MAPPING FIT:CWE More Specific::TAXONOMY NAME:OWASP Top Ten 2004:ENTRY ID:A3:ENTRY NAME:Broken Authentication and Session Management:MAPPING FIT:CWE More Specific::", "related_attack_patterns": "::102::474::50::509::551::555::560::561::600::644::645::652::653::", "notes": ""}}, {"cwe": "CWE-307", "cves": [{"id": "CVE-1999-1152", "score": ["V31", 7.5, "HIGH"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "Compaq/Microcom 6000 Access Integrator does not disconnect a client after a certain number of failed login attempts, which allows remote attackers to guess usernames or passwords via a brute force attack.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:o:compaq:microcom_6000_firmware:-:*:*:*:*:*:*:*", "published": "1998-06-03T04:00:00.000", "last_modified": "2024-02-09T03:15:08.037"}, {"id": "CVE-2001-1291", "score": ["V31", 9.8, "CRITICAL"], "v2_score": 10.0, "v2_exploitability_score": 10.0, "v2_impact_score": 10.0, "v2_vector": "AV:N/AC:L/Au:N/C:C/I:C/A:C", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:C/I:C/A:C", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "COMPLETE", "integrityImpact": "COMPLETE", "availabilityImpact": "COMPLETE", "baseScore": 10.0}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 10.0, "acInsufInfo": false, "obtainAllPrivilege": true, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "The telnet server for 3Com hardware such as PS40 SuperStack II does not delay or disconnect remote attackers who provide an incorrect username or password, which makes it easier to break into the server via brute force password guessing.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:o:3com:superstack_ii_ps_hub_40_firmware:-:*:*:*:*:*:*:*", "published": "2001-07-12T04:00:00.000", "last_modified": "2024-02-09T03:14:12.003"}, {"id": "CVE-2001-0395", "score": ["V31", 9.8, "CRITICAL"], "v2_score": 7.5, "v2_exploitability_score": 10.0, "v2_impact_score": 6.4, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 7.5}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "Lightwave ConsoleServer 3200 does not disconnect users after unsuccessful login attempts, which could allow remote attackers to conduct brute force password guessing.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:o:lightwavemo:consoleserver_3200_firmware:-:*:*:*:*:*:*:*", "published": "2001-07-02T04:00:00.000", "last_modified": "2024-02-09T03:14:07.077"}, {"id": "CVE-2001-1339", "score": ["V31", 9.8, "CRITICAL"], "v2_score": 7.5, "v2_exploitability_score": 10.0, "v2_impact_score": 6.4, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 7.5}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": true, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "Beck IPC GmbH IPC@CHIP telnet service does not delay or disconnect users from the service when bad passwords are entered, which makes it easier for remote attackers to conduct brute force password guessing attacks.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:o:anybus:ipc\\@chip_firmware:-:*:*:*:*:*:*:*", "published": "2001-05-24T04:00:00.000", "last_modified": "2024-02-09T03:15:26.757"}, {"id": "CVE-2002-0628", "score": ["V31", 7.5, "HIGH"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "The Telnet service for Polycom ViewStation before 7.2.4 does not restrict the number of failed login attempts, which makes it easier for remote attackers to guess usernames and passwords via a brute force attack.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:h:polycom:viewstation_128:6.5.1:*:*:*:*:*:*:*", "published": "2003-01-07T05:00:00.000", "last_modified": "2024-02-09T03:14:16.373"}, {"id": "CVE-1999-1324", "score": ["V31", 9.8, "CRITICAL"], "v2_score": 7.5, "v2_exploitability_score": 10.0, "v2_impact_score": 6.4, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 7.5}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "VAXstations running Open VMS 5.3 through 5.5-2 with VMS DECwindows or MOTIF do not properly disable access to user accounts that exceed the break-in limit threshold for failed login attempts, which makes it easier for attackers to conduct brute force password guessing.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:o:hp:openvms_vax:*:*:*:*:*:*:*:*", "published": "1999-12-31T05:00:00.000", "last_modified": "2024-02-09T03:15:13.613"}], "cwe_info": {"cwe_id": "307", "name": "Improper Restriction of Excessive Authentication Attempts", "weakness_abstraction": "Base", "status": "Draft", "description": "The software does not implement sufficient measures to prevent multiple failed authentication attempts within in a short time frame, making it more susceptible to brute force attacks.", "extended_description": "", "related_weaknesses": "::NATURE:ChildOf:CWE ID:287:VIEW ID:1000:ORDINAL:Primary::NATURE:ChildOf:CWE ID:287:VIEW ID:1003:ORDINAL:Primary::NATURE:ChildOf:CWE ID:799:VIEW ID:1000::", "weakness_ordinalities": "", "applicable_platforms": "::LANGUAGE CLASS:Language-Independent:LANGUAGE PREVALENCE:Undetermined::", "background_details": "", "alternate_terms": "", "modes_of_introduction": "::PHASE:Architecture and Design:NOTE:COMMISSION: This weakness refers to an incorrect design related to an architectural security tactic.::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Access Control:IMPACT:Bypass Protection Mechanism:NOTE:An attacker could perform an arbitrary number of authentication attempts using different passwords, and eventually gain access to the targeted account.::", "detection_methods": "::METHOD:Dynamic Analysis with Automated Results Interpretation:DESCRIPTION:According to SOAR, the following detection techniques may be useful: Highly cost effective: Web Application Scanner Web Services Scanner Database Scanners Cost effective for partial coverage: Host-based Vulnerability Scanners - Examine configuration for flaws, verifying that audit mechanisms work, ensure host configuration meets certain predefined criteria:EFFECTIVENESS:High::METHOD:Dynamic Analysis with Manual Results Interpretation:DESCRIPTION:According to SOAR, the following detection techniques may be useful: Highly cost effective: Fuzz Tester Framework-based Fuzzer Cost effective for partial coverage: Forced Path Execution:EFFECTIVENESS:High::METHOD:Manual Static Analysis - Source Code:DESCRIPTION:According to SOAR, the following detection techniques may be useful: Highly cost effective: Focused Manual Spotcheck - Focused manual analysis of source Manual Source Code Review (not inspections):EFFECTIVENESS:High::METHOD:Automated Static Analysis - Source Code:DESCRIPTION:According to SOAR, the following detection techniques may be useful: Cost effective for partial coverage: Source code Weakness Analyzer Context-configured Source Code Weakness Analyzer:EFFECTIVENESS:SOAR Partial::METHOD:Automated Static Analysis:DESCRIPTION:According to SOAR, the following detection techniques may be useful: Cost effective for partial coverage: Configuration Checker:EFFECTIVENESS:SOAR Partial::METHOD:Architecture or Design Review:DESCRIPTION:According to SOAR, the following detection techniques may be useful: Highly cost effective: Formal Methods / Correct-By-Construction Cost effective for partial coverage: Inspection (IEEE 1028 standard) (can apply to requirements, design, source code, etc.):EFFECTIVENESS:High::", "potential_mitigations": "::PHASE:Architecture and Design:DESCRIPTION:Common protection mechanisms include: Disconnecting the user after a small number of failed attempts Implementing a timeout Locking out a targeted account Requiring a computational task on the user's part.::PHASE:Architecture and Design:STRATEGY:Libraries or Frameworks:DESCRIPTION:Use a vetted library or framework that does not allow this weakness to occur or provides constructs that make this weakness easier to avoid. Consider using libraries with authentication capabilities such as OpenSSL or the ESAPI Authenticator. [REF-45]::", "observed_examples": "::REFERENCE:CVE-1999-1152:DESCRIPTION:Product does not disconnect or timeout after multiple failed logins.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-1999-1152::REFERENCE:CVE-2001-1291:DESCRIPTION:Product does not disconnect or timeout after multiple failed logins.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2001-1291::REFERENCE:CVE-2001-0395:DESCRIPTION:Product does not disconnect or timeout after multiple failed logins.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2001-0395::REFERENCE:CVE-2001-1339:DESCRIPTION:Product does not disconnect or timeout after multiple failed logins.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2001-1339::REFERENCE:CVE-2002-0628:DESCRIPTION:Product does not disconnect or timeout after multiple failed logins.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2002-0628::REFERENCE:CVE-1999-1324:DESCRIPTION:User accounts not disabled when they exceed a threshold; possibly a resultant problem.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-1999-1324::", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "::TAXONOMY NAME:PLOVER:ENTRY ID:AUTHENT.MULTFAIL:ENTRY NAME:Multiple Failed Authentication Attempts not Prevented::TAXONOMY NAME:Software Fault Patterns:ENTRY ID:SFP34:ENTRY NAME:Unrestricted authentication::", "related_attack_patterns": "::16::49::560::565::600::652::653::", "notes": ""}}, {"cwe": "CWE-308", "cves": [], "cwe_info": {"cwe_id": "308", "name": "Use of Single-factor Authentication", "weakness_abstraction": "Base", "status": "Draft", "description": "The use of single-factor authentication can lead to unnecessary risk of compromise when compared with the benefits of a dual-factor authentication scheme.", "extended_description": "While the use of multiple authentication schemes is simply piling on more complexity on top of authentication, it is inestimably valuable to have such measures of redundancy. The use of weak, reused, and common passwords is rampant on the internet. Without the added protection of multiple authentication schemes, a single mistake can result in the compromise of an account. For this reason, if multiple schemes are possible and also easy to use, they should be implemented and required.", "related_weaknesses": "::NATURE:ChildOf:CWE ID:287:VIEW ID:1000:ORDINAL:Primary::NATURE:ChildOf:CWE ID:654:VIEW ID:1000::NATURE:PeerOf:CWE ID:309:VIEW ID:1000::", "weakness_ordinalities": "", "applicable_platforms": "::LANGUAGE CLASS:Language-Independent:LANGUAGE PREVALENCE:Undetermined::", "background_details": "", "alternate_terms": "", "modes_of_introduction": "::PHASE:Architecture and Design:NOTE:COMMISSION: This weakness refers to an incorrect design related to an architectural security tactic.::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Access Control:IMPACT:Bypass Protection Mechanism:NOTE:If the secret in a single-factor authentication scheme gets compromised, full authentication is possible.::", "detection_methods": "", "potential_mitigations": "::PHASE:Architecture and Design:DESCRIPTION:Use multiple independent authentication schemes, which ensures that -- if one of the methods is compromised -- the system itself is still likely safe from compromise.::", "observed_examples": "", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "::TAXONOMY NAME:CLASP:ENTRY NAME:Using single-factor authentication::", "related_attack_patterns": "::16::49::509::55::555::560::561::565::600::644::645::652::653::70::", "notes": ""}}, {"cwe": "CWE-309", "cves": [], "cwe_info": {"cwe_id": "309", "name": "Use of Password System for Primary Authentication", "weakness_abstraction": "Base", "status": "Draft", "description": "The use of password systems as the primary means of authentication may be subject to several flaws or shortcomings, each reducing the effectiveness of the mechanism.", "extended_description": "", "related_weaknesses": "::NATURE:ChildOf:CWE ID:287:VIEW ID:1000:ORDINAL:Primary::NATURE:ChildOf:CWE ID:654:VIEW ID:1000::NATURE:PeerOf:CWE ID:308:VIEW ID:1000::", "weakness_ordinalities": "", "applicable_platforms": "::LANGUAGE CLASS:Language-Independent:LANGUAGE PREVALENCE:Undetermined::", "background_details": "::Password systems are the simplest and most ubiquitous authentication mechanisms. However, they are subject to such well known attacks,and such frequent compromise that their use in the most simple implementation is not practical.::", "alternate_terms": "", "modes_of_introduction": "::PHASE:Architecture and Design::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Access Control:IMPACT:Bypass Protection Mechanism:IMPACT:Gain Privileges or Assume Identity:NOTE:A password authentication mechanism error will almost always result in attackers being authorized as valid users.::", "detection_methods": "", "potential_mitigations": "::PHASE:Architecture and Design:DESCRIPTION:In order to protect password systems from compromise, the following should be noted: Passwords should be stored safely to prevent insider attack and to ensure that -- if a system is compromised -- the passwords are not retrievable. Due to password reuse, this information may be useful in the compromise of other systems these users work with. In order to protect these passwords, they should be stored encrypted, in a non-reversible state, such that the original text password cannot be extracted from the stored value. Password aging should be strictly enforced to ensure that passwords do not remain unchanged for long periods of time. The longer a password remains in use, the higher the probability that it has been compromised. For this reason, passwords should require refreshing periodically, and users should be informed of the risk of passwords which remain in use for too long. Password strength should be enforced intelligently. Rather than restrict passwords to specific content, or specific length, users should be encouraged to use upper and lower case letters, numbers, and symbols in their passwords. The system should also ensure that no passwords are derived from dictionary words.::PHASE:Architecture and Design:DESCRIPTION:Use a zero-knowledge password protocol, such as SRP.::PHASE:Architecture and Design:DESCRIPTION:Ensure that passwords are stored safely and are not reversible.::PHASE:Architecture and Design:DESCRIPTION:Implement password aging functionality that requires passwords be changed after a certain point.::PHASE:Architecture and Design:DESCRIPTION:Use a mechanism for determining the strength of a password and notify the user of weak password use.::PHASE:Architecture and Design:DESCRIPTION:Inform the user of why password protections are in place, how they work to protect data integrity, and why it is important to heed their warnings.::", "observed_examples": "", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "::TAXONOMY NAME:CLASP:ENTRY NAME:Using password systems::TAXONOMY NAME:OWASP Top Ten 2004:ENTRY ID:A3:ENTRY NAME:Broken Authentication and Session Management:MAPPING FIT:CWE More Specific::", "related_attack_patterns": "::16::49::509::55::555::560::561::565::600::652::653::70::", "notes": ""}}, {"cwe": "CWE-262", "cves": [], "cwe_info": {"cwe_id": "262", "name": "Not Using Password Aging", "weakness_abstraction": "Base", "status": "Draft", "description": "If no mechanism is in place for managing password aging, users will have no incentive to update passwords in a timely manner.", "extended_description": "Security experts have often recommended that users change their passwords regularly and avoid reusing passwords. Although this can be an effective mitigation, if the expiration window is too short, it can cause users to generate poor or predictable passwords. As such, it is important to discourage creating similar passwords. It is also useful to have a password aging mechanism that notifies users when passwords are considered old and requests that they replace them with new, strong passwords. Companion documentation which stresses how important this practice is can help users understand and better support this approach.", "related_weaknesses": "::NATURE:ChildOf:CWE ID:287:VIEW ID:1000:ORDINAL:Primary::NATURE:ChildOf:CWE ID:404:VIEW ID:1000::NATURE:PeerOf:CWE ID:309:VIEW ID:1000::NATURE:PeerOf:CWE ID:263:VIEW ID:1000::NATURE:PeerOf:CWE ID:324:VIEW ID:1000::", "weakness_ordinalities": "", "applicable_platforms": "::LANGUAGE CLASS:Language-Independent:LANGUAGE PREVALENCE:Undetermined::", "background_details": "", "alternate_terms": "", "modes_of_introduction": "::PHASE:Architecture and Design:NOTE:COMMISSION: This weakness refers to an incorrect design related to an architectural security tactic.::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Access Control:IMPACT:Gain Privileges or Assume Identity:NOTE:As passwords age, the probability that they are compromised grows.::", "detection_methods": "", "potential_mitigations": "::PHASE:Architecture and Design:DESCRIPTION:As part of a product's design, require users to change their passwords regularly and avoid reusing previous passwords.::", "observed_examples": "", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "::TAXONOMY NAME:CLASP:ENTRY NAME:Not allowing password aging::", "related_attack_patterns": "::16::49::509::55::555::560::561::565::600::652::653::70::", "notes": ""}}, {"cwe": "CWE-263", "cves": [], "cwe_info": {"cwe_id": "263", "name": "Password Aging with Long Expiration", "weakness_abstraction": "Base", "status": "Draft", "description": "Allowing password aging to occur unchecked can result in the possibility of diminished password integrity.", "extended_description": "Just as neglecting to include functionality for the management of password aging is dangerous, so is allowing password aging to continue unchecked. Passwords must be given a maximum life span, after which a user is required to update with a new and different password.", "related_weaknesses": "::NATURE:ChildOf:CWE ID:287:VIEW ID:1000:ORDINAL:Primary::NATURE:ChildOf:CWE ID:404:VIEW ID:1000::", "weakness_ordinalities": "", "applicable_platforms": "::LANGUAGE CLASS:Language-Independent:LANGUAGE PREVALENCE:Undetermined::", "background_details": "", "alternate_terms": "", "modes_of_introduction": "::PHASE:Architecture and Design:NOTE:COMMISSION: This weakness refers to an incorrect design related to an architectural security tactic.::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Access Control:IMPACT:Gain Privileges or Assume Identity:NOTE:As passwords age, the probability that they are compromised grows.::", "detection_methods": "", "potential_mitigations": "::PHASE:Architecture and Design:DESCRIPTION:Ensure that password aging is limited so that there is a defined maximum age for passwords and so that the user is notified several times leading up to the password expiration.::", "observed_examples": "", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "::TAXONOMY NAME:CLASP:ENTRY NAME:Allowing password aging::", "related_attack_patterns": "::16::49::509::55::555::560::561::565::600::652::653::70::", "notes": ""}}, {"cwe": "CWE-654", "cves": [], "cwe_info": {"cwe_id": "654", "name": "Reliance on a Single Factor in a Security Decision", "weakness_abstraction": "Base", "status": "Draft", "description": "A protection mechanism relies exclusively, or to a large extent, on the evaluation of a single condition or the integrity of a single object or entity in order to make a decision about granting access to restricted resources or functionality.", "extended_description": "", "related_weaknesses": "::NATURE:ChildOf:CWE ID:657:VIEW ID:1000:ORDINAL:Primary::NATURE:ChildOf:CWE ID:693:VIEW ID:1000::", "weakness_ordinalities": "::ORDINALITY:Primary::", "applicable_platforms": "::LANGUAGE CLASS:Language-Independent:LANGUAGE PREVALENCE:Undetermined::", "background_details": "", "alternate_terms": "::TERM:Separation of Privilege:DESCRIPTION:Some people and publications use the term Separation of Privilege to describe this weakness, but this term has dual meanings in current usage. While this entry is closely associated with the original definition of Separation of Privilege by Saltzer and Schroeder, others use the same term to describe poor compartmentalization (CWE-653). Because there are multiple interpretations, use of the Separation of Privilege term is discouraged.::", "modes_of_introduction": "::PHASE:Architecture and Design::PHASE:Implementation::PHASE:Operation::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Access Control:IMPACT:Gain Privileges or Assume Identity:NOTE:If the single factor is compromised (e.g. by theft or spoofing), then the integrity of the entire security mechanism can be violated with respect to the user that is identified by that factor.::SCOPE:Non-Repudiation:IMPACT:Hide Activities:NOTE:It can become difficult or impossible for the product to be able to distinguish between legitimate activities by the entity who provided the factor, versus illegitimate activities by an attacker.::", "detection_methods": "", "potential_mitigations": "::PHASE:Architecture and Design:DESCRIPTION:Use multiple simultaneous checks before granting access to critical operations or granting critical privileges. A weaker but helpful mitigation is to use several successive checks (multiple layers of security).::PHASE:Architecture and Design:DESCRIPTION:Use redundant access rules on different choke points (e.g., firewalls).::", "observed_examples": "", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "", "related_attack_patterns": "::16::274::49::55::560::565::600::652::653::70::", "notes": "::TYPE:Maintenance:NOTE:This entry is closely associated with the term Separation of Privilege. This term is used in several different ways in the industry, but they generally combine two closely related principles: compartmentalization (CWE-653) and using only one factor in a security decision (this entry). Proper compartmentalization implicitly introduces multiple factors into a security decision, but there can be cases in which multiple factors are required for authentication or other mechanisms that do not involve compartmentalization, such as performing all required checks on a submitted certificate. It is likely that CWE-653 and CWE-654 will provoke further discussion.::"}}, {"cwe": "CWE-1273", "cves": [], "cwe_info": {"cwe_id": "1273", "name": "Device Unlock Credential Sharing", "weakness_abstraction": "Base", "status": "Incomplete", "description": "The credentials necessary for unlocking a device are shared across multiple parties and may expose sensitive information.", "extended_description": "\u201cUnlocking a device\u201d often means activating certain, unadvertised, debug and manufacturer-specific capabilities of a device using sensitive credentials. Unlocking a device might be necessary for the purpose of troubleshooting device problems. For example, suppose a device contains the ability to dump the content of the full system memory by disabling the memory-protection mechanisms. Since this is a highly security-sensitive capability, this capability is \u201clocked\u201d in the production part. Unless the device gets unlocked by supplying the proper credentials the debug capabilities are not available. For cases where the chip designer, chip manufacturer (fabricator), and manufacturing and assembly testers are the all employed by the same company, the compromise of the credentials are greatly reduced. However, when the chip designer is employed by one company, the chip manufacturer is employed by another company (a foundry), and the assemblers and testers are employed by yet a third company. Since these different companies will need to perform various tests on the device to verify correct device function, they all need to share the unlock key. Unfortunately, the level of secrecy and policy might be quite different at each company, greatly increasing the risk of sensitive credentials being compromised.", "related_weaknesses": "::NATURE:ChildOf:CWE ID:200:VIEW ID:1000:ORDINAL:Primary::", "weakness_ordinalities": "", "applicable_platforms": "::LANGUAGE NAME:VHDL:LANGUAGE PREVALENCE:Undetermined::LANGUAGE NAME:Verilog:LANGUAGE PREVALENCE:Undetermined::LANGUAGE CLASS:Compiled:LANGUAGE PREVALENCE:Undetermined::OPERATING SYSTEM CLASS:OS-Independent:OPERATING SYSTEM PREVALENCE:Undetermined::ARCHITECTURE CLASS:Architecture-Independent:ARCHITECTURE PREVALENCE:Undetermined::TECHNOLOGY NAME:Other:TECHNOLOGY PREVALENCE:Undetermined::TECHNOLOGY CLASS:Technology-Independent:TECHNOLOGY PREVALENCE:Undetermined::", "background_details": "", "alternate_terms": "", "modes_of_introduction": "::PHASE:Integration::PHASE:Manufacturing::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Confidentiality:SCOPE:Integrity:SCOPE:Availability:SCOPE:Access Control:SCOPE:Accountability:SCOPE:Authentication:SCOPE:Authorization:SCOPE:Non-Repudiation:IMPACT:Modify Memory:IMPACT:Read Memory:IMPACT:Modify Files or Directories:IMPACT:Read Files or Directories:IMPACT:Modify Application Data:IMPACT:Execute Unauthorized Code or Commands:IMPACT:Gain Privileges or Assume Identity:IMPACT:Bypass Protection Mechanism:NOTE:Once unlock credentials are compromised, an attacker can use the credentials to unlock the device and gain unauthorized access to the hidden functionalities protected by those credentials.::", "detection_methods": "", "potential_mitigations": "::PHASE:Integration:DESCRIPTION:Ensure the unlock credentials are shared with the minimum number of parties and with utmost secrecy. To limit the risk associated with compromised credentials, where possible, the credentials should be part-specific.::PHASE:Manufacturing:DESCRIPTION:Ensure the unlock credentials are shared with the minimum number of parties and with utmost secrecy. To limit the risk associated with compromised credentials, where possible, the credentials should be part-specific.::", "observed_examples": "", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "", "related_attack_patterns": "::560::", "notes": "::TYPE:Maintenance:NOTE:This entry is still under development and will continue to see updates and content improvements.::"}}]}]}, {"technique_id": "T1612", "t_findings": [{"capec_id": "CAPEC-560", "c_findings": [{"cwe": "CWE-522", "cves": [{"id": "CVE-2007-0681", "score": ["V31", 9.8, "CRITICAL"], "v2_score": 7.5, "v2_exploitability_score": 10.0, "v2_impact_score": 6.4, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 7.5}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": true, "userInteractionRequired": false}], "description": "profile.php in ExtCalendar 2 and earlier allows remote attackers to change the passwords of arbitrary users without providing the original password, and possibly perform other unauthorized actions, via modified values to register.php.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:extcalendar_project:extcalendar:*:*:*:*:*:*:*:*", "published": "2007-02-03T01:28:00.000", "last_modified": "2024-02-09T03:13:40.213"}, {"id": "CVE-2000-0944", "score": ["V31", 9.8, "CRITICAL"], "v2_score": 7.5, "v2_exploitability_score": 10.0, "v2_impact_score": 6.4, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 7.5}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": true, "userInteractionRequired": false}], "description": "CGI Script Center News Update 1.1 does not properly validate the original news administration password during a password change operation, which allows remote attackers to modify the password without knowing the original password.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:cgi:script_center_news_update:1.1:*:*:*:*:*:*:*", "published": "2000-12-19T05:00:00.000", "last_modified": "2024-02-09T03:15:18.653"}, {"id": "CVE-2005-3435", "score": ["V31", 9.8, "CRITICAL"], "v2_score": 7.5, "v2_exploitability_score": 10.0, "v2_impact_score": 6.4, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 7.5}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": true, "userInteractionRequired": false}], "description": "admin_news.php in Archilles Newsworld up to 1.3.0 allows attackers to bypass authentication by obtaining the password hash for another user, for example through another Newsworld vulnerability, and specifying the hash in the pwd argument.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:archilles:newsworld:*:*:*:*:*:*:*:*", "published": "2005-11-02T11:02:00.000", "last_modified": "2024-02-09T03:13:36.147"}, {"id": "CVE-2005-0408", "score": ["V31", 9.8, "CRITICAL"], "v2_score": 7.5, "v2_exploitability_score": 10.0, "v2_impact_score": 6.4, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 7.5}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": true, "userInteractionRequired": false}], "description": "CitrusDB 0.3.6 and earlier generates easily predictable MD5 hashes of the user name for the id_hash cookie, which allows remote attackers to bypass authentication and gain privileges by calculating the MD5 checksum of the user name combined with the \"boogaadeeboo\" string, which is hard-coded in the $hidden_hash variable.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:citrusdb:citrusdb:*:*:*:*:*:*:*:*", "published": "2005-02-14T05:00:00.000", "last_modified": "2024-02-09T03:13:25.890"}], "cwe_info": {"cwe_id": "522", "name": "Insufficiently Protected Credentials", "weakness_abstraction": "Class", "status": "Incomplete", "description": "The product transmits or stores authentication credentials, but it uses an insecure method that is susceptible to unauthorized interception and/or retrieval.", "extended_description": "", "related_weaknesses": "::NATURE:ChildOf:CWE ID:287:VIEW ID:1000:ORDINAL:Primary::NATURE:ChildOf:CWE ID:287:VIEW ID:1003:ORDINAL:Primary::NATURE:ChildOf:CWE ID:668:VIEW ID:1000::", "weakness_ordinalities": "", "applicable_platforms": "", "background_details": "", "alternate_terms": "", "modes_of_introduction": "::PHASE:Architecture and Design:NOTE:COMMISSION: This weakness refers to an incorrect design related to an architectural security tactic.::PHASE:Implementation::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Access Control:IMPACT:Gain Privileges or Assume Identity:NOTE:An attacker could gain access to user accounts and access sensitive data used by the user accounts.::", "detection_methods": "", "potential_mitigations": "::PHASE:Architecture and Design:DESCRIPTION:Use an appropriate security mechanism to protect the credentials.::PHASE:Architecture and Design:DESCRIPTION:Make appropriate use of cryptography to protect the credentials.::PHASE:Implementation:DESCRIPTION:Use industry standards to protect the credentials (e.g. LDAP, keystore, etc.).::", "observed_examples": "::REFERENCE:CVE-2007-0681:DESCRIPTION:Web app allows remote attackers to change the passwords of arbitrary users without providing the original password, and possibly perform other unauthorized actions.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2007-0681::REFERENCE:CVE-2000-0944:DESCRIPTION:Web application password change utility doesn't check the original password.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2000-0944::REFERENCE:CVE-2005-3435:DESCRIPTION:product authentication succeeds if user-provided MD5 hash matches the hash in its database; this can be subjected to replay attacks.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2005-3435::REFERENCE:CVE-2005-0408:DESCRIPTION:chain: product generates predictable MD5 hashes using a constant value combined with username, allowing authentication bypass.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2005-0408::", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "::TAXONOMY NAME:OWASP Top Ten 2007:ENTRY ID:A7:ENTRY NAME:Broken Authentication and Session Management:MAPPING FIT:CWE More Specific::TAXONOMY NAME:OWASP Top Ten 2004:ENTRY ID:A3:ENTRY NAME:Broken Authentication and Session Management:MAPPING FIT:CWE More Specific::", "related_attack_patterns": "::102::474::50::509::551::555::560::561::600::644::645::652::653::", "notes": ""}}, {"cwe": "CWE-307", "cves": [{"id": "CVE-1999-1152", "score": ["V31", 7.5, "HIGH"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "Compaq/Microcom 6000 Access Integrator does not disconnect a client after a certain number of failed login attempts, which allows remote attackers to guess usernames or passwords via a brute force attack.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:o:compaq:microcom_6000_firmware:-:*:*:*:*:*:*:*", "published": "1998-06-03T04:00:00.000", "last_modified": "2024-02-09T03:15:08.037"}, {"id": "CVE-2001-1291", "score": ["V31", 9.8, "CRITICAL"], "v2_score": 10.0, "v2_exploitability_score": 10.0, "v2_impact_score": 10.0, "v2_vector": "AV:N/AC:L/Au:N/C:C/I:C/A:C", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:C/I:C/A:C", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "COMPLETE", "integrityImpact": "COMPLETE", "availabilityImpact": "COMPLETE", "baseScore": 10.0}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 10.0, "acInsufInfo": false, "obtainAllPrivilege": true, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "The telnet server for 3Com hardware such as PS40 SuperStack II does not delay or disconnect remote attackers who provide an incorrect username or password, which makes it easier to break into the server via brute force password guessing.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:o:3com:superstack_ii_ps_hub_40_firmware:-:*:*:*:*:*:*:*", "published": "2001-07-12T04:00:00.000", "last_modified": "2024-02-09T03:14:12.003"}, {"id": "CVE-2001-0395", "score": ["V31", 9.8, "CRITICAL"], "v2_score": 7.5, "v2_exploitability_score": 10.0, "v2_impact_score": 6.4, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 7.5}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "Lightwave ConsoleServer 3200 does not disconnect users after unsuccessful login attempts, which could allow remote attackers to conduct brute force password guessing.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:o:lightwavemo:consoleserver_3200_firmware:-:*:*:*:*:*:*:*", "published": "2001-07-02T04:00:00.000", "last_modified": "2024-02-09T03:14:07.077"}, {"id": "CVE-2001-1339", "score": ["V31", 9.8, "CRITICAL"], "v2_score": 7.5, "v2_exploitability_score": 10.0, "v2_impact_score": 6.4, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 7.5}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": true, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "Beck IPC GmbH IPC@CHIP telnet service does not delay or disconnect users from the service when bad passwords are entered, which makes it easier for remote attackers to conduct brute force password guessing attacks.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:o:anybus:ipc\\@chip_firmware:-:*:*:*:*:*:*:*", "published": "2001-05-24T04:00:00.000", "last_modified": "2024-02-09T03:15:26.757"}, {"id": "CVE-2002-0628", "score": ["V31", 7.5, "HIGH"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "The Telnet service for Polycom ViewStation before 7.2.4 does not restrict the number of failed login attempts, which makes it easier for remote attackers to guess usernames and passwords via a brute force attack.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:h:polycom:viewstation_128:6.5.1:*:*:*:*:*:*:*", "published": "2003-01-07T05:00:00.000", "last_modified": "2024-02-09T03:14:16.373"}, {"id": "CVE-1999-1324", "score": ["V31", 9.8, "CRITICAL"], "v2_score": 7.5, "v2_exploitability_score": 10.0, "v2_impact_score": 6.4, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 7.5}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "VAXstations running Open VMS 5.3 through 5.5-2 with VMS DECwindows or MOTIF do not properly disable access to user accounts that exceed the break-in limit threshold for failed login attempts, which makes it easier for attackers to conduct brute force password guessing.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:o:hp:openvms_vax:*:*:*:*:*:*:*:*", "published": "1999-12-31T05:00:00.000", "last_modified": "2024-02-09T03:15:13.613"}], "cwe_info": {"cwe_id": "307", "name": "Improper Restriction of Excessive Authentication Attempts", "weakness_abstraction": "Base", "status": "Draft", "description": "The software does not implement sufficient measures to prevent multiple failed authentication attempts within in a short time frame, making it more susceptible to brute force attacks.", "extended_description": "", "related_weaknesses": "::NATURE:ChildOf:CWE ID:287:VIEW ID:1000:ORDINAL:Primary::NATURE:ChildOf:CWE ID:287:VIEW ID:1003:ORDINAL:Primary::NATURE:ChildOf:CWE ID:799:VIEW ID:1000::", "weakness_ordinalities": "", "applicable_platforms": "::LANGUAGE CLASS:Language-Independent:LANGUAGE PREVALENCE:Undetermined::", "background_details": "", "alternate_terms": "", "modes_of_introduction": "::PHASE:Architecture and Design:NOTE:COMMISSION: This weakness refers to an incorrect design related to an architectural security tactic.::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Access Control:IMPACT:Bypass Protection Mechanism:NOTE:An attacker could perform an arbitrary number of authentication attempts using different passwords, and eventually gain access to the targeted account.::", "detection_methods": "::METHOD:Dynamic Analysis with Automated Results Interpretation:DESCRIPTION:According to SOAR, the following detection techniques may be useful: Highly cost effective: Web Application Scanner Web Services Scanner Database Scanners Cost effective for partial coverage: Host-based Vulnerability Scanners - Examine configuration for flaws, verifying that audit mechanisms work, ensure host configuration meets certain predefined criteria:EFFECTIVENESS:High::METHOD:Dynamic Analysis with Manual Results Interpretation:DESCRIPTION:According to SOAR, the following detection techniques may be useful: Highly cost effective: Fuzz Tester Framework-based Fuzzer Cost effective for partial coverage: Forced Path Execution:EFFECTIVENESS:High::METHOD:Manual Static Analysis - Source Code:DESCRIPTION:According to SOAR, the following detection techniques may be useful: Highly cost effective: Focused Manual Spotcheck - Focused manual analysis of source Manual Source Code Review (not inspections):EFFECTIVENESS:High::METHOD:Automated Static Analysis - Source Code:DESCRIPTION:According to SOAR, the following detection techniques may be useful: Cost effective for partial coverage: Source code Weakness Analyzer Context-configured Source Code Weakness Analyzer:EFFECTIVENESS:SOAR Partial::METHOD:Automated Static Analysis:DESCRIPTION:According to SOAR, the following detection techniques may be useful: Cost effective for partial coverage: Configuration Checker:EFFECTIVENESS:SOAR Partial::METHOD:Architecture or Design Review:DESCRIPTION:According to SOAR, the following detection techniques may be useful: Highly cost effective: Formal Methods / Correct-By-Construction Cost effective for partial coverage: Inspection (IEEE 1028 standard) (can apply to requirements, design, source code, etc.):EFFECTIVENESS:High::", "potential_mitigations": "::PHASE:Architecture and Design:DESCRIPTION:Common protection mechanisms include: Disconnecting the user after a small number of failed attempts Implementing a timeout Locking out a targeted account Requiring a computational task on the user's part.::PHASE:Architecture and Design:STRATEGY:Libraries or Frameworks:DESCRIPTION:Use a vetted library or framework that does not allow this weakness to occur or provides constructs that make this weakness easier to avoid. Consider using libraries with authentication capabilities such as OpenSSL or the ESAPI Authenticator. [REF-45]::", "observed_examples": "::REFERENCE:CVE-1999-1152:DESCRIPTION:Product does not disconnect or timeout after multiple failed logins.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-1999-1152::REFERENCE:CVE-2001-1291:DESCRIPTION:Product does not disconnect or timeout after multiple failed logins.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2001-1291::REFERENCE:CVE-2001-0395:DESCRIPTION:Product does not disconnect or timeout after multiple failed logins.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2001-0395::REFERENCE:CVE-2001-1339:DESCRIPTION:Product does not disconnect or timeout after multiple failed logins.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2001-1339::REFERENCE:CVE-2002-0628:DESCRIPTION:Product does not disconnect or timeout after multiple failed logins.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2002-0628::REFERENCE:CVE-1999-1324:DESCRIPTION:User accounts not disabled when they exceed a threshold; possibly a resultant problem.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-1999-1324::", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "::TAXONOMY NAME:PLOVER:ENTRY ID:AUTHENT.MULTFAIL:ENTRY NAME:Multiple Failed Authentication Attempts not Prevented::TAXONOMY NAME:Software Fault Patterns:ENTRY ID:SFP34:ENTRY NAME:Unrestricted authentication::", "related_attack_patterns": "::16::49::560::565::600::652::653::", "notes": ""}}, {"cwe": "CWE-308", "cves": [], "cwe_info": {"cwe_id": "308", "name": "Use of Single-factor Authentication", "weakness_abstraction": "Base", "status": "Draft", "description": "The use of single-factor authentication can lead to unnecessary risk of compromise when compared with the benefits of a dual-factor authentication scheme.", "extended_description": "While the use of multiple authentication schemes is simply piling on more complexity on top of authentication, it is inestimably valuable to have such measures of redundancy. The use of weak, reused, and common passwords is rampant on the internet. Without the added protection of multiple authentication schemes, a single mistake can result in the compromise of an account. For this reason, if multiple schemes are possible and also easy to use, they should be implemented and required.", "related_weaknesses": "::NATURE:ChildOf:CWE ID:287:VIEW ID:1000:ORDINAL:Primary::NATURE:ChildOf:CWE ID:654:VIEW ID:1000::NATURE:PeerOf:CWE ID:309:VIEW ID:1000::", "weakness_ordinalities": "", "applicable_platforms": "::LANGUAGE CLASS:Language-Independent:LANGUAGE PREVALENCE:Undetermined::", "background_details": "", "alternate_terms": "", "modes_of_introduction": "::PHASE:Architecture and Design:NOTE:COMMISSION: This weakness refers to an incorrect design related to an architectural security tactic.::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Access Control:IMPACT:Bypass Protection Mechanism:NOTE:If the secret in a single-factor authentication scheme gets compromised, full authentication is possible.::", "detection_methods": "", "potential_mitigations": "::PHASE:Architecture and Design:DESCRIPTION:Use multiple independent authentication schemes, which ensures that -- if one of the methods is compromised -- the system itself is still likely safe from compromise.::", "observed_examples": "", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "::TAXONOMY NAME:CLASP:ENTRY NAME:Using single-factor authentication::", "related_attack_patterns": "::16::49::509::55::555::560::561::565::600::644::645::652::653::70::", "notes": ""}}, {"cwe": "CWE-309", "cves": [], "cwe_info": {"cwe_id": "309", "name": "Use of Password System for Primary Authentication", "weakness_abstraction": "Base", "status": "Draft", "description": "The use of password systems as the primary means of authentication may be subject to several flaws or shortcomings, each reducing the effectiveness of the mechanism.", "extended_description": "", "related_weaknesses": "::NATURE:ChildOf:CWE ID:287:VIEW ID:1000:ORDINAL:Primary::NATURE:ChildOf:CWE ID:654:VIEW ID:1000::NATURE:PeerOf:CWE ID:308:VIEW ID:1000::", "weakness_ordinalities": "", "applicable_platforms": "::LANGUAGE CLASS:Language-Independent:LANGUAGE PREVALENCE:Undetermined::", "background_details": "::Password systems are the simplest and most ubiquitous authentication mechanisms. However, they are subject to such well known attacks,and such frequent compromise that their use in the most simple implementation is not practical.::", "alternate_terms": "", "modes_of_introduction": "::PHASE:Architecture and Design::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Access Control:IMPACT:Bypass Protection Mechanism:IMPACT:Gain Privileges or Assume Identity:NOTE:A password authentication mechanism error will almost always result in attackers being authorized as valid users.::", "detection_methods": "", "potential_mitigations": "::PHASE:Architecture and Design:DESCRIPTION:In order to protect password systems from compromise, the following should be noted: Passwords should be stored safely to prevent insider attack and to ensure that -- if a system is compromised -- the passwords are not retrievable. Due to password reuse, this information may be useful in the compromise of other systems these users work with. In order to protect these passwords, they should be stored encrypted, in a non-reversible state, such that the original text password cannot be extracted from the stored value. Password aging should be strictly enforced to ensure that passwords do not remain unchanged for long periods of time. The longer a password remains in use, the higher the probability that it has been compromised. For this reason, passwords should require refreshing periodically, and users should be informed of the risk of passwords which remain in use for too long. Password strength should be enforced intelligently. Rather than restrict passwords to specific content, or specific length, users should be encouraged to use upper and lower case letters, numbers, and symbols in their passwords. The system should also ensure that no passwords are derived from dictionary words.::PHASE:Architecture and Design:DESCRIPTION:Use a zero-knowledge password protocol, such as SRP.::PHASE:Architecture and Design:DESCRIPTION:Ensure that passwords are stored safely and are not reversible.::PHASE:Architecture and Design:DESCRIPTION:Implement password aging functionality that requires passwords be changed after a certain point.::PHASE:Architecture and Design:DESCRIPTION:Use a mechanism for determining the strength of a password and notify the user of weak password use.::PHASE:Architecture and Design:DESCRIPTION:Inform the user of why password protections are in place, how they work to protect data integrity, and why it is important to heed their warnings.::", "observed_examples": "", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "::TAXONOMY NAME:CLASP:ENTRY NAME:Using password systems::TAXONOMY NAME:OWASP Top Ten 2004:ENTRY ID:A3:ENTRY NAME:Broken Authentication and Session Management:MAPPING FIT:CWE More Specific::", "related_attack_patterns": "::16::49::509::55::555::560::561::565::600::652::653::70::", "notes": ""}}, {"cwe": "CWE-262", "cves": [], "cwe_info": {"cwe_id": "262", "name": "Not Using Password Aging", "weakness_abstraction": "Base", "status": "Draft", "description": "If no mechanism is in place for managing password aging, users will have no incentive to update passwords in a timely manner.", "extended_description": "Security experts have often recommended that users change their passwords regularly and avoid reusing passwords. Although this can be an effective mitigation, if the expiration window is too short, it can cause users to generate poor or predictable passwords. As such, it is important to discourage creating similar passwords. It is also useful to have a password aging mechanism that notifies users when passwords are considered old and requests that they replace them with new, strong passwords. Companion documentation which stresses how important this practice is can help users understand and better support this approach.", "related_weaknesses": "::NATURE:ChildOf:CWE ID:287:VIEW ID:1000:ORDINAL:Primary::NATURE:ChildOf:CWE ID:404:VIEW ID:1000::NATURE:PeerOf:CWE ID:309:VIEW ID:1000::NATURE:PeerOf:CWE ID:263:VIEW ID:1000::NATURE:PeerOf:CWE ID:324:VIEW ID:1000::", "weakness_ordinalities": "", "applicable_platforms": "::LANGUAGE CLASS:Language-Independent:LANGUAGE PREVALENCE:Undetermined::", "background_details": "", "alternate_terms": "", "modes_of_introduction": "::PHASE:Architecture and Design:NOTE:COMMISSION: This weakness refers to an incorrect design related to an architectural security tactic.::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Access Control:IMPACT:Gain Privileges or Assume Identity:NOTE:As passwords age, the probability that they are compromised grows.::", "detection_methods": "", "potential_mitigations": "::PHASE:Architecture and Design:DESCRIPTION:As part of a product's design, require users to change their passwords regularly and avoid reusing previous passwords.::", "observed_examples": "", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "::TAXONOMY NAME:CLASP:ENTRY NAME:Not allowing password aging::", "related_attack_patterns": "::16::49::509::55::555::560::561::565::600::652::653::70::", "notes": ""}}, {"cwe": "CWE-263", "cves": [], "cwe_info": {"cwe_id": "263", "name": "Password Aging with Long Expiration", "weakness_abstraction": "Base", "status": "Draft", "description": "Allowing password aging to occur unchecked can result in the possibility of diminished password integrity.", "extended_description": "Just as neglecting to include functionality for the management of password aging is dangerous, so is allowing password aging to continue unchecked. Passwords must be given a maximum life span, after which a user is required to update with a new and different password.", "related_weaknesses": "::NATURE:ChildOf:CWE ID:287:VIEW ID:1000:ORDINAL:Primary::NATURE:ChildOf:CWE ID:404:VIEW ID:1000::", "weakness_ordinalities": "", "applicable_platforms": "::LANGUAGE CLASS:Language-Independent:LANGUAGE PREVALENCE:Undetermined::", "background_details": "", "alternate_terms": "", "modes_of_introduction": "::PHASE:Architecture and Design:NOTE:COMMISSION: This weakness refers to an incorrect design related to an architectural security tactic.::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Access Control:IMPACT:Gain Privileges or Assume Identity:NOTE:As passwords age, the probability that they are compromised grows.::", "detection_methods": "", "potential_mitigations": "::PHASE:Architecture and Design:DESCRIPTION:Ensure that password aging is limited so that there is a defined maximum age for passwords and so that the user is notified several times leading up to the password expiration.::", "observed_examples": "", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "::TAXONOMY NAME:CLASP:ENTRY NAME:Allowing password aging::", "related_attack_patterns": "::16::49::509::55::555::560::561::565::600::652::653::70::", "notes": ""}}, {"cwe": "CWE-654", "cves": [], "cwe_info": {"cwe_id": "654", "name": "Reliance on a Single Factor in a Security Decision", "weakness_abstraction": "Base", "status": "Draft", "description": "A protection mechanism relies exclusively, or to a large extent, on the evaluation of a single condition or the integrity of a single object or entity in order to make a decision about granting access to restricted resources or functionality.", "extended_description": "", "related_weaknesses": "::NATURE:ChildOf:CWE ID:657:VIEW ID:1000:ORDINAL:Primary::NATURE:ChildOf:CWE ID:693:VIEW ID:1000::", "weakness_ordinalities": "::ORDINALITY:Primary::", "applicable_platforms": "::LANGUAGE CLASS:Language-Independent:LANGUAGE PREVALENCE:Undetermined::", "background_details": "", "alternate_terms": "::TERM:Separation of Privilege:DESCRIPTION:Some people and publications use the term Separation of Privilege to describe this weakness, but this term has dual meanings in current usage. While this entry is closely associated with the original definition of Separation of Privilege by Saltzer and Schroeder, others use the same term to describe poor compartmentalization (CWE-653). Because there are multiple interpretations, use of the Separation of Privilege term is discouraged.::", "modes_of_introduction": "::PHASE:Architecture and Design::PHASE:Implementation::PHASE:Operation::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Access Control:IMPACT:Gain Privileges or Assume Identity:NOTE:If the single factor is compromised (e.g. by theft or spoofing), then the integrity of the entire security mechanism can be violated with respect to the user that is identified by that factor.::SCOPE:Non-Repudiation:IMPACT:Hide Activities:NOTE:It can become difficult or impossible for the product to be able to distinguish between legitimate activities by the entity who provided the factor, versus illegitimate activities by an attacker.::", "detection_methods": "", "potential_mitigations": "::PHASE:Architecture and Design:DESCRIPTION:Use multiple simultaneous checks before granting access to critical operations or granting critical privileges. A weaker but helpful mitigation is to use several successive checks (multiple layers of security).::PHASE:Architecture and Design:DESCRIPTION:Use redundant access rules on different choke points (e.g., firewalls).::", "observed_examples": "", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "", "related_attack_patterns": "::16::274::49::55::560::565::600::652::653::70::", "notes": "::TYPE:Maintenance:NOTE:This entry is closely associated with the term Separation of Privilege. This term is used in several different ways in the industry, but they generally combine two closely related principles: compartmentalization (CWE-653) and using only one factor in a security decision (this entry). Proper compartmentalization implicitly introduces multiple factors into a security decision, but there can be cases in which multiple factors are required for authentication or other mechanisms that do not involve compartmentalization, such as performing all required checks on a submitted certificate. It is likely that CWE-653 and CWE-654 will provoke further discussion.::"}}, {"cwe": "CWE-1273", "cves": [], "cwe_info": {"cwe_id": "1273", "name": "Device Unlock Credential Sharing", "weakness_abstraction": "Base", "status": "Incomplete", "description": "The credentials necessary for unlocking a device are shared across multiple parties and may expose sensitive information.", "extended_description": "\u201cUnlocking a device\u201d often means activating certain, unadvertised, debug and manufacturer-specific capabilities of a device using sensitive credentials. Unlocking a device might be necessary for the purpose of troubleshooting device problems. For example, suppose a device contains the ability to dump the content of the full system memory by disabling the memory-protection mechanisms. Since this is a highly security-sensitive capability, this capability is \u201clocked\u201d in the production part. Unless the device gets unlocked by supplying the proper credentials the debug capabilities are not available. For cases where the chip designer, chip manufacturer (fabricator), and manufacturing and assembly testers are the all employed by the same company, the compromise of the credentials are greatly reduced. However, when the chip designer is employed by one company, the chip manufacturer is employed by another company (a foundry), and the assemblers and testers are employed by yet a third company. Since these different companies will need to perform various tests on the device to verify correct device function, they all need to share the unlock key. Unfortunately, the level of secrecy and policy might be quite different at each company, greatly increasing the risk of sensitive credentials being compromised.", "related_weaknesses": "::NATURE:ChildOf:CWE ID:200:VIEW ID:1000:ORDINAL:Primary::", "weakness_ordinalities": "", "applicable_platforms": "::LANGUAGE NAME:VHDL:LANGUAGE PREVALENCE:Undetermined::LANGUAGE NAME:Verilog:LANGUAGE PREVALENCE:Undetermined::LANGUAGE CLASS:Compiled:LANGUAGE PREVALENCE:Undetermined::OPERATING SYSTEM CLASS:OS-Independent:OPERATING SYSTEM PREVALENCE:Undetermined::ARCHITECTURE CLASS:Architecture-Independent:ARCHITECTURE PREVALENCE:Undetermined::TECHNOLOGY NAME:Other:TECHNOLOGY PREVALENCE:Undetermined::TECHNOLOGY CLASS:Technology-Independent:TECHNOLOGY PREVALENCE:Undetermined::", "background_details": "", "alternate_terms": "", "modes_of_introduction": "::PHASE:Integration::PHASE:Manufacturing::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Confidentiality:SCOPE:Integrity:SCOPE:Availability:SCOPE:Access Control:SCOPE:Accountability:SCOPE:Authentication:SCOPE:Authorization:SCOPE:Non-Repudiation:IMPACT:Modify Memory:IMPACT:Read Memory:IMPACT:Modify Files or Directories:IMPACT:Read Files or Directories:IMPACT:Modify Application Data:IMPACT:Execute Unauthorized Code or Commands:IMPACT:Gain Privileges or Assume Identity:IMPACT:Bypass Protection Mechanism:NOTE:Once unlock credentials are compromised, an attacker can use the credentials to unlock the device and gain unauthorized access to the hidden functionalities protected by those credentials.::", "detection_methods": "", "potential_mitigations": "::PHASE:Integration:DESCRIPTION:Ensure the unlock credentials are shared with the minimum number of parties and with utmost secrecy. To limit the risk associated with compromised credentials, where possible, the credentials should be part-specific.::PHASE:Manufacturing:DESCRIPTION:Ensure the unlock credentials are shared with the minimum number of parties and with utmost secrecy. To limit the risk associated with compromised credentials, where possible, the credentials should be part-specific.::", "observed_examples": "", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "", "related_attack_patterns": "::560::", "notes": "::TYPE:Maintenance:NOTE:This entry is still under development and will continue to see updates and content improvements.::"}}]}]}, {"technique_id": "T1530", "t_findings": [{"capec_id": "CAPEC-560", "c_findings": [{"cwe": "CWE-522", "cves": [{"id": "CVE-2007-0681", "score": ["V31", 9.8, "CRITICAL"], "v2_score": 7.5, "v2_exploitability_score": 10.0, "v2_impact_score": 6.4, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 7.5}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": true, "userInteractionRequired": false}], "description": "profile.php in ExtCalendar 2 and earlier allows remote attackers to change the passwords of arbitrary users without providing the original password, and possibly perform other unauthorized actions, via modified values to register.php.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:extcalendar_project:extcalendar:*:*:*:*:*:*:*:*", "published": "2007-02-03T01:28:00.000", "last_modified": "2024-02-09T03:13:40.213"}, {"id": "CVE-2000-0944", "score": ["V31", 9.8, "CRITICAL"], "v2_score": 7.5, "v2_exploitability_score": 10.0, "v2_impact_score": 6.4, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 7.5}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": true, "userInteractionRequired": false}], "description": "CGI Script Center News Update 1.1 does not properly validate the original news administration password during a password change operation, which allows remote attackers to modify the password without knowing the original password.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:cgi:script_center_news_update:1.1:*:*:*:*:*:*:*", "published": "2000-12-19T05:00:00.000", "last_modified": "2024-02-09T03:15:18.653"}, {"id": "CVE-2005-3435", "score": ["V31", 9.8, "CRITICAL"], "v2_score": 7.5, "v2_exploitability_score": 10.0, "v2_impact_score": 6.4, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 7.5}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": true, "userInteractionRequired": false}], "description": "admin_news.php in Archilles Newsworld up to 1.3.0 allows attackers to bypass authentication by obtaining the password hash for another user, for example through another Newsworld vulnerability, and specifying the hash in the pwd argument.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:archilles:newsworld:*:*:*:*:*:*:*:*", "published": "2005-11-02T11:02:00.000", "last_modified": "2024-02-09T03:13:36.147"}, {"id": "CVE-2005-0408", "score": ["V31", 9.8, "CRITICAL"], "v2_score": 7.5, "v2_exploitability_score": 10.0, "v2_impact_score": 6.4, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 7.5}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": true, "userInteractionRequired": false}], "description": "CitrusDB 0.3.6 and earlier generates easily predictable MD5 hashes of the user name for the id_hash cookie, which allows remote attackers to bypass authentication and gain privileges by calculating the MD5 checksum of the user name combined with the \"boogaadeeboo\" string, which is hard-coded in the $hidden_hash variable.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:citrusdb:citrusdb:*:*:*:*:*:*:*:*", "published": "2005-02-14T05:00:00.000", "last_modified": "2024-02-09T03:13:25.890"}], "cwe_info": {"cwe_id": "522", "name": "Insufficiently Protected Credentials", "weakness_abstraction": "Class", "status": "Incomplete", "description": "The product transmits or stores authentication credentials, but it uses an insecure method that is susceptible to unauthorized interception and/or retrieval.", "extended_description": "", "related_weaknesses": "::NATURE:ChildOf:CWE ID:287:VIEW ID:1000:ORDINAL:Primary::NATURE:ChildOf:CWE ID:287:VIEW ID:1003:ORDINAL:Primary::NATURE:ChildOf:CWE ID:668:VIEW ID:1000::", "weakness_ordinalities": "", "applicable_platforms": "", "background_details": "", "alternate_terms": "", "modes_of_introduction": "::PHASE:Architecture and Design:NOTE:COMMISSION: This weakness refers to an incorrect design related to an architectural security tactic.::PHASE:Implementation::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Access Control:IMPACT:Gain Privileges or Assume Identity:NOTE:An attacker could gain access to user accounts and access sensitive data used by the user accounts.::", "detection_methods": "", "potential_mitigations": "::PHASE:Architecture and Design:DESCRIPTION:Use an appropriate security mechanism to protect the credentials.::PHASE:Architecture and Design:DESCRIPTION:Make appropriate use of cryptography to protect the credentials.::PHASE:Implementation:DESCRIPTION:Use industry standards to protect the credentials (e.g. LDAP, keystore, etc.).::", "observed_examples": "::REFERENCE:CVE-2007-0681:DESCRIPTION:Web app allows remote attackers to change the passwords of arbitrary users without providing the original password, and possibly perform other unauthorized actions.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2007-0681::REFERENCE:CVE-2000-0944:DESCRIPTION:Web application password change utility doesn't check the original password.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2000-0944::REFERENCE:CVE-2005-3435:DESCRIPTION:product authentication succeeds if user-provided MD5 hash matches the hash in its database; this can be subjected to replay attacks.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2005-3435::REFERENCE:CVE-2005-0408:DESCRIPTION:chain: product generates predictable MD5 hashes using a constant value combined with username, allowing authentication bypass.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2005-0408::", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "::TAXONOMY NAME:OWASP Top Ten 2007:ENTRY ID:A7:ENTRY NAME:Broken Authentication and Session Management:MAPPING FIT:CWE More Specific::TAXONOMY NAME:OWASP Top Ten 2004:ENTRY ID:A3:ENTRY NAME:Broken Authentication and Session Management:MAPPING FIT:CWE More Specific::", "related_attack_patterns": "::102::474::50::509::551::555::560::561::600::644::645::652::653::", "notes": ""}}, {"cwe": "CWE-307", "cves": [{"id": "CVE-1999-1152", "score": ["V31", 7.5, "HIGH"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "Compaq/Microcom 6000 Access Integrator does not disconnect a client after a certain number of failed login attempts, which allows remote attackers to guess usernames or passwords via a brute force attack.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:o:compaq:microcom_6000_firmware:-:*:*:*:*:*:*:*", "published": "1998-06-03T04:00:00.000", "last_modified": "2024-02-09T03:15:08.037"}, {"id": "CVE-2001-1291", "score": ["V31", 9.8, "CRITICAL"], "v2_score": 10.0, "v2_exploitability_score": 10.0, "v2_impact_score": 10.0, "v2_vector": "AV:N/AC:L/Au:N/C:C/I:C/A:C", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:C/I:C/A:C", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "COMPLETE", "integrityImpact": "COMPLETE", "availabilityImpact": "COMPLETE", "baseScore": 10.0}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 10.0, "acInsufInfo": false, "obtainAllPrivilege": true, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "The telnet server for 3Com hardware such as PS40 SuperStack II does not delay or disconnect remote attackers who provide an incorrect username or password, which makes it easier to break into the server via brute force password guessing.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:o:3com:superstack_ii_ps_hub_40_firmware:-:*:*:*:*:*:*:*", "published": "2001-07-12T04:00:00.000", "last_modified": "2024-02-09T03:14:12.003"}, {"id": "CVE-2001-0395", "score": ["V31", 9.8, "CRITICAL"], "v2_score": 7.5, "v2_exploitability_score": 10.0, "v2_impact_score": 6.4, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 7.5}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "Lightwave ConsoleServer 3200 does not disconnect users after unsuccessful login attempts, which could allow remote attackers to conduct brute force password guessing.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:o:lightwavemo:consoleserver_3200_firmware:-:*:*:*:*:*:*:*", "published": "2001-07-02T04:00:00.000", "last_modified": "2024-02-09T03:14:07.077"}, {"id": "CVE-2001-1339", "score": ["V31", 9.8, "CRITICAL"], "v2_score": 7.5, "v2_exploitability_score": 10.0, "v2_impact_score": 6.4, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 7.5}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": true, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "Beck IPC GmbH IPC@CHIP telnet service does not delay or disconnect users from the service when bad passwords are entered, which makes it easier for remote attackers to conduct brute force password guessing attacks.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:o:anybus:ipc\\@chip_firmware:-:*:*:*:*:*:*:*", "published": "2001-05-24T04:00:00.000", "last_modified": "2024-02-09T03:15:26.757"}, {"id": "CVE-2002-0628", "score": ["V31", 7.5, "HIGH"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "The Telnet service for Polycom ViewStation before 7.2.4 does not restrict the number of failed login attempts, which makes it easier for remote attackers to guess usernames and passwords via a brute force attack.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:h:polycom:viewstation_128:6.5.1:*:*:*:*:*:*:*", "published": "2003-01-07T05:00:00.000", "last_modified": "2024-02-09T03:14:16.373"}, {"id": "CVE-1999-1324", "score": ["V31", 9.8, "CRITICAL"], "v2_score": 7.5, "v2_exploitability_score": 10.0, "v2_impact_score": 6.4, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 7.5}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "VAXstations running Open VMS 5.3 through 5.5-2 with VMS DECwindows or MOTIF do not properly disable access to user accounts that exceed the break-in limit threshold for failed login attempts, which makes it easier for attackers to conduct brute force password guessing.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:o:hp:openvms_vax:*:*:*:*:*:*:*:*", "published": "1999-12-31T05:00:00.000", "last_modified": "2024-02-09T03:15:13.613"}], "cwe_info": {"cwe_id": "307", "name": "Improper Restriction of Excessive Authentication Attempts", "weakness_abstraction": "Base", "status": "Draft", "description": "The software does not implement sufficient measures to prevent multiple failed authentication attempts within in a short time frame, making it more susceptible to brute force attacks.", "extended_description": "", "related_weaknesses": "::NATURE:ChildOf:CWE ID:287:VIEW ID:1000:ORDINAL:Primary::NATURE:ChildOf:CWE ID:287:VIEW ID:1003:ORDINAL:Primary::NATURE:ChildOf:CWE ID:799:VIEW ID:1000::", "weakness_ordinalities": "", "applicable_platforms": "::LANGUAGE CLASS:Language-Independent:LANGUAGE PREVALENCE:Undetermined::", "background_details": "", "alternate_terms": "", "modes_of_introduction": "::PHASE:Architecture and Design:NOTE:COMMISSION: This weakness refers to an incorrect design related to an architectural security tactic.::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Access Control:IMPACT:Bypass Protection Mechanism:NOTE:An attacker could perform an arbitrary number of authentication attempts using different passwords, and eventually gain access to the targeted account.::", "detection_methods": "::METHOD:Dynamic Analysis with Automated Results Interpretation:DESCRIPTION:According to SOAR, the following detection techniques may be useful: Highly cost effective: Web Application Scanner Web Services Scanner Database Scanners Cost effective for partial coverage: Host-based Vulnerability Scanners - Examine configuration for flaws, verifying that audit mechanisms work, ensure host configuration meets certain predefined criteria:EFFECTIVENESS:High::METHOD:Dynamic Analysis with Manual Results Interpretation:DESCRIPTION:According to SOAR, the following detection techniques may be useful: Highly cost effective: Fuzz Tester Framework-based Fuzzer Cost effective for partial coverage: Forced Path Execution:EFFECTIVENESS:High::METHOD:Manual Static Analysis - Source Code:DESCRIPTION:According to SOAR, the following detection techniques may be useful: Highly cost effective: Focused Manual Spotcheck - Focused manual analysis of source Manual Source Code Review (not inspections):EFFECTIVENESS:High::METHOD:Automated Static Analysis - Source Code:DESCRIPTION:According to SOAR, the following detection techniques may be useful: Cost effective for partial coverage: Source code Weakness Analyzer Context-configured Source Code Weakness Analyzer:EFFECTIVENESS:SOAR Partial::METHOD:Automated Static Analysis:DESCRIPTION:According to SOAR, the following detection techniques may be useful: Cost effective for partial coverage: Configuration Checker:EFFECTIVENESS:SOAR Partial::METHOD:Architecture or Design Review:DESCRIPTION:According to SOAR, the following detection techniques may be useful: Highly cost effective: Formal Methods / Correct-By-Construction Cost effective for partial coverage: Inspection (IEEE 1028 standard) (can apply to requirements, design, source code, etc.):EFFECTIVENESS:High::", "potential_mitigations": "::PHASE:Architecture and Design:DESCRIPTION:Common protection mechanisms include: Disconnecting the user after a small number of failed attempts Implementing a timeout Locking out a targeted account Requiring a computational task on the user's part.::PHASE:Architecture and Design:STRATEGY:Libraries or Frameworks:DESCRIPTION:Use a vetted library or framework that does not allow this weakness to occur or provides constructs that make this weakness easier to avoid. Consider using libraries with authentication capabilities such as OpenSSL or the ESAPI Authenticator. [REF-45]::", "observed_examples": "::REFERENCE:CVE-1999-1152:DESCRIPTION:Product does not disconnect or timeout after multiple failed logins.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-1999-1152::REFERENCE:CVE-2001-1291:DESCRIPTION:Product does not disconnect or timeout after multiple failed logins.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2001-1291::REFERENCE:CVE-2001-0395:DESCRIPTION:Product does not disconnect or timeout after multiple failed logins.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2001-0395::REFERENCE:CVE-2001-1339:DESCRIPTION:Product does not disconnect or timeout after multiple failed logins.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2001-1339::REFERENCE:CVE-2002-0628:DESCRIPTION:Product does not disconnect or timeout after multiple failed logins.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2002-0628::REFERENCE:CVE-1999-1324:DESCRIPTION:User accounts not disabled when they exceed a threshold; possibly a resultant problem.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-1999-1324::", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "::TAXONOMY NAME:PLOVER:ENTRY ID:AUTHENT.MULTFAIL:ENTRY NAME:Multiple Failed Authentication Attempts not Prevented::TAXONOMY NAME:Software Fault Patterns:ENTRY ID:SFP34:ENTRY NAME:Unrestricted authentication::", "related_attack_patterns": "::16::49::560::565::600::652::653::", "notes": ""}}, {"cwe": "CWE-308", "cves": [], "cwe_info": {"cwe_id": "308", "name": "Use of Single-factor Authentication", "weakness_abstraction": "Base", "status": "Draft", "description": "The use of single-factor authentication can lead to unnecessary risk of compromise when compared with the benefits of a dual-factor authentication scheme.", "extended_description": "While the use of multiple authentication schemes is simply piling on more complexity on top of authentication, it is inestimably valuable to have such measures of redundancy. The use of weak, reused, and common passwords is rampant on the internet. Without the added protection of multiple authentication schemes, a single mistake can result in the compromise of an account. For this reason, if multiple schemes are possible and also easy to use, they should be implemented and required.", "related_weaknesses": "::NATURE:ChildOf:CWE ID:287:VIEW ID:1000:ORDINAL:Primary::NATURE:ChildOf:CWE ID:654:VIEW ID:1000::NATURE:PeerOf:CWE ID:309:VIEW ID:1000::", "weakness_ordinalities": "", "applicable_platforms": "::LANGUAGE CLASS:Language-Independent:LANGUAGE PREVALENCE:Undetermined::", "background_details": "", "alternate_terms": "", "modes_of_introduction": "::PHASE:Architecture and Design:NOTE:COMMISSION: This weakness refers to an incorrect design related to an architectural security tactic.::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Access Control:IMPACT:Bypass Protection Mechanism:NOTE:If the secret in a single-factor authentication scheme gets compromised, full authentication is possible.::", "detection_methods": "", "potential_mitigations": "::PHASE:Architecture and Design:DESCRIPTION:Use multiple independent authentication schemes, which ensures that -- if one of the methods is compromised -- the system itself is still likely safe from compromise.::", "observed_examples": "", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "::TAXONOMY NAME:CLASP:ENTRY NAME:Using single-factor authentication::", "related_attack_patterns": "::16::49::509::55::555::560::561::565::600::644::645::652::653::70::", "notes": ""}}, {"cwe": "CWE-309", "cves": [], "cwe_info": {"cwe_id": "309", "name": "Use of Password System for Primary Authentication", "weakness_abstraction": "Base", "status": "Draft", "description": "The use of password systems as the primary means of authentication may be subject to several flaws or shortcomings, each reducing the effectiveness of the mechanism.", "extended_description": "", "related_weaknesses": "::NATURE:ChildOf:CWE ID:287:VIEW ID:1000:ORDINAL:Primary::NATURE:ChildOf:CWE ID:654:VIEW ID:1000::NATURE:PeerOf:CWE ID:308:VIEW ID:1000::", "weakness_ordinalities": "", "applicable_platforms": "::LANGUAGE CLASS:Language-Independent:LANGUAGE PREVALENCE:Undetermined::", "background_details": "::Password systems are the simplest and most ubiquitous authentication mechanisms. However, they are subject to such well known attacks,and such frequent compromise that their use in the most simple implementation is not practical.::", "alternate_terms": "", "modes_of_introduction": "::PHASE:Architecture and Design::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Access Control:IMPACT:Bypass Protection Mechanism:IMPACT:Gain Privileges or Assume Identity:NOTE:A password authentication mechanism error will almost always result in attackers being authorized as valid users.::", "detection_methods": "", "potential_mitigations": "::PHASE:Architecture and Design:DESCRIPTION:In order to protect password systems from compromise, the following should be noted: Passwords should be stored safely to prevent insider attack and to ensure that -- if a system is compromised -- the passwords are not retrievable. Due to password reuse, this information may be useful in the compromise of other systems these users work with. In order to protect these passwords, they should be stored encrypted, in a non-reversible state, such that the original text password cannot be extracted from the stored value. Password aging should be strictly enforced to ensure that passwords do not remain unchanged for long periods of time. The longer a password remains in use, the higher the probability that it has been compromised. For this reason, passwords should require refreshing periodically, and users should be informed of the risk of passwords which remain in use for too long. Password strength should be enforced intelligently. Rather than restrict passwords to specific content, or specific length, users should be encouraged to use upper and lower case letters, numbers, and symbols in their passwords. The system should also ensure that no passwords are derived from dictionary words.::PHASE:Architecture and Design:DESCRIPTION:Use a zero-knowledge password protocol, such as SRP.::PHASE:Architecture and Design:DESCRIPTION:Ensure that passwords are stored safely and are not reversible.::PHASE:Architecture and Design:DESCRIPTION:Implement password aging functionality that requires passwords be changed after a certain point.::PHASE:Architecture and Design:DESCRIPTION:Use a mechanism for determining the strength of a password and notify the user of weak password use.::PHASE:Architecture and Design:DESCRIPTION:Inform the user of why password protections are in place, how they work to protect data integrity, and why it is important to heed their warnings.::", "observed_examples": "", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "::TAXONOMY NAME:CLASP:ENTRY NAME:Using password systems::TAXONOMY NAME:OWASP Top Ten 2004:ENTRY ID:A3:ENTRY NAME:Broken Authentication and Session Management:MAPPING FIT:CWE More Specific::", "related_attack_patterns": "::16::49::509::55::555::560::561::565::600::652::653::70::", "notes": ""}}, {"cwe": "CWE-262", "cves": [], "cwe_info": {"cwe_id": "262", "name": "Not Using Password Aging", "weakness_abstraction": "Base", "status": "Draft", "description": "If no mechanism is in place for managing password aging, users will have no incentive to update passwords in a timely manner.", "extended_description": "Security experts have often recommended that users change their passwords regularly and avoid reusing passwords. Although this can be an effective mitigation, if the expiration window is too short, it can cause users to generate poor or predictable passwords. As such, it is important to discourage creating similar passwords. It is also useful to have a password aging mechanism that notifies users when passwords are considered old and requests that they replace them with new, strong passwords. Companion documentation which stresses how important this practice is can help users understand and better support this approach.", "related_weaknesses": "::NATURE:ChildOf:CWE ID:287:VIEW ID:1000:ORDINAL:Primary::NATURE:ChildOf:CWE ID:404:VIEW ID:1000::NATURE:PeerOf:CWE ID:309:VIEW ID:1000::NATURE:PeerOf:CWE ID:263:VIEW ID:1000::NATURE:PeerOf:CWE ID:324:VIEW ID:1000::", "weakness_ordinalities": "", "applicable_platforms": "::LANGUAGE CLASS:Language-Independent:LANGUAGE PREVALENCE:Undetermined::", "background_details": "", "alternate_terms": "", "modes_of_introduction": "::PHASE:Architecture and Design:NOTE:COMMISSION: This weakness refers to an incorrect design related to an architectural security tactic.::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Access Control:IMPACT:Gain Privileges or Assume Identity:NOTE:As passwords age, the probability that they are compromised grows.::", "detection_methods": "", "potential_mitigations": "::PHASE:Architecture and Design:DESCRIPTION:As part of a product's design, require users to change their passwords regularly and avoid reusing previous passwords.::", "observed_examples": "", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "::TAXONOMY NAME:CLASP:ENTRY NAME:Not allowing password aging::", "related_attack_patterns": "::16::49::509::55::555::560::561::565::600::652::653::70::", "notes": ""}}, {"cwe": "CWE-263", "cves": [], "cwe_info": {"cwe_id": "263", "name": "Password Aging with Long Expiration", "weakness_abstraction": "Base", "status": "Draft", "description": "Allowing password aging to occur unchecked can result in the possibility of diminished password integrity.", "extended_description": "Just as neglecting to include functionality for the management of password aging is dangerous, so is allowing password aging to continue unchecked. Passwords must be given a maximum life span, after which a user is required to update with a new and different password.", "related_weaknesses": "::NATURE:ChildOf:CWE ID:287:VIEW ID:1000:ORDINAL:Primary::NATURE:ChildOf:CWE ID:404:VIEW ID:1000::", "weakness_ordinalities": "", "applicable_platforms": "::LANGUAGE CLASS:Language-Independent:LANGUAGE PREVALENCE:Undetermined::", "background_details": "", "alternate_terms": "", "modes_of_introduction": "::PHASE:Architecture and Design:NOTE:COMMISSION: This weakness refers to an incorrect design related to an architectural security tactic.::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Access Control:IMPACT:Gain Privileges or Assume Identity:NOTE:As passwords age, the probability that they are compromised grows.::", "detection_methods": "", "potential_mitigations": "::PHASE:Architecture and Design:DESCRIPTION:Ensure that password aging is limited so that there is a defined maximum age for passwords and so that the user is notified several times leading up to the password expiration.::", "observed_examples": "", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "::TAXONOMY NAME:CLASP:ENTRY NAME:Allowing password aging::", "related_attack_patterns": "::16::49::509::55::555::560::561::565::600::652::653::70::", "notes": ""}}, {"cwe": "CWE-654", "cves": [], "cwe_info": {"cwe_id": "654", "name": "Reliance on a Single Factor in a Security Decision", "weakness_abstraction": "Base", "status": "Draft", "description": "A protection mechanism relies exclusively, or to a large extent, on the evaluation of a single condition or the integrity of a single object or entity in order to make a decision about granting access to restricted resources or functionality.", "extended_description": "", "related_weaknesses": "::NATURE:ChildOf:CWE ID:657:VIEW ID:1000:ORDINAL:Primary::NATURE:ChildOf:CWE ID:693:VIEW ID:1000::", "weakness_ordinalities": "::ORDINALITY:Primary::", "applicable_platforms": "::LANGUAGE CLASS:Language-Independent:LANGUAGE PREVALENCE:Undetermined::", "background_details": "", "alternate_terms": "::TERM:Separation of Privilege:DESCRIPTION:Some people and publications use the term Separation of Privilege to describe this weakness, but this term has dual meanings in current usage. While this entry is closely associated with the original definition of Separation of Privilege by Saltzer and Schroeder, others use the same term to describe poor compartmentalization (CWE-653). Because there are multiple interpretations, use of the Separation of Privilege term is discouraged.::", "modes_of_introduction": "::PHASE:Architecture and Design::PHASE:Implementation::PHASE:Operation::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Access Control:IMPACT:Gain Privileges or Assume Identity:NOTE:If the single factor is compromised (e.g. by theft or spoofing), then the integrity of the entire security mechanism can be violated with respect to the user that is identified by that factor.::SCOPE:Non-Repudiation:IMPACT:Hide Activities:NOTE:It can become difficult or impossible for the product to be able to distinguish between legitimate activities by the entity who provided the factor, versus illegitimate activities by an attacker.::", "detection_methods": "", "potential_mitigations": "::PHASE:Architecture and Design:DESCRIPTION:Use multiple simultaneous checks before granting access to critical operations or granting critical privileges. A weaker but helpful mitigation is to use several successive checks (multiple layers of security).::PHASE:Architecture and Design:DESCRIPTION:Use redundant access rules on different choke points (e.g., firewalls).::", "observed_examples": "", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "", "related_attack_patterns": "::16::274::49::55::560::565::600::652::653::70::", "notes": "::TYPE:Maintenance:NOTE:This entry is closely associated with the term Separation of Privilege. This term is used in several different ways in the industry, but they generally combine two closely related principles: compartmentalization (CWE-653) and using only one factor in a security decision (this entry). Proper compartmentalization implicitly introduces multiple factors into a security decision, but there can be cases in which multiple factors are required for authentication or other mechanisms that do not involve compartmentalization, such as performing all required checks on a submitted certificate. It is likely that CWE-653 and CWE-654 will provoke further discussion.::"}}, {"cwe": "CWE-1273", "cves": [], "cwe_info": {"cwe_id": "1273", "name": "Device Unlock Credential Sharing", "weakness_abstraction": "Base", "status": "Incomplete", "description": "The credentials necessary for unlocking a device are shared across multiple parties and may expose sensitive information.", "extended_description": "\u201cUnlocking a device\u201d often means activating certain, unadvertised, debug and manufacturer-specific capabilities of a device using sensitive credentials. Unlocking a device might be necessary for the purpose of troubleshooting device problems. For example, suppose a device contains the ability to dump the content of the full system memory by disabling the memory-protection mechanisms. Since this is a highly security-sensitive capability, this capability is \u201clocked\u201d in the production part. Unless the device gets unlocked by supplying the proper credentials the debug capabilities are not available. For cases where the chip designer, chip manufacturer (fabricator), and manufacturing and assembly testers are the all employed by the same company, the compromise of the credentials are greatly reduced. However, when the chip designer is employed by one company, the chip manufacturer is employed by another company (a foundry), and the assemblers and testers are employed by yet a third company. Since these different companies will need to perform various tests on the device to verify correct device function, they all need to share the unlock key. Unfortunately, the level of secrecy and policy might be quite different at each company, greatly increasing the risk of sensitive credentials being compromised.", "related_weaknesses": "::NATURE:ChildOf:CWE ID:200:VIEW ID:1000:ORDINAL:Primary::", "weakness_ordinalities": "", "applicable_platforms": "::LANGUAGE NAME:VHDL:LANGUAGE PREVALENCE:Undetermined::LANGUAGE NAME:Verilog:LANGUAGE PREVALENCE:Undetermined::LANGUAGE CLASS:Compiled:LANGUAGE PREVALENCE:Undetermined::OPERATING SYSTEM CLASS:OS-Independent:OPERATING SYSTEM PREVALENCE:Undetermined::ARCHITECTURE CLASS:Architecture-Independent:ARCHITECTURE PREVALENCE:Undetermined::TECHNOLOGY NAME:Other:TECHNOLOGY PREVALENCE:Undetermined::TECHNOLOGY CLASS:Technology-Independent:TECHNOLOGY PREVALENCE:Undetermined::", "background_details": "", "alternate_terms": "", "modes_of_introduction": "::PHASE:Integration::PHASE:Manufacturing::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Confidentiality:SCOPE:Integrity:SCOPE:Availability:SCOPE:Access Control:SCOPE:Accountability:SCOPE:Authentication:SCOPE:Authorization:SCOPE:Non-Repudiation:IMPACT:Modify Memory:IMPACT:Read Memory:IMPACT:Modify Files or Directories:IMPACT:Read Files or Directories:IMPACT:Modify Application Data:IMPACT:Execute Unauthorized Code or Commands:IMPACT:Gain Privileges or Assume Identity:IMPACT:Bypass Protection Mechanism:NOTE:Once unlock credentials are compromised, an attacker can use the credentials to unlock the device and gain unauthorized access to the hidden functionalities protected by those credentials.::", "detection_methods": "", "potential_mitigations": "::PHASE:Integration:DESCRIPTION:Ensure the unlock credentials are shared with the minimum number of parties and with utmost secrecy. To limit the risk associated with compromised credentials, where possible, the credentials should be part-specific.::PHASE:Manufacturing:DESCRIPTION:Ensure the unlock credentials are shared with the minimum number of parties and with utmost secrecy. To limit the risk associated with compromised credentials, where possible, the credentials should be part-specific.::", "observed_examples": "", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "", "related_attack_patterns": "::560::", "notes": "::TYPE:Maintenance:NOTE:This entry is still under development and will continue to see updates and content improvements.::"}}]}]}, {"technique_id": "T1552", "t_findings": [{"capec_id": "CAPEC-560", "c_findings": [{"cwe": "CWE-522", "cves": [{"id": "CVE-2007-0681", "score": ["V31", 9.8, "CRITICAL"], "v2_score": 7.5, "v2_exploitability_score": 10.0, "v2_impact_score": 6.4, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 7.5}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": true, "userInteractionRequired": false}], "description": "profile.php in ExtCalendar 2 and earlier allows remote attackers to change the passwords of arbitrary users without providing the original password, and possibly perform other unauthorized actions, via modified values to register.php.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:extcalendar_project:extcalendar:*:*:*:*:*:*:*:*", "published": "2007-02-03T01:28:00.000", "last_modified": "2024-02-09T03:13:40.213"}, {"id": "CVE-2000-0944", "score": ["V31", 9.8, "CRITICAL"], "v2_score": 7.5, "v2_exploitability_score": 10.0, "v2_impact_score": 6.4, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 7.5}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": true, "userInteractionRequired": false}], "description": "CGI Script Center News Update 1.1 does not properly validate the original news administration password during a password change operation, which allows remote attackers to modify the password without knowing the original password.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:cgi:script_center_news_update:1.1:*:*:*:*:*:*:*", "published": "2000-12-19T05:00:00.000", "last_modified": "2024-02-09T03:15:18.653"}, {"id": "CVE-2005-3435", "score": ["V31", 9.8, "CRITICAL"], "v2_score": 7.5, "v2_exploitability_score": 10.0, "v2_impact_score": 6.4, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 7.5}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": true, "userInteractionRequired": false}], "description": "admin_news.php in Archilles Newsworld up to 1.3.0 allows attackers to bypass authentication by obtaining the password hash for another user, for example through another Newsworld vulnerability, and specifying the hash in the pwd argument.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:archilles:newsworld:*:*:*:*:*:*:*:*", "published": "2005-11-02T11:02:00.000", "last_modified": "2024-02-09T03:13:36.147"}, {"id": "CVE-2005-0408", "score": ["V31", 9.8, "CRITICAL"], "v2_score": 7.5, "v2_exploitability_score": 10.0, "v2_impact_score": 6.4, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 7.5}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": true, "userInteractionRequired": false}], "description": "CitrusDB 0.3.6 and earlier generates easily predictable MD5 hashes of the user name for the id_hash cookie, which allows remote attackers to bypass authentication and gain privileges by calculating the MD5 checksum of the user name combined with the \"boogaadeeboo\" string, which is hard-coded in the $hidden_hash variable.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:citrusdb:citrusdb:*:*:*:*:*:*:*:*", "published": "2005-02-14T05:00:00.000", "last_modified": "2024-02-09T03:13:25.890"}], "cwe_info": {"cwe_id": "522", "name": "Insufficiently Protected Credentials", "weakness_abstraction": "Class", "status": "Incomplete", "description": "The product transmits or stores authentication credentials, but it uses an insecure method that is susceptible to unauthorized interception and/or retrieval.", "extended_description": "", "related_weaknesses": "::NATURE:ChildOf:CWE ID:287:VIEW ID:1000:ORDINAL:Primary::NATURE:ChildOf:CWE ID:287:VIEW ID:1003:ORDINAL:Primary::NATURE:ChildOf:CWE ID:668:VIEW ID:1000::", "weakness_ordinalities": "", "applicable_platforms": "", "background_details": "", "alternate_terms": "", "modes_of_introduction": "::PHASE:Architecture and Design:NOTE:COMMISSION: This weakness refers to an incorrect design related to an architectural security tactic.::PHASE:Implementation::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Access Control:IMPACT:Gain Privileges or Assume Identity:NOTE:An attacker could gain access to user accounts and access sensitive data used by the user accounts.::", "detection_methods": "", "potential_mitigations": "::PHASE:Architecture and Design:DESCRIPTION:Use an appropriate security mechanism to protect the credentials.::PHASE:Architecture and Design:DESCRIPTION:Make appropriate use of cryptography to protect the credentials.::PHASE:Implementation:DESCRIPTION:Use industry standards to protect the credentials (e.g. LDAP, keystore, etc.).::", "observed_examples": "::REFERENCE:CVE-2007-0681:DESCRIPTION:Web app allows remote attackers to change the passwords of arbitrary users without providing the original password, and possibly perform other unauthorized actions.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2007-0681::REFERENCE:CVE-2000-0944:DESCRIPTION:Web application password change utility doesn't check the original password.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2000-0944::REFERENCE:CVE-2005-3435:DESCRIPTION:product authentication succeeds if user-provided MD5 hash matches the hash in its database; this can be subjected to replay attacks.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2005-3435::REFERENCE:CVE-2005-0408:DESCRIPTION:chain: product generates predictable MD5 hashes using a constant value combined with username, allowing authentication bypass.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2005-0408::", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "::TAXONOMY NAME:OWASP Top Ten 2007:ENTRY ID:A7:ENTRY NAME:Broken Authentication and Session Management:MAPPING FIT:CWE More Specific::TAXONOMY NAME:OWASP Top Ten 2004:ENTRY ID:A3:ENTRY NAME:Broken Authentication and Session Management:MAPPING FIT:CWE More Specific::", "related_attack_patterns": "::102::474::50::509::551::555::560::561::600::644::645::652::653::", "notes": ""}}, {"cwe": "CWE-307", "cves": [{"id": "CVE-1999-1152", "score": ["V31", 7.5, "HIGH"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "Compaq/Microcom 6000 Access Integrator does not disconnect a client after a certain number of failed login attempts, which allows remote attackers to guess usernames or passwords via a brute force attack.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:o:compaq:microcom_6000_firmware:-:*:*:*:*:*:*:*", "published": "1998-06-03T04:00:00.000", "last_modified": "2024-02-09T03:15:08.037"}, {"id": "CVE-2001-1291", "score": ["V31", 9.8, "CRITICAL"], "v2_score": 10.0, "v2_exploitability_score": 10.0, "v2_impact_score": 10.0, "v2_vector": "AV:N/AC:L/Au:N/C:C/I:C/A:C", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:C/I:C/A:C", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "COMPLETE", "integrityImpact": "COMPLETE", "availabilityImpact": "COMPLETE", "baseScore": 10.0}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 10.0, "acInsufInfo": false, "obtainAllPrivilege": true, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "The telnet server for 3Com hardware such as PS40 SuperStack II does not delay or disconnect remote attackers who provide an incorrect username or password, which makes it easier to break into the server via brute force password guessing.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:o:3com:superstack_ii_ps_hub_40_firmware:-:*:*:*:*:*:*:*", "published": "2001-07-12T04:00:00.000", "last_modified": "2024-02-09T03:14:12.003"}, {"id": "CVE-2001-0395", "score": ["V31", 9.8, "CRITICAL"], "v2_score": 7.5, "v2_exploitability_score": 10.0, "v2_impact_score": 6.4, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 7.5}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "Lightwave ConsoleServer 3200 does not disconnect users after unsuccessful login attempts, which could allow remote attackers to conduct brute force password guessing.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:o:lightwavemo:consoleserver_3200_firmware:-:*:*:*:*:*:*:*", "published": "2001-07-02T04:00:00.000", "last_modified": "2024-02-09T03:14:07.077"}, {"id": "CVE-2001-1339", "score": ["V31", 9.8, "CRITICAL"], "v2_score": 7.5, "v2_exploitability_score": 10.0, "v2_impact_score": 6.4, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 7.5}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": true, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "Beck IPC GmbH IPC@CHIP telnet service does not delay or disconnect users from the service when bad passwords are entered, which makes it easier for remote attackers to conduct brute force password guessing attacks.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:o:anybus:ipc\\@chip_firmware:-:*:*:*:*:*:*:*", "published": "2001-05-24T04:00:00.000", "last_modified": "2024-02-09T03:15:26.757"}, {"id": "CVE-2002-0628", "score": ["V31", 7.5, "HIGH"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "The Telnet service for Polycom ViewStation before 7.2.4 does not restrict the number of failed login attempts, which makes it easier for remote attackers to guess usernames and passwords via a brute force attack.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:h:polycom:viewstation_128:6.5.1:*:*:*:*:*:*:*", "published": "2003-01-07T05:00:00.000", "last_modified": "2024-02-09T03:14:16.373"}, {"id": "CVE-1999-1324", "score": ["V31", 9.8, "CRITICAL"], "v2_score": 7.5, "v2_exploitability_score": 10.0, "v2_impact_score": 6.4, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 7.5}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "VAXstations running Open VMS 5.3 through 5.5-2 with VMS DECwindows or MOTIF do not properly disable access to user accounts that exceed the break-in limit threshold for failed login attempts, which makes it easier for attackers to conduct brute force password guessing.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:o:hp:openvms_vax:*:*:*:*:*:*:*:*", "published": "1999-12-31T05:00:00.000", "last_modified": "2024-02-09T03:15:13.613"}], "cwe_info": {"cwe_id": "307", "name": "Improper Restriction of Excessive Authentication Attempts", "weakness_abstraction": "Base", "status": "Draft", "description": "The software does not implement sufficient measures to prevent multiple failed authentication attempts within in a short time frame, making it more susceptible to brute force attacks.", "extended_description": "", "related_weaknesses": "::NATURE:ChildOf:CWE ID:287:VIEW ID:1000:ORDINAL:Primary::NATURE:ChildOf:CWE ID:287:VIEW ID:1003:ORDINAL:Primary::NATURE:ChildOf:CWE ID:799:VIEW ID:1000::", "weakness_ordinalities": "", "applicable_platforms": "::LANGUAGE CLASS:Language-Independent:LANGUAGE PREVALENCE:Undetermined::", "background_details": "", "alternate_terms": "", "modes_of_introduction": "::PHASE:Architecture and Design:NOTE:COMMISSION: This weakness refers to an incorrect design related to an architectural security tactic.::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Access Control:IMPACT:Bypass Protection Mechanism:NOTE:An attacker could perform an arbitrary number of authentication attempts using different passwords, and eventually gain access to the targeted account.::", "detection_methods": "::METHOD:Dynamic Analysis with Automated Results Interpretation:DESCRIPTION:According to SOAR, the following detection techniques may be useful: Highly cost effective: Web Application Scanner Web Services Scanner Database Scanners Cost effective for partial coverage: Host-based Vulnerability Scanners - Examine configuration for flaws, verifying that audit mechanisms work, ensure host configuration meets certain predefined criteria:EFFECTIVENESS:High::METHOD:Dynamic Analysis with Manual Results Interpretation:DESCRIPTION:According to SOAR, the following detection techniques may be useful: Highly cost effective: Fuzz Tester Framework-based Fuzzer Cost effective for partial coverage: Forced Path Execution:EFFECTIVENESS:High::METHOD:Manual Static Analysis - Source Code:DESCRIPTION:According to SOAR, the following detection techniques may be useful: Highly cost effective: Focused Manual Spotcheck - Focused manual analysis of source Manual Source Code Review (not inspections):EFFECTIVENESS:High::METHOD:Automated Static Analysis - Source Code:DESCRIPTION:According to SOAR, the following detection techniques may be useful: Cost effective for partial coverage: Source code Weakness Analyzer Context-configured Source Code Weakness Analyzer:EFFECTIVENESS:SOAR Partial::METHOD:Automated Static Analysis:DESCRIPTION:According to SOAR, the following detection techniques may be useful: Cost effective for partial coverage: Configuration Checker:EFFECTIVENESS:SOAR Partial::METHOD:Architecture or Design Review:DESCRIPTION:According to SOAR, the following detection techniques may be useful: Highly cost effective: Formal Methods / Correct-By-Construction Cost effective for partial coverage: Inspection (IEEE 1028 standard) (can apply to requirements, design, source code, etc.):EFFECTIVENESS:High::", "potential_mitigations": "::PHASE:Architecture and Design:DESCRIPTION:Common protection mechanisms include: Disconnecting the user after a small number of failed attempts Implementing a timeout Locking out a targeted account Requiring a computational task on the user's part.::PHASE:Architecture and Design:STRATEGY:Libraries or Frameworks:DESCRIPTION:Use a vetted library or framework that does not allow this weakness to occur or provides constructs that make this weakness easier to avoid. Consider using libraries with authentication capabilities such as OpenSSL or the ESAPI Authenticator. [REF-45]::", "observed_examples": "::REFERENCE:CVE-1999-1152:DESCRIPTION:Product does not disconnect or timeout after multiple failed logins.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-1999-1152::REFERENCE:CVE-2001-1291:DESCRIPTION:Product does not disconnect or timeout after multiple failed logins.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2001-1291::REFERENCE:CVE-2001-0395:DESCRIPTION:Product does not disconnect or timeout after multiple failed logins.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2001-0395::REFERENCE:CVE-2001-1339:DESCRIPTION:Product does not disconnect or timeout after multiple failed logins.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2001-1339::REFERENCE:CVE-2002-0628:DESCRIPTION:Product does not disconnect or timeout after multiple failed logins.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2002-0628::REFERENCE:CVE-1999-1324:DESCRIPTION:User accounts not disabled when they exceed a threshold; possibly a resultant problem.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-1999-1324::", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "::TAXONOMY NAME:PLOVER:ENTRY ID:AUTHENT.MULTFAIL:ENTRY NAME:Multiple Failed Authentication Attempts not Prevented::TAXONOMY NAME:Software Fault Patterns:ENTRY ID:SFP34:ENTRY NAME:Unrestricted authentication::", "related_attack_patterns": "::16::49::560::565::600::652::653::", "notes": ""}}, {"cwe": "CWE-308", "cves": [], "cwe_info": {"cwe_id": "308", "name": "Use of Single-factor Authentication", "weakness_abstraction": "Base", "status": "Draft", "description": "The use of single-factor authentication can lead to unnecessary risk of compromise when compared with the benefits of a dual-factor authentication scheme.", "extended_description": "While the use of multiple authentication schemes is simply piling on more complexity on top of authentication, it is inestimably valuable to have such measures of redundancy. The use of weak, reused, and common passwords is rampant on the internet. Without the added protection of multiple authentication schemes, a single mistake can result in the compromise of an account. For this reason, if multiple schemes are possible and also easy to use, they should be implemented and required.", "related_weaknesses": "::NATURE:ChildOf:CWE ID:287:VIEW ID:1000:ORDINAL:Primary::NATURE:ChildOf:CWE ID:654:VIEW ID:1000::NATURE:PeerOf:CWE ID:309:VIEW ID:1000::", "weakness_ordinalities": "", "applicable_platforms": "::LANGUAGE CLASS:Language-Independent:LANGUAGE PREVALENCE:Undetermined::", "background_details": "", "alternate_terms": "", "modes_of_introduction": "::PHASE:Architecture and Design:NOTE:COMMISSION: This weakness refers to an incorrect design related to an architectural security tactic.::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Access Control:IMPACT:Bypass Protection Mechanism:NOTE:If the secret in a single-factor authentication scheme gets compromised, full authentication is possible.::", "detection_methods": "", "potential_mitigations": "::PHASE:Architecture and Design:DESCRIPTION:Use multiple independent authentication schemes, which ensures that -- if one of the methods is compromised -- the system itself is still likely safe from compromise.::", "observed_examples": "", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "::TAXONOMY NAME:CLASP:ENTRY NAME:Using single-factor authentication::", "related_attack_patterns": "::16::49::509::55::555::560::561::565::600::644::645::652::653::70::", "notes": ""}}, {"cwe": "CWE-309", "cves": [], "cwe_info": {"cwe_id": "309", "name": "Use of Password System for Primary Authentication", "weakness_abstraction": "Base", "status": "Draft", "description": "The use of password systems as the primary means of authentication may be subject to several flaws or shortcomings, each reducing the effectiveness of the mechanism.", "extended_description": "", "related_weaknesses": "::NATURE:ChildOf:CWE ID:287:VIEW ID:1000:ORDINAL:Primary::NATURE:ChildOf:CWE ID:654:VIEW ID:1000::NATURE:PeerOf:CWE ID:308:VIEW ID:1000::", "weakness_ordinalities": "", "applicable_platforms": "::LANGUAGE CLASS:Language-Independent:LANGUAGE PREVALENCE:Undetermined::", "background_details": "::Password systems are the simplest and most ubiquitous authentication mechanisms. However, they are subject to such well known attacks,and such frequent compromise that their use in the most simple implementation is not practical.::", "alternate_terms": "", "modes_of_introduction": "::PHASE:Architecture and Design::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Access Control:IMPACT:Bypass Protection Mechanism:IMPACT:Gain Privileges or Assume Identity:NOTE:A password authentication mechanism error will almost always result in attackers being authorized as valid users.::", "detection_methods": "", "potential_mitigations": "::PHASE:Architecture and Design:DESCRIPTION:In order to protect password systems from compromise, the following should be noted: Passwords should be stored safely to prevent insider attack and to ensure that -- if a system is compromised -- the passwords are not retrievable. Due to password reuse, this information may be useful in the compromise of other systems these users work with. In order to protect these passwords, they should be stored encrypted, in a non-reversible state, such that the original text password cannot be extracted from the stored value. Password aging should be strictly enforced to ensure that passwords do not remain unchanged for long periods of time. The longer a password remains in use, the higher the probability that it has been compromised. For this reason, passwords should require refreshing periodically, and users should be informed of the risk of passwords which remain in use for too long. Password strength should be enforced intelligently. Rather than restrict passwords to specific content, or specific length, users should be encouraged to use upper and lower case letters, numbers, and symbols in their passwords. The system should also ensure that no passwords are derived from dictionary words.::PHASE:Architecture and Design:DESCRIPTION:Use a zero-knowledge password protocol, such as SRP.::PHASE:Architecture and Design:DESCRIPTION:Ensure that passwords are stored safely and are not reversible.::PHASE:Architecture and Design:DESCRIPTION:Implement password aging functionality that requires passwords be changed after a certain point.::PHASE:Architecture and Design:DESCRIPTION:Use a mechanism for determining the strength of a password and notify the user of weak password use.::PHASE:Architecture and Design:DESCRIPTION:Inform the user of why password protections are in place, how they work to protect data integrity, and why it is important to heed their warnings.::", "observed_examples": "", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "::TAXONOMY NAME:CLASP:ENTRY NAME:Using password systems::TAXONOMY NAME:OWASP Top Ten 2004:ENTRY ID:A3:ENTRY NAME:Broken Authentication and Session Management:MAPPING FIT:CWE More Specific::", "related_attack_patterns": "::16::49::509::55::555::560::561::565::600::652::653::70::", "notes": ""}}, {"cwe": "CWE-262", "cves": [], "cwe_info": {"cwe_id": "262", "name": "Not Using Password Aging", "weakness_abstraction": "Base", "status": "Draft", "description": "If no mechanism is in place for managing password aging, users will have no incentive to update passwords in a timely manner.", "extended_description": "Security experts have often recommended that users change their passwords regularly and avoid reusing passwords. Although this can be an effective mitigation, if the expiration window is too short, it can cause users to generate poor or predictable passwords. As such, it is important to discourage creating similar passwords. It is also useful to have a password aging mechanism that notifies users when passwords are considered old and requests that they replace them with new, strong passwords. Companion documentation which stresses how important this practice is can help users understand and better support this approach.", "related_weaknesses": "::NATURE:ChildOf:CWE ID:287:VIEW ID:1000:ORDINAL:Primary::NATURE:ChildOf:CWE ID:404:VIEW ID:1000::NATURE:PeerOf:CWE ID:309:VIEW ID:1000::NATURE:PeerOf:CWE ID:263:VIEW ID:1000::NATURE:PeerOf:CWE ID:324:VIEW ID:1000::", "weakness_ordinalities": "", "applicable_platforms": "::LANGUAGE CLASS:Language-Independent:LANGUAGE PREVALENCE:Undetermined::", "background_details": "", "alternate_terms": "", "modes_of_introduction": "::PHASE:Architecture and Design:NOTE:COMMISSION: This weakness refers to an incorrect design related to an architectural security tactic.::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Access Control:IMPACT:Gain Privileges or Assume Identity:NOTE:As passwords age, the probability that they are compromised grows.::", "detection_methods": "", "potential_mitigations": "::PHASE:Architecture and Design:DESCRIPTION:As part of a product's design, require users to change their passwords regularly and avoid reusing previous passwords.::", "observed_examples": "", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "::TAXONOMY NAME:CLASP:ENTRY NAME:Not allowing password aging::", "related_attack_patterns": "::16::49::509::55::555::560::561::565::600::652::653::70::", "notes": ""}}, {"cwe": "CWE-263", "cves": [], "cwe_info": {"cwe_id": "263", "name": "Password Aging with Long Expiration", "weakness_abstraction": "Base", "status": "Draft", "description": "Allowing password aging to occur unchecked can result in the possibility of diminished password integrity.", "extended_description": "Just as neglecting to include functionality for the management of password aging is dangerous, so is allowing password aging to continue unchecked. Passwords must be given a maximum life span, after which a user is required to update with a new and different password.", "related_weaknesses": "::NATURE:ChildOf:CWE ID:287:VIEW ID:1000:ORDINAL:Primary::NATURE:ChildOf:CWE ID:404:VIEW ID:1000::", "weakness_ordinalities": "", "applicable_platforms": "::LANGUAGE CLASS:Language-Independent:LANGUAGE PREVALENCE:Undetermined::", "background_details": "", "alternate_terms": "", "modes_of_introduction": "::PHASE:Architecture and Design:NOTE:COMMISSION: This weakness refers to an incorrect design related to an architectural security tactic.::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Access Control:IMPACT:Gain Privileges or Assume Identity:NOTE:As passwords age, the probability that they are compromised grows.::", "detection_methods": "", "potential_mitigations": "::PHASE:Architecture and Design:DESCRIPTION:Ensure that password aging is limited so that there is a defined maximum age for passwords and so that the user is notified several times leading up to the password expiration.::", "observed_examples": "", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "::TAXONOMY NAME:CLASP:ENTRY NAME:Allowing password aging::", "related_attack_patterns": "::16::49::509::55::555::560::561::565::600::652::653::70::", "notes": ""}}, {"cwe": "CWE-654", "cves": [], "cwe_info": {"cwe_id": "654", "name": "Reliance on a Single Factor in a Security Decision", "weakness_abstraction": "Base", "status": "Draft", "description": "A protection mechanism relies exclusively, or to a large extent, on the evaluation of a single condition or the integrity of a single object or entity in order to make a decision about granting access to restricted resources or functionality.", "extended_description": "", "related_weaknesses": "::NATURE:ChildOf:CWE ID:657:VIEW ID:1000:ORDINAL:Primary::NATURE:ChildOf:CWE ID:693:VIEW ID:1000::", "weakness_ordinalities": "::ORDINALITY:Primary::", "applicable_platforms": "::LANGUAGE CLASS:Language-Independent:LANGUAGE PREVALENCE:Undetermined::", "background_details": "", "alternate_terms": "::TERM:Separation of Privilege:DESCRIPTION:Some people and publications use the term Separation of Privilege to describe this weakness, but this term has dual meanings in current usage. While this entry is closely associated with the original definition of Separation of Privilege by Saltzer and Schroeder, others use the same term to describe poor compartmentalization (CWE-653). Because there are multiple interpretations, use of the Separation of Privilege term is discouraged.::", "modes_of_introduction": "::PHASE:Architecture and Design::PHASE:Implementation::PHASE:Operation::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Access Control:IMPACT:Gain Privileges or Assume Identity:NOTE:If the single factor is compromised (e.g. by theft or spoofing), then the integrity of the entire security mechanism can be violated with respect to the user that is identified by that factor.::SCOPE:Non-Repudiation:IMPACT:Hide Activities:NOTE:It can become difficult or impossible for the product to be able to distinguish between legitimate activities by the entity who provided the factor, versus illegitimate activities by an attacker.::", "detection_methods": "", "potential_mitigations": "::PHASE:Architecture and Design:DESCRIPTION:Use multiple simultaneous checks before granting access to critical operations or granting critical privileges. A weaker but helpful mitigation is to use several successive checks (multiple layers of security).::PHASE:Architecture and Design:DESCRIPTION:Use redundant access rules on different choke points (e.g., firewalls).::", "observed_examples": "", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "", "related_attack_patterns": "::16::274::49::55::560::565::600::652::653::70::", "notes": "::TYPE:Maintenance:NOTE:This entry is closely associated with the term Separation of Privilege. This term is used in several different ways in the industry, but they generally combine two closely related principles: compartmentalization (CWE-653) and using only one factor in a security decision (this entry). Proper compartmentalization implicitly introduces multiple factors into a security decision, but there can be cases in which multiple factors are required for authentication or other mechanisms that do not involve compartmentalization, such as performing all required checks on a submitted certificate. It is likely that CWE-653 and CWE-654 will provoke further discussion.::"}}, {"cwe": "CWE-1273", "cves": [], "cwe_info": {"cwe_id": "1273", "name": "Device Unlock Credential Sharing", "weakness_abstraction": "Base", "status": "Incomplete", "description": "The credentials necessary for unlocking a device are shared across multiple parties and may expose sensitive information.", "extended_description": "\u201cUnlocking a device\u201d often means activating certain, unadvertised, debug and manufacturer-specific capabilities of a device using sensitive credentials. Unlocking a device might be necessary for the purpose of troubleshooting device problems. For example, suppose a device contains the ability to dump the content of the full system memory by disabling the memory-protection mechanisms. Since this is a highly security-sensitive capability, this capability is \u201clocked\u201d in the production part. Unless the device gets unlocked by supplying the proper credentials the debug capabilities are not available. For cases where the chip designer, chip manufacturer (fabricator), and manufacturing and assembly testers are the all employed by the same company, the compromise of the credentials are greatly reduced. However, when the chip designer is employed by one company, the chip manufacturer is employed by another company (a foundry), and the assemblers and testers are employed by yet a third company. Since these different companies will need to perform various tests on the device to verify correct device function, they all need to share the unlock key. Unfortunately, the level of secrecy and policy might be quite different at each company, greatly increasing the risk of sensitive credentials being compromised.", "related_weaknesses": "::NATURE:ChildOf:CWE ID:200:VIEW ID:1000:ORDINAL:Primary::", "weakness_ordinalities": "", "applicable_platforms": "::LANGUAGE NAME:VHDL:LANGUAGE PREVALENCE:Undetermined::LANGUAGE NAME:Verilog:LANGUAGE PREVALENCE:Undetermined::LANGUAGE CLASS:Compiled:LANGUAGE PREVALENCE:Undetermined::OPERATING SYSTEM CLASS:OS-Independent:OPERATING SYSTEM PREVALENCE:Undetermined::ARCHITECTURE CLASS:Architecture-Independent:ARCHITECTURE PREVALENCE:Undetermined::TECHNOLOGY NAME:Other:TECHNOLOGY PREVALENCE:Undetermined::TECHNOLOGY CLASS:Technology-Independent:TECHNOLOGY PREVALENCE:Undetermined::", "background_details": "", "alternate_terms": "", "modes_of_introduction": "::PHASE:Integration::PHASE:Manufacturing::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Confidentiality:SCOPE:Integrity:SCOPE:Availability:SCOPE:Access Control:SCOPE:Accountability:SCOPE:Authentication:SCOPE:Authorization:SCOPE:Non-Repudiation:IMPACT:Modify Memory:IMPACT:Read Memory:IMPACT:Modify Files or Directories:IMPACT:Read Files or Directories:IMPACT:Modify Application Data:IMPACT:Execute Unauthorized Code or Commands:IMPACT:Gain Privileges or Assume Identity:IMPACT:Bypass Protection Mechanism:NOTE:Once unlock credentials are compromised, an attacker can use the credentials to unlock the device and gain unauthorized access to the hidden functionalities protected by those credentials.::", "detection_methods": "", "potential_mitigations": "::PHASE:Integration:DESCRIPTION:Ensure the unlock credentials are shared with the minimum number of parties and with utmost secrecy. To limit the risk associated with compromised credentials, where possible, the credentials should be part-specific.::PHASE:Manufacturing:DESCRIPTION:Ensure the unlock credentials are shared with the minimum number of parties and with utmost secrecy. To limit the risk associated with compromised credentials, where possible, the credentials should be part-specific.::", "observed_examples": "", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "", "related_attack_patterns": "::560::", "notes": "::TYPE:Maintenance:NOTE:This entry is still under development and will continue to see updates and content improvements.::"}}]}]}, {"technique_id": "T1613", "t_findings": [{"capec_id": "CAPEC-560", "c_findings": [{"cwe": "CWE-522", "cves": [{"id": "CVE-2007-0681", "score": ["V31", 9.8, "CRITICAL"], "v2_score": 7.5, "v2_exploitability_score": 10.0, "v2_impact_score": 6.4, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 7.5}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": true, "userInteractionRequired": false}], "description": "profile.php in ExtCalendar 2 and earlier allows remote attackers to change the passwords of arbitrary users without providing the original password, and possibly perform other unauthorized actions, via modified values to register.php.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:extcalendar_project:extcalendar:*:*:*:*:*:*:*:*", "published": "2007-02-03T01:28:00.000", "last_modified": "2024-02-09T03:13:40.213"}, {"id": "CVE-2000-0944", "score": ["V31", 9.8, "CRITICAL"], "v2_score": 7.5, "v2_exploitability_score": 10.0, "v2_impact_score": 6.4, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 7.5}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": true, "userInteractionRequired": false}], "description": "CGI Script Center News Update 1.1 does not properly validate the original news administration password during a password change operation, which allows remote attackers to modify the password without knowing the original password.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:cgi:script_center_news_update:1.1:*:*:*:*:*:*:*", "published": "2000-12-19T05:00:00.000", "last_modified": "2024-02-09T03:15:18.653"}, {"id": "CVE-2005-3435", "score": ["V31", 9.8, "CRITICAL"], "v2_score": 7.5, "v2_exploitability_score": 10.0, "v2_impact_score": 6.4, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 7.5}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": true, "userInteractionRequired": false}], "description": "admin_news.php in Archilles Newsworld up to 1.3.0 allows attackers to bypass authentication by obtaining the password hash for another user, for example through another Newsworld vulnerability, and specifying the hash in the pwd argument.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:archilles:newsworld:*:*:*:*:*:*:*:*", "published": "2005-11-02T11:02:00.000", "last_modified": "2024-02-09T03:13:36.147"}, {"id": "CVE-2005-0408", "score": ["V31", 9.8, "CRITICAL"], "v2_score": 7.5, "v2_exploitability_score": 10.0, "v2_impact_score": 6.4, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 7.5}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": true, "userInteractionRequired": false}], "description": "CitrusDB 0.3.6 and earlier generates easily predictable MD5 hashes of the user name for the id_hash cookie, which allows remote attackers to bypass authentication and gain privileges by calculating the MD5 checksum of the user name combined with the \"boogaadeeboo\" string, which is hard-coded in the $hidden_hash variable.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:citrusdb:citrusdb:*:*:*:*:*:*:*:*", "published": "2005-02-14T05:00:00.000", "last_modified": "2024-02-09T03:13:25.890"}], "cwe_info": {"cwe_id": "522", "name": "Insufficiently Protected Credentials", "weakness_abstraction": "Class", "status": "Incomplete", "description": "The product transmits or stores authentication credentials, but it uses an insecure method that is susceptible to unauthorized interception and/or retrieval.", "extended_description": "", "related_weaknesses": "::NATURE:ChildOf:CWE ID:287:VIEW ID:1000:ORDINAL:Primary::NATURE:ChildOf:CWE ID:287:VIEW ID:1003:ORDINAL:Primary::NATURE:ChildOf:CWE ID:668:VIEW ID:1000::", "weakness_ordinalities": "", "applicable_platforms": "", "background_details": "", "alternate_terms": "", "modes_of_introduction": "::PHASE:Architecture and Design:NOTE:COMMISSION: This weakness refers to an incorrect design related to an architectural security tactic.::PHASE:Implementation::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Access Control:IMPACT:Gain Privileges or Assume Identity:NOTE:An attacker could gain access to user accounts and access sensitive data used by the user accounts.::", "detection_methods": "", "potential_mitigations": "::PHASE:Architecture and Design:DESCRIPTION:Use an appropriate security mechanism to protect the credentials.::PHASE:Architecture and Design:DESCRIPTION:Make appropriate use of cryptography to protect the credentials.::PHASE:Implementation:DESCRIPTION:Use industry standards to protect the credentials (e.g. LDAP, keystore, etc.).::", "observed_examples": "::REFERENCE:CVE-2007-0681:DESCRIPTION:Web app allows remote attackers to change the passwords of arbitrary users without providing the original password, and possibly perform other unauthorized actions.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2007-0681::REFERENCE:CVE-2000-0944:DESCRIPTION:Web application password change utility doesn't check the original password.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2000-0944::REFERENCE:CVE-2005-3435:DESCRIPTION:product authentication succeeds if user-provided MD5 hash matches the hash in its database; this can be subjected to replay attacks.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2005-3435::REFERENCE:CVE-2005-0408:DESCRIPTION:chain: product generates predictable MD5 hashes using a constant value combined with username, allowing authentication bypass.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2005-0408::", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "::TAXONOMY NAME:OWASP Top Ten 2007:ENTRY ID:A7:ENTRY NAME:Broken Authentication and Session Management:MAPPING FIT:CWE More Specific::TAXONOMY NAME:OWASP Top Ten 2004:ENTRY ID:A3:ENTRY NAME:Broken Authentication and Session Management:MAPPING FIT:CWE More Specific::", "related_attack_patterns": "::102::474::50::509::551::555::560::561::600::644::645::652::653::", "notes": ""}}, {"cwe": "CWE-307", "cves": [{"id": "CVE-1999-1152", "score": ["V31", 7.5, "HIGH"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "Compaq/Microcom 6000 Access Integrator does not disconnect a client after a certain number of failed login attempts, which allows remote attackers to guess usernames or passwords via a brute force attack.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:o:compaq:microcom_6000_firmware:-:*:*:*:*:*:*:*", "published": "1998-06-03T04:00:00.000", "last_modified": "2024-02-09T03:15:08.037"}, {"id": "CVE-2001-1291", "score": ["V31", 9.8, "CRITICAL"], "v2_score": 10.0, "v2_exploitability_score": 10.0, "v2_impact_score": 10.0, "v2_vector": "AV:N/AC:L/Au:N/C:C/I:C/A:C", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:C/I:C/A:C", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "COMPLETE", "integrityImpact": "COMPLETE", "availabilityImpact": "COMPLETE", "baseScore": 10.0}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 10.0, "acInsufInfo": false, "obtainAllPrivilege": true, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "The telnet server for 3Com hardware such as PS40 SuperStack II does not delay or disconnect remote attackers who provide an incorrect username or password, which makes it easier to break into the server via brute force password guessing.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:o:3com:superstack_ii_ps_hub_40_firmware:-:*:*:*:*:*:*:*", "published": "2001-07-12T04:00:00.000", "last_modified": "2024-02-09T03:14:12.003"}, {"id": "CVE-2001-0395", "score": ["V31", 9.8, "CRITICAL"], "v2_score": 7.5, "v2_exploitability_score": 10.0, "v2_impact_score": 6.4, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 7.5}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "Lightwave ConsoleServer 3200 does not disconnect users after unsuccessful login attempts, which could allow remote attackers to conduct brute force password guessing.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:o:lightwavemo:consoleserver_3200_firmware:-:*:*:*:*:*:*:*", "published": "2001-07-02T04:00:00.000", "last_modified": "2024-02-09T03:14:07.077"}, {"id": "CVE-2001-1339", "score": ["V31", 9.8, "CRITICAL"], "v2_score": 7.5, "v2_exploitability_score": 10.0, "v2_impact_score": 6.4, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 7.5}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": true, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "Beck IPC GmbH IPC@CHIP telnet service does not delay or disconnect users from the service when bad passwords are entered, which makes it easier for remote attackers to conduct brute force password guessing attacks.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:o:anybus:ipc\\@chip_firmware:-:*:*:*:*:*:*:*", "published": "2001-05-24T04:00:00.000", "last_modified": "2024-02-09T03:15:26.757"}, {"id": "CVE-2002-0628", "score": ["V31", 7.5, "HIGH"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "The Telnet service for Polycom ViewStation before 7.2.4 does not restrict the number of failed login attempts, which makes it easier for remote attackers to guess usernames and passwords via a brute force attack.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:h:polycom:viewstation_128:6.5.1:*:*:*:*:*:*:*", "published": "2003-01-07T05:00:00.000", "last_modified": "2024-02-09T03:14:16.373"}, {"id": "CVE-1999-1324", "score": ["V31", 9.8, "CRITICAL"], "v2_score": 7.5, "v2_exploitability_score": 10.0, "v2_impact_score": 6.4, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 7.5}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "VAXstations running Open VMS 5.3 through 5.5-2 with VMS DECwindows or MOTIF do not properly disable access to user accounts that exceed the break-in limit threshold for failed login attempts, which makes it easier for attackers to conduct brute force password guessing.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:o:hp:openvms_vax:*:*:*:*:*:*:*:*", "published": "1999-12-31T05:00:00.000", "last_modified": "2024-02-09T03:15:13.613"}], "cwe_info": {"cwe_id": "307", "name": "Improper Restriction of Excessive Authentication Attempts", "weakness_abstraction": "Base", "status": "Draft", "description": "The software does not implement sufficient measures to prevent multiple failed authentication attempts within in a short time frame, making it more susceptible to brute force attacks.", "extended_description": "", "related_weaknesses": "::NATURE:ChildOf:CWE ID:287:VIEW ID:1000:ORDINAL:Primary::NATURE:ChildOf:CWE ID:287:VIEW ID:1003:ORDINAL:Primary::NATURE:ChildOf:CWE ID:799:VIEW ID:1000::", "weakness_ordinalities": "", "applicable_platforms": "::LANGUAGE CLASS:Language-Independent:LANGUAGE PREVALENCE:Undetermined::", "background_details": "", "alternate_terms": "", "modes_of_introduction": "::PHASE:Architecture and Design:NOTE:COMMISSION: This weakness refers to an incorrect design related to an architectural security tactic.::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Access Control:IMPACT:Bypass Protection Mechanism:NOTE:An attacker could perform an arbitrary number of authentication attempts using different passwords, and eventually gain access to the targeted account.::", "detection_methods": "::METHOD:Dynamic Analysis with Automated Results Interpretation:DESCRIPTION:According to SOAR, the following detection techniques may be useful: Highly cost effective: Web Application Scanner Web Services Scanner Database Scanners Cost effective for partial coverage: Host-based Vulnerability Scanners - Examine configuration for flaws, verifying that audit mechanisms work, ensure host configuration meets certain predefined criteria:EFFECTIVENESS:High::METHOD:Dynamic Analysis with Manual Results Interpretation:DESCRIPTION:According to SOAR, the following detection techniques may be useful: Highly cost effective: Fuzz Tester Framework-based Fuzzer Cost effective for partial coverage: Forced Path Execution:EFFECTIVENESS:High::METHOD:Manual Static Analysis - Source Code:DESCRIPTION:According to SOAR, the following detection techniques may be useful: Highly cost effective: Focused Manual Spotcheck - Focused manual analysis of source Manual Source Code Review (not inspections):EFFECTIVENESS:High::METHOD:Automated Static Analysis - Source Code:DESCRIPTION:According to SOAR, the following detection techniques may be useful: Cost effective for partial coverage: Source code Weakness Analyzer Context-configured Source Code Weakness Analyzer:EFFECTIVENESS:SOAR Partial::METHOD:Automated Static Analysis:DESCRIPTION:According to SOAR, the following detection techniques may be useful: Cost effective for partial coverage: Configuration Checker:EFFECTIVENESS:SOAR Partial::METHOD:Architecture or Design Review:DESCRIPTION:According to SOAR, the following detection techniques may be useful: Highly cost effective: Formal Methods / Correct-By-Construction Cost effective for partial coverage: Inspection (IEEE 1028 standard) (can apply to requirements, design, source code, etc.):EFFECTIVENESS:High::", "potential_mitigations": "::PHASE:Architecture and Design:DESCRIPTION:Common protection mechanisms include: Disconnecting the user after a small number of failed attempts Implementing a timeout Locking out a targeted account Requiring a computational task on the user's part.::PHASE:Architecture and Design:STRATEGY:Libraries or Frameworks:DESCRIPTION:Use a vetted library or framework that does not allow this weakness to occur or provides constructs that make this weakness easier to avoid. Consider using libraries with authentication capabilities such as OpenSSL or the ESAPI Authenticator. [REF-45]::", "observed_examples": "::REFERENCE:CVE-1999-1152:DESCRIPTION:Product does not disconnect or timeout after multiple failed logins.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-1999-1152::REFERENCE:CVE-2001-1291:DESCRIPTION:Product does not disconnect or timeout after multiple failed logins.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2001-1291::REFERENCE:CVE-2001-0395:DESCRIPTION:Product does not disconnect or timeout after multiple failed logins.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2001-0395::REFERENCE:CVE-2001-1339:DESCRIPTION:Product does not disconnect or timeout after multiple failed logins.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2001-1339::REFERENCE:CVE-2002-0628:DESCRIPTION:Product does not disconnect or timeout after multiple failed logins.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2002-0628::REFERENCE:CVE-1999-1324:DESCRIPTION:User accounts not disabled when they exceed a threshold; possibly a resultant problem.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-1999-1324::", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "::TAXONOMY NAME:PLOVER:ENTRY ID:AUTHENT.MULTFAIL:ENTRY NAME:Multiple Failed Authentication Attempts not Prevented::TAXONOMY NAME:Software Fault Patterns:ENTRY ID:SFP34:ENTRY NAME:Unrestricted authentication::", "related_attack_patterns": "::16::49::560::565::600::652::653::", "notes": ""}}, {"cwe": "CWE-308", "cves": [], "cwe_info": {"cwe_id": "308", "name": "Use of Single-factor Authentication", "weakness_abstraction": "Base", "status": "Draft", "description": "The use of single-factor authentication can lead to unnecessary risk of compromise when compared with the benefits of a dual-factor authentication scheme.", "extended_description": "While the use of multiple authentication schemes is simply piling on more complexity on top of authentication, it is inestimably valuable to have such measures of redundancy. The use of weak, reused, and common passwords is rampant on the internet. Without the added protection of multiple authentication schemes, a single mistake can result in the compromise of an account. For this reason, if multiple schemes are possible and also easy to use, they should be implemented and required.", "related_weaknesses": "::NATURE:ChildOf:CWE ID:287:VIEW ID:1000:ORDINAL:Primary::NATURE:ChildOf:CWE ID:654:VIEW ID:1000::NATURE:PeerOf:CWE ID:309:VIEW ID:1000::", "weakness_ordinalities": "", "applicable_platforms": "::LANGUAGE CLASS:Language-Independent:LANGUAGE PREVALENCE:Undetermined::", "background_details": "", "alternate_terms": "", "modes_of_introduction": "::PHASE:Architecture and Design:NOTE:COMMISSION: This weakness refers to an incorrect design related to an architectural security tactic.::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Access Control:IMPACT:Bypass Protection Mechanism:NOTE:If the secret in a single-factor authentication scheme gets compromised, full authentication is possible.::", "detection_methods": "", "potential_mitigations": "::PHASE:Architecture and Design:DESCRIPTION:Use multiple independent authentication schemes, which ensures that -- if one of the methods is compromised -- the system itself is still likely safe from compromise.::", "observed_examples": "", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "::TAXONOMY NAME:CLASP:ENTRY NAME:Using single-factor authentication::", "related_attack_patterns": "::16::49::509::55::555::560::561::565::600::644::645::652::653::70::", "notes": ""}}, {"cwe": "CWE-309", "cves": [], "cwe_info": {"cwe_id": "309", "name": "Use of Password System for Primary Authentication", "weakness_abstraction": "Base", "status": "Draft", "description": "The use of password systems as the primary means of authentication may be subject to several flaws or shortcomings, each reducing the effectiveness of the mechanism.", "extended_description": "", "related_weaknesses": "::NATURE:ChildOf:CWE ID:287:VIEW ID:1000:ORDINAL:Primary::NATURE:ChildOf:CWE ID:654:VIEW ID:1000::NATURE:PeerOf:CWE ID:308:VIEW ID:1000::", "weakness_ordinalities": "", "applicable_platforms": "::LANGUAGE CLASS:Language-Independent:LANGUAGE PREVALENCE:Undetermined::", "background_details": "::Password systems are the simplest and most ubiquitous authentication mechanisms. However, they are subject to such well known attacks,and such frequent compromise that their use in the most simple implementation is not practical.::", "alternate_terms": "", "modes_of_introduction": "::PHASE:Architecture and Design::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Access Control:IMPACT:Bypass Protection Mechanism:IMPACT:Gain Privileges or Assume Identity:NOTE:A password authentication mechanism error will almost always result in attackers being authorized as valid users.::", "detection_methods": "", "potential_mitigations": "::PHASE:Architecture and Design:DESCRIPTION:In order to protect password systems from compromise, the following should be noted: Passwords should be stored safely to prevent insider attack and to ensure that -- if a system is compromised -- the passwords are not retrievable. Due to password reuse, this information may be useful in the compromise of other systems these users work with. In order to protect these passwords, they should be stored encrypted, in a non-reversible state, such that the original text password cannot be extracted from the stored value. Password aging should be strictly enforced to ensure that passwords do not remain unchanged for long periods of time. The longer a password remains in use, the higher the probability that it has been compromised. For this reason, passwords should require refreshing periodically, and users should be informed of the risk of passwords which remain in use for too long. Password strength should be enforced intelligently. Rather than restrict passwords to specific content, or specific length, users should be encouraged to use upper and lower case letters, numbers, and symbols in their passwords. The system should also ensure that no passwords are derived from dictionary words.::PHASE:Architecture and Design:DESCRIPTION:Use a zero-knowledge password protocol, such as SRP.::PHASE:Architecture and Design:DESCRIPTION:Ensure that passwords are stored safely and are not reversible.::PHASE:Architecture and Design:DESCRIPTION:Implement password aging functionality that requires passwords be changed after a certain point.::PHASE:Architecture and Design:DESCRIPTION:Use a mechanism for determining the strength of a password and notify the user of weak password use.::PHASE:Architecture and Design:DESCRIPTION:Inform the user of why password protections are in place, how they work to protect data integrity, and why it is important to heed their warnings.::", "observed_examples": "", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "::TAXONOMY NAME:CLASP:ENTRY NAME:Using password systems::TAXONOMY NAME:OWASP Top Ten 2004:ENTRY ID:A3:ENTRY NAME:Broken Authentication and Session Management:MAPPING FIT:CWE More Specific::", "related_attack_patterns": "::16::49::509::55::555::560::561::565::600::652::653::70::", "notes": ""}}, {"cwe": "CWE-262", "cves": [], "cwe_info": {"cwe_id": "262", "name": "Not Using Password Aging", "weakness_abstraction": "Base", "status": "Draft", "description": "If no mechanism is in place for managing password aging, users will have no incentive to update passwords in a timely manner.", "extended_description": "Security experts have often recommended that users change their passwords regularly and avoid reusing passwords. Although this can be an effective mitigation, if the expiration window is too short, it can cause users to generate poor or predictable passwords. As such, it is important to discourage creating similar passwords. It is also useful to have a password aging mechanism that notifies users when passwords are considered old and requests that they replace them with new, strong passwords. Companion documentation which stresses how important this practice is can help users understand and better support this approach.", "related_weaknesses": "::NATURE:ChildOf:CWE ID:287:VIEW ID:1000:ORDINAL:Primary::NATURE:ChildOf:CWE ID:404:VIEW ID:1000::NATURE:PeerOf:CWE ID:309:VIEW ID:1000::NATURE:PeerOf:CWE ID:263:VIEW ID:1000::NATURE:PeerOf:CWE ID:324:VIEW ID:1000::", "weakness_ordinalities": "", "applicable_platforms": "::LANGUAGE CLASS:Language-Independent:LANGUAGE PREVALENCE:Undetermined::", "background_details": "", "alternate_terms": "", "modes_of_introduction": "::PHASE:Architecture and Design:NOTE:COMMISSION: This weakness refers to an incorrect design related to an architectural security tactic.::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Access Control:IMPACT:Gain Privileges or Assume Identity:NOTE:As passwords age, the probability that they are compromised grows.::", "detection_methods": "", "potential_mitigations": "::PHASE:Architecture and Design:DESCRIPTION:As part of a product's design, require users to change their passwords regularly and avoid reusing previous passwords.::", "observed_examples": "", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "::TAXONOMY NAME:CLASP:ENTRY NAME:Not allowing password aging::", "related_attack_patterns": "::16::49::509::55::555::560::561::565::600::652::653::70::", "notes": ""}}, {"cwe": "CWE-263", "cves": [], "cwe_info": {"cwe_id": "263", "name": "Password Aging with Long Expiration", "weakness_abstraction": "Base", "status": "Draft", "description": "Allowing password aging to occur unchecked can result in the possibility of diminished password integrity.", "extended_description": "Just as neglecting to include functionality for the management of password aging is dangerous, so is allowing password aging to continue unchecked. Passwords must be given a maximum life span, after which a user is required to update with a new and different password.", "related_weaknesses": "::NATURE:ChildOf:CWE ID:287:VIEW ID:1000:ORDINAL:Primary::NATURE:ChildOf:CWE ID:404:VIEW ID:1000::", "weakness_ordinalities": "", "applicable_platforms": "::LANGUAGE CLASS:Language-Independent:LANGUAGE PREVALENCE:Undetermined::", "background_details": "", "alternate_terms": "", "modes_of_introduction": "::PHASE:Architecture and Design:NOTE:COMMISSION: This weakness refers to an incorrect design related to an architectural security tactic.::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Access Control:IMPACT:Gain Privileges or Assume Identity:NOTE:As passwords age, the probability that they are compromised grows.::", "detection_methods": "", "potential_mitigations": "::PHASE:Architecture and Design:DESCRIPTION:Ensure that password aging is limited so that there is a defined maximum age for passwords and so that the user is notified several times leading up to the password expiration.::", "observed_examples": "", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "::TAXONOMY NAME:CLASP:ENTRY NAME:Allowing password aging::", "related_attack_patterns": "::16::49::509::55::555::560::561::565::600::652::653::70::", "notes": ""}}, {"cwe": "CWE-654", "cves": [], "cwe_info": {"cwe_id": "654", "name": "Reliance on a Single Factor in a Security Decision", "weakness_abstraction": "Base", "status": "Draft", "description": "A protection mechanism relies exclusively, or to a large extent, on the evaluation of a single condition or the integrity of a single object or entity in order to make a decision about granting access to restricted resources or functionality.", "extended_description": "", "related_weaknesses": "::NATURE:ChildOf:CWE ID:657:VIEW ID:1000:ORDINAL:Primary::NATURE:ChildOf:CWE ID:693:VIEW ID:1000::", "weakness_ordinalities": "::ORDINALITY:Primary::", "applicable_platforms": "::LANGUAGE CLASS:Language-Independent:LANGUAGE PREVALENCE:Undetermined::", "background_details": "", "alternate_terms": "::TERM:Separation of Privilege:DESCRIPTION:Some people and publications use the term Separation of Privilege to describe this weakness, but this term has dual meanings in current usage. While this entry is closely associated with the original definition of Separation of Privilege by Saltzer and Schroeder, others use the same term to describe poor compartmentalization (CWE-653). Because there are multiple interpretations, use of the Separation of Privilege term is discouraged.::", "modes_of_introduction": "::PHASE:Architecture and Design::PHASE:Implementation::PHASE:Operation::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Access Control:IMPACT:Gain Privileges or Assume Identity:NOTE:If the single factor is compromised (e.g. by theft or spoofing), then the integrity of the entire security mechanism can be violated with respect to the user that is identified by that factor.::SCOPE:Non-Repudiation:IMPACT:Hide Activities:NOTE:It can become difficult or impossible for the product to be able to distinguish between legitimate activities by the entity who provided the factor, versus illegitimate activities by an attacker.::", "detection_methods": "", "potential_mitigations": "::PHASE:Architecture and Design:DESCRIPTION:Use multiple simultaneous checks before granting access to critical operations or granting critical privileges. A weaker but helpful mitigation is to use several successive checks (multiple layers of security).::PHASE:Architecture and Design:DESCRIPTION:Use redundant access rules on different choke points (e.g., firewalls).::", "observed_examples": "", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "", "related_attack_patterns": "::16::274::49::55::560::565::600::652::653::70::", "notes": "::TYPE:Maintenance:NOTE:This entry is closely associated with the term Separation of Privilege. This term is used in several different ways in the industry, but they generally combine two closely related principles: compartmentalization (CWE-653) and using only one factor in a security decision (this entry). Proper compartmentalization implicitly introduces multiple factors into a security decision, but there can be cases in which multiple factors are required for authentication or other mechanisms that do not involve compartmentalization, such as performing all required checks on a submitted certificate. It is likely that CWE-653 and CWE-654 will provoke further discussion.::"}}, {"cwe": "CWE-1273", "cves": [], "cwe_info": {"cwe_id": "1273", "name": "Device Unlock Credential Sharing", "weakness_abstraction": "Base", "status": "Incomplete", "description": "The credentials necessary for unlocking a device are shared across multiple parties and may expose sensitive information.", "extended_description": "\u201cUnlocking a device\u201d often means activating certain, unadvertised, debug and manufacturer-specific capabilities of a device using sensitive credentials. Unlocking a device might be necessary for the purpose of troubleshooting device problems. For example, suppose a device contains the ability to dump the content of the full system memory by disabling the memory-protection mechanisms. Since this is a highly security-sensitive capability, this capability is \u201clocked\u201d in the production part. Unless the device gets unlocked by supplying the proper credentials the debug capabilities are not available. For cases where the chip designer, chip manufacturer (fabricator), and manufacturing and assembly testers are the all employed by the same company, the compromise of the credentials are greatly reduced. However, when the chip designer is employed by one company, the chip manufacturer is employed by another company (a foundry), and the assemblers and testers are employed by yet a third company. Since these different companies will need to perform various tests on the device to verify correct device function, they all need to share the unlock key. Unfortunately, the level of secrecy and policy might be quite different at each company, greatly increasing the risk of sensitive credentials being compromised.", "related_weaknesses": "::NATURE:ChildOf:CWE ID:200:VIEW ID:1000:ORDINAL:Primary::", "weakness_ordinalities": "", "applicable_platforms": "::LANGUAGE NAME:VHDL:LANGUAGE PREVALENCE:Undetermined::LANGUAGE NAME:Verilog:LANGUAGE PREVALENCE:Undetermined::LANGUAGE CLASS:Compiled:LANGUAGE PREVALENCE:Undetermined::OPERATING SYSTEM CLASS:OS-Independent:OPERATING SYSTEM PREVALENCE:Undetermined::ARCHITECTURE CLASS:Architecture-Independent:ARCHITECTURE PREVALENCE:Undetermined::TECHNOLOGY NAME:Other:TECHNOLOGY PREVALENCE:Undetermined::TECHNOLOGY CLASS:Technology-Independent:TECHNOLOGY PREVALENCE:Undetermined::", "background_details": "", "alternate_terms": "", "modes_of_introduction": "::PHASE:Integration::PHASE:Manufacturing::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Confidentiality:SCOPE:Integrity:SCOPE:Availability:SCOPE:Access Control:SCOPE:Accountability:SCOPE:Authentication:SCOPE:Authorization:SCOPE:Non-Repudiation:IMPACT:Modify Memory:IMPACT:Read Memory:IMPACT:Modify Files or Directories:IMPACT:Read Files or Directories:IMPACT:Modify Application Data:IMPACT:Execute Unauthorized Code or Commands:IMPACT:Gain Privileges or Assume Identity:IMPACT:Bypass Protection Mechanism:NOTE:Once unlock credentials are compromised, an attacker can use the credentials to unlock the device and gain unauthorized access to the hidden functionalities protected by those credentials.::", "detection_methods": "", "potential_mitigations": "::PHASE:Integration:DESCRIPTION:Ensure the unlock credentials are shared with the minimum number of parties and with utmost secrecy. To limit the risk associated with compromised credentials, where possible, the credentials should be part-specific.::PHASE:Manufacturing:DESCRIPTION:Ensure the unlock credentials are shared with the minimum number of parties and with utmost secrecy. To limit the risk associated with compromised credentials, where possible, the credentials should be part-specific.::", "observed_examples": "", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "", "related_attack_patterns": "::560::", "notes": "::TYPE:Maintenance:NOTE:This entry is still under development and will continue to see updates and content improvements.::"}}]}]}, {"technique_id": "T1046", "t_findings": [{"capec_id": "CAPEC-560", "c_findings": [{"cwe": "CWE-522", "cves": [{"id": "CVE-2007-0681", "score": ["V31", 9.8, "CRITICAL"], "v2_score": 7.5, "v2_exploitability_score": 10.0, "v2_impact_score": 6.4, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 7.5}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": true, "userInteractionRequired": false}], "description": "profile.php in ExtCalendar 2 and earlier allows remote attackers to change the passwords of arbitrary users without providing the original password, and possibly perform other unauthorized actions, via modified values to register.php.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:extcalendar_project:extcalendar:*:*:*:*:*:*:*:*", "published": "2007-02-03T01:28:00.000", "last_modified": "2024-02-09T03:13:40.213"}, {"id": "CVE-2000-0944", "score": ["V31", 9.8, "CRITICAL"], "v2_score": 7.5, "v2_exploitability_score": 10.0, "v2_impact_score": 6.4, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 7.5}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": true, "userInteractionRequired": false}], "description": "CGI Script Center News Update 1.1 does not properly validate the original news administration password during a password change operation, which allows remote attackers to modify the password without knowing the original password.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:cgi:script_center_news_update:1.1:*:*:*:*:*:*:*", "published": "2000-12-19T05:00:00.000", "last_modified": "2024-02-09T03:15:18.653"}, {"id": "CVE-2005-3435", "score": ["V31", 9.8, "CRITICAL"], "v2_score": 7.5, "v2_exploitability_score": 10.0, "v2_impact_score": 6.4, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 7.5}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": true, "userInteractionRequired": false}], "description": "admin_news.php in Archilles Newsworld up to 1.3.0 allows attackers to bypass authentication by obtaining the password hash for another user, for example through another Newsworld vulnerability, and specifying the hash in the pwd argument.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:archilles:newsworld:*:*:*:*:*:*:*:*", "published": "2005-11-02T11:02:00.000", "last_modified": "2024-02-09T03:13:36.147"}, {"id": "CVE-2005-0408", "score": ["V31", 9.8, "CRITICAL"], "v2_score": 7.5, "v2_exploitability_score": 10.0, "v2_impact_score": 6.4, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 7.5}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": true, "userInteractionRequired": false}], "description": "CitrusDB 0.3.6 and earlier generates easily predictable MD5 hashes of the user name for the id_hash cookie, which allows remote attackers to bypass authentication and gain privileges by calculating the MD5 checksum of the user name combined with the \"boogaadeeboo\" string, which is hard-coded in the $hidden_hash variable.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:citrusdb:citrusdb:*:*:*:*:*:*:*:*", "published": "2005-02-14T05:00:00.000", "last_modified": "2024-02-09T03:13:25.890"}], "cwe_info": {"cwe_id": "522", "name": "Insufficiently Protected Credentials", "weakness_abstraction": "Class", "status": "Incomplete", "description": "The product transmits or stores authentication credentials, but it uses an insecure method that is susceptible to unauthorized interception and/or retrieval.", "extended_description": "", "related_weaknesses": "::NATURE:ChildOf:CWE ID:287:VIEW ID:1000:ORDINAL:Primary::NATURE:ChildOf:CWE ID:287:VIEW ID:1003:ORDINAL:Primary::NATURE:ChildOf:CWE ID:668:VIEW ID:1000::", "weakness_ordinalities": "", "applicable_platforms": "", "background_details": "", "alternate_terms": "", "modes_of_introduction": "::PHASE:Architecture and Design:NOTE:COMMISSION: This weakness refers to an incorrect design related to an architectural security tactic.::PHASE:Implementation::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Access Control:IMPACT:Gain Privileges or Assume Identity:NOTE:An attacker could gain access to user accounts and access sensitive data used by the user accounts.::", "detection_methods": "", "potential_mitigations": "::PHASE:Architecture and Design:DESCRIPTION:Use an appropriate security mechanism to protect the credentials.::PHASE:Architecture and Design:DESCRIPTION:Make appropriate use of cryptography to protect the credentials.::PHASE:Implementation:DESCRIPTION:Use industry standards to protect the credentials (e.g. LDAP, keystore, etc.).::", "observed_examples": "::REFERENCE:CVE-2007-0681:DESCRIPTION:Web app allows remote attackers to change the passwords of arbitrary users without providing the original password, and possibly perform other unauthorized actions.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2007-0681::REFERENCE:CVE-2000-0944:DESCRIPTION:Web application password change utility doesn't check the original password.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2000-0944::REFERENCE:CVE-2005-3435:DESCRIPTION:product authentication succeeds if user-provided MD5 hash matches the hash in its database; this can be subjected to replay attacks.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2005-3435::REFERENCE:CVE-2005-0408:DESCRIPTION:chain: product generates predictable MD5 hashes using a constant value combined with username, allowing authentication bypass.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2005-0408::", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "::TAXONOMY NAME:OWASP Top Ten 2007:ENTRY ID:A7:ENTRY NAME:Broken Authentication and Session Management:MAPPING FIT:CWE More Specific::TAXONOMY NAME:OWASP Top Ten 2004:ENTRY ID:A3:ENTRY NAME:Broken Authentication and Session Management:MAPPING FIT:CWE More Specific::", "related_attack_patterns": "::102::474::50::509::551::555::560::561::600::644::645::652::653::", "notes": ""}}, {"cwe": "CWE-307", "cves": [{"id": "CVE-1999-1152", "score": ["V31", 7.5, "HIGH"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "Compaq/Microcom 6000 Access Integrator does not disconnect a client after a certain number of failed login attempts, which allows remote attackers to guess usernames or passwords via a brute force attack.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:o:compaq:microcom_6000_firmware:-:*:*:*:*:*:*:*", "published": "1998-06-03T04:00:00.000", "last_modified": "2024-02-09T03:15:08.037"}, {"id": "CVE-2001-1291", "score": ["V31", 9.8, "CRITICAL"], "v2_score": 10.0, "v2_exploitability_score": 10.0, "v2_impact_score": 10.0, "v2_vector": "AV:N/AC:L/Au:N/C:C/I:C/A:C", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:C/I:C/A:C", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "COMPLETE", "integrityImpact": "COMPLETE", "availabilityImpact": "COMPLETE", "baseScore": 10.0}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 10.0, "acInsufInfo": false, "obtainAllPrivilege": true, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "The telnet server for 3Com hardware such as PS40 SuperStack II does not delay or disconnect remote attackers who provide an incorrect username or password, which makes it easier to break into the server via brute force password guessing.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:o:3com:superstack_ii_ps_hub_40_firmware:-:*:*:*:*:*:*:*", "published": "2001-07-12T04:00:00.000", "last_modified": "2024-02-09T03:14:12.003"}, {"id": "CVE-2001-0395", "score": ["V31", 9.8, "CRITICAL"], "v2_score": 7.5, "v2_exploitability_score": 10.0, "v2_impact_score": 6.4, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 7.5}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "Lightwave ConsoleServer 3200 does not disconnect users after unsuccessful login attempts, which could allow remote attackers to conduct brute force password guessing.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:o:lightwavemo:consoleserver_3200_firmware:-:*:*:*:*:*:*:*", "published": "2001-07-02T04:00:00.000", "last_modified": "2024-02-09T03:14:07.077"}, {"id": "CVE-2001-1339", "score": ["V31", 9.8, "CRITICAL"], "v2_score": 7.5, "v2_exploitability_score": 10.0, "v2_impact_score": 6.4, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 7.5}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": true, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "Beck IPC GmbH IPC@CHIP telnet service does not delay or disconnect users from the service when bad passwords are entered, which makes it easier for remote attackers to conduct brute force password guessing attacks.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:o:anybus:ipc\\@chip_firmware:-:*:*:*:*:*:*:*", "published": "2001-05-24T04:00:00.000", "last_modified": "2024-02-09T03:15:26.757"}, {"id": "CVE-2002-0628", "score": ["V31", 7.5, "HIGH"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "The Telnet service for Polycom ViewStation before 7.2.4 does not restrict the number of failed login attempts, which makes it easier for remote attackers to guess usernames and passwords via a brute force attack.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:h:polycom:viewstation_128:6.5.1:*:*:*:*:*:*:*", "published": "2003-01-07T05:00:00.000", "last_modified": "2024-02-09T03:14:16.373"}, {"id": "CVE-1999-1324", "score": ["V31", 9.8, "CRITICAL"], "v2_score": 7.5, "v2_exploitability_score": 10.0, "v2_impact_score": 6.4, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 7.5}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "VAXstations running Open VMS 5.3 through 5.5-2 with VMS DECwindows or MOTIF do not properly disable access to user accounts that exceed the break-in limit threshold for failed login attempts, which makes it easier for attackers to conduct brute force password guessing.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:o:hp:openvms_vax:*:*:*:*:*:*:*:*", "published": "1999-12-31T05:00:00.000", "last_modified": "2024-02-09T03:15:13.613"}], "cwe_info": {"cwe_id": "307", "name": "Improper Restriction of Excessive Authentication Attempts", "weakness_abstraction": "Base", "status": "Draft", "description": "The software does not implement sufficient measures to prevent multiple failed authentication attempts within in a short time frame, making it more susceptible to brute force attacks.", "extended_description": "", "related_weaknesses": "::NATURE:ChildOf:CWE ID:287:VIEW ID:1000:ORDINAL:Primary::NATURE:ChildOf:CWE ID:287:VIEW ID:1003:ORDINAL:Primary::NATURE:ChildOf:CWE ID:799:VIEW ID:1000::", "weakness_ordinalities": "", "applicable_platforms": "::LANGUAGE CLASS:Language-Independent:LANGUAGE PREVALENCE:Undetermined::", "background_details": "", "alternate_terms": "", "modes_of_introduction": "::PHASE:Architecture and Design:NOTE:COMMISSION: This weakness refers to an incorrect design related to an architectural security tactic.::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Access Control:IMPACT:Bypass Protection Mechanism:NOTE:An attacker could perform an arbitrary number of authentication attempts using different passwords, and eventually gain access to the targeted account.::", "detection_methods": "::METHOD:Dynamic Analysis with Automated Results Interpretation:DESCRIPTION:According to SOAR, the following detection techniques may be useful: Highly cost effective: Web Application Scanner Web Services Scanner Database Scanners Cost effective for partial coverage: Host-based Vulnerability Scanners - Examine configuration for flaws, verifying that audit mechanisms work, ensure host configuration meets certain predefined criteria:EFFECTIVENESS:High::METHOD:Dynamic Analysis with Manual Results Interpretation:DESCRIPTION:According to SOAR, the following detection techniques may be useful: Highly cost effective: Fuzz Tester Framework-based Fuzzer Cost effective for partial coverage: Forced Path Execution:EFFECTIVENESS:High::METHOD:Manual Static Analysis - Source Code:DESCRIPTION:According to SOAR, the following detection techniques may be useful: Highly cost effective: Focused Manual Spotcheck - Focused manual analysis of source Manual Source Code Review (not inspections):EFFECTIVENESS:High::METHOD:Automated Static Analysis - Source Code:DESCRIPTION:According to SOAR, the following detection techniques may be useful: Cost effective for partial coverage: Source code Weakness Analyzer Context-configured Source Code Weakness Analyzer:EFFECTIVENESS:SOAR Partial::METHOD:Automated Static Analysis:DESCRIPTION:According to SOAR, the following detection techniques may be useful: Cost effective for partial coverage: Configuration Checker:EFFECTIVENESS:SOAR Partial::METHOD:Architecture or Design Review:DESCRIPTION:According to SOAR, the following detection techniques may be useful: Highly cost effective: Formal Methods / Correct-By-Construction Cost effective for partial coverage: Inspection (IEEE 1028 standard) (can apply to requirements, design, source code, etc.):EFFECTIVENESS:High::", "potential_mitigations": "::PHASE:Architecture and Design:DESCRIPTION:Common protection mechanisms include: Disconnecting the user after a small number of failed attempts Implementing a timeout Locking out a targeted account Requiring a computational task on the user's part.::PHASE:Architecture and Design:STRATEGY:Libraries or Frameworks:DESCRIPTION:Use a vetted library or framework that does not allow this weakness to occur or provides constructs that make this weakness easier to avoid. Consider using libraries with authentication capabilities such as OpenSSL or the ESAPI Authenticator. [REF-45]::", "observed_examples": "::REFERENCE:CVE-1999-1152:DESCRIPTION:Product does not disconnect or timeout after multiple failed logins.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-1999-1152::REFERENCE:CVE-2001-1291:DESCRIPTION:Product does not disconnect or timeout after multiple failed logins.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2001-1291::REFERENCE:CVE-2001-0395:DESCRIPTION:Product does not disconnect or timeout after multiple failed logins.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2001-0395::REFERENCE:CVE-2001-1339:DESCRIPTION:Product does not disconnect or timeout after multiple failed logins.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2001-1339::REFERENCE:CVE-2002-0628:DESCRIPTION:Product does not disconnect or timeout after multiple failed logins.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2002-0628::REFERENCE:CVE-1999-1324:DESCRIPTION:User accounts not disabled when they exceed a threshold; possibly a resultant problem.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-1999-1324::", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "::TAXONOMY NAME:PLOVER:ENTRY ID:AUTHENT.MULTFAIL:ENTRY NAME:Multiple Failed Authentication Attempts not Prevented::TAXONOMY NAME:Software Fault Patterns:ENTRY ID:SFP34:ENTRY NAME:Unrestricted authentication::", "related_attack_patterns": "::16::49::560::565::600::652::653::", "notes": ""}}, {"cwe": "CWE-308", "cves": [], "cwe_info": {"cwe_id": "308", "name": "Use of Single-factor Authentication", "weakness_abstraction": "Base", "status": "Draft", "description": "The use of single-factor authentication can lead to unnecessary risk of compromise when compared with the benefits of a dual-factor authentication scheme.", "extended_description": "While the use of multiple authentication schemes is simply piling on more complexity on top of authentication, it is inestimably valuable to have such measures of redundancy. The use of weak, reused, and common passwords is rampant on the internet. Without the added protection of multiple authentication schemes, a single mistake can result in the compromise of an account. For this reason, if multiple schemes are possible and also easy to use, they should be implemented and required.", "related_weaknesses": "::NATURE:ChildOf:CWE ID:287:VIEW ID:1000:ORDINAL:Primary::NATURE:ChildOf:CWE ID:654:VIEW ID:1000::NATURE:PeerOf:CWE ID:309:VIEW ID:1000::", "weakness_ordinalities": "", "applicable_platforms": "::LANGUAGE CLASS:Language-Independent:LANGUAGE PREVALENCE:Undetermined::", "background_details": "", "alternate_terms": "", "modes_of_introduction": "::PHASE:Architecture and Design:NOTE:COMMISSION: This weakness refers to an incorrect design related to an architectural security tactic.::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Access Control:IMPACT:Bypass Protection Mechanism:NOTE:If the secret in a single-factor authentication scheme gets compromised, full authentication is possible.::", "detection_methods": "", "potential_mitigations": "::PHASE:Architecture and Design:DESCRIPTION:Use multiple independent authentication schemes, which ensures that -- if one of the methods is compromised -- the system itself is still likely safe from compromise.::", "observed_examples": "", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "::TAXONOMY NAME:CLASP:ENTRY NAME:Using single-factor authentication::", "related_attack_patterns": "::16::49::509::55::555::560::561::565::600::644::645::652::653::70::", "notes": ""}}, {"cwe": "CWE-309", "cves": [], "cwe_info": {"cwe_id": "309", "name": "Use of Password System for Primary Authentication", "weakness_abstraction": "Base", "status": "Draft", "description": "The use of password systems as the primary means of authentication may be subject to several flaws or shortcomings, each reducing the effectiveness of the mechanism.", "extended_description": "", "related_weaknesses": "::NATURE:ChildOf:CWE ID:287:VIEW ID:1000:ORDINAL:Primary::NATURE:ChildOf:CWE ID:654:VIEW ID:1000::NATURE:PeerOf:CWE ID:308:VIEW ID:1000::", "weakness_ordinalities": "", "applicable_platforms": "::LANGUAGE CLASS:Language-Independent:LANGUAGE PREVALENCE:Undetermined::", "background_details": "::Password systems are the simplest and most ubiquitous authentication mechanisms. However, they are subject to such well known attacks,and such frequent compromise that their use in the most simple implementation is not practical.::", "alternate_terms": "", "modes_of_introduction": "::PHASE:Architecture and Design::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Access Control:IMPACT:Bypass Protection Mechanism:IMPACT:Gain Privileges or Assume Identity:NOTE:A password authentication mechanism error will almost always result in attackers being authorized as valid users.::", "detection_methods": "", "potential_mitigations": "::PHASE:Architecture and Design:DESCRIPTION:In order to protect password systems from compromise, the following should be noted: Passwords should be stored safely to prevent insider attack and to ensure that -- if a system is compromised -- the passwords are not retrievable. Due to password reuse, this information may be useful in the compromise of other systems these users work with. In order to protect these passwords, they should be stored encrypted, in a non-reversible state, such that the original text password cannot be extracted from the stored value. Password aging should be strictly enforced to ensure that passwords do not remain unchanged for long periods of time. The longer a password remains in use, the higher the probability that it has been compromised. For this reason, passwords should require refreshing periodically, and users should be informed of the risk of passwords which remain in use for too long. Password strength should be enforced intelligently. Rather than restrict passwords to specific content, or specific length, users should be encouraged to use upper and lower case letters, numbers, and symbols in their passwords. The system should also ensure that no passwords are derived from dictionary words.::PHASE:Architecture and Design:DESCRIPTION:Use a zero-knowledge password protocol, such as SRP.::PHASE:Architecture and Design:DESCRIPTION:Ensure that passwords are stored safely and are not reversible.::PHASE:Architecture and Design:DESCRIPTION:Implement password aging functionality that requires passwords be changed after a certain point.::PHASE:Architecture and Design:DESCRIPTION:Use a mechanism for determining the strength of a password and notify the user of weak password use.::PHASE:Architecture and Design:DESCRIPTION:Inform the user of why password protections are in place, how they work to protect data integrity, and why it is important to heed their warnings.::", "observed_examples": "", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "::TAXONOMY NAME:CLASP:ENTRY NAME:Using password systems::TAXONOMY NAME:OWASP Top Ten 2004:ENTRY ID:A3:ENTRY NAME:Broken Authentication and Session Management:MAPPING FIT:CWE More Specific::", "related_attack_patterns": "::16::49::509::55::555::560::561::565::600::652::653::70::", "notes": ""}}, {"cwe": "CWE-262", "cves": [], "cwe_info": {"cwe_id": "262", "name": "Not Using Password Aging", "weakness_abstraction": "Base", "status": "Draft", "description": "If no mechanism is in place for managing password aging, users will have no incentive to update passwords in a timely manner.", "extended_description": "Security experts have often recommended that users change their passwords regularly and avoid reusing passwords. Although this can be an effective mitigation, if the expiration window is too short, it can cause users to generate poor or predictable passwords. As such, it is important to discourage creating similar passwords. It is also useful to have a password aging mechanism that notifies users when passwords are considered old and requests that they replace them with new, strong passwords. Companion documentation which stresses how important this practice is can help users understand and better support this approach.", "related_weaknesses": "::NATURE:ChildOf:CWE ID:287:VIEW ID:1000:ORDINAL:Primary::NATURE:ChildOf:CWE ID:404:VIEW ID:1000::NATURE:PeerOf:CWE ID:309:VIEW ID:1000::NATURE:PeerOf:CWE ID:263:VIEW ID:1000::NATURE:PeerOf:CWE ID:324:VIEW ID:1000::", "weakness_ordinalities": "", "applicable_platforms": "::LANGUAGE CLASS:Language-Independent:LANGUAGE PREVALENCE:Undetermined::", "background_details": "", "alternate_terms": "", "modes_of_introduction": "::PHASE:Architecture and Design:NOTE:COMMISSION: This weakness refers to an incorrect design related to an architectural security tactic.::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Access Control:IMPACT:Gain Privileges or Assume Identity:NOTE:As passwords age, the probability that they are compromised grows.::", "detection_methods": "", "potential_mitigations": "::PHASE:Architecture and Design:DESCRIPTION:As part of a product's design, require users to change their passwords regularly and avoid reusing previous passwords.::", "observed_examples": "", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "::TAXONOMY NAME:CLASP:ENTRY NAME:Not allowing password aging::", "related_attack_patterns": "::16::49::509::55::555::560::561::565::600::652::653::70::", "notes": ""}}, {"cwe": "CWE-263", "cves": [], "cwe_info": {"cwe_id": "263", "name": "Password Aging with Long Expiration", "weakness_abstraction": "Base", "status": "Draft", "description": "Allowing password aging to occur unchecked can result in the possibility of diminished password integrity.", "extended_description": "Just as neglecting to include functionality for the management of password aging is dangerous, so is allowing password aging to continue unchecked. Passwords must be given a maximum life span, after which a user is required to update with a new and different password.", "related_weaknesses": "::NATURE:ChildOf:CWE ID:287:VIEW ID:1000:ORDINAL:Primary::NATURE:ChildOf:CWE ID:404:VIEW ID:1000::", "weakness_ordinalities": "", "applicable_platforms": "::LANGUAGE CLASS:Language-Independent:LANGUAGE PREVALENCE:Undetermined::", "background_details": "", "alternate_terms": "", "modes_of_introduction": "::PHASE:Architecture and Design:NOTE:COMMISSION: This weakness refers to an incorrect design related to an architectural security tactic.::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Access Control:IMPACT:Gain Privileges or Assume Identity:NOTE:As passwords age, the probability that they are compromised grows.::", "detection_methods": "", "potential_mitigations": "::PHASE:Architecture and Design:DESCRIPTION:Ensure that password aging is limited so that there is a defined maximum age for passwords and so that the user is notified several times leading up to the password expiration.::", "observed_examples": "", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "::TAXONOMY NAME:CLASP:ENTRY NAME:Allowing password aging::", "related_attack_patterns": "::16::49::509::55::555::560::561::565::600::652::653::70::", "notes": ""}}, {"cwe": "CWE-654", "cves": [], "cwe_info": {"cwe_id": "654", "name": "Reliance on a Single Factor in a Security Decision", "weakness_abstraction": "Base", "status": "Draft", "description": "A protection mechanism relies exclusively, or to a large extent, on the evaluation of a single condition or the integrity of a single object or entity in order to make a decision about granting access to restricted resources or functionality.", "extended_description": "", "related_weaknesses": "::NATURE:ChildOf:CWE ID:657:VIEW ID:1000:ORDINAL:Primary::NATURE:ChildOf:CWE ID:693:VIEW ID:1000::", "weakness_ordinalities": "::ORDINALITY:Primary::", "applicable_platforms": "::LANGUAGE CLASS:Language-Independent:LANGUAGE PREVALENCE:Undetermined::", "background_details": "", "alternate_terms": "::TERM:Separation of Privilege:DESCRIPTION:Some people and publications use the term Separation of Privilege to describe this weakness, but this term has dual meanings in current usage. While this entry is closely associated with the original definition of Separation of Privilege by Saltzer and Schroeder, others use the same term to describe poor compartmentalization (CWE-653). Because there are multiple interpretations, use of the Separation of Privilege term is discouraged.::", "modes_of_introduction": "::PHASE:Architecture and Design::PHASE:Implementation::PHASE:Operation::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Access Control:IMPACT:Gain Privileges or Assume Identity:NOTE:If the single factor is compromised (e.g. by theft or spoofing), then the integrity of the entire security mechanism can be violated with respect to the user that is identified by that factor.::SCOPE:Non-Repudiation:IMPACT:Hide Activities:NOTE:It can become difficult or impossible for the product to be able to distinguish between legitimate activities by the entity who provided the factor, versus illegitimate activities by an attacker.::", "detection_methods": "", "potential_mitigations": "::PHASE:Architecture and Design:DESCRIPTION:Use multiple simultaneous checks before granting access to critical operations or granting critical privileges. A weaker but helpful mitigation is to use several successive checks (multiple layers of security).::PHASE:Architecture and Design:DESCRIPTION:Use redundant access rules on different choke points (e.g., firewalls).::", "observed_examples": "", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "", "related_attack_patterns": "::16::274::49::55::560::565::600::652::653::70::", "notes": "::TYPE:Maintenance:NOTE:This entry is closely associated with the term Separation of Privilege. This term is used in several different ways in the industry, but they generally combine two closely related principles: compartmentalization (CWE-653) and using only one factor in a security decision (this entry). Proper compartmentalization implicitly introduces multiple factors into a security decision, but there can be cases in which multiple factors are required for authentication or other mechanisms that do not involve compartmentalization, such as performing all required checks on a submitted certificate. It is likely that CWE-653 and CWE-654 will provoke further discussion.::"}}, {"cwe": "CWE-1273", "cves": [], "cwe_info": {"cwe_id": "1273", "name": "Device Unlock Credential Sharing", "weakness_abstraction": "Base", "status": "Incomplete", "description": "The credentials necessary for unlocking a device are shared across multiple parties and may expose sensitive information.", "extended_description": "\u201cUnlocking a device\u201d often means activating certain, unadvertised, debug and manufacturer-specific capabilities of a device using sensitive credentials. Unlocking a device might be necessary for the purpose of troubleshooting device problems. For example, suppose a device contains the ability to dump the content of the full system memory by disabling the memory-protection mechanisms. Since this is a highly security-sensitive capability, this capability is \u201clocked\u201d in the production part. Unless the device gets unlocked by supplying the proper credentials the debug capabilities are not available. For cases where the chip designer, chip manufacturer (fabricator), and manufacturing and assembly testers are the all employed by the same company, the compromise of the credentials are greatly reduced. However, when the chip designer is employed by one company, the chip manufacturer is employed by another company (a foundry), and the assemblers and testers are employed by yet a third company. Since these different companies will need to perform various tests on the device to verify correct device function, they all need to share the unlock key. Unfortunately, the level of secrecy and policy might be quite different at each company, greatly increasing the risk of sensitive credentials being compromised.", "related_weaknesses": "::NATURE:ChildOf:CWE ID:200:VIEW ID:1000:ORDINAL:Primary::", "weakness_ordinalities": "", "applicable_platforms": "::LANGUAGE NAME:VHDL:LANGUAGE PREVALENCE:Undetermined::LANGUAGE NAME:Verilog:LANGUAGE PREVALENCE:Undetermined::LANGUAGE CLASS:Compiled:LANGUAGE PREVALENCE:Undetermined::OPERATING SYSTEM CLASS:OS-Independent:OPERATING SYSTEM PREVALENCE:Undetermined::ARCHITECTURE CLASS:Architecture-Independent:ARCHITECTURE PREVALENCE:Undetermined::TECHNOLOGY NAME:Other:TECHNOLOGY PREVALENCE:Undetermined::TECHNOLOGY CLASS:Technology-Independent:TECHNOLOGY PREVALENCE:Undetermined::", "background_details": "", "alternate_terms": "", "modes_of_introduction": "::PHASE:Integration::PHASE:Manufacturing::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Confidentiality:SCOPE:Integrity:SCOPE:Availability:SCOPE:Access Control:SCOPE:Accountability:SCOPE:Authentication:SCOPE:Authorization:SCOPE:Non-Repudiation:IMPACT:Modify Memory:IMPACT:Read Memory:IMPACT:Modify Files or Directories:IMPACT:Read Files or Directories:IMPACT:Modify Application Data:IMPACT:Execute Unauthorized Code or Commands:IMPACT:Gain Privileges or Assume Identity:IMPACT:Bypass Protection Mechanism:NOTE:Once unlock credentials are compromised, an attacker can use the credentials to unlock the device and gain unauthorized access to the hidden functionalities protected by those credentials.::", "detection_methods": "", "potential_mitigations": "::PHASE:Integration:DESCRIPTION:Ensure the unlock credentials are shared with the minimum number of parties and with utmost secrecy. To limit the risk associated with compromised credentials, where possible, the credentials should be part-specific.::PHASE:Manufacturing:DESCRIPTION:Ensure the unlock credentials are shared with the minimum number of parties and with utmost secrecy. To limit the risk associated with compromised credentials, where possible, the credentials should be part-specific.::", "observed_examples": "", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "", "related_attack_patterns": "::560::", "notes": "::TYPE:Maintenance:NOTE:This entry is still under development and will continue to see updates and content improvements.::"}}]}]}, {"technique_id": "T1036", "t_findings": [{"capec_id": "CAPEC-560", "c_findings": [{"cwe": "CWE-522", "cves": [{"id": "CVE-2007-0681", "score": ["V31", 9.8, "CRITICAL"], "v2_score": 7.5, "v2_exploitability_score": 10.0, "v2_impact_score": 6.4, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 7.5}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": true, "userInteractionRequired": false}], "description": "profile.php in ExtCalendar 2 and earlier allows remote attackers to change the passwords of arbitrary users without providing the original password, and possibly perform other unauthorized actions, via modified values to register.php.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:extcalendar_project:extcalendar:*:*:*:*:*:*:*:*", "published": "2007-02-03T01:28:00.000", "last_modified": "2024-02-09T03:13:40.213"}, {"id": "CVE-2000-0944", "score": ["V31", 9.8, "CRITICAL"], "v2_score": 7.5, "v2_exploitability_score": 10.0, "v2_impact_score": 6.4, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 7.5}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": true, "userInteractionRequired": false}], "description": "CGI Script Center News Update 1.1 does not properly validate the original news administration password during a password change operation, which allows remote attackers to modify the password without knowing the original password.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:cgi:script_center_news_update:1.1:*:*:*:*:*:*:*", "published": "2000-12-19T05:00:00.000", "last_modified": "2024-02-09T03:15:18.653"}, {"id": "CVE-2005-3435", "score": ["V31", 9.8, "CRITICAL"], "v2_score": 7.5, "v2_exploitability_score": 10.0, "v2_impact_score": 6.4, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 7.5}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": true, "userInteractionRequired": false}], "description": "admin_news.php in Archilles Newsworld up to 1.3.0 allows attackers to bypass authentication by obtaining the password hash for another user, for example through another Newsworld vulnerability, and specifying the hash in the pwd argument.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:archilles:newsworld:*:*:*:*:*:*:*:*", "published": "2005-11-02T11:02:00.000", "last_modified": "2024-02-09T03:13:36.147"}, {"id": "CVE-2005-0408", "score": ["V31", 9.8, "CRITICAL"], "v2_score": 7.5, "v2_exploitability_score": 10.0, "v2_impact_score": 6.4, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 7.5}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": true, "userInteractionRequired": false}], "description": "CitrusDB 0.3.6 and earlier generates easily predictable MD5 hashes of the user name for the id_hash cookie, which allows remote attackers to bypass authentication and gain privileges by calculating the MD5 checksum of the user name combined with the \"boogaadeeboo\" string, which is hard-coded in the $hidden_hash variable.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:citrusdb:citrusdb:*:*:*:*:*:*:*:*", "published": "2005-02-14T05:00:00.000", "last_modified": "2024-02-09T03:13:25.890"}], "cwe_info": {"cwe_id": "522", "name": "Insufficiently Protected Credentials", "weakness_abstraction": "Class", "status": "Incomplete", "description": "The product transmits or stores authentication credentials, but it uses an insecure method that is susceptible to unauthorized interception and/or retrieval.", "extended_description": "", "related_weaknesses": "::NATURE:ChildOf:CWE ID:287:VIEW ID:1000:ORDINAL:Primary::NATURE:ChildOf:CWE ID:287:VIEW ID:1003:ORDINAL:Primary::NATURE:ChildOf:CWE ID:668:VIEW ID:1000::", "weakness_ordinalities": "", "applicable_platforms": "", "background_details": "", "alternate_terms": "", "modes_of_introduction": "::PHASE:Architecture and Design:NOTE:COMMISSION: This weakness refers to an incorrect design related to an architectural security tactic.::PHASE:Implementation::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Access Control:IMPACT:Gain Privileges or Assume Identity:NOTE:An attacker could gain access to user accounts and access sensitive data used by the user accounts.::", "detection_methods": "", "potential_mitigations": "::PHASE:Architecture and Design:DESCRIPTION:Use an appropriate security mechanism to protect the credentials.::PHASE:Architecture and Design:DESCRIPTION:Make appropriate use of cryptography to protect the credentials.::PHASE:Implementation:DESCRIPTION:Use industry standards to protect the credentials (e.g. LDAP, keystore, etc.).::", "observed_examples": "::REFERENCE:CVE-2007-0681:DESCRIPTION:Web app allows remote attackers to change the passwords of arbitrary users without providing the original password, and possibly perform other unauthorized actions.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2007-0681::REFERENCE:CVE-2000-0944:DESCRIPTION:Web application password change utility doesn't check the original password.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2000-0944::REFERENCE:CVE-2005-3435:DESCRIPTION:product authentication succeeds if user-provided MD5 hash matches the hash in its database; this can be subjected to replay attacks.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2005-3435::REFERENCE:CVE-2005-0408:DESCRIPTION:chain: product generates predictable MD5 hashes using a constant value combined with username, allowing authentication bypass.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2005-0408::", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "::TAXONOMY NAME:OWASP Top Ten 2007:ENTRY ID:A7:ENTRY NAME:Broken Authentication and Session Management:MAPPING FIT:CWE More Specific::TAXONOMY NAME:OWASP Top Ten 2004:ENTRY ID:A3:ENTRY NAME:Broken Authentication and Session Management:MAPPING FIT:CWE More Specific::", "related_attack_patterns": "::102::474::50::509::551::555::560::561::600::644::645::652::653::", "notes": ""}}, {"cwe": "CWE-307", "cves": [{"id": "CVE-1999-1152", "score": ["V31", 7.5, "HIGH"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "Compaq/Microcom 6000 Access Integrator does not disconnect a client after a certain number of failed login attempts, which allows remote attackers to guess usernames or passwords via a brute force attack.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:o:compaq:microcom_6000_firmware:-:*:*:*:*:*:*:*", "published": "1998-06-03T04:00:00.000", "last_modified": "2024-02-09T03:15:08.037"}, {"id": "CVE-2001-1291", "score": ["V31", 9.8, "CRITICAL"], "v2_score": 10.0, "v2_exploitability_score": 10.0, "v2_impact_score": 10.0, "v2_vector": "AV:N/AC:L/Au:N/C:C/I:C/A:C", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:C/I:C/A:C", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "COMPLETE", "integrityImpact": "COMPLETE", "availabilityImpact": "COMPLETE", "baseScore": 10.0}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 10.0, "acInsufInfo": false, "obtainAllPrivilege": true, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "The telnet server for 3Com hardware such as PS40 SuperStack II does not delay or disconnect remote attackers who provide an incorrect username or password, which makes it easier to break into the server via brute force password guessing.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:o:3com:superstack_ii_ps_hub_40_firmware:-:*:*:*:*:*:*:*", "published": "2001-07-12T04:00:00.000", "last_modified": "2024-02-09T03:14:12.003"}, {"id": "CVE-2001-0395", "score": ["V31", 9.8, "CRITICAL"], "v2_score": 7.5, "v2_exploitability_score": 10.0, "v2_impact_score": 6.4, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 7.5}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "Lightwave ConsoleServer 3200 does not disconnect users after unsuccessful login attempts, which could allow remote attackers to conduct brute force password guessing.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:o:lightwavemo:consoleserver_3200_firmware:-:*:*:*:*:*:*:*", "published": "2001-07-02T04:00:00.000", "last_modified": "2024-02-09T03:14:07.077"}, {"id": "CVE-2001-1339", "score": ["V31", 9.8, "CRITICAL"], "v2_score": 7.5, "v2_exploitability_score": 10.0, "v2_impact_score": 6.4, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 7.5}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": true, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "Beck IPC GmbH IPC@CHIP telnet service does not delay or disconnect users from the service when bad passwords are entered, which makes it easier for remote attackers to conduct brute force password guessing attacks.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:o:anybus:ipc\\@chip_firmware:-:*:*:*:*:*:*:*", "published": "2001-05-24T04:00:00.000", "last_modified": "2024-02-09T03:15:26.757"}, {"id": "CVE-2002-0628", "score": ["V31", 7.5, "HIGH"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "The Telnet service for Polycom ViewStation before 7.2.4 does not restrict the number of failed login attempts, which makes it easier for remote attackers to guess usernames and passwords via a brute force attack.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:h:polycom:viewstation_128:6.5.1:*:*:*:*:*:*:*", "published": "2003-01-07T05:00:00.000", "last_modified": "2024-02-09T03:14:16.373"}, {"id": "CVE-1999-1324", "score": ["V31", 9.8, "CRITICAL"], "v2_score": 7.5, "v2_exploitability_score": 10.0, "v2_impact_score": 6.4, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 7.5}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "VAXstations running Open VMS 5.3 through 5.5-2 with VMS DECwindows or MOTIF do not properly disable access to user accounts that exceed the break-in limit threshold for failed login attempts, which makes it easier for attackers to conduct brute force password guessing.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:o:hp:openvms_vax:*:*:*:*:*:*:*:*", "published": "1999-12-31T05:00:00.000", "last_modified": "2024-02-09T03:15:13.613"}], "cwe_info": {"cwe_id": "307", "name": "Improper Restriction of Excessive Authentication Attempts", "weakness_abstraction": "Base", "status": "Draft", "description": "The software does not implement sufficient measures to prevent multiple failed authentication attempts within in a short time frame, making it more susceptible to brute force attacks.", "extended_description": "", "related_weaknesses": "::NATURE:ChildOf:CWE ID:287:VIEW ID:1000:ORDINAL:Primary::NATURE:ChildOf:CWE ID:287:VIEW ID:1003:ORDINAL:Primary::NATURE:ChildOf:CWE ID:799:VIEW ID:1000::", "weakness_ordinalities": "", "applicable_platforms": "::LANGUAGE CLASS:Language-Independent:LANGUAGE PREVALENCE:Undetermined::", "background_details": "", "alternate_terms": "", "modes_of_introduction": "::PHASE:Architecture and Design:NOTE:COMMISSION: This weakness refers to an incorrect design related to an architectural security tactic.::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Access Control:IMPACT:Bypass Protection Mechanism:NOTE:An attacker could perform an arbitrary number of authentication attempts using different passwords, and eventually gain access to the targeted account.::", "detection_methods": "::METHOD:Dynamic Analysis with Automated Results Interpretation:DESCRIPTION:According to SOAR, the following detection techniques may be useful: Highly cost effective: Web Application Scanner Web Services Scanner Database Scanners Cost effective for partial coverage: Host-based Vulnerability Scanners - Examine configuration for flaws, verifying that audit mechanisms work, ensure host configuration meets certain predefined criteria:EFFECTIVENESS:High::METHOD:Dynamic Analysis with Manual Results Interpretation:DESCRIPTION:According to SOAR, the following detection techniques may be useful: Highly cost effective: Fuzz Tester Framework-based Fuzzer Cost effective for partial coverage: Forced Path Execution:EFFECTIVENESS:High::METHOD:Manual Static Analysis - Source Code:DESCRIPTION:According to SOAR, the following detection techniques may be useful: Highly cost effective: Focused Manual Spotcheck - Focused manual analysis of source Manual Source Code Review (not inspections):EFFECTIVENESS:High::METHOD:Automated Static Analysis - Source Code:DESCRIPTION:According to SOAR, the following detection techniques may be useful: Cost effective for partial coverage: Source code Weakness Analyzer Context-configured Source Code Weakness Analyzer:EFFECTIVENESS:SOAR Partial::METHOD:Automated Static Analysis:DESCRIPTION:According to SOAR, the following detection techniques may be useful: Cost effective for partial coverage: Configuration Checker:EFFECTIVENESS:SOAR Partial::METHOD:Architecture or Design Review:DESCRIPTION:According to SOAR, the following detection techniques may be useful: Highly cost effective: Formal Methods / Correct-By-Construction Cost effective for partial coverage: Inspection (IEEE 1028 standard) (can apply to requirements, design, source code, etc.):EFFECTIVENESS:High::", "potential_mitigations": "::PHASE:Architecture and Design:DESCRIPTION:Common protection mechanisms include: Disconnecting the user after a small number of failed attempts Implementing a timeout Locking out a targeted account Requiring a computational task on the user's part.::PHASE:Architecture and Design:STRATEGY:Libraries or Frameworks:DESCRIPTION:Use a vetted library or framework that does not allow this weakness to occur or provides constructs that make this weakness easier to avoid. Consider using libraries with authentication capabilities such as OpenSSL or the ESAPI Authenticator. [REF-45]::", "observed_examples": "::REFERENCE:CVE-1999-1152:DESCRIPTION:Product does not disconnect or timeout after multiple failed logins.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-1999-1152::REFERENCE:CVE-2001-1291:DESCRIPTION:Product does not disconnect or timeout after multiple failed logins.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2001-1291::REFERENCE:CVE-2001-0395:DESCRIPTION:Product does not disconnect or timeout after multiple failed logins.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2001-0395::REFERENCE:CVE-2001-1339:DESCRIPTION:Product does not disconnect or timeout after multiple failed logins.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2001-1339::REFERENCE:CVE-2002-0628:DESCRIPTION:Product does not disconnect or timeout after multiple failed logins.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2002-0628::REFERENCE:CVE-1999-1324:DESCRIPTION:User accounts not disabled when they exceed a threshold; possibly a resultant problem.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-1999-1324::", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "::TAXONOMY NAME:PLOVER:ENTRY ID:AUTHENT.MULTFAIL:ENTRY NAME:Multiple Failed Authentication Attempts not Prevented::TAXONOMY NAME:Software Fault Patterns:ENTRY ID:SFP34:ENTRY NAME:Unrestricted authentication::", "related_attack_patterns": "::16::49::560::565::600::652::653::", "notes": ""}}, {"cwe": "CWE-308", "cves": [], "cwe_info": {"cwe_id": "308", "name": "Use of Single-factor Authentication", "weakness_abstraction": "Base", "status": "Draft", "description": "The use of single-factor authentication can lead to unnecessary risk of compromise when compared with the benefits of a dual-factor authentication scheme.", "extended_description": "While the use of multiple authentication schemes is simply piling on more complexity on top of authentication, it is inestimably valuable to have such measures of redundancy. The use of weak, reused, and common passwords is rampant on the internet. Without the added protection of multiple authentication schemes, a single mistake can result in the compromise of an account. For this reason, if multiple schemes are possible and also easy to use, they should be implemented and required.", "related_weaknesses": "::NATURE:ChildOf:CWE ID:287:VIEW ID:1000:ORDINAL:Primary::NATURE:ChildOf:CWE ID:654:VIEW ID:1000::NATURE:PeerOf:CWE ID:309:VIEW ID:1000::", "weakness_ordinalities": "", "applicable_platforms": "::LANGUAGE CLASS:Language-Independent:LANGUAGE PREVALENCE:Undetermined::", "background_details": "", "alternate_terms": "", "modes_of_introduction": "::PHASE:Architecture and Design:NOTE:COMMISSION: This weakness refers to an incorrect design related to an architectural security tactic.::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Access Control:IMPACT:Bypass Protection Mechanism:NOTE:If the secret in a single-factor authentication scheme gets compromised, full authentication is possible.::", "detection_methods": "", "potential_mitigations": "::PHASE:Architecture and Design:DESCRIPTION:Use multiple independent authentication schemes, which ensures that -- if one of the methods is compromised -- the system itself is still likely safe from compromise.::", "observed_examples": "", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "::TAXONOMY NAME:CLASP:ENTRY NAME:Using single-factor authentication::", "related_attack_patterns": "::16::49::509::55::555::560::561::565::600::644::645::652::653::70::", "notes": ""}}, {"cwe": "CWE-309", "cves": [], "cwe_info": {"cwe_id": "309", "name": "Use of Password System for Primary Authentication", "weakness_abstraction": "Base", "status": "Draft", "description": "The use of password systems as the primary means of authentication may be subject to several flaws or shortcomings, each reducing the effectiveness of the mechanism.", "extended_description": "", "related_weaknesses": "::NATURE:ChildOf:CWE ID:287:VIEW ID:1000:ORDINAL:Primary::NATURE:ChildOf:CWE ID:654:VIEW ID:1000::NATURE:PeerOf:CWE ID:308:VIEW ID:1000::", "weakness_ordinalities": "", "applicable_platforms": "::LANGUAGE CLASS:Language-Independent:LANGUAGE PREVALENCE:Undetermined::", "background_details": "::Password systems are the simplest and most ubiquitous authentication mechanisms. However, they are subject to such well known attacks,and such frequent compromise that their use in the most simple implementation is not practical.::", "alternate_terms": "", "modes_of_introduction": "::PHASE:Architecture and Design::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Access Control:IMPACT:Bypass Protection Mechanism:IMPACT:Gain Privileges or Assume Identity:NOTE:A password authentication mechanism error will almost always result in attackers being authorized as valid users.::", "detection_methods": "", "potential_mitigations": "::PHASE:Architecture and Design:DESCRIPTION:In order to protect password systems from compromise, the following should be noted: Passwords should be stored safely to prevent insider attack and to ensure that -- if a system is compromised -- the passwords are not retrievable. Due to password reuse, this information may be useful in the compromise of other systems these users work with. In order to protect these passwords, they should be stored encrypted, in a non-reversible state, such that the original text password cannot be extracted from the stored value. Password aging should be strictly enforced to ensure that passwords do not remain unchanged for long periods of time. The longer a password remains in use, the higher the probability that it has been compromised. For this reason, passwords should require refreshing periodically, and users should be informed of the risk of passwords which remain in use for too long. Password strength should be enforced intelligently. Rather than restrict passwords to specific content, or specific length, users should be encouraged to use upper and lower case letters, numbers, and symbols in their passwords. The system should also ensure that no passwords are derived from dictionary words.::PHASE:Architecture and Design:DESCRIPTION:Use a zero-knowledge password protocol, such as SRP.::PHASE:Architecture and Design:DESCRIPTION:Ensure that passwords are stored safely and are not reversible.::PHASE:Architecture and Design:DESCRIPTION:Implement password aging functionality that requires passwords be changed after a certain point.::PHASE:Architecture and Design:DESCRIPTION:Use a mechanism for determining the strength of a password and notify the user of weak password use.::PHASE:Architecture and Design:DESCRIPTION:Inform the user of why password protections are in place, how they work to protect data integrity, and why it is important to heed their warnings.::", "observed_examples": "", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "::TAXONOMY NAME:CLASP:ENTRY NAME:Using password systems::TAXONOMY NAME:OWASP Top Ten 2004:ENTRY ID:A3:ENTRY NAME:Broken Authentication and Session Management:MAPPING FIT:CWE More Specific::", "related_attack_patterns": "::16::49::509::55::555::560::561::565::600::652::653::70::", "notes": ""}}, {"cwe": "CWE-262", "cves": [], "cwe_info": {"cwe_id": "262", "name": "Not Using Password Aging", "weakness_abstraction": "Base", "status": "Draft", "description": "If no mechanism is in place for managing password aging, users will have no incentive to update passwords in a timely manner.", "extended_description": "Security experts have often recommended that users change their passwords regularly and avoid reusing passwords. Although this can be an effective mitigation, if the expiration window is too short, it can cause users to generate poor or predictable passwords. As such, it is important to discourage creating similar passwords. It is also useful to have a password aging mechanism that notifies users when passwords are considered old and requests that they replace them with new, strong passwords. Companion documentation which stresses how important this practice is can help users understand and better support this approach.", "related_weaknesses": "::NATURE:ChildOf:CWE ID:287:VIEW ID:1000:ORDINAL:Primary::NATURE:ChildOf:CWE ID:404:VIEW ID:1000::NATURE:PeerOf:CWE ID:309:VIEW ID:1000::NATURE:PeerOf:CWE ID:263:VIEW ID:1000::NATURE:PeerOf:CWE ID:324:VIEW ID:1000::", "weakness_ordinalities": "", "applicable_platforms": "::LANGUAGE CLASS:Language-Independent:LANGUAGE PREVALENCE:Undetermined::", "background_details": "", "alternate_terms": "", "modes_of_introduction": "::PHASE:Architecture and Design:NOTE:COMMISSION: This weakness refers to an incorrect design related to an architectural security tactic.::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Access Control:IMPACT:Gain Privileges or Assume Identity:NOTE:As passwords age, the probability that they are compromised grows.::", "detection_methods": "", "potential_mitigations": "::PHASE:Architecture and Design:DESCRIPTION:As part of a product's design, require users to change their passwords regularly and avoid reusing previous passwords.::", "observed_examples": "", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "::TAXONOMY NAME:CLASP:ENTRY NAME:Not allowing password aging::", "related_attack_patterns": "::16::49::509::55::555::560::561::565::600::652::653::70::", "notes": ""}}, {"cwe": "CWE-263", "cves": [], "cwe_info": {"cwe_id": "263", "name": "Password Aging with Long Expiration", "weakness_abstraction": "Base", "status": "Draft", "description": "Allowing password aging to occur unchecked can result in the possibility of diminished password integrity.", "extended_description": "Just as neglecting to include functionality for the management of password aging is dangerous, so is allowing password aging to continue unchecked. Passwords must be given a maximum life span, after which a user is required to update with a new and different password.", "related_weaknesses": "::NATURE:ChildOf:CWE ID:287:VIEW ID:1000:ORDINAL:Primary::NATURE:ChildOf:CWE ID:404:VIEW ID:1000::", "weakness_ordinalities": "", "applicable_platforms": "::LANGUAGE CLASS:Language-Independent:LANGUAGE PREVALENCE:Undetermined::", "background_details": "", "alternate_terms": "", "modes_of_introduction": "::PHASE:Architecture and Design:NOTE:COMMISSION: This weakness refers to an incorrect design related to an architectural security tactic.::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Access Control:IMPACT:Gain Privileges or Assume Identity:NOTE:As passwords age, the probability that they are compromised grows.::", "detection_methods": "", "potential_mitigations": "::PHASE:Architecture and Design:DESCRIPTION:Ensure that password aging is limited so that there is a defined maximum age for passwords and so that the user is notified several times leading up to the password expiration.::", "observed_examples": "", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "::TAXONOMY NAME:CLASP:ENTRY NAME:Allowing password aging::", "related_attack_patterns": "::16::49::509::55::555::560::561::565::600::652::653::70::", "notes": ""}}, {"cwe": "CWE-654", "cves": [], "cwe_info": {"cwe_id": "654", "name": "Reliance on a Single Factor in a Security Decision", "weakness_abstraction": "Base", "status": "Draft", "description": "A protection mechanism relies exclusively, or to a large extent, on the evaluation of a single condition or the integrity of a single object or entity in order to make a decision about granting access to restricted resources or functionality.", "extended_description": "", "related_weaknesses": "::NATURE:ChildOf:CWE ID:657:VIEW ID:1000:ORDINAL:Primary::NATURE:ChildOf:CWE ID:693:VIEW ID:1000::", "weakness_ordinalities": "::ORDINALITY:Primary::", "applicable_platforms": "::LANGUAGE CLASS:Language-Independent:LANGUAGE PREVALENCE:Undetermined::", "background_details": "", "alternate_terms": "::TERM:Separation of Privilege:DESCRIPTION:Some people and publications use the term Separation of Privilege to describe this weakness, but this term has dual meanings in current usage. While this entry is closely associated with the original definition of Separation of Privilege by Saltzer and Schroeder, others use the same term to describe poor compartmentalization (CWE-653). Because there are multiple interpretations, use of the Separation of Privilege term is discouraged.::", "modes_of_introduction": "::PHASE:Architecture and Design::PHASE:Implementation::PHASE:Operation::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Access Control:IMPACT:Gain Privileges or Assume Identity:NOTE:If the single factor is compromised (e.g. by theft or spoofing), then the integrity of the entire security mechanism can be violated with respect to the user that is identified by that factor.::SCOPE:Non-Repudiation:IMPACT:Hide Activities:NOTE:It can become difficult or impossible for the product to be able to distinguish between legitimate activities by the entity who provided the factor, versus illegitimate activities by an attacker.::", "detection_methods": "", "potential_mitigations": "::PHASE:Architecture and Design:DESCRIPTION:Use multiple simultaneous checks before granting access to critical operations or granting critical privileges. A weaker but helpful mitigation is to use several successive checks (multiple layers of security).::PHASE:Architecture and Design:DESCRIPTION:Use redundant access rules on different choke points (e.g., firewalls).::", "observed_examples": "", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "", "related_attack_patterns": "::16::274::49::55::560::565::600::652::653::70::", "notes": "::TYPE:Maintenance:NOTE:This entry is closely associated with the term Separation of Privilege. This term is used in several different ways in the industry, but they generally combine two closely related principles: compartmentalization (CWE-653) and using only one factor in a security decision (this entry). Proper compartmentalization implicitly introduces multiple factors into a security decision, but there can be cases in which multiple factors are required for authentication or other mechanisms that do not involve compartmentalization, such as performing all required checks on a submitted certificate. It is likely that CWE-653 and CWE-654 will provoke further discussion.::"}}, {"cwe": "CWE-1273", "cves": [], "cwe_info": {"cwe_id": "1273", "name": "Device Unlock Credential Sharing", "weakness_abstraction": "Base", "status": "Incomplete", "description": "The credentials necessary for unlocking a device are shared across multiple parties and may expose sensitive information.", "extended_description": "\u201cUnlocking a device\u201d often means activating certain, unadvertised, debug and manufacturer-specific capabilities of a device using sensitive credentials. Unlocking a device might be necessary for the purpose of troubleshooting device problems. For example, suppose a device contains the ability to dump the content of the full system memory by disabling the memory-protection mechanisms. Since this is a highly security-sensitive capability, this capability is \u201clocked\u201d in the production part. Unless the device gets unlocked by supplying the proper credentials the debug capabilities are not available. For cases where the chip designer, chip manufacturer (fabricator), and manufacturing and assembly testers are the all employed by the same company, the compromise of the credentials are greatly reduced. However, when the chip designer is employed by one company, the chip manufacturer is employed by another company (a foundry), and the assemblers and testers are employed by yet a third company. Since these different companies will need to perform various tests on the device to verify correct device function, they all need to share the unlock key. Unfortunately, the level of secrecy and policy might be quite different at each company, greatly increasing the risk of sensitive credentials being compromised.", "related_weaknesses": "::NATURE:ChildOf:CWE ID:200:VIEW ID:1000:ORDINAL:Primary::", "weakness_ordinalities": "", "applicable_platforms": "::LANGUAGE NAME:VHDL:LANGUAGE PREVALENCE:Undetermined::LANGUAGE NAME:Verilog:LANGUAGE PREVALENCE:Undetermined::LANGUAGE CLASS:Compiled:LANGUAGE PREVALENCE:Undetermined::OPERATING SYSTEM CLASS:OS-Independent:OPERATING SYSTEM PREVALENCE:Undetermined::ARCHITECTURE CLASS:Architecture-Independent:ARCHITECTURE PREVALENCE:Undetermined::TECHNOLOGY NAME:Other:TECHNOLOGY PREVALENCE:Undetermined::TECHNOLOGY CLASS:Technology-Independent:TECHNOLOGY PREVALENCE:Undetermined::", "background_details": "", "alternate_terms": "", "modes_of_introduction": "::PHASE:Integration::PHASE:Manufacturing::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Confidentiality:SCOPE:Integrity:SCOPE:Availability:SCOPE:Access Control:SCOPE:Accountability:SCOPE:Authentication:SCOPE:Authorization:SCOPE:Non-Repudiation:IMPACT:Modify Memory:IMPACT:Read Memory:IMPACT:Modify Files or Directories:IMPACT:Read Files or Directories:IMPACT:Modify Application Data:IMPACT:Execute Unauthorized Code or Commands:IMPACT:Gain Privileges or Assume Identity:IMPACT:Bypass Protection Mechanism:NOTE:Once unlock credentials are compromised, an attacker can use the credentials to unlock the device and gain unauthorized access to the hidden functionalities protected by those credentials.::", "detection_methods": "", "potential_mitigations": "::PHASE:Integration:DESCRIPTION:Ensure the unlock credentials are shared with the minimum number of parties and with utmost secrecy. To limit the risk associated with compromised credentials, where possible, the credentials should be part-specific.::PHASE:Manufacturing:DESCRIPTION:Ensure the unlock credentials are shared with the minimum number of parties and with utmost secrecy. To limit the risk associated with compromised credentials, where possible, the credentials should be part-specific.::", "observed_examples": "", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "", "related_attack_patterns": "::560::", "notes": "::TYPE:Maintenance:NOTE:This entry is still under development and will continue to see updates and content improvements.::"}}]}]}, {"technique_id": "T1036.005", "t_findings": [{"capec_id": "CAPEC-560", "c_findings": [{"cwe": "CWE-522", "cves": [{"id": "CVE-2007-0681", "score": ["V31", 9.8, "CRITICAL"], "v2_score": 7.5, "v2_exploitability_score": 10.0, "v2_impact_score": 6.4, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 7.5}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": true, "userInteractionRequired": false}], "description": "profile.php in ExtCalendar 2 and earlier allows remote attackers to change the passwords of arbitrary users without providing the original password, and possibly perform other unauthorized actions, via modified values to register.php.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:extcalendar_project:extcalendar:*:*:*:*:*:*:*:*", "published": "2007-02-03T01:28:00.000", "last_modified": "2024-02-09T03:13:40.213"}, {"id": "CVE-2000-0944", "score": ["V31", 9.8, "CRITICAL"], "v2_score": 7.5, "v2_exploitability_score": 10.0, "v2_impact_score": 6.4, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 7.5}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": true, "userInteractionRequired": false}], "description": "CGI Script Center News Update 1.1 does not properly validate the original news administration password during a password change operation, which allows remote attackers to modify the password without knowing the original password.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:cgi:script_center_news_update:1.1:*:*:*:*:*:*:*", "published": "2000-12-19T05:00:00.000", "last_modified": "2024-02-09T03:15:18.653"}, {"id": "CVE-2005-3435", "score": ["V31", 9.8, "CRITICAL"], "v2_score": 7.5, "v2_exploitability_score": 10.0, "v2_impact_score": 6.4, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 7.5}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": true, "userInteractionRequired": false}], "description": "admin_news.php in Archilles Newsworld up to 1.3.0 allows attackers to bypass authentication by obtaining the password hash for another user, for example through another Newsworld vulnerability, and specifying the hash in the pwd argument.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:archilles:newsworld:*:*:*:*:*:*:*:*", "published": "2005-11-02T11:02:00.000", "last_modified": "2024-02-09T03:13:36.147"}, {"id": "CVE-2005-0408", "score": ["V31", 9.8, "CRITICAL"], "v2_score": 7.5, "v2_exploitability_score": 10.0, "v2_impact_score": 6.4, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 7.5}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": true, "userInteractionRequired": false}], "description": "CitrusDB 0.3.6 and earlier generates easily predictable MD5 hashes of the user name for the id_hash cookie, which allows remote attackers to bypass authentication and gain privileges by calculating the MD5 checksum of the user name combined with the \"boogaadeeboo\" string, which is hard-coded in the $hidden_hash variable.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:citrusdb:citrusdb:*:*:*:*:*:*:*:*", "published": "2005-02-14T05:00:00.000", "last_modified": "2024-02-09T03:13:25.890"}], "cwe_info": {"cwe_id": "522", "name": "Insufficiently Protected Credentials", "weakness_abstraction": "Class", "status": "Incomplete", "description": "The product transmits or stores authentication credentials, but it uses an insecure method that is susceptible to unauthorized interception and/or retrieval.", "extended_description": "", "related_weaknesses": "::NATURE:ChildOf:CWE ID:287:VIEW ID:1000:ORDINAL:Primary::NATURE:ChildOf:CWE ID:287:VIEW ID:1003:ORDINAL:Primary::NATURE:ChildOf:CWE ID:668:VIEW ID:1000::", "weakness_ordinalities": "", "applicable_platforms": "", "background_details": "", "alternate_terms": "", "modes_of_introduction": "::PHASE:Architecture and Design:NOTE:COMMISSION: This weakness refers to an incorrect design related to an architectural security tactic.::PHASE:Implementation::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Access Control:IMPACT:Gain Privileges or Assume Identity:NOTE:An attacker could gain access to user accounts and access sensitive data used by the user accounts.::", "detection_methods": "", "potential_mitigations": "::PHASE:Architecture and Design:DESCRIPTION:Use an appropriate security mechanism to protect the credentials.::PHASE:Architecture and Design:DESCRIPTION:Make appropriate use of cryptography to protect the credentials.::PHASE:Implementation:DESCRIPTION:Use industry standards to protect the credentials (e.g. LDAP, keystore, etc.).::", "observed_examples": "::REFERENCE:CVE-2007-0681:DESCRIPTION:Web app allows remote attackers to change the passwords of arbitrary users without providing the original password, and possibly perform other unauthorized actions.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2007-0681::REFERENCE:CVE-2000-0944:DESCRIPTION:Web application password change utility doesn't check the original password.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2000-0944::REFERENCE:CVE-2005-3435:DESCRIPTION:product authentication succeeds if user-provided MD5 hash matches the hash in its database; this can be subjected to replay attacks.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2005-3435::REFERENCE:CVE-2005-0408:DESCRIPTION:chain: product generates predictable MD5 hashes using a constant value combined with username, allowing authentication bypass.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2005-0408::", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "::TAXONOMY NAME:OWASP Top Ten 2007:ENTRY ID:A7:ENTRY NAME:Broken Authentication and Session Management:MAPPING FIT:CWE More Specific::TAXONOMY NAME:OWASP Top Ten 2004:ENTRY ID:A3:ENTRY NAME:Broken Authentication and Session Management:MAPPING FIT:CWE More Specific::", "related_attack_patterns": "::102::474::50::509::551::555::560::561::600::644::645::652::653::", "notes": ""}}, {"cwe": "CWE-307", "cves": [{"id": "CVE-1999-1152", "score": ["V31", 7.5, "HIGH"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "Compaq/Microcom 6000 Access Integrator does not disconnect a client after a certain number of failed login attempts, which allows remote attackers to guess usernames or passwords via a brute force attack.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:o:compaq:microcom_6000_firmware:-:*:*:*:*:*:*:*", "published": "1998-06-03T04:00:00.000", "last_modified": "2024-02-09T03:15:08.037"}, {"id": "CVE-2001-1291", "score": ["V31", 9.8, "CRITICAL"], "v2_score": 10.0, "v2_exploitability_score": 10.0, "v2_impact_score": 10.0, "v2_vector": "AV:N/AC:L/Au:N/C:C/I:C/A:C", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:C/I:C/A:C", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "COMPLETE", "integrityImpact": "COMPLETE", "availabilityImpact": "COMPLETE", "baseScore": 10.0}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 10.0, "acInsufInfo": false, "obtainAllPrivilege": true, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "The telnet server for 3Com hardware such as PS40 SuperStack II does not delay or disconnect remote attackers who provide an incorrect username or password, which makes it easier to break into the server via brute force password guessing.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:o:3com:superstack_ii_ps_hub_40_firmware:-:*:*:*:*:*:*:*", "published": "2001-07-12T04:00:00.000", "last_modified": "2024-02-09T03:14:12.003"}, {"id": "CVE-2001-0395", "score": ["V31", 9.8, "CRITICAL"], "v2_score": 7.5, "v2_exploitability_score": 10.0, "v2_impact_score": 6.4, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 7.5}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "Lightwave ConsoleServer 3200 does not disconnect users after unsuccessful login attempts, which could allow remote attackers to conduct brute force password guessing.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:o:lightwavemo:consoleserver_3200_firmware:-:*:*:*:*:*:*:*", "published": "2001-07-02T04:00:00.000", "last_modified": "2024-02-09T03:14:07.077"}, {"id": "CVE-2001-1339", "score": ["V31", 9.8, "CRITICAL"], "v2_score": 7.5, "v2_exploitability_score": 10.0, "v2_impact_score": 6.4, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 7.5}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": true, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "Beck IPC GmbH IPC@CHIP telnet service does not delay or disconnect users from the service when bad passwords are entered, which makes it easier for remote attackers to conduct brute force password guessing attacks.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:o:anybus:ipc\\@chip_firmware:-:*:*:*:*:*:*:*", "published": "2001-05-24T04:00:00.000", "last_modified": "2024-02-09T03:15:26.757"}, {"id": "CVE-2002-0628", "score": ["V31", 7.5, "HIGH"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "The Telnet service for Polycom ViewStation before 7.2.4 does not restrict the number of failed login attempts, which makes it easier for remote attackers to guess usernames and passwords via a brute force attack.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:h:polycom:viewstation_128:6.5.1:*:*:*:*:*:*:*", "published": "2003-01-07T05:00:00.000", "last_modified": "2024-02-09T03:14:16.373"}, {"id": "CVE-1999-1324", "score": ["V31", 9.8, "CRITICAL"], "v2_score": 7.5, "v2_exploitability_score": 10.0, "v2_impact_score": 6.4, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 7.5}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "VAXstations running Open VMS 5.3 through 5.5-2 with VMS DECwindows or MOTIF do not properly disable access to user accounts that exceed the break-in limit threshold for failed login attempts, which makes it easier for attackers to conduct brute force password guessing.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:o:hp:openvms_vax:*:*:*:*:*:*:*:*", "published": "1999-12-31T05:00:00.000", "last_modified": "2024-02-09T03:15:13.613"}], "cwe_info": {"cwe_id": "307", "name": "Improper Restriction of Excessive Authentication Attempts", "weakness_abstraction": "Base", "status": "Draft", "description": "The software does not implement sufficient measures to prevent multiple failed authentication attempts within in a short time frame, making it more susceptible to brute force attacks.", "extended_description": "", "related_weaknesses": "::NATURE:ChildOf:CWE ID:287:VIEW ID:1000:ORDINAL:Primary::NATURE:ChildOf:CWE ID:287:VIEW ID:1003:ORDINAL:Primary::NATURE:ChildOf:CWE ID:799:VIEW ID:1000::", "weakness_ordinalities": "", "applicable_platforms": "::LANGUAGE CLASS:Language-Independent:LANGUAGE PREVALENCE:Undetermined::", "background_details": "", "alternate_terms": "", "modes_of_introduction": "::PHASE:Architecture and Design:NOTE:COMMISSION: This weakness refers to an incorrect design related to an architectural security tactic.::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Access Control:IMPACT:Bypass Protection Mechanism:NOTE:An attacker could perform an arbitrary number of authentication attempts using different passwords, and eventually gain access to the targeted account.::", "detection_methods": "::METHOD:Dynamic Analysis with Automated Results Interpretation:DESCRIPTION:According to SOAR, the following detection techniques may be useful: Highly cost effective: Web Application Scanner Web Services Scanner Database Scanners Cost effective for partial coverage: Host-based Vulnerability Scanners - Examine configuration for flaws, verifying that audit mechanisms work, ensure host configuration meets certain predefined criteria:EFFECTIVENESS:High::METHOD:Dynamic Analysis with Manual Results Interpretation:DESCRIPTION:According to SOAR, the following detection techniques may be useful: Highly cost effective: Fuzz Tester Framework-based Fuzzer Cost effective for partial coverage: Forced Path Execution:EFFECTIVENESS:High::METHOD:Manual Static Analysis - Source Code:DESCRIPTION:According to SOAR, the following detection techniques may be useful: Highly cost effective: Focused Manual Spotcheck - Focused manual analysis of source Manual Source Code Review (not inspections):EFFECTIVENESS:High::METHOD:Automated Static Analysis - Source Code:DESCRIPTION:According to SOAR, the following detection techniques may be useful: Cost effective for partial coverage: Source code Weakness Analyzer Context-configured Source Code Weakness Analyzer:EFFECTIVENESS:SOAR Partial::METHOD:Automated Static Analysis:DESCRIPTION:According to SOAR, the following detection techniques may be useful: Cost effective for partial coverage: Configuration Checker:EFFECTIVENESS:SOAR Partial::METHOD:Architecture or Design Review:DESCRIPTION:According to SOAR, the following detection techniques may be useful: Highly cost effective: Formal Methods / Correct-By-Construction Cost effective for partial coverage: Inspection (IEEE 1028 standard) (can apply to requirements, design, source code, etc.):EFFECTIVENESS:High::", "potential_mitigations": "::PHASE:Architecture and Design:DESCRIPTION:Common protection mechanisms include: Disconnecting the user after a small number of failed attempts Implementing a timeout Locking out a targeted account Requiring a computational task on the user's part.::PHASE:Architecture and Design:STRATEGY:Libraries or Frameworks:DESCRIPTION:Use a vetted library or framework that does not allow this weakness to occur or provides constructs that make this weakness easier to avoid. Consider using libraries with authentication capabilities such as OpenSSL or the ESAPI Authenticator. [REF-45]::", "observed_examples": "::REFERENCE:CVE-1999-1152:DESCRIPTION:Product does not disconnect or timeout after multiple failed logins.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-1999-1152::REFERENCE:CVE-2001-1291:DESCRIPTION:Product does not disconnect or timeout after multiple failed logins.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2001-1291::REFERENCE:CVE-2001-0395:DESCRIPTION:Product does not disconnect or timeout after multiple failed logins.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2001-0395::REFERENCE:CVE-2001-1339:DESCRIPTION:Product does not disconnect or timeout after multiple failed logins.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2001-1339::REFERENCE:CVE-2002-0628:DESCRIPTION:Product does not disconnect or timeout after multiple failed logins.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2002-0628::REFERENCE:CVE-1999-1324:DESCRIPTION:User accounts not disabled when they exceed a threshold; possibly a resultant problem.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-1999-1324::", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "::TAXONOMY NAME:PLOVER:ENTRY ID:AUTHENT.MULTFAIL:ENTRY NAME:Multiple Failed Authentication Attempts not Prevented::TAXONOMY NAME:Software Fault Patterns:ENTRY ID:SFP34:ENTRY NAME:Unrestricted authentication::", "related_attack_patterns": "::16::49::560::565::600::652::653::", "notes": ""}}, {"cwe": "CWE-308", "cves": [], "cwe_info": {"cwe_id": "308", "name": "Use of Single-factor Authentication", "weakness_abstraction": "Base", "status": "Draft", "description": "The use of single-factor authentication can lead to unnecessary risk of compromise when compared with the benefits of a dual-factor authentication scheme.", "extended_description": "While the use of multiple authentication schemes is simply piling on more complexity on top of authentication, it is inestimably valuable to have such measures of redundancy. The use of weak, reused, and common passwords is rampant on the internet. Without the added protection of multiple authentication schemes, a single mistake can result in the compromise of an account. For this reason, if multiple schemes are possible and also easy to use, they should be implemented and required.", "related_weaknesses": "::NATURE:ChildOf:CWE ID:287:VIEW ID:1000:ORDINAL:Primary::NATURE:ChildOf:CWE ID:654:VIEW ID:1000::NATURE:PeerOf:CWE ID:309:VIEW ID:1000::", "weakness_ordinalities": "", "applicable_platforms": "::LANGUAGE CLASS:Language-Independent:LANGUAGE PREVALENCE:Undetermined::", "background_details": "", "alternate_terms": "", "modes_of_introduction": "::PHASE:Architecture and Design:NOTE:COMMISSION: This weakness refers to an incorrect design related to an architectural security tactic.::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Access Control:IMPACT:Bypass Protection Mechanism:NOTE:If the secret in a single-factor authentication scheme gets compromised, full authentication is possible.::", "detection_methods": "", "potential_mitigations": "::PHASE:Architecture and Design:DESCRIPTION:Use multiple independent authentication schemes, which ensures that -- if one of the methods is compromised -- the system itself is still likely safe from compromise.::", "observed_examples": "", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "::TAXONOMY NAME:CLASP:ENTRY NAME:Using single-factor authentication::", "related_attack_patterns": "::16::49::509::55::555::560::561::565::600::644::645::652::653::70::", "notes": ""}}, {"cwe": "CWE-309", "cves": [], "cwe_info": {"cwe_id": "309", "name": "Use of Password System for Primary Authentication", "weakness_abstraction": "Base", "status": "Draft", "description": "The use of password systems as the primary means of authentication may be subject to several flaws or shortcomings, each reducing the effectiveness of the mechanism.", "extended_description": "", "related_weaknesses": "::NATURE:ChildOf:CWE ID:287:VIEW ID:1000:ORDINAL:Primary::NATURE:ChildOf:CWE ID:654:VIEW ID:1000::NATURE:PeerOf:CWE ID:308:VIEW ID:1000::", "weakness_ordinalities": "", "applicable_platforms": "::LANGUAGE CLASS:Language-Independent:LANGUAGE PREVALENCE:Undetermined::", "background_details": "::Password systems are the simplest and most ubiquitous authentication mechanisms. However, they are subject to such well known attacks,and such frequent compromise that their use in the most simple implementation is not practical.::", "alternate_terms": "", "modes_of_introduction": "::PHASE:Architecture and Design::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Access Control:IMPACT:Bypass Protection Mechanism:IMPACT:Gain Privileges or Assume Identity:NOTE:A password authentication mechanism error will almost always result in attackers being authorized as valid users.::", "detection_methods": "", "potential_mitigations": "::PHASE:Architecture and Design:DESCRIPTION:In order to protect password systems from compromise, the following should be noted: Passwords should be stored safely to prevent insider attack and to ensure that -- if a system is compromised -- the passwords are not retrievable. Due to password reuse, this information may be useful in the compromise of other systems these users work with. In order to protect these passwords, they should be stored encrypted, in a non-reversible state, such that the original text password cannot be extracted from the stored value. Password aging should be strictly enforced to ensure that passwords do not remain unchanged for long periods of time. The longer a password remains in use, the higher the probability that it has been compromised. For this reason, passwords should require refreshing periodically, and users should be informed of the risk of passwords which remain in use for too long. Password strength should be enforced intelligently. Rather than restrict passwords to specific content, or specific length, users should be encouraged to use upper and lower case letters, numbers, and symbols in their passwords. The system should also ensure that no passwords are derived from dictionary words.::PHASE:Architecture and Design:DESCRIPTION:Use a zero-knowledge password protocol, such as SRP.::PHASE:Architecture and Design:DESCRIPTION:Ensure that passwords are stored safely and are not reversible.::PHASE:Architecture and Design:DESCRIPTION:Implement password aging functionality that requires passwords be changed after a certain point.::PHASE:Architecture and Design:DESCRIPTION:Use a mechanism for determining the strength of a password and notify the user of weak password use.::PHASE:Architecture and Design:DESCRIPTION:Inform the user of why password protections are in place, how they work to protect data integrity, and why it is important to heed their warnings.::", "observed_examples": "", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "::TAXONOMY NAME:CLASP:ENTRY NAME:Using password systems::TAXONOMY NAME:OWASP Top Ten 2004:ENTRY ID:A3:ENTRY NAME:Broken Authentication and Session Management:MAPPING FIT:CWE More Specific::", "related_attack_patterns": "::16::49::509::55::555::560::561::565::600::652::653::70::", "notes": ""}}, {"cwe": "CWE-262", "cves": [], "cwe_info": {"cwe_id": "262", "name": "Not Using Password Aging", "weakness_abstraction": "Base", "status": "Draft", "description": "If no mechanism is in place for managing password aging, users will have no incentive to update passwords in a timely manner.", "extended_description": "Security experts have often recommended that users change their passwords regularly and avoid reusing passwords. Although this can be an effective mitigation, if the expiration window is too short, it can cause users to generate poor or predictable passwords. As such, it is important to discourage creating similar passwords. It is also useful to have a password aging mechanism that notifies users when passwords are considered old and requests that they replace them with new, strong passwords. Companion documentation which stresses how important this practice is can help users understand and better support this approach.", "related_weaknesses": "::NATURE:ChildOf:CWE ID:287:VIEW ID:1000:ORDINAL:Primary::NATURE:ChildOf:CWE ID:404:VIEW ID:1000::NATURE:PeerOf:CWE ID:309:VIEW ID:1000::NATURE:PeerOf:CWE ID:263:VIEW ID:1000::NATURE:PeerOf:CWE ID:324:VIEW ID:1000::", "weakness_ordinalities": "", "applicable_platforms": "::LANGUAGE CLASS:Language-Independent:LANGUAGE PREVALENCE:Undetermined::", "background_details": "", "alternate_terms": "", "modes_of_introduction": "::PHASE:Architecture and Design:NOTE:COMMISSION: This weakness refers to an incorrect design related to an architectural security tactic.::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Access Control:IMPACT:Gain Privileges or Assume Identity:NOTE:As passwords age, the probability that they are compromised grows.::", "detection_methods": "", "potential_mitigations": "::PHASE:Architecture and Design:DESCRIPTION:As part of a product's design, require users to change their passwords regularly and avoid reusing previous passwords.::", "observed_examples": "", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "::TAXONOMY NAME:CLASP:ENTRY NAME:Not allowing password aging::", "related_attack_patterns": "::16::49::509::55::555::560::561::565::600::652::653::70::", "notes": ""}}, {"cwe": "CWE-263", "cves": [], "cwe_info": {"cwe_id": "263", "name": "Password Aging with Long Expiration", "weakness_abstraction": "Base", "status": "Draft", "description": "Allowing password aging to occur unchecked can result in the possibility of diminished password integrity.", "extended_description": "Just as neglecting to include functionality for the management of password aging is dangerous, so is allowing password aging to continue unchecked. Passwords must be given a maximum life span, after which a user is required to update with a new and different password.", "related_weaknesses": "::NATURE:ChildOf:CWE ID:287:VIEW ID:1000:ORDINAL:Primary::NATURE:ChildOf:CWE ID:404:VIEW ID:1000::", "weakness_ordinalities": "", "applicable_platforms": "::LANGUAGE CLASS:Language-Independent:LANGUAGE PREVALENCE:Undetermined::", "background_details": "", "alternate_terms": "", "modes_of_introduction": "::PHASE:Architecture and Design:NOTE:COMMISSION: This weakness refers to an incorrect design related to an architectural security tactic.::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Access Control:IMPACT:Gain Privileges or Assume Identity:NOTE:As passwords age, the probability that they are compromised grows.::", "detection_methods": "", "potential_mitigations": "::PHASE:Architecture and Design:DESCRIPTION:Ensure that password aging is limited so that there is a defined maximum age for passwords and so that the user is notified several times leading up to the password expiration.::", "observed_examples": "", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "::TAXONOMY NAME:CLASP:ENTRY NAME:Allowing password aging::", "related_attack_patterns": "::16::49::509::55::555::560::561::565::600::652::653::70::", "notes": ""}}, {"cwe": "CWE-654", "cves": [], "cwe_info": {"cwe_id": "654", "name": "Reliance on a Single Factor in a Security Decision", "weakness_abstraction": "Base", "status": "Draft", "description": "A protection mechanism relies exclusively, or to a large extent, on the evaluation of a single condition or the integrity of a single object or entity in order to make a decision about granting access to restricted resources or functionality.", "extended_description": "", "related_weaknesses": "::NATURE:ChildOf:CWE ID:657:VIEW ID:1000:ORDINAL:Primary::NATURE:ChildOf:CWE ID:693:VIEW ID:1000::", "weakness_ordinalities": "::ORDINALITY:Primary::", "applicable_platforms": "::LANGUAGE CLASS:Language-Independent:LANGUAGE PREVALENCE:Undetermined::", "background_details": "", "alternate_terms": "::TERM:Separation of Privilege:DESCRIPTION:Some people and publications use the term Separation of Privilege to describe this weakness, but this term has dual meanings in current usage. While this entry is closely associated with the original definition of Separation of Privilege by Saltzer and Schroeder, others use the same term to describe poor compartmentalization (CWE-653). Because there are multiple interpretations, use of the Separation of Privilege term is discouraged.::", "modes_of_introduction": "::PHASE:Architecture and Design::PHASE:Implementation::PHASE:Operation::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Access Control:IMPACT:Gain Privileges or Assume Identity:NOTE:If the single factor is compromised (e.g. by theft or spoofing), then the integrity of the entire security mechanism can be violated with respect to the user that is identified by that factor.::SCOPE:Non-Repudiation:IMPACT:Hide Activities:NOTE:It can become difficult or impossible for the product to be able to distinguish between legitimate activities by the entity who provided the factor, versus illegitimate activities by an attacker.::", "detection_methods": "", "potential_mitigations": "::PHASE:Architecture and Design:DESCRIPTION:Use multiple simultaneous checks before granting access to critical operations or granting critical privileges. A weaker but helpful mitigation is to use several successive checks (multiple layers of security).::PHASE:Architecture and Design:DESCRIPTION:Use redundant access rules on different choke points (e.g., firewalls).::", "observed_examples": "", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "", "related_attack_patterns": "::16::274::49::55::560::565::600::652::653::70::", "notes": "::TYPE:Maintenance:NOTE:This entry is closely associated with the term Separation of Privilege. This term is used in several different ways in the industry, but they generally combine two closely related principles: compartmentalization (CWE-653) and using only one factor in a security decision (this entry). Proper compartmentalization implicitly introduces multiple factors into a security decision, but there can be cases in which multiple factors are required for authentication or other mechanisms that do not involve compartmentalization, such as performing all required checks on a submitted certificate. It is likely that CWE-653 and CWE-654 will provoke further discussion.::"}}, {"cwe": "CWE-1273", "cves": [], "cwe_info": {"cwe_id": "1273", "name": "Device Unlock Credential Sharing", "weakness_abstraction": "Base", "status": "Incomplete", "description": "The credentials necessary for unlocking a device are shared across multiple parties and may expose sensitive information.", "extended_description": "\u201cUnlocking a device\u201d often means activating certain, unadvertised, debug and manufacturer-specific capabilities of a device using sensitive credentials. Unlocking a device might be necessary for the purpose of troubleshooting device problems. For example, suppose a device contains the ability to dump the content of the full system memory by disabling the memory-protection mechanisms. Since this is a highly security-sensitive capability, this capability is \u201clocked\u201d in the production part. Unless the device gets unlocked by supplying the proper credentials the debug capabilities are not available. For cases where the chip designer, chip manufacturer (fabricator), and manufacturing and assembly testers are the all employed by the same company, the compromise of the credentials are greatly reduced. However, when the chip designer is employed by one company, the chip manufacturer is employed by another company (a foundry), and the assemblers and testers are employed by yet a third company. Since these different companies will need to perform various tests on the device to verify correct device function, they all need to share the unlock key. Unfortunately, the level of secrecy and policy might be quite different at each company, greatly increasing the risk of sensitive credentials being compromised.", "related_weaknesses": "::NATURE:ChildOf:CWE ID:200:VIEW ID:1000:ORDINAL:Primary::", "weakness_ordinalities": "", "applicable_platforms": "::LANGUAGE NAME:VHDL:LANGUAGE PREVALENCE:Undetermined::LANGUAGE NAME:Verilog:LANGUAGE PREVALENCE:Undetermined::LANGUAGE CLASS:Compiled:LANGUAGE PREVALENCE:Undetermined::OPERATING SYSTEM CLASS:OS-Independent:OPERATING SYSTEM PREVALENCE:Undetermined::ARCHITECTURE CLASS:Architecture-Independent:ARCHITECTURE PREVALENCE:Undetermined::TECHNOLOGY NAME:Other:TECHNOLOGY PREVALENCE:Undetermined::TECHNOLOGY CLASS:Technology-Independent:TECHNOLOGY PREVALENCE:Undetermined::", "background_details": "", "alternate_terms": "", "modes_of_introduction": "::PHASE:Integration::PHASE:Manufacturing::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Confidentiality:SCOPE:Integrity:SCOPE:Availability:SCOPE:Access Control:SCOPE:Accountability:SCOPE:Authentication:SCOPE:Authorization:SCOPE:Non-Repudiation:IMPACT:Modify Memory:IMPACT:Read Memory:IMPACT:Modify Files or Directories:IMPACT:Read Files or Directories:IMPACT:Modify Application Data:IMPACT:Execute Unauthorized Code or Commands:IMPACT:Gain Privileges or Assume Identity:IMPACT:Bypass Protection Mechanism:NOTE:Once unlock credentials are compromised, an attacker can use the credentials to unlock the device and gain unauthorized access to the hidden functionalities protected by those credentials.::", "detection_methods": "", "potential_mitigations": "::PHASE:Integration:DESCRIPTION:Ensure the unlock credentials are shared with the minimum number of parties and with utmost secrecy. To limit the risk associated with compromised credentials, where possible, the credentials should be part-specific.::PHASE:Manufacturing:DESCRIPTION:Ensure the unlock credentials are shared with the minimum number of parties and with utmost secrecy. To limit the risk associated with compromised credentials, where possible, the credentials should be part-specific.::", "observed_examples": "", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "", "related_attack_patterns": "::560::", "notes": "::TYPE:Maintenance:NOTE:This entry is still under development and will continue to see updates and content improvements.::"}}]}]}, {"technique_id": "T1059", "t_findings": [{"capec_id": "CAPEC-560", "c_findings": [{"cwe": "CWE-522", "cves": [{"id": "CVE-2007-0681", "score": ["V31", 9.8, "CRITICAL"], "v2_score": 7.5, "v2_exploitability_score": 10.0, "v2_impact_score": 6.4, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 7.5}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": true, "userInteractionRequired": false}], "description": "profile.php in ExtCalendar 2 and earlier allows remote attackers to change the passwords of arbitrary users without providing the original password, and possibly perform other unauthorized actions, via modified values to register.php.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:extcalendar_project:extcalendar:*:*:*:*:*:*:*:*", "published": "2007-02-03T01:28:00.000", "last_modified": "2024-02-09T03:13:40.213"}, {"id": "CVE-2000-0944", "score": ["V31", 9.8, "CRITICAL"], "v2_score": 7.5, "v2_exploitability_score": 10.0, "v2_impact_score": 6.4, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 7.5}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": true, "userInteractionRequired": false}], "description": "CGI Script Center News Update 1.1 does not properly validate the original news administration password during a password change operation, which allows remote attackers to modify the password without knowing the original password.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:cgi:script_center_news_update:1.1:*:*:*:*:*:*:*", "published": "2000-12-19T05:00:00.000", "last_modified": "2024-02-09T03:15:18.653"}, {"id": "CVE-2005-3435", "score": ["V31", 9.8, "CRITICAL"], "v2_score": 7.5, "v2_exploitability_score": 10.0, "v2_impact_score": 6.4, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 7.5}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": true, "userInteractionRequired": false}], "description": "admin_news.php in Archilles Newsworld up to 1.3.0 allows attackers to bypass authentication by obtaining the password hash for another user, for example through another Newsworld vulnerability, and specifying the hash in the pwd argument.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:archilles:newsworld:*:*:*:*:*:*:*:*", "published": "2005-11-02T11:02:00.000", "last_modified": "2024-02-09T03:13:36.147"}, {"id": "CVE-2005-0408", "score": ["V31", 9.8, "CRITICAL"], "v2_score": 7.5, "v2_exploitability_score": 10.0, "v2_impact_score": 6.4, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 7.5}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": true, "userInteractionRequired": false}], "description": "CitrusDB 0.3.6 and earlier generates easily predictable MD5 hashes of the user name for the id_hash cookie, which allows remote attackers to bypass authentication and gain privileges by calculating the MD5 checksum of the user name combined with the \"boogaadeeboo\" string, which is hard-coded in the $hidden_hash variable.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:citrusdb:citrusdb:*:*:*:*:*:*:*:*", "published": "2005-02-14T05:00:00.000", "last_modified": "2024-02-09T03:13:25.890"}], "cwe_info": {"cwe_id": "522", "name": "Insufficiently Protected Credentials", "weakness_abstraction": "Class", "status": "Incomplete", "description": "The product transmits or stores authentication credentials, but it uses an insecure method that is susceptible to unauthorized interception and/or retrieval.", "extended_description": "", "related_weaknesses": "::NATURE:ChildOf:CWE ID:287:VIEW ID:1000:ORDINAL:Primary::NATURE:ChildOf:CWE ID:287:VIEW ID:1003:ORDINAL:Primary::NATURE:ChildOf:CWE ID:668:VIEW ID:1000::", "weakness_ordinalities": "", "applicable_platforms": "", "background_details": "", "alternate_terms": "", "modes_of_introduction": "::PHASE:Architecture and Design:NOTE:COMMISSION: This weakness refers to an incorrect design related to an architectural security tactic.::PHASE:Implementation::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Access Control:IMPACT:Gain Privileges or Assume Identity:NOTE:An attacker could gain access to user accounts and access sensitive data used by the user accounts.::", "detection_methods": "", "potential_mitigations": "::PHASE:Architecture and Design:DESCRIPTION:Use an appropriate security mechanism to protect the credentials.::PHASE:Architecture and Design:DESCRIPTION:Make appropriate use of cryptography to protect the credentials.::PHASE:Implementation:DESCRIPTION:Use industry standards to protect the credentials (e.g. LDAP, keystore, etc.).::", "observed_examples": "::REFERENCE:CVE-2007-0681:DESCRIPTION:Web app allows remote attackers to change the passwords of arbitrary users without providing the original password, and possibly perform other unauthorized actions.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2007-0681::REFERENCE:CVE-2000-0944:DESCRIPTION:Web application password change utility doesn't check the original password.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2000-0944::REFERENCE:CVE-2005-3435:DESCRIPTION:product authentication succeeds if user-provided MD5 hash matches the hash in its database; this can be subjected to replay attacks.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2005-3435::REFERENCE:CVE-2005-0408:DESCRIPTION:chain: product generates predictable MD5 hashes using a constant value combined with username, allowing authentication bypass.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2005-0408::", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "::TAXONOMY NAME:OWASP Top Ten 2007:ENTRY ID:A7:ENTRY NAME:Broken Authentication and Session Management:MAPPING FIT:CWE More Specific::TAXONOMY NAME:OWASP Top Ten 2004:ENTRY ID:A3:ENTRY NAME:Broken Authentication and Session Management:MAPPING FIT:CWE More Specific::", "related_attack_patterns": "::102::474::50::509::551::555::560::561::600::644::645::652::653::", "notes": ""}}, {"cwe": "CWE-307", "cves": [{"id": "CVE-1999-1152", "score": ["V31", 7.5, "HIGH"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "Compaq/Microcom 6000 Access Integrator does not disconnect a client after a certain number of failed login attempts, which allows remote attackers to guess usernames or passwords via a brute force attack.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:o:compaq:microcom_6000_firmware:-:*:*:*:*:*:*:*", "published": "1998-06-03T04:00:00.000", "last_modified": "2024-02-09T03:15:08.037"}, {"id": "CVE-2001-1291", "score": ["V31", 9.8, "CRITICAL"], "v2_score": 10.0, "v2_exploitability_score": 10.0, "v2_impact_score": 10.0, "v2_vector": "AV:N/AC:L/Au:N/C:C/I:C/A:C", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:C/I:C/A:C", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "COMPLETE", "integrityImpact": "COMPLETE", "availabilityImpact": "COMPLETE", "baseScore": 10.0}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 10.0, "acInsufInfo": false, "obtainAllPrivilege": true, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "The telnet server for 3Com hardware such as PS40 SuperStack II does not delay or disconnect remote attackers who provide an incorrect username or password, which makes it easier to break into the server via brute force password guessing.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:o:3com:superstack_ii_ps_hub_40_firmware:-:*:*:*:*:*:*:*", "published": "2001-07-12T04:00:00.000", "last_modified": "2024-02-09T03:14:12.003"}, {"id": "CVE-2001-0395", "score": ["V31", 9.8, "CRITICAL"], "v2_score": 7.5, "v2_exploitability_score": 10.0, "v2_impact_score": 6.4, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 7.5}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "Lightwave ConsoleServer 3200 does not disconnect users after unsuccessful login attempts, which could allow remote attackers to conduct brute force password guessing.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:o:lightwavemo:consoleserver_3200_firmware:-:*:*:*:*:*:*:*", "published": "2001-07-02T04:00:00.000", "last_modified": "2024-02-09T03:14:07.077"}, {"id": "CVE-2001-1339", "score": ["V31", 9.8, "CRITICAL"], "v2_score": 7.5, "v2_exploitability_score": 10.0, "v2_impact_score": 6.4, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 7.5}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": true, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "Beck IPC GmbH IPC@CHIP telnet service does not delay or disconnect users from the service when bad passwords are entered, which makes it easier for remote attackers to conduct brute force password guessing attacks.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:o:anybus:ipc\\@chip_firmware:-:*:*:*:*:*:*:*", "published": "2001-05-24T04:00:00.000", "last_modified": "2024-02-09T03:15:26.757"}, {"id": "CVE-2002-0628", "score": ["V31", 7.5, "HIGH"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "The Telnet service for Polycom ViewStation before 7.2.4 does not restrict the number of failed login attempts, which makes it easier for remote attackers to guess usernames and passwords via a brute force attack.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:h:polycom:viewstation_128:6.5.1:*:*:*:*:*:*:*", "published": "2003-01-07T05:00:00.000", "last_modified": "2024-02-09T03:14:16.373"}, {"id": "CVE-1999-1324", "score": ["V31", 9.8, "CRITICAL"], "v2_score": 7.5, "v2_exploitability_score": 10.0, "v2_impact_score": 6.4, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 7.5}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "VAXstations running Open VMS 5.3 through 5.5-2 with VMS DECwindows or MOTIF do not properly disable access to user accounts that exceed the break-in limit threshold for failed login attempts, which makes it easier for attackers to conduct brute force password guessing.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:o:hp:openvms_vax:*:*:*:*:*:*:*:*", "published": "1999-12-31T05:00:00.000", "last_modified": "2024-02-09T03:15:13.613"}], "cwe_info": {"cwe_id": "307", "name": "Improper Restriction of Excessive Authentication Attempts", "weakness_abstraction": "Base", "status": "Draft", "description": "The software does not implement sufficient measures to prevent multiple failed authentication attempts within in a short time frame, making it more susceptible to brute force attacks.", "extended_description": "", "related_weaknesses": "::NATURE:ChildOf:CWE ID:287:VIEW ID:1000:ORDINAL:Primary::NATURE:ChildOf:CWE ID:287:VIEW ID:1003:ORDINAL:Primary::NATURE:ChildOf:CWE ID:799:VIEW ID:1000::", "weakness_ordinalities": "", "applicable_platforms": "::LANGUAGE CLASS:Language-Independent:LANGUAGE PREVALENCE:Undetermined::", "background_details": "", "alternate_terms": "", "modes_of_introduction": "::PHASE:Architecture and Design:NOTE:COMMISSION: This weakness refers to an incorrect design related to an architectural security tactic.::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Access Control:IMPACT:Bypass Protection Mechanism:NOTE:An attacker could perform an arbitrary number of authentication attempts using different passwords, and eventually gain access to the targeted account.::", "detection_methods": "::METHOD:Dynamic Analysis with Automated Results Interpretation:DESCRIPTION:According to SOAR, the following detection techniques may be useful: Highly cost effective: Web Application Scanner Web Services Scanner Database Scanners Cost effective for partial coverage: Host-based Vulnerability Scanners - Examine configuration for flaws, verifying that audit mechanisms work, ensure host configuration meets certain predefined criteria:EFFECTIVENESS:High::METHOD:Dynamic Analysis with Manual Results Interpretation:DESCRIPTION:According to SOAR, the following detection techniques may be useful: Highly cost effective: Fuzz Tester Framework-based Fuzzer Cost effective for partial coverage: Forced Path Execution:EFFECTIVENESS:High::METHOD:Manual Static Analysis - Source Code:DESCRIPTION:According to SOAR, the following detection techniques may be useful: Highly cost effective: Focused Manual Spotcheck - Focused manual analysis of source Manual Source Code Review (not inspections):EFFECTIVENESS:High::METHOD:Automated Static Analysis - Source Code:DESCRIPTION:According to SOAR, the following detection techniques may be useful: Cost effective for partial coverage: Source code Weakness Analyzer Context-configured Source Code Weakness Analyzer:EFFECTIVENESS:SOAR Partial::METHOD:Automated Static Analysis:DESCRIPTION:According to SOAR, the following detection techniques may be useful: Cost effective for partial coverage: Configuration Checker:EFFECTIVENESS:SOAR Partial::METHOD:Architecture or Design Review:DESCRIPTION:According to SOAR, the following detection techniques may be useful: Highly cost effective: Formal Methods / Correct-By-Construction Cost effective for partial coverage: Inspection (IEEE 1028 standard) (can apply to requirements, design, source code, etc.):EFFECTIVENESS:High::", "potential_mitigations": "::PHASE:Architecture and Design:DESCRIPTION:Common protection mechanisms include: Disconnecting the user after a small number of failed attempts Implementing a timeout Locking out a targeted account Requiring a computational task on the user's part.::PHASE:Architecture and Design:STRATEGY:Libraries or Frameworks:DESCRIPTION:Use a vetted library or framework that does not allow this weakness to occur or provides constructs that make this weakness easier to avoid. Consider using libraries with authentication capabilities such as OpenSSL or the ESAPI Authenticator. [REF-45]::", "observed_examples": "::REFERENCE:CVE-1999-1152:DESCRIPTION:Product does not disconnect or timeout after multiple failed logins.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-1999-1152::REFERENCE:CVE-2001-1291:DESCRIPTION:Product does not disconnect or timeout after multiple failed logins.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2001-1291::REFERENCE:CVE-2001-0395:DESCRIPTION:Product does not disconnect or timeout after multiple failed logins.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2001-0395::REFERENCE:CVE-2001-1339:DESCRIPTION:Product does not disconnect or timeout after multiple failed logins.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2001-1339::REFERENCE:CVE-2002-0628:DESCRIPTION:Product does not disconnect or timeout after multiple failed logins.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2002-0628::REFERENCE:CVE-1999-1324:DESCRIPTION:User accounts not disabled when they exceed a threshold; possibly a resultant problem.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-1999-1324::", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "::TAXONOMY NAME:PLOVER:ENTRY ID:AUTHENT.MULTFAIL:ENTRY NAME:Multiple Failed Authentication Attempts not Prevented::TAXONOMY NAME:Software Fault Patterns:ENTRY ID:SFP34:ENTRY NAME:Unrestricted authentication::", "related_attack_patterns": "::16::49::560::565::600::652::653::", "notes": ""}}, {"cwe": "CWE-308", "cves": [], "cwe_info": {"cwe_id": "308", "name": "Use of Single-factor Authentication", "weakness_abstraction": "Base", "status": "Draft", "description": "The use of single-factor authentication can lead to unnecessary risk of compromise when compared with the benefits of a dual-factor authentication scheme.", "extended_description": "While the use of multiple authentication schemes is simply piling on more complexity on top of authentication, it is inestimably valuable to have such measures of redundancy. The use of weak, reused, and common passwords is rampant on the internet. Without the added protection of multiple authentication schemes, a single mistake can result in the compromise of an account. For this reason, if multiple schemes are possible and also easy to use, they should be implemented and required.", "related_weaknesses": "::NATURE:ChildOf:CWE ID:287:VIEW ID:1000:ORDINAL:Primary::NATURE:ChildOf:CWE ID:654:VIEW ID:1000::NATURE:PeerOf:CWE ID:309:VIEW ID:1000::", "weakness_ordinalities": "", "applicable_platforms": "::LANGUAGE CLASS:Language-Independent:LANGUAGE PREVALENCE:Undetermined::", "background_details": "", "alternate_terms": "", "modes_of_introduction": "::PHASE:Architecture and Design:NOTE:COMMISSION: This weakness refers to an incorrect design related to an architectural security tactic.::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Access Control:IMPACT:Bypass Protection Mechanism:NOTE:If the secret in a single-factor authentication scheme gets compromised, full authentication is possible.::", "detection_methods": "", "potential_mitigations": "::PHASE:Architecture and Design:DESCRIPTION:Use multiple independent authentication schemes, which ensures that -- if one of the methods is compromised -- the system itself is still likely safe from compromise.::", "observed_examples": "", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "::TAXONOMY NAME:CLASP:ENTRY NAME:Using single-factor authentication::", "related_attack_patterns": "::16::49::509::55::555::560::561::565::600::644::645::652::653::70::", "notes": ""}}, {"cwe": "CWE-309", "cves": [], "cwe_info": {"cwe_id": "309", "name": "Use of Password System for Primary Authentication", "weakness_abstraction": "Base", "status": "Draft", "description": "The use of password systems as the primary means of authentication may be subject to several flaws or shortcomings, each reducing the effectiveness of the mechanism.", "extended_description": "", "related_weaknesses": "::NATURE:ChildOf:CWE ID:287:VIEW ID:1000:ORDINAL:Primary::NATURE:ChildOf:CWE ID:654:VIEW ID:1000::NATURE:PeerOf:CWE ID:308:VIEW ID:1000::", "weakness_ordinalities": "", "applicable_platforms": "::LANGUAGE CLASS:Language-Independent:LANGUAGE PREVALENCE:Undetermined::", "background_details": "::Password systems are the simplest and most ubiquitous authentication mechanisms. However, they are subject to such well known attacks,and such frequent compromise that their use in the most simple implementation is not practical.::", "alternate_terms": "", "modes_of_introduction": "::PHASE:Architecture and Design::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Access Control:IMPACT:Bypass Protection Mechanism:IMPACT:Gain Privileges or Assume Identity:NOTE:A password authentication mechanism error will almost always result in attackers being authorized as valid users.::", "detection_methods": "", "potential_mitigations": "::PHASE:Architecture and Design:DESCRIPTION:In order to protect password systems from compromise, the following should be noted: Passwords should be stored safely to prevent insider attack and to ensure that -- if a system is compromised -- the passwords are not retrievable. Due to password reuse, this information may be useful in the compromise of other systems these users work with. In order to protect these passwords, they should be stored encrypted, in a non-reversible state, such that the original text password cannot be extracted from the stored value. Password aging should be strictly enforced to ensure that passwords do not remain unchanged for long periods of time. The longer a password remains in use, the higher the probability that it has been compromised. For this reason, passwords should require refreshing periodically, and users should be informed of the risk of passwords which remain in use for too long. Password strength should be enforced intelligently. Rather than restrict passwords to specific content, or specific length, users should be encouraged to use upper and lower case letters, numbers, and symbols in their passwords. The system should also ensure that no passwords are derived from dictionary words.::PHASE:Architecture and Design:DESCRIPTION:Use a zero-knowledge password protocol, such as SRP.::PHASE:Architecture and Design:DESCRIPTION:Ensure that passwords are stored safely and are not reversible.::PHASE:Architecture and Design:DESCRIPTION:Implement password aging functionality that requires passwords be changed after a certain point.::PHASE:Architecture and Design:DESCRIPTION:Use a mechanism for determining the strength of a password and notify the user of weak password use.::PHASE:Architecture and Design:DESCRIPTION:Inform the user of why password protections are in place, how they work to protect data integrity, and why it is important to heed their warnings.::", "observed_examples": "", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "::TAXONOMY NAME:CLASP:ENTRY NAME:Using password systems::TAXONOMY NAME:OWASP Top Ten 2004:ENTRY ID:A3:ENTRY NAME:Broken Authentication and Session Management:MAPPING FIT:CWE More Specific::", "related_attack_patterns": "::16::49::509::55::555::560::561::565::600::652::653::70::", "notes": ""}}, {"cwe": "CWE-262", "cves": [], "cwe_info": {"cwe_id": "262", "name": "Not Using Password Aging", "weakness_abstraction": "Base", "status": "Draft", "description": "If no mechanism is in place for managing password aging, users will have no incentive to update passwords in a timely manner.", "extended_description": "Security experts have often recommended that users change their passwords regularly and avoid reusing passwords. Although this can be an effective mitigation, if the expiration window is too short, it can cause users to generate poor or predictable passwords. As such, it is important to discourage creating similar passwords. It is also useful to have a password aging mechanism that notifies users when passwords are considered old and requests that they replace them with new, strong passwords. Companion documentation which stresses how important this practice is can help users understand and better support this approach.", "related_weaknesses": "::NATURE:ChildOf:CWE ID:287:VIEW ID:1000:ORDINAL:Primary::NATURE:ChildOf:CWE ID:404:VIEW ID:1000::NATURE:PeerOf:CWE ID:309:VIEW ID:1000::NATURE:PeerOf:CWE ID:263:VIEW ID:1000::NATURE:PeerOf:CWE ID:324:VIEW ID:1000::", "weakness_ordinalities": "", "applicable_platforms": "::LANGUAGE CLASS:Language-Independent:LANGUAGE PREVALENCE:Undetermined::", "background_details": "", "alternate_terms": "", "modes_of_introduction": "::PHASE:Architecture and Design:NOTE:COMMISSION: This weakness refers to an incorrect design related to an architectural security tactic.::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Access Control:IMPACT:Gain Privileges or Assume Identity:NOTE:As passwords age, the probability that they are compromised grows.::", "detection_methods": "", "potential_mitigations": "::PHASE:Architecture and Design:DESCRIPTION:As part of a product's design, require users to change their passwords regularly and avoid reusing previous passwords.::", "observed_examples": "", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "::TAXONOMY NAME:CLASP:ENTRY NAME:Not allowing password aging::", "related_attack_patterns": "::16::49::509::55::555::560::561::565::600::652::653::70::", "notes": ""}}, {"cwe": "CWE-263", "cves": [], "cwe_info": {"cwe_id": "263", "name": "Password Aging with Long Expiration", "weakness_abstraction": "Base", "status": "Draft", "description": "Allowing password aging to occur unchecked can result in the possibility of diminished password integrity.", "extended_description": "Just as neglecting to include functionality for the management of password aging is dangerous, so is allowing password aging to continue unchecked. Passwords must be given a maximum life span, after which a user is required to update with a new and different password.", "related_weaknesses": "::NATURE:ChildOf:CWE ID:287:VIEW ID:1000:ORDINAL:Primary::NATURE:ChildOf:CWE ID:404:VIEW ID:1000::", "weakness_ordinalities": "", "applicable_platforms": "::LANGUAGE CLASS:Language-Independent:LANGUAGE PREVALENCE:Undetermined::", "background_details": "", "alternate_terms": "", "modes_of_introduction": "::PHASE:Architecture and Design:NOTE:COMMISSION: This weakness refers to an incorrect design related to an architectural security tactic.::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Access Control:IMPACT:Gain Privileges or Assume Identity:NOTE:As passwords age, the probability that they are compromised grows.::", "detection_methods": "", "potential_mitigations": "::PHASE:Architecture and Design:DESCRIPTION:Ensure that password aging is limited so that there is a defined maximum age for passwords and so that the user is notified several times leading up to the password expiration.::", "observed_examples": "", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "::TAXONOMY NAME:CLASP:ENTRY NAME:Allowing password aging::", "related_attack_patterns": "::16::49::509::55::555::560::561::565::600::652::653::70::", "notes": ""}}, {"cwe": "CWE-654", "cves": [], "cwe_info": {"cwe_id": "654", "name": "Reliance on a Single Factor in a Security Decision", "weakness_abstraction": "Base", "status": "Draft", "description": "A protection mechanism relies exclusively, or to a large extent, on the evaluation of a single condition or the integrity of a single object or entity in order to make a decision about granting access to restricted resources or functionality.", "extended_description": "", "related_weaknesses": "::NATURE:ChildOf:CWE ID:657:VIEW ID:1000:ORDINAL:Primary::NATURE:ChildOf:CWE ID:693:VIEW ID:1000::", "weakness_ordinalities": "::ORDINALITY:Primary::", "applicable_platforms": "::LANGUAGE CLASS:Language-Independent:LANGUAGE PREVALENCE:Undetermined::", "background_details": "", "alternate_terms": "::TERM:Separation of Privilege:DESCRIPTION:Some people and publications use the term Separation of Privilege to describe this weakness, but this term has dual meanings in current usage. While this entry is closely associated with the original definition of Separation of Privilege by Saltzer and Schroeder, others use the same term to describe poor compartmentalization (CWE-653). Because there are multiple interpretations, use of the Separation of Privilege term is discouraged.::", "modes_of_introduction": "::PHASE:Architecture and Design::PHASE:Implementation::PHASE:Operation::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Access Control:IMPACT:Gain Privileges or Assume Identity:NOTE:If the single factor is compromised (e.g. by theft or spoofing), then the integrity of the entire security mechanism can be violated with respect to the user that is identified by that factor.::SCOPE:Non-Repudiation:IMPACT:Hide Activities:NOTE:It can become difficult or impossible for the product to be able to distinguish between legitimate activities by the entity who provided the factor, versus illegitimate activities by an attacker.::", "detection_methods": "", "potential_mitigations": "::PHASE:Architecture and Design:DESCRIPTION:Use multiple simultaneous checks before granting access to critical operations or granting critical privileges. A weaker but helpful mitigation is to use several successive checks (multiple layers of security).::PHASE:Architecture and Design:DESCRIPTION:Use redundant access rules on different choke points (e.g., firewalls).::", "observed_examples": "", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "", "related_attack_patterns": "::16::274::49::55::560::565::600::652::653::70::", "notes": "::TYPE:Maintenance:NOTE:This entry is closely associated with the term Separation of Privilege. This term is used in several different ways in the industry, but they generally combine two closely related principles: compartmentalization (CWE-653) and using only one factor in a security decision (this entry). Proper compartmentalization implicitly introduces multiple factors into a security decision, but there can be cases in which multiple factors are required for authentication or other mechanisms that do not involve compartmentalization, such as performing all required checks on a submitted certificate. It is likely that CWE-653 and CWE-654 will provoke further discussion.::"}}, {"cwe": "CWE-1273", "cves": [], "cwe_info": {"cwe_id": "1273", "name": "Device Unlock Credential Sharing", "weakness_abstraction": "Base", "status": "Incomplete", "description": "The credentials necessary for unlocking a device are shared across multiple parties and may expose sensitive information.", "extended_description": "\u201cUnlocking a device\u201d often means activating certain, unadvertised, debug and manufacturer-specific capabilities of a device using sensitive credentials. Unlocking a device might be necessary for the purpose of troubleshooting device problems. For example, suppose a device contains the ability to dump the content of the full system memory by disabling the memory-protection mechanisms. Since this is a highly security-sensitive capability, this capability is \u201clocked\u201d in the production part. Unless the device gets unlocked by supplying the proper credentials the debug capabilities are not available. For cases where the chip designer, chip manufacturer (fabricator), and manufacturing and assembly testers are the all employed by the same company, the compromise of the credentials are greatly reduced. However, when the chip designer is employed by one company, the chip manufacturer is employed by another company (a foundry), and the assemblers and testers are employed by yet a third company. Since these different companies will need to perform various tests on the device to verify correct device function, they all need to share the unlock key. Unfortunately, the level of secrecy and policy might be quite different at each company, greatly increasing the risk of sensitive credentials being compromised.", "related_weaknesses": "::NATURE:ChildOf:CWE ID:200:VIEW ID:1000:ORDINAL:Primary::", "weakness_ordinalities": "", "applicable_platforms": "::LANGUAGE NAME:VHDL:LANGUAGE PREVALENCE:Undetermined::LANGUAGE NAME:Verilog:LANGUAGE PREVALENCE:Undetermined::LANGUAGE CLASS:Compiled:LANGUAGE PREVALENCE:Undetermined::OPERATING SYSTEM CLASS:OS-Independent:OPERATING SYSTEM PREVALENCE:Undetermined::ARCHITECTURE CLASS:Architecture-Independent:ARCHITECTURE PREVALENCE:Undetermined::TECHNOLOGY NAME:Other:TECHNOLOGY PREVALENCE:Undetermined::TECHNOLOGY CLASS:Technology-Independent:TECHNOLOGY PREVALENCE:Undetermined::", "background_details": "", "alternate_terms": "", "modes_of_introduction": "::PHASE:Integration::PHASE:Manufacturing::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Confidentiality:SCOPE:Integrity:SCOPE:Availability:SCOPE:Access Control:SCOPE:Accountability:SCOPE:Authentication:SCOPE:Authorization:SCOPE:Non-Repudiation:IMPACT:Modify Memory:IMPACT:Read Memory:IMPACT:Modify Files or Directories:IMPACT:Read Files or Directories:IMPACT:Modify Application Data:IMPACT:Execute Unauthorized Code or Commands:IMPACT:Gain Privileges or Assume Identity:IMPACT:Bypass Protection Mechanism:NOTE:Once unlock credentials are compromised, an attacker can use the credentials to unlock the device and gain unauthorized access to the hidden functionalities protected by those credentials.::", "detection_methods": "", "potential_mitigations": "::PHASE:Integration:DESCRIPTION:Ensure the unlock credentials are shared with the minimum number of parties and with utmost secrecy. To limit the risk associated with compromised credentials, where possible, the credentials should be part-specific.::PHASE:Manufacturing:DESCRIPTION:Ensure the unlock credentials are shared with the minimum number of parties and with utmost secrecy. To limit the risk associated with compromised credentials, where possible, the credentials should be part-specific.::", "observed_examples": "", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "", "related_attack_patterns": "::560::", "notes": "::TYPE:Maintenance:NOTE:This entry is still under development and will continue to see updates and content improvements.::"}}]}]}, {"technique_id": "TT1204", "t_findings": [{"capec_id": "CAPEC-560", "c_findings": [{"cwe": "CWE-522", "cves": [{"id": "CVE-2007-0681", "score": ["V31", 9.8, "CRITICAL"], "v2_score": 7.5, "v2_exploitability_score": 10.0, "v2_impact_score": 6.4, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 7.5}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": true, "userInteractionRequired": false}], "description": "profile.php in ExtCalendar 2 and earlier allows remote attackers to change the passwords of arbitrary users without providing the original password, and possibly perform other unauthorized actions, via modified values to register.php.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:extcalendar_project:extcalendar:*:*:*:*:*:*:*:*", "published": "2007-02-03T01:28:00.000", "last_modified": "2024-02-09T03:13:40.213"}, {"id": "CVE-2000-0944", "score": ["V31", 9.8, "CRITICAL"], "v2_score": 7.5, "v2_exploitability_score": 10.0, "v2_impact_score": 6.4, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 7.5}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": true, "userInteractionRequired": false}], "description": "CGI Script Center News Update 1.1 does not properly validate the original news administration password during a password change operation, which allows remote attackers to modify the password without knowing the original password.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:cgi:script_center_news_update:1.1:*:*:*:*:*:*:*", "published": "2000-12-19T05:00:00.000", "last_modified": "2024-02-09T03:15:18.653"}, {"id": "CVE-2005-3435", "score": ["V31", 9.8, "CRITICAL"], "v2_score": 7.5, "v2_exploitability_score": 10.0, "v2_impact_score": 6.4, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 7.5}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": true, "userInteractionRequired": false}], "description": "admin_news.php in Archilles Newsworld up to 1.3.0 allows attackers to bypass authentication by obtaining the password hash for another user, for example through another Newsworld vulnerability, and specifying the hash in the pwd argument.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:archilles:newsworld:*:*:*:*:*:*:*:*", "published": "2005-11-02T11:02:00.000", "last_modified": "2024-02-09T03:13:36.147"}, {"id": "CVE-2005-0408", "score": ["V31", 9.8, "CRITICAL"], "v2_score": 7.5, "v2_exploitability_score": 10.0, "v2_impact_score": 6.4, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 7.5}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": true, "userInteractionRequired": false}], "description": "CitrusDB 0.3.6 and earlier generates easily predictable MD5 hashes of the user name for the id_hash cookie, which allows remote attackers to bypass authentication and gain privileges by calculating the MD5 checksum of the user name combined with the \"boogaadeeboo\" string, which is hard-coded in the $hidden_hash variable.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:citrusdb:citrusdb:*:*:*:*:*:*:*:*", "published": "2005-02-14T05:00:00.000", "last_modified": "2024-02-09T03:13:25.890"}], "cwe_info": {"cwe_id": "522", "name": "Insufficiently Protected Credentials", "weakness_abstraction": "Class", "status": "Incomplete", "description": "The product transmits or stores authentication credentials, but it uses an insecure method that is susceptible to unauthorized interception and/or retrieval.", "extended_description": "", "related_weaknesses": "::NATURE:ChildOf:CWE ID:287:VIEW ID:1000:ORDINAL:Primary::NATURE:ChildOf:CWE ID:287:VIEW ID:1003:ORDINAL:Primary::NATURE:ChildOf:CWE ID:668:VIEW ID:1000::", "weakness_ordinalities": "", "applicable_platforms": "", "background_details": "", "alternate_terms": "", "modes_of_introduction": "::PHASE:Architecture and Design:NOTE:COMMISSION: This weakness refers to an incorrect design related to an architectural security tactic.::PHASE:Implementation::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Access Control:IMPACT:Gain Privileges or Assume Identity:NOTE:An attacker could gain access to user accounts and access sensitive data used by the user accounts.::", "detection_methods": "", "potential_mitigations": "::PHASE:Architecture and Design:DESCRIPTION:Use an appropriate security mechanism to protect the credentials.::PHASE:Architecture and Design:DESCRIPTION:Make appropriate use of cryptography to protect the credentials.::PHASE:Implementation:DESCRIPTION:Use industry standards to protect the credentials (e.g. LDAP, keystore, etc.).::", "observed_examples": "::REFERENCE:CVE-2007-0681:DESCRIPTION:Web app allows remote attackers to change the passwords of arbitrary users without providing the original password, and possibly perform other unauthorized actions.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2007-0681::REFERENCE:CVE-2000-0944:DESCRIPTION:Web application password change utility doesn't check the original password.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2000-0944::REFERENCE:CVE-2005-3435:DESCRIPTION:product authentication succeeds if user-provided MD5 hash matches the hash in its database; this can be subjected to replay attacks.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2005-3435::REFERENCE:CVE-2005-0408:DESCRIPTION:chain: product generates predictable MD5 hashes using a constant value combined with username, allowing authentication bypass.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2005-0408::", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "::TAXONOMY NAME:OWASP Top Ten 2007:ENTRY ID:A7:ENTRY NAME:Broken Authentication and Session Management:MAPPING FIT:CWE More Specific::TAXONOMY NAME:OWASP Top Ten 2004:ENTRY ID:A3:ENTRY NAME:Broken Authentication and Session Management:MAPPING FIT:CWE More Specific::", "related_attack_patterns": "::102::474::50::509::551::555::560::561::600::644::645::652::653::", "notes": ""}}, {"cwe": "CWE-307", "cves": [{"id": "CVE-1999-1152", "score": ["V31", 7.5, "HIGH"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "Compaq/Microcom 6000 Access Integrator does not disconnect a client after a certain number of failed login attempts, which allows remote attackers to guess usernames or passwords via a brute force attack.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:o:compaq:microcom_6000_firmware:-:*:*:*:*:*:*:*", "published": "1998-06-03T04:00:00.000", "last_modified": "2024-02-09T03:15:08.037"}, {"id": "CVE-2001-1291", "score": ["V31", 9.8, "CRITICAL"], "v2_score": 10.0, "v2_exploitability_score": 10.0, "v2_impact_score": 10.0, "v2_vector": "AV:N/AC:L/Au:N/C:C/I:C/A:C", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:C/I:C/A:C", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "COMPLETE", "integrityImpact": "COMPLETE", "availabilityImpact": "COMPLETE", "baseScore": 10.0}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 10.0, "acInsufInfo": false, "obtainAllPrivilege": true, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "The telnet server for 3Com hardware such as PS40 SuperStack II does not delay or disconnect remote attackers who provide an incorrect username or password, which makes it easier to break into the server via brute force password guessing.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:o:3com:superstack_ii_ps_hub_40_firmware:-:*:*:*:*:*:*:*", "published": "2001-07-12T04:00:00.000", "last_modified": "2024-02-09T03:14:12.003"}, {"id": "CVE-2001-0395", "score": ["V31", 9.8, "CRITICAL"], "v2_score": 7.5, "v2_exploitability_score": 10.0, "v2_impact_score": 6.4, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 7.5}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "Lightwave ConsoleServer 3200 does not disconnect users after unsuccessful login attempts, which could allow remote attackers to conduct brute force password guessing.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:o:lightwavemo:consoleserver_3200_firmware:-:*:*:*:*:*:*:*", "published": "2001-07-02T04:00:00.000", "last_modified": "2024-02-09T03:14:07.077"}, {"id": "CVE-2001-1339", "score": ["V31", 9.8, "CRITICAL"], "v2_score": 7.5, "v2_exploitability_score": 10.0, "v2_impact_score": 6.4, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 7.5}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": true, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "Beck IPC GmbH IPC@CHIP telnet service does not delay or disconnect users from the service when bad passwords are entered, which makes it easier for remote attackers to conduct brute force password guessing attacks.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:o:anybus:ipc\\@chip_firmware:-:*:*:*:*:*:*:*", "published": "2001-05-24T04:00:00.000", "last_modified": "2024-02-09T03:15:26.757"}, {"id": "CVE-2002-0628", "score": ["V31", 7.5, "HIGH"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "The Telnet service for Polycom ViewStation before 7.2.4 does not restrict the number of failed login attempts, which makes it easier for remote attackers to guess usernames and passwords via a brute force attack.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:h:polycom:viewstation_128:6.5.1:*:*:*:*:*:*:*", "published": "2003-01-07T05:00:00.000", "last_modified": "2024-02-09T03:14:16.373"}, {"id": "CVE-1999-1324", "score": ["V31", 9.8, "CRITICAL"], "v2_score": 7.5, "v2_exploitability_score": 10.0, "v2_impact_score": 6.4, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 7.5}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "VAXstations running Open VMS 5.3 through 5.5-2 with VMS DECwindows or MOTIF do not properly disable access to user accounts that exceed the break-in limit threshold for failed login attempts, which makes it easier for attackers to conduct brute force password guessing.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:o:hp:openvms_vax:*:*:*:*:*:*:*:*", "published": "1999-12-31T05:00:00.000", "last_modified": "2024-02-09T03:15:13.613"}], "cwe_info": {"cwe_id": "307", "name": "Improper Restriction of Excessive Authentication Attempts", "weakness_abstraction": "Base", "status": "Draft", "description": "The software does not implement sufficient measures to prevent multiple failed authentication attempts within in a short time frame, making it more susceptible to brute force attacks.", "extended_description": "", "related_weaknesses": "::NATURE:ChildOf:CWE ID:287:VIEW ID:1000:ORDINAL:Primary::NATURE:ChildOf:CWE ID:287:VIEW ID:1003:ORDINAL:Primary::NATURE:ChildOf:CWE ID:799:VIEW ID:1000::", "weakness_ordinalities": "", "applicable_platforms": "::LANGUAGE CLASS:Language-Independent:LANGUAGE PREVALENCE:Undetermined::", "background_details": "", "alternate_terms": "", "modes_of_introduction": "::PHASE:Architecture and Design:NOTE:COMMISSION: This weakness refers to an incorrect design related to an architectural security tactic.::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Access Control:IMPACT:Bypass Protection Mechanism:NOTE:An attacker could perform an arbitrary number of authentication attempts using different passwords, and eventually gain access to the targeted account.::", "detection_methods": "::METHOD:Dynamic Analysis with Automated Results Interpretation:DESCRIPTION:According to SOAR, the following detection techniques may be useful: Highly cost effective: Web Application Scanner Web Services Scanner Database Scanners Cost effective for partial coverage: Host-based Vulnerability Scanners - Examine configuration for flaws, verifying that audit mechanisms work, ensure host configuration meets certain predefined criteria:EFFECTIVENESS:High::METHOD:Dynamic Analysis with Manual Results Interpretation:DESCRIPTION:According to SOAR, the following detection techniques may be useful: Highly cost effective: Fuzz Tester Framework-based Fuzzer Cost effective for partial coverage: Forced Path Execution:EFFECTIVENESS:High::METHOD:Manual Static Analysis - Source Code:DESCRIPTION:According to SOAR, the following detection techniques may be useful: Highly cost effective: Focused Manual Spotcheck - Focused manual analysis of source Manual Source Code Review (not inspections):EFFECTIVENESS:High::METHOD:Automated Static Analysis - Source Code:DESCRIPTION:According to SOAR, the following detection techniques may be useful: Cost effective for partial coverage: Source code Weakness Analyzer Context-configured Source Code Weakness Analyzer:EFFECTIVENESS:SOAR Partial::METHOD:Automated Static Analysis:DESCRIPTION:According to SOAR, the following detection techniques may be useful: Cost effective for partial coverage: Configuration Checker:EFFECTIVENESS:SOAR Partial::METHOD:Architecture or Design Review:DESCRIPTION:According to SOAR, the following detection techniques may be useful: Highly cost effective: Formal Methods / Correct-By-Construction Cost effective for partial coverage: Inspection (IEEE 1028 standard) (can apply to requirements, design, source code, etc.):EFFECTIVENESS:High::", "potential_mitigations": "::PHASE:Architecture and Design:DESCRIPTION:Common protection mechanisms include: Disconnecting the user after a small number of failed attempts Implementing a timeout Locking out a targeted account Requiring a computational task on the user's part.::PHASE:Architecture and Design:STRATEGY:Libraries or Frameworks:DESCRIPTION:Use a vetted library or framework that does not allow this weakness to occur or provides constructs that make this weakness easier to avoid. Consider using libraries with authentication capabilities such as OpenSSL or the ESAPI Authenticator. [REF-45]::", "observed_examples": "::REFERENCE:CVE-1999-1152:DESCRIPTION:Product does not disconnect or timeout after multiple failed logins.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-1999-1152::REFERENCE:CVE-2001-1291:DESCRIPTION:Product does not disconnect or timeout after multiple failed logins.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2001-1291::REFERENCE:CVE-2001-0395:DESCRIPTION:Product does not disconnect or timeout after multiple failed logins.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2001-0395::REFERENCE:CVE-2001-1339:DESCRIPTION:Product does not disconnect or timeout after multiple failed logins.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2001-1339::REFERENCE:CVE-2002-0628:DESCRIPTION:Product does not disconnect or timeout after multiple failed logins.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2002-0628::REFERENCE:CVE-1999-1324:DESCRIPTION:User accounts not disabled when they exceed a threshold; possibly a resultant problem.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-1999-1324::", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "::TAXONOMY NAME:PLOVER:ENTRY ID:AUTHENT.MULTFAIL:ENTRY NAME:Multiple Failed Authentication Attempts not Prevented::TAXONOMY NAME:Software Fault Patterns:ENTRY ID:SFP34:ENTRY NAME:Unrestricted authentication::", "related_attack_patterns": "::16::49::560::565::600::652::653::", "notes": ""}}, {"cwe": "CWE-308", "cves": [], "cwe_info": {"cwe_id": "308", "name": "Use of Single-factor Authentication", "weakness_abstraction": "Base", "status": "Draft", "description": "The use of single-factor authentication can lead to unnecessary risk of compromise when compared with the benefits of a dual-factor authentication scheme.", "extended_description": "While the use of multiple authentication schemes is simply piling on more complexity on top of authentication, it is inestimably valuable to have such measures of redundancy. The use of weak, reused, and common passwords is rampant on the internet. Without the added protection of multiple authentication schemes, a single mistake can result in the compromise of an account. For this reason, if multiple schemes are possible and also easy to use, they should be implemented and required.", "related_weaknesses": "::NATURE:ChildOf:CWE ID:287:VIEW ID:1000:ORDINAL:Primary::NATURE:ChildOf:CWE ID:654:VIEW ID:1000::NATURE:PeerOf:CWE ID:309:VIEW ID:1000::", "weakness_ordinalities": "", "applicable_platforms": "::LANGUAGE CLASS:Language-Independent:LANGUAGE PREVALENCE:Undetermined::", "background_details": "", "alternate_terms": "", "modes_of_introduction": "::PHASE:Architecture and Design:NOTE:COMMISSION: This weakness refers to an incorrect design related to an architectural security tactic.::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Access Control:IMPACT:Bypass Protection Mechanism:NOTE:If the secret in a single-factor authentication scheme gets compromised, full authentication is possible.::", "detection_methods": "", "potential_mitigations": "::PHASE:Architecture and Design:DESCRIPTION:Use multiple independent authentication schemes, which ensures that -- if one of the methods is compromised -- the system itself is still likely safe from compromise.::", "observed_examples": "", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "::TAXONOMY NAME:CLASP:ENTRY NAME:Using single-factor authentication::", "related_attack_patterns": "::16::49::509::55::555::560::561::565::600::644::645::652::653::70::", "notes": ""}}, {"cwe": "CWE-309", "cves": [], "cwe_info": {"cwe_id": "309", "name": "Use of Password System for Primary Authentication", "weakness_abstraction": "Base", "status": "Draft", "description": "The use of password systems as the primary means of authentication may be subject to several flaws or shortcomings, each reducing the effectiveness of the mechanism.", "extended_description": "", "related_weaknesses": "::NATURE:ChildOf:CWE ID:287:VIEW ID:1000:ORDINAL:Primary::NATURE:ChildOf:CWE ID:654:VIEW ID:1000::NATURE:PeerOf:CWE ID:308:VIEW ID:1000::", "weakness_ordinalities": "", "applicable_platforms": "::LANGUAGE CLASS:Language-Independent:LANGUAGE PREVALENCE:Undetermined::", "background_details": "::Password systems are the simplest and most ubiquitous authentication mechanisms. However, they are subject to such well known attacks,and such frequent compromise that their use in the most simple implementation is not practical.::", "alternate_terms": "", "modes_of_introduction": "::PHASE:Architecture and Design::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Access Control:IMPACT:Bypass Protection Mechanism:IMPACT:Gain Privileges or Assume Identity:NOTE:A password authentication mechanism error will almost always result in attackers being authorized as valid users.::", "detection_methods": "", "potential_mitigations": "::PHASE:Architecture and Design:DESCRIPTION:In order to protect password systems from compromise, the following should be noted: Passwords should be stored safely to prevent insider attack and to ensure that -- if a system is compromised -- the passwords are not retrievable. Due to password reuse, this information may be useful in the compromise of other systems these users work with. In order to protect these passwords, they should be stored encrypted, in a non-reversible state, such that the original text password cannot be extracted from the stored value. Password aging should be strictly enforced to ensure that passwords do not remain unchanged for long periods of time. The longer a password remains in use, the higher the probability that it has been compromised. For this reason, passwords should require refreshing periodically, and users should be informed of the risk of passwords which remain in use for too long. Password strength should be enforced intelligently. Rather than restrict passwords to specific content, or specific length, users should be encouraged to use upper and lower case letters, numbers, and symbols in their passwords. The system should also ensure that no passwords are derived from dictionary words.::PHASE:Architecture and Design:DESCRIPTION:Use a zero-knowledge password protocol, such as SRP.::PHASE:Architecture and Design:DESCRIPTION:Ensure that passwords are stored safely and are not reversible.::PHASE:Architecture and Design:DESCRIPTION:Implement password aging functionality that requires passwords be changed after a certain point.::PHASE:Architecture and Design:DESCRIPTION:Use a mechanism for determining the strength of a password and notify the user of weak password use.::PHASE:Architecture and Design:DESCRIPTION:Inform the user of why password protections are in place, how they work to protect data integrity, and why it is important to heed their warnings.::", "observed_examples": "", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "::TAXONOMY NAME:CLASP:ENTRY NAME:Using password systems::TAXONOMY NAME:OWASP Top Ten 2004:ENTRY ID:A3:ENTRY NAME:Broken Authentication and Session Management:MAPPING FIT:CWE More Specific::", "related_attack_patterns": "::16::49::509::55::555::560::561::565::600::652::653::70::", "notes": ""}}, {"cwe": "CWE-262", "cves": [], "cwe_info": {"cwe_id": "262", "name": "Not Using Password Aging", "weakness_abstraction": "Base", "status": "Draft", "description": "If no mechanism is in place for managing password aging, users will have no incentive to update passwords in a timely manner.", "extended_description": "Security experts have often recommended that users change their passwords regularly and avoid reusing passwords. Although this can be an effective mitigation, if the expiration window is too short, it can cause users to generate poor or predictable passwords. As such, it is important to discourage creating similar passwords. It is also useful to have a password aging mechanism that notifies users when passwords are considered old and requests that they replace them with new, strong passwords. Companion documentation which stresses how important this practice is can help users understand and better support this approach.", "related_weaknesses": "::NATURE:ChildOf:CWE ID:287:VIEW ID:1000:ORDINAL:Primary::NATURE:ChildOf:CWE ID:404:VIEW ID:1000::NATURE:PeerOf:CWE ID:309:VIEW ID:1000::NATURE:PeerOf:CWE ID:263:VIEW ID:1000::NATURE:PeerOf:CWE ID:324:VIEW ID:1000::", "weakness_ordinalities": "", "applicable_platforms": "::LANGUAGE CLASS:Language-Independent:LANGUAGE PREVALENCE:Undetermined::", "background_details": "", "alternate_terms": "", "modes_of_introduction": "::PHASE:Architecture and Design:NOTE:COMMISSION: This weakness refers to an incorrect design related to an architectural security tactic.::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Access Control:IMPACT:Gain Privileges or Assume Identity:NOTE:As passwords age, the probability that they are compromised grows.::", "detection_methods": "", "potential_mitigations": "::PHASE:Architecture and Design:DESCRIPTION:As part of a product's design, require users to change their passwords regularly and avoid reusing previous passwords.::", "observed_examples": "", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "::TAXONOMY NAME:CLASP:ENTRY NAME:Not allowing password aging::", "related_attack_patterns": "::16::49::509::55::555::560::561::565::600::652::653::70::", "notes": ""}}, {"cwe": "CWE-263", "cves": [], "cwe_info": {"cwe_id": "263", "name": "Password Aging with Long Expiration", "weakness_abstraction": "Base", "status": "Draft", "description": "Allowing password aging to occur unchecked can result in the possibility of diminished password integrity.", "extended_description": "Just as neglecting to include functionality for the management of password aging is dangerous, so is allowing password aging to continue unchecked. Passwords must be given a maximum life span, after which a user is required to update with a new and different password.", "related_weaknesses": "::NATURE:ChildOf:CWE ID:287:VIEW ID:1000:ORDINAL:Primary::NATURE:ChildOf:CWE ID:404:VIEW ID:1000::", "weakness_ordinalities": "", "applicable_platforms": "::LANGUAGE CLASS:Language-Independent:LANGUAGE PREVALENCE:Undetermined::", "background_details": "", "alternate_terms": "", "modes_of_introduction": "::PHASE:Architecture and Design:NOTE:COMMISSION: This weakness refers to an incorrect design related to an architectural security tactic.::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Access Control:IMPACT:Gain Privileges or Assume Identity:NOTE:As passwords age, the probability that they are compromised grows.::", "detection_methods": "", "potential_mitigations": "::PHASE:Architecture and Design:DESCRIPTION:Ensure that password aging is limited so that there is a defined maximum age for passwords and so that the user is notified several times leading up to the password expiration.::", "observed_examples": "", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "::TAXONOMY NAME:CLASP:ENTRY NAME:Allowing password aging::", "related_attack_patterns": "::16::49::509::55::555::560::561::565::600::652::653::70::", "notes": ""}}, {"cwe": "CWE-654", "cves": [], "cwe_info": {"cwe_id": "654", "name": "Reliance on a Single Factor in a Security Decision", "weakness_abstraction": "Base", "status": "Draft", "description": "A protection mechanism relies exclusively, or to a large extent, on the evaluation of a single condition or the integrity of a single object or entity in order to make a decision about granting access to restricted resources or functionality.", "extended_description": "", "related_weaknesses": "::NATURE:ChildOf:CWE ID:657:VIEW ID:1000:ORDINAL:Primary::NATURE:ChildOf:CWE ID:693:VIEW ID:1000::", "weakness_ordinalities": "::ORDINALITY:Primary::", "applicable_platforms": "::LANGUAGE CLASS:Language-Independent:LANGUAGE PREVALENCE:Undetermined::", "background_details": "", "alternate_terms": "::TERM:Separation of Privilege:DESCRIPTION:Some people and publications use the term Separation of Privilege to describe this weakness, but this term has dual meanings in current usage. While this entry is closely associated with the original definition of Separation of Privilege by Saltzer and Schroeder, others use the same term to describe poor compartmentalization (CWE-653). Because there are multiple interpretations, use of the Separation of Privilege term is discouraged.::", "modes_of_introduction": "::PHASE:Architecture and Design::PHASE:Implementation::PHASE:Operation::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Access Control:IMPACT:Gain Privileges or Assume Identity:NOTE:If the single factor is compromised (e.g. by theft or spoofing), then the integrity of the entire security mechanism can be violated with respect to the user that is identified by that factor.::SCOPE:Non-Repudiation:IMPACT:Hide Activities:NOTE:It can become difficult or impossible for the product to be able to distinguish between legitimate activities by the entity who provided the factor, versus illegitimate activities by an attacker.::", "detection_methods": "", "potential_mitigations": "::PHASE:Architecture and Design:DESCRIPTION:Use multiple simultaneous checks before granting access to critical operations or granting critical privileges. A weaker but helpful mitigation is to use several successive checks (multiple layers of security).::PHASE:Architecture and Design:DESCRIPTION:Use redundant access rules on different choke points (e.g., firewalls).::", "observed_examples": "", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "", "related_attack_patterns": "::16::274::49::55::560::565::600::652::653::70::", "notes": "::TYPE:Maintenance:NOTE:This entry is closely associated with the term Separation of Privilege. This term is used in several different ways in the industry, but they generally combine two closely related principles: compartmentalization (CWE-653) and using only one factor in a security decision (this entry). Proper compartmentalization implicitly introduces multiple factors into a security decision, but there can be cases in which multiple factors are required for authentication or other mechanisms that do not involve compartmentalization, such as performing all required checks on a submitted certificate. It is likely that CWE-653 and CWE-654 will provoke further discussion.::"}}, {"cwe": "CWE-1273", "cves": [], "cwe_info": {"cwe_id": "1273", "name": "Device Unlock Credential Sharing", "weakness_abstraction": "Base", "status": "Incomplete", "description": "The credentials necessary for unlocking a device are shared across multiple parties and may expose sensitive information.", "extended_description": "\u201cUnlocking a device\u201d often means activating certain, unadvertised, debug and manufacturer-specific capabilities of a device using sensitive credentials. Unlocking a device might be necessary for the purpose of troubleshooting device problems. For example, suppose a device contains the ability to dump the content of the full system memory by disabling the memory-protection mechanisms. Since this is a highly security-sensitive capability, this capability is \u201clocked\u201d in the production part. Unless the device gets unlocked by supplying the proper credentials the debug capabilities are not available. For cases where the chip designer, chip manufacturer (fabricator), and manufacturing and assembly testers are the all employed by the same company, the compromise of the credentials are greatly reduced. However, when the chip designer is employed by one company, the chip manufacturer is employed by another company (a foundry), and the assemblers and testers are employed by yet a third company. Since these different companies will need to perform various tests on the device to verify correct device function, they all need to share the unlock key. Unfortunately, the level of secrecy and policy might be quite different at each company, greatly increasing the risk of sensitive credentials being compromised.", "related_weaknesses": "::NATURE:ChildOf:CWE ID:200:VIEW ID:1000:ORDINAL:Primary::", "weakness_ordinalities": "", "applicable_platforms": "::LANGUAGE NAME:VHDL:LANGUAGE PREVALENCE:Undetermined::LANGUAGE NAME:Verilog:LANGUAGE PREVALENCE:Undetermined::LANGUAGE CLASS:Compiled:LANGUAGE PREVALENCE:Undetermined::OPERATING SYSTEM CLASS:OS-Independent:OPERATING SYSTEM PREVALENCE:Undetermined::ARCHITECTURE CLASS:Architecture-Independent:ARCHITECTURE PREVALENCE:Undetermined::TECHNOLOGY NAME:Other:TECHNOLOGY PREVALENCE:Undetermined::TECHNOLOGY CLASS:Technology-Independent:TECHNOLOGY PREVALENCE:Undetermined::", "background_details": "", "alternate_terms": "", "modes_of_introduction": "::PHASE:Integration::PHASE:Manufacturing::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Confidentiality:SCOPE:Integrity:SCOPE:Availability:SCOPE:Access Control:SCOPE:Accountability:SCOPE:Authentication:SCOPE:Authorization:SCOPE:Non-Repudiation:IMPACT:Modify Memory:IMPACT:Read Memory:IMPACT:Modify Files or Directories:IMPACT:Read Files or Directories:IMPACT:Modify Application Data:IMPACT:Execute Unauthorized Code or Commands:IMPACT:Gain Privileges or Assume Identity:IMPACT:Bypass Protection Mechanism:NOTE:Once unlock credentials are compromised, an attacker can use the credentials to unlock the device and gain unauthorized access to the hidden functionalities protected by those credentials.::", "detection_methods": "", "potential_mitigations": "::PHASE:Integration:DESCRIPTION:Ensure the unlock credentials are shared with the minimum number of parties and with utmost secrecy. To limit the risk associated with compromised credentials, where possible, the credentials should be part-specific.::PHASE:Manufacturing:DESCRIPTION:Ensure the unlock credentials are shared with the minimum number of parties and with utmost secrecy. To limit the risk associated with compromised credentials, where possible, the credentials should be part-specific.::", "observed_examples": "", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "", "related_attack_patterns": "::560::", "notes": "::TYPE:Maintenance:NOTE:This entry is still under development and will continue to see updates and content improvements.::"}}]}]}, {"technique_id": "T1543", "t_findings": [{"capec_id": "CAPEC-560", "c_findings": [{"cwe": "CWE-522", "cves": [{"id": "CVE-2007-0681", "score": ["V31", 9.8, "CRITICAL"], "v2_score": 7.5, "v2_exploitability_score": 10.0, "v2_impact_score": 6.4, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 7.5}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": true, "userInteractionRequired": false}], "description": "profile.php in ExtCalendar 2 and earlier allows remote attackers to change the passwords of arbitrary users without providing the original password, and possibly perform other unauthorized actions, via modified values to register.php.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:extcalendar_project:extcalendar:*:*:*:*:*:*:*:*", "published": "2007-02-03T01:28:00.000", "last_modified": "2024-02-09T03:13:40.213"}, {"id": "CVE-2000-0944", "score": ["V31", 9.8, "CRITICAL"], "v2_score": 7.5, "v2_exploitability_score": 10.0, "v2_impact_score": 6.4, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 7.5}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": true, "userInteractionRequired": false}], "description": "CGI Script Center News Update 1.1 does not properly validate the original news administration password during a password change operation, which allows remote attackers to modify the password without knowing the original password.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:cgi:script_center_news_update:1.1:*:*:*:*:*:*:*", "published": "2000-12-19T05:00:00.000", "last_modified": "2024-02-09T03:15:18.653"}, {"id": "CVE-2005-3435", "score": ["V31", 9.8, "CRITICAL"], "v2_score": 7.5, "v2_exploitability_score": 10.0, "v2_impact_score": 6.4, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 7.5}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": true, "userInteractionRequired": false}], "description": "admin_news.php in Archilles Newsworld up to 1.3.0 allows attackers to bypass authentication by obtaining the password hash for another user, for example through another Newsworld vulnerability, and specifying the hash in the pwd argument.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:archilles:newsworld:*:*:*:*:*:*:*:*", "published": "2005-11-02T11:02:00.000", "last_modified": "2024-02-09T03:13:36.147"}, {"id": "CVE-2005-0408", "score": ["V31", 9.8, "CRITICAL"], "v2_score": 7.5, "v2_exploitability_score": 10.0, "v2_impact_score": 6.4, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 7.5}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": true, "userInteractionRequired": false}], "description": "CitrusDB 0.3.6 and earlier generates easily predictable MD5 hashes of the user name for the id_hash cookie, which allows remote attackers to bypass authentication and gain privileges by calculating the MD5 checksum of the user name combined with the \"boogaadeeboo\" string, which is hard-coded in the $hidden_hash variable.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:citrusdb:citrusdb:*:*:*:*:*:*:*:*", "published": "2005-02-14T05:00:00.000", "last_modified": "2024-02-09T03:13:25.890"}], "cwe_info": {"cwe_id": "522", "name": "Insufficiently Protected Credentials", "weakness_abstraction": "Class", "status": "Incomplete", "description": "The product transmits or stores authentication credentials, but it uses an insecure method that is susceptible to unauthorized interception and/or retrieval.", "extended_description": "", "related_weaknesses": "::NATURE:ChildOf:CWE ID:287:VIEW ID:1000:ORDINAL:Primary::NATURE:ChildOf:CWE ID:287:VIEW ID:1003:ORDINAL:Primary::NATURE:ChildOf:CWE ID:668:VIEW ID:1000::", "weakness_ordinalities": "", "applicable_platforms": "", "background_details": "", "alternate_terms": "", "modes_of_introduction": "::PHASE:Architecture and Design:NOTE:COMMISSION: This weakness refers to an incorrect design related to an architectural security tactic.::PHASE:Implementation::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Access Control:IMPACT:Gain Privileges or Assume Identity:NOTE:An attacker could gain access to user accounts and access sensitive data used by the user accounts.::", "detection_methods": "", "potential_mitigations": "::PHASE:Architecture and Design:DESCRIPTION:Use an appropriate security mechanism to protect the credentials.::PHASE:Architecture and Design:DESCRIPTION:Make appropriate use of cryptography to protect the credentials.::PHASE:Implementation:DESCRIPTION:Use industry standards to protect the credentials (e.g. LDAP, keystore, etc.).::", "observed_examples": "::REFERENCE:CVE-2007-0681:DESCRIPTION:Web app allows remote attackers to change the passwords of arbitrary users without providing the original password, and possibly perform other unauthorized actions.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2007-0681::REFERENCE:CVE-2000-0944:DESCRIPTION:Web application password change utility doesn't check the original password.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2000-0944::REFERENCE:CVE-2005-3435:DESCRIPTION:product authentication succeeds if user-provided MD5 hash matches the hash in its database; this can be subjected to replay attacks.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2005-3435::REFERENCE:CVE-2005-0408:DESCRIPTION:chain: product generates predictable MD5 hashes using a constant value combined with username, allowing authentication bypass.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2005-0408::", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "::TAXONOMY NAME:OWASP Top Ten 2007:ENTRY ID:A7:ENTRY NAME:Broken Authentication and Session Management:MAPPING FIT:CWE More Specific::TAXONOMY NAME:OWASP Top Ten 2004:ENTRY ID:A3:ENTRY NAME:Broken Authentication and Session Management:MAPPING FIT:CWE More Specific::", "related_attack_patterns": "::102::474::50::509::551::555::560::561::600::644::645::652::653::", "notes": ""}}, {"cwe": "CWE-307", "cves": [{"id": "CVE-1999-1152", "score": ["V31", 7.5, "HIGH"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "Compaq/Microcom 6000 Access Integrator does not disconnect a client after a certain number of failed login attempts, which allows remote attackers to guess usernames or passwords via a brute force attack.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:o:compaq:microcom_6000_firmware:-:*:*:*:*:*:*:*", "published": "1998-06-03T04:00:00.000", "last_modified": "2024-02-09T03:15:08.037"}, {"id": "CVE-2001-1291", "score": ["V31", 9.8, "CRITICAL"], "v2_score": 10.0, "v2_exploitability_score": 10.0, "v2_impact_score": 10.0, "v2_vector": "AV:N/AC:L/Au:N/C:C/I:C/A:C", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:C/I:C/A:C", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "COMPLETE", "integrityImpact": "COMPLETE", "availabilityImpact": "COMPLETE", "baseScore": 10.0}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 10.0, "acInsufInfo": false, "obtainAllPrivilege": true, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "The telnet server for 3Com hardware such as PS40 SuperStack II does not delay or disconnect remote attackers who provide an incorrect username or password, which makes it easier to break into the server via brute force password guessing.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:o:3com:superstack_ii_ps_hub_40_firmware:-:*:*:*:*:*:*:*", "published": "2001-07-12T04:00:00.000", "last_modified": "2024-02-09T03:14:12.003"}, {"id": "CVE-2001-0395", "score": ["V31", 9.8, "CRITICAL"], "v2_score": 7.5, "v2_exploitability_score": 10.0, "v2_impact_score": 6.4, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 7.5}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "Lightwave ConsoleServer 3200 does not disconnect users after unsuccessful login attempts, which could allow remote attackers to conduct brute force password guessing.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:o:lightwavemo:consoleserver_3200_firmware:-:*:*:*:*:*:*:*", "published": "2001-07-02T04:00:00.000", "last_modified": "2024-02-09T03:14:07.077"}, {"id": "CVE-2001-1339", "score": ["V31", 9.8, "CRITICAL"], "v2_score": 7.5, "v2_exploitability_score": 10.0, "v2_impact_score": 6.4, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 7.5}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": true, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "Beck IPC GmbH IPC@CHIP telnet service does not delay or disconnect users from the service when bad passwords are entered, which makes it easier for remote attackers to conduct brute force password guessing attacks.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:o:anybus:ipc\\@chip_firmware:-:*:*:*:*:*:*:*", "published": "2001-05-24T04:00:00.000", "last_modified": "2024-02-09T03:15:26.757"}, {"id": "CVE-2002-0628", "score": ["V31", 7.5, "HIGH"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "The Telnet service for Polycom ViewStation before 7.2.4 does not restrict the number of failed login attempts, which makes it easier for remote attackers to guess usernames and passwords via a brute force attack.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:h:polycom:viewstation_128:6.5.1:*:*:*:*:*:*:*", "published": "2003-01-07T05:00:00.000", "last_modified": "2024-02-09T03:14:16.373"}, {"id": "CVE-1999-1324", "score": ["V31", 9.8, "CRITICAL"], "v2_score": 7.5, "v2_exploitability_score": 10.0, "v2_impact_score": 6.4, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 7.5}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "VAXstations running Open VMS 5.3 through 5.5-2 with VMS DECwindows or MOTIF do not properly disable access to user accounts that exceed the break-in limit threshold for failed login attempts, which makes it easier for attackers to conduct brute force password guessing.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:o:hp:openvms_vax:*:*:*:*:*:*:*:*", "published": "1999-12-31T05:00:00.000", "last_modified": "2024-02-09T03:15:13.613"}], "cwe_info": {"cwe_id": "307", "name": "Improper Restriction of Excessive Authentication Attempts", "weakness_abstraction": "Base", "status": "Draft", "description": "The software does not implement sufficient measures to prevent multiple failed authentication attempts within in a short time frame, making it more susceptible to brute force attacks.", "extended_description": "", "related_weaknesses": "::NATURE:ChildOf:CWE ID:287:VIEW ID:1000:ORDINAL:Primary::NATURE:ChildOf:CWE ID:287:VIEW ID:1003:ORDINAL:Primary::NATURE:ChildOf:CWE ID:799:VIEW ID:1000::", "weakness_ordinalities": "", "applicable_platforms": "::LANGUAGE CLASS:Language-Independent:LANGUAGE PREVALENCE:Undetermined::", "background_details": "", "alternate_terms": "", "modes_of_introduction": "::PHASE:Architecture and Design:NOTE:COMMISSION: This weakness refers to an incorrect design related to an architectural security tactic.::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Access Control:IMPACT:Bypass Protection Mechanism:NOTE:An attacker could perform an arbitrary number of authentication attempts using different passwords, and eventually gain access to the targeted account.::", "detection_methods": "::METHOD:Dynamic Analysis with Automated Results Interpretation:DESCRIPTION:According to SOAR, the following detection techniques may be useful: Highly cost effective: Web Application Scanner Web Services Scanner Database Scanners Cost effective for partial coverage: Host-based Vulnerability Scanners - Examine configuration for flaws, verifying that audit mechanisms work, ensure host configuration meets certain predefined criteria:EFFECTIVENESS:High::METHOD:Dynamic Analysis with Manual Results Interpretation:DESCRIPTION:According to SOAR, the following detection techniques may be useful: Highly cost effective: Fuzz Tester Framework-based Fuzzer Cost effective for partial coverage: Forced Path Execution:EFFECTIVENESS:High::METHOD:Manual Static Analysis - Source Code:DESCRIPTION:According to SOAR, the following detection techniques may be useful: Highly cost effective: Focused Manual Spotcheck - Focused manual analysis of source Manual Source Code Review (not inspections):EFFECTIVENESS:High::METHOD:Automated Static Analysis - Source Code:DESCRIPTION:According to SOAR, the following detection techniques may be useful: Cost effective for partial coverage: Source code Weakness Analyzer Context-configured Source Code Weakness Analyzer:EFFECTIVENESS:SOAR Partial::METHOD:Automated Static Analysis:DESCRIPTION:According to SOAR, the following detection techniques may be useful: Cost effective for partial coverage: Configuration Checker:EFFECTIVENESS:SOAR Partial::METHOD:Architecture or Design Review:DESCRIPTION:According to SOAR, the following detection techniques may be useful: Highly cost effective: Formal Methods / Correct-By-Construction Cost effective for partial coverage: Inspection (IEEE 1028 standard) (can apply to requirements, design, source code, etc.):EFFECTIVENESS:High::", "potential_mitigations": "::PHASE:Architecture and Design:DESCRIPTION:Common protection mechanisms include: Disconnecting the user after a small number of failed attempts Implementing a timeout Locking out a targeted account Requiring a computational task on the user's part.::PHASE:Architecture and Design:STRATEGY:Libraries or Frameworks:DESCRIPTION:Use a vetted library or framework that does not allow this weakness to occur or provides constructs that make this weakness easier to avoid. Consider using libraries with authentication capabilities such as OpenSSL or the ESAPI Authenticator. [REF-45]::", "observed_examples": "::REFERENCE:CVE-1999-1152:DESCRIPTION:Product does not disconnect or timeout after multiple failed logins.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-1999-1152::REFERENCE:CVE-2001-1291:DESCRIPTION:Product does not disconnect or timeout after multiple failed logins.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2001-1291::REFERENCE:CVE-2001-0395:DESCRIPTION:Product does not disconnect or timeout after multiple failed logins.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2001-0395::REFERENCE:CVE-2001-1339:DESCRIPTION:Product does not disconnect or timeout after multiple failed logins.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2001-1339::REFERENCE:CVE-2002-0628:DESCRIPTION:Product does not disconnect or timeout after multiple failed logins.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2002-0628::REFERENCE:CVE-1999-1324:DESCRIPTION:User accounts not disabled when they exceed a threshold; possibly a resultant problem.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-1999-1324::", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "::TAXONOMY NAME:PLOVER:ENTRY ID:AUTHENT.MULTFAIL:ENTRY NAME:Multiple Failed Authentication Attempts not Prevented::TAXONOMY NAME:Software Fault Patterns:ENTRY ID:SFP34:ENTRY NAME:Unrestricted authentication::", "related_attack_patterns": "::16::49::560::565::600::652::653::", "notes": ""}}, {"cwe": "CWE-308", "cves": [], "cwe_info": {"cwe_id": "308", "name": "Use of Single-factor Authentication", "weakness_abstraction": "Base", "status": "Draft", "description": "The use of single-factor authentication can lead to unnecessary risk of compromise when compared with the benefits of a dual-factor authentication scheme.", "extended_description": "While the use of multiple authentication schemes is simply piling on more complexity on top of authentication, it is inestimably valuable to have such measures of redundancy. The use of weak, reused, and common passwords is rampant on the internet. Without the added protection of multiple authentication schemes, a single mistake can result in the compromise of an account. For this reason, if multiple schemes are possible and also easy to use, they should be implemented and required.", "related_weaknesses": "::NATURE:ChildOf:CWE ID:287:VIEW ID:1000:ORDINAL:Primary::NATURE:ChildOf:CWE ID:654:VIEW ID:1000::NATURE:PeerOf:CWE ID:309:VIEW ID:1000::", "weakness_ordinalities": "", "applicable_platforms": "::LANGUAGE CLASS:Language-Independent:LANGUAGE PREVALENCE:Undetermined::", "background_details": "", "alternate_terms": "", "modes_of_introduction": "::PHASE:Architecture and Design:NOTE:COMMISSION: This weakness refers to an incorrect design related to an architectural security tactic.::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Access Control:IMPACT:Bypass Protection Mechanism:NOTE:If the secret in a single-factor authentication scheme gets compromised, full authentication is possible.::", "detection_methods": "", "potential_mitigations": "::PHASE:Architecture and Design:DESCRIPTION:Use multiple independent authentication schemes, which ensures that -- if one of the methods is compromised -- the system itself is still likely safe from compromise.::", "observed_examples": "", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "::TAXONOMY NAME:CLASP:ENTRY NAME:Using single-factor authentication::", "related_attack_patterns": "::16::49::509::55::555::560::561::565::600::644::645::652::653::70::", "notes": ""}}, {"cwe": "CWE-309", "cves": [], "cwe_info": {"cwe_id": "309", "name": "Use of Password System for Primary Authentication", "weakness_abstraction": "Base", "status": "Draft", "description": "The use of password systems as the primary means of authentication may be subject to several flaws or shortcomings, each reducing the effectiveness of the mechanism.", "extended_description": "", "related_weaknesses": "::NATURE:ChildOf:CWE ID:287:VIEW ID:1000:ORDINAL:Primary::NATURE:ChildOf:CWE ID:654:VIEW ID:1000::NATURE:PeerOf:CWE ID:308:VIEW ID:1000::", "weakness_ordinalities": "", "applicable_platforms": "::LANGUAGE CLASS:Language-Independent:LANGUAGE PREVALENCE:Undetermined::", "background_details": "::Password systems are the simplest and most ubiquitous authentication mechanisms. However, they are subject to such well known attacks,and such frequent compromise that their use in the most simple implementation is not practical.::", "alternate_terms": "", "modes_of_introduction": "::PHASE:Architecture and Design::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Access Control:IMPACT:Bypass Protection Mechanism:IMPACT:Gain Privileges or Assume Identity:NOTE:A password authentication mechanism error will almost always result in attackers being authorized as valid users.::", "detection_methods": "", "potential_mitigations": "::PHASE:Architecture and Design:DESCRIPTION:In order to protect password systems from compromise, the following should be noted: Passwords should be stored safely to prevent insider attack and to ensure that -- if a system is compromised -- the passwords are not retrievable. Due to password reuse, this information may be useful in the compromise of other systems these users work with. In order to protect these passwords, they should be stored encrypted, in a non-reversible state, such that the original text password cannot be extracted from the stored value. Password aging should be strictly enforced to ensure that passwords do not remain unchanged for long periods of time. The longer a password remains in use, the higher the probability that it has been compromised. For this reason, passwords should require refreshing periodically, and users should be informed of the risk of passwords which remain in use for too long. Password strength should be enforced intelligently. Rather than restrict passwords to specific content, or specific length, users should be encouraged to use upper and lower case letters, numbers, and symbols in their passwords. The system should also ensure that no passwords are derived from dictionary words.::PHASE:Architecture and Design:DESCRIPTION:Use a zero-knowledge password protocol, such as SRP.::PHASE:Architecture and Design:DESCRIPTION:Ensure that passwords are stored safely and are not reversible.::PHASE:Architecture and Design:DESCRIPTION:Implement password aging functionality that requires passwords be changed after a certain point.::PHASE:Architecture and Design:DESCRIPTION:Use a mechanism for determining the strength of a password and notify the user of weak password use.::PHASE:Architecture and Design:DESCRIPTION:Inform the user of why password protections are in place, how they work to protect data integrity, and why it is important to heed their warnings.::", "observed_examples": "", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "::TAXONOMY NAME:CLASP:ENTRY NAME:Using password systems::TAXONOMY NAME:OWASP Top Ten 2004:ENTRY ID:A3:ENTRY NAME:Broken Authentication and Session Management:MAPPING FIT:CWE More Specific::", "related_attack_patterns": "::16::49::509::55::555::560::561::565::600::652::653::70::", "notes": ""}}, {"cwe": "CWE-262", "cves": [], "cwe_info": {"cwe_id": "262", "name": "Not Using Password Aging", "weakness_abstraction": "Base", "status": "Draft", "description": "If no mechanism is in place for managing password aging, users will have no incentive to update passwords in a timely manner.", "extended_description": "Security experts have often recommended that users change their passwords regularly and avoid reusing passwords. Although this can be an effective mitigation, if the expiration window is too short, it can cause users to generate poor or predictable passwords. As such, it is important to discourage creating similar passwords. It is also useful to have a password aging mechanism that notifies users when passwords are considered old and requests that they replace them with new, strong passwords. Companion documentation which stresses how important this practice is can help users understand and better support this approach.", "related_weaknesses": "::NATURE:ChildOf:CWE ID:287:VIEW ID:1000:ORDINAL:Primary::NATURE:ChildOf:CWE ID:404:VIEW ID:1000::NATURE:PeerOf:CWE ID:309:VIEW ID:1000::NATURE:PeerOf:CWE ID:263:VIEW ID:1000::NATURE:PeerOf:CWE ID:324:VIEW ID:1000::", "weakness_ordinalities": "", "applicable_platforms": "::LANGUAGE CLASS:Language-Independent:LANGUAGE PREVALENCE:Undetermined::", "background_details": "", "alternate_terms": "", "modes_of_introduction": "::PHASE:Architecture and Design:NOTE:COMMISSION: This weakness refers to an incorrect design related to an architectural security tactic.::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Access Control:IMPACT:Gain Privileges or Assume Identity:NOTE:As passwords age, the probability that they are compromised grows.::", "detection_methods": "", "potential_mitigations": "::PHASE:Architecture and Design:DESCRIPTION:As part of a product's design, require users to change their passwords regularly and avoid reusing previous passwords.::", "observed_examples": "", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "::TAXONOMY NAME:CLASP:ENTRY NAME:Not allowing password aging::", "related_attack_patterns": "::16::49::509::55::555::560::561::565::600::652::653::70::", "notes": ""}}, {"cwe": "CWE-263", "cves": [], "cwe_info": {"cwe_id": "263", "name": "Password Aging with Long Expiration", "weakness_abstraction": "Base", "status": "Draft", "description": "Allowing password aging to occur unchecked can result in the possibility of diminished password integrity.", "extended_description": "Just as neglecting to include functionality for the management of password aging is dangerous, so is allowing password aging to continue unchecked. Passwords must be given a maximum life span, after which a user is required to update with a new and different password.", "related_weaknesses": "::NATURE:ChildOf:CWE ID:287:VIEW ID:1000:ORDINAL:Primary::NATURE:ChildOf:CWE ID:404:VIEW ID:1000::", "weakness_ordinalities": "", "applicable_platforms": "::LANGUAGE CLASS:Language-Independent:LANGUAGE PREVALENCE:Undetermined::", "background_details": "", "alternate_terms": "", "modes_of_introduction": "::PHASE:Architecture and Design:NOTE:COMMISSION: This weakness refers to an incorrect design related to an architectural security tactic.::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Access Control:IMPACT:Gain Privileges or Assume Identity:NOTE:As passwords age, the probability that they are compromised grows.::", "detection_methods": "", "potential_mitigations": "::PHASE:Architecture and Design:DESCRIPTION:Ensure that password aging is limited so that there is a defined maximum age for passwords and so that the user is notified several times leading up to the password expiration.::", "observed_examples": "", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "::TAXONOMY NAME:CLASP:ENTRY NAME:Allowing password aging::", "related_attack_patterns": "::16::49::509::55::555::560::561::565::600::652::653::70::", "notes": ""}}, {"cwe": "CWE-654", "cves": [], "cwe_info": {"cwe_id": "654", "name": "Reliance on a Single Factor in a Security Decision", "weakness_abstraction": "Base", "status": "Draft", "description": "A protection mechanism relies exclusively, or to a large extent, on the evaluation of a single condition or the integrity of a single object or entity in order to make a decision about granting access to restricted resources or functionality.", "extended_description": "", "related_weaknesses": "::NATURE:ChildOf:CWE ID:657:VIEW ID:1000:ORDINAL:Primary::NATURE:ChildOf:CWE ID:693:VIEW ID:1000::", "weakness_ordinalities": "::ORDINALITY:Primary::", "applicable_platforms": "::LANGUAGE CLASS:Language-Independent:LANGUAGE PREVALENCE:Undetermined::", "background_details": "", "alternate_terms": "::TERM:Separation of Privilege:DESCRIPTION:Some people and publications use the term Separation of Privilege to describe this weakness, but this term has dual meanings in current usage. While this entry is closely associated with the original definition of Separation of Privilege by Saltzer and Schroeder, others use the same term to describe poor compartmentalization (CWE-653). Because there are multiple interpretations, use of the Separation of Privilege term is discouraged.::", "modes_of_introduction": "::PHASE:Architecture and Design::PHASE:Implementation::PHASE:Operation::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Access Control:IMPACT:Gain Privileges or Assume Identity:NOTE:If the single factor is compromised (e.g. by theft or spoofing), then the integrity of the entire security mechanism can be violated with respect to the user that is identified by that factor.::SCOPE:Non-Repudiation:IMPACT:Hide Activities:NOTE:It can become difficult or impossible for the product to be able to distinguish between legitimate activities by the entity who provided the factor, versus illegitimate activities by an attacker.::", "detection_methods": "", "potential_mitigations": "::PHASE:Architecture and Design:DESCRIPTION:Use multiple simultaneous checks before granting access to critical operations or granting critical privileges. A weaker but helpful mitigation is to use several successive checks (multiple layers of security).::PHASE:Architecture and Design:DESCRIPTION:Use redundant access rules on different choke points (e.g., firewalls).::", "observed_examples": "", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "", "related_attack_patterns": "::16::274::49::55::560::565::600::652::653::70::", "notes": "::TYPE:Maintenance:NOTE:This entry is closely associated with the term Separation of Privilege. This term is used in several different ways in the industry, but they generally combine two closely related principles: compartmentalization (CWE-653) and using only one factor in a security decision (this entry). Proper compartmentalization implicitly introduces multiple factors into a security decision, but there can be cases in which multiple factors are required for authentication or other mechanisms that do not involve compartmentalization, such as performing all required checks on a submitted certificate. It is likely that CWE-653 and CWE-654 will provoke further discussion.::"}}, {"cwe": "CWE-1273", "cves": [], "cwe_info": {"cwe_id": "1273", "name": "Device Unlock Credential Sharing", "weakness_abstraction": "Base", "status": "Incomplete", "description": "The credentials necessary for unlocking a device are shared across multiple parties and may expose sensitive information.", "extended_description": "\u201cUnlocking a device\u201d often means activating certain, unadvertised, debug and manufacturer-specific capabilities of a device using sensitive credentials. Unlocking a device might be necessary for the purpose of troubleshooting device problems. For example, suppose a device contains the ability to dump the content of the full system memory by disabling the memory-protection mechanisms. Since this is a highly security-sensitive capability, this capability is \u201clocked\u201d in the production part. Unless the device gets unlocked by supplying the proper credentials the debug capabilities are not available. For cases where the chip designer, chip manufacturer (fabricator), and manufacturing and assembly testers are the all employed by the same company, the compromise of the credentials are greatly reduced. However, when the chip designer is employed by one company, the chip manufacturer is employed by another company (a foundry), and the assemblers and testers are employed by yet a third company. Since these different companies will need to perform various tests on the device to verify correct device function, they all need to share the unlock key. Unfortunately, the level of secrecy and policy might be quite different at each company, greatly increasing the risk of sensitive credentials being compromised.", "related_weaknesses": "::NATURE:ChildOf:CWE ID:200:VIEW ID:1000:ORDINAL:Primary::", "weakness_ordinalities": "", "applicable_platforms": "::LANGUAGE NAME:VHDL:LANGUAGE PREVALENCE:Undetermined::LANGUAGE NAME:Verilog:LANGUAGE PREVALENCE:Undetermined::LANGUAGE CLASS:Compiled:LANGUAGE PREVALENCE:Undetermined::OPERATING SYSTEM CLASS:OS-Independent:OPERATING SYSTEM PREVALENCE:Undetermined::ARCHITECTURE CLASS:Architecture-Independent:ARCHITECTURE PREVALENCE:Undetermined::TECHNOLOGY NAME:Other:TECHNOLOGY PREVALENCE:Undetermined::TECHNOLOGY CLASS:Technology-Independent:TECHNOLOGY PREVALENCE:Undetermined::", "background_details": "", "alternate_terms": "", "modes_of_introduction": "::PHASE:Integration::PHASE:Manufacturing::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Confidentiality:SCOPE:Integrity:SCOPE:Availability:SCOPE:Access Control:SCOPE:Accountability:SCOPE:Authentication:SCOPE:Authorization:SCOPE:Non-Repudiation:IMPACT:Modify Memory:IMPACT:Read Memory:IMPACT:Modify Files or Directories:IMPACT:Read Files or Directories:IMPACT:Modify Application Data:IMPACT:Execute Unauthorized Code or Commands:IMPACT:Gain Privileges or Assume Identity:IMPACT:Bypass Protection Mechanism:NOTE:Once unlock credentials are compromised, an attacker can use the credentials to unlock the device and gain unauthorized access to the hidden functionalities protected by those credentials.::", "detection_methods": "", "potential_mitigations": "::PHASE:Integration:DESCRIPTION:Ensure the unlock credentials are shared with the minimum number of parties and with utmost secrecy. To limit the risk associated with compromised credentials, where possible, the credentials should be part-specific.::PHASE:Manufacturing:DESCRIPTION:Ensure the unlock credentials are shared with the minimum number of parties and with utmost secrecy. To limit the risk associated with compromised credentials, where possible, the credentials should be part-specific.::", "observed_examples": "", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "", "related_attack_patterns": "::560::", "notes": "::TYPE:Maintenance:NOTE:This entry is still under development and will continue to see updates and content improvements.::"}}]}]}, {"technique_id": "T1542", "t_findings": [{"capec_id": "CAPEC-560", "c_findings": [{"cwe": "CWE-522", "cves": [{"id": "CVE-2007-0681", "score": ["V31", 9.8, "CRITICAL"], "v2_score": 7.5, "v2_exploitability_score": 10.0, "v2_impact_score": 6.4, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 7.5}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": true, "userInteractionRequired": false}], "description": "profile.php in ExtCalendar 2 and earlier allows remote attackers to change the passwords of arbitrary users without providing the original password, and possibly perform other unauthorized actions, via modified values to register.php.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:extcalendar_project:extcalendar:*:*:*:*:*:*:*:*", "published": "2007-02-03T01:28:00.000", "last_modified": "2024-02-09T03:13:40.213"}, {"id": "CVE-2000-0944", "score": ["V31", 9.8, "CRITICAL"], "v2_score": 7.5, "v2_exploitability_score": 10.0, "v2_impact_score": 6.4, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 7.5}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": true, "userInteractionRequired": false}], "description": "CGI Script Center News Update 1.1 does not properly validate the original news administration password during a password change operation, which allows remote attackers to modify the password without knowing the original password.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:cgi:script_center_news_update:1.1:*:*:*:*:*:*:*", "published": "2000-12-19T05:00:00.000", "last_modified": "2024-02-09T03:15:18.653"}, {"id": "CVE-2005-3435", "score": ["V31", 9.8, "CRITICAL"], "v2_score": 7.5, "v2_exploitability_score": 10.0, "v2_impact_score": 6.4, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 7.5}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": true, "userInteractionRequired": false}], "description": "admin_news.php in Archilles Newsworld up to 1.3.0 allows attackers to bypass authentication by obtaining the password hash for another user, for example through another Newsworld vulnerability, and specifying the hash in the pwd argument.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:archilles:newsworld:*:*:*:*:*:*:*:*", "published": "2005-11-02T11:02:00.000", "last_modified": "2024-02-09T03:13:36.147"}, {"id": "CVE-2005-0408", "score": ["V31", 9.8, "CRITICAL"], "v2_score": 7.5, "v2_exploitability_score": 10.0, "v2_impact_score": 6.4, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 7.5}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": true, "userInteractionRequired": false}], "description": "CitrusDB 0.3.6 and earlier generates easily predictable MD5 hashes of the user name for the id_hash cookie, which allows remote attackers to bypass authentication and gain privileges by calculating the MD5 checksum of the user name combined with the \"boogaadeeboo\" string, which is hard-coded in the $hidden_hash variable.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:citrusdb:citrusdb:*:*:*:*:*:*:*:*", "published": "2005-02-14T05:00:00.000", "last_modified": "2024-02-09T03:13:25.890"}], "cwe_info": {"cwe_id": "522", "name": "Insufficiently Protected Credentials", "weakness_abstraction": "Class", "status": "Incomplete", "description": "The product transmits or stores authentication credentials, but it uses an insecure method that is susceptible to unauthorized interception and/or retrieval.", "extended_description": "", "related_weaknesses": "::NATURE:ChildOf:CWE ID:287:VIEW ID:1000:ORDINAL:Primary::NATURE:ChildOf:CWE ID:287:VIEW ID:1003:ORDINAL:Primary::NATURE:ChildOf:CWE ID:668:VIEW ID:1000::", "weakness_ordinalities": "", "applicable_platforms": "", "background_details": "", "alternate_terms": "", "modes_of_introduction": "::PHASE:Architecture and Design:NOTE:COMMISSION: This weakness refers to an incorrect design related to an architectural security tactic.::PHASE:Implementation::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Access Control:IMPACT:Gain Privileges or Assume Identity:NOTE:An attacker could gain access to user accounts and access sensitive data used by the user accounts.::", "detection_methods": "", "potential_mitigations": "::PHASE:Architecture and Design:DESCRIPTION:Use an appropriate security mechanism to protect the credentials.::PHASE:Architecture and Design:DESCRIPTION:Make appropriate use of cryptography to protect the credentials.::PHASE:Implementation:DESCRIPTION:Use industry standards to protect the credentials (e.g. LDAP, keystore, etc.).::", "observed_examples": "::REFERENCE:CVE-2007-0681:DESCRIPTION:Web app allows remote attackers to change the passwords of arbitrary users without providing the original password, and possibly perform other unauthorized actions.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2007-0681::REFERENCE:CVE-2000-0944:DESCRIPTION:Web application password change utility doesn't check the original password.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2000-0944::REFERENCE:CVE-2005-3435:DESCRIPTION:product authentication succeeds if user-provided MD5 hash matches the hash in its database; this can be subjected to replay attacks.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2005-3435::REFERENCE:CVE-2005-0408:DESCRIPTION:chain: product generates predictable MD5 hashes using a constant value combined with username, allowing authentication bypass.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2005-0408::", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "::TAXONOMY NAME:OWASP Top Ten 2007:ENTRY ID:A7:ENTRY NAME:Broken Authentication and Session Management:MAPPING FIT:CWE More Specific::TAXONOMY NAME:OWASP Top Ten 2004:ENTRY ID:A3:ENTRY NAME:Broken Authentication and Session Management:MAPPING FIT:CWE More Specific::", "related_attack_patterns": "::102::474::50::509::551::555::560::561::600::644::645::652::653::", "notes": ""}}, {"cwe": "CWE-307", "cves": [{"id": "CVE-1999-1152", "score": ["V31", 7.5, "HIGH"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "Compaq/Microcom 6000 Access Integrator does not disconnect a client after a certain number of failed login attempts, which allows remote attackers to guess usernames or passwords via a brute force attack.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:o:compaq:microcom_6000_firmware:-:*:*:*:*:*:*:*", "published": "1998-06-03T04:00:00.000", "last_modified": "2024-02-09T03:15:08.037"}, {"id": "CVE-2001-1291", "score": ["V31", 9.8, "CRITICAL"], "v2_score": 10.0, "v2_exploitability_score": 10.0, "v2_impact_score": 10.0, "v2_vector": "AV:N/AC:L/Au:N/C:C/I:C/A:C", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:C/I:C/A:C", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "COMPLETE", "integrityImpact": "COMPLETE", "availabilityImpact": "COMPLETE", "baseScore": 10.0}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 10.0, "acInsufInfo": false, "obtainAllPrivilege": true, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "The telnet server for 3Com hardware such as PS40 SuperStack II does not delay or disconnect remote attackers who provide an incorrect username or password, which makes it easier to break into the server via brute force password guessing.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:o:3com:superstack_ii_ps_hub_40_firmware:-:*:*:*:*:*:*:*", "published": "2001-07-12T04:00:00.000", "last_modified": "2024-02-09T03:14:12.003"}, {"id": "CVE-2001-0395", "score": ["V31", 9.8, "CRITICAL"], "v2_score": 7.5, "v2_exploitability_score": 10.0, "v2_impact_score": 6.4, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 7.5}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "Lightwave ConsoleServer 3200 does not disconnect users after unsuccessful login attempts, which could allow remote attackers to conduct brute force password guessing.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:o:lightwavemo:consoleserver_3200_firmware:-:*:*:*:*:*:*:*", "published": "2001-07-02T04:00:00.000", "last_modified": "2024-02-09T03:14:07.077"}, {"id": "CVE-2001-1339", "score": ["V31", 9.8, "CRITICAL"], "v2_score": 7.5, "v2_exploitability_score": 10.0, "v2_impact_score": 6.4, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 7.5}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": true, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "Beck IPC GmbH IPC@CHIP telnet service does not delay or disconnect users from the service when bad passwords are entered, which makes it easier for remote attackers to conduct brute force password guessing attacks.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:o:anybus:ipc\\@chip_firmware:-:*:*:*:*:*:*:*", "published": "2001-05-24T04:00:00.000", "last_modified": "2024-02-09T03:15:26.757"}, {"id": "CVE-2002-0628", "score": ["V31", 7.5, "HIGH"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "The Telnet service for Polycom ViewStation before 7.2.4 does not restrict the number of failed login attempts, which makes it easier for remote attackers to guess usernames and passwords via a brute force attack.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:h:polycom:viewstation_128:6.5.1:*:*:*:*:*:*:*", "published": "2003-01-07T05:00:00.000", "last_modified": "2024-02-09T03:14:16.373"}, {"id": "CVE-1999-1324", "score": ["V31", 9.8, "CRITICAL"], "v2_score": 7.5, "v2_exploitability_score": 10.0, "v2_impact_score": 6.4, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 7.5}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "VAXstations running Open VMS 5.3 through 5.5-2 with VMS DECwindows or MOTIF do not properly disable access to user accounts that exceed the break-in limit threshold for failed login attempts, which makes it easier for attackers to conduct brute force password guessing.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:o:hp:openvms_vax:*:*:*:*:*:*:*:*", "published": "1999-12-31T05:00:00.000", "last_modified": "2024-02-09T03:15:13.613"}], "cwe_info": {"cwe_id": "307", "name": "Improper Restriction of Excessive Authentication Attempts", "weakness_abstraction": "Base", "status": "Draft", "description": "The software does not implement sufficient measures to prevent multiple failed authentication attempts within in a short time frame, making it more susceptible to brute force attacks.", "extended_description": "", "related_weaknesses": "::NATURE:ChildOf:CWE ID:287:VIEW ID:1000:ORDINAL:Primary::NATURE:ChildOf:CWE ID:287:VIEW ID:1003:ORDINAL:Primary::NATURE:ChildOf:CWE ID:799:VIEW ID:1000::", "weakness_ordinalities": "", "applicable_platforms": "::LANGUAGE CLASS:Language-Independent:LANGUAGE PREVALENCE:Undetermined::", "background_details": "", "alternate_terms": "", "modes_of_introduction": "::PHASE:Architecture and Design:NOTE:COMMISSION: This weakness refers to an incorrect design related to an architectural security tactic.::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Access Control:IMPACT:Bypass Protection Mechanism:NOTE:An attacker could perform an arbitrary number of authentication attempts using different passwords, and eventually gain access to the targeted account.::", "detection_methods": "::METHOD:Dynamic Analysis with Automated Results Interpretation:DESCRIPTION:According to SOAR, the following detection techniques may be useful: Highly cost effective: Web Application Scanner Web Services Scanner Database Scanners Cost effective for partial coverage: Host-based Vulnerability Scanners - Examine configuration for flaws, verifying that audit mechanisms work, ensure host configuration meets certain predefined criteria:EFFECTIVENESS:High::METHOD:Dynamic Analysis with Manual Results Interpretation:DESCRIPTION:According to SOAR, the following detection techniques may be useful: Highly cost effective: Fuzz Tester Framework-based Fuzzer Cost effective for partial coverage: Forced Path Execution:EFFECTIVENESS:High::METHOD:Manual Static Analysis - Source Code:DESCRIPTION:According to SOAR, the following detection techniques may be useful: Highly cost effective: Focused Manual Spotcheck - Focused manual analysis of source Manual Source Code Review (not inspections):EFFECTIVENESS:High::METHOD:Automated Static Analysis - Source Code:DESCRIPTION:According to SOAR, the following detection techniques may be useful: Cost effective for partial coverage: Source code Weakness Analyzer Context-configured Source Code Weakness Analyzer:EFFECTIVENESS:SOAR Partial::METHOD:Automated Static Analysis:DESCRIPTION:According to SOAR, the following detection techniques may be useful: Cost effective for partial coverage: Configuration Checker:EFFECTIVENESS:SOAR Partial::METHOD:Architecture or Design Review:DESCRIPTION:According to SOAR, the following detection techniques may be useful: Highly cost effective: Formal Methods / Correct-By-Construction Cost effective for partial coverage: Inspection (IEEE 1028 standard) (can apply to requirements, design, source code, etc.):EFFECTIVENESS:High::", "potential_mitigations": "::PHASE:Architecture and Design:DESCRIPTION:Common protection mechanisms include: Disconnecting the user after a small number of failed attempts Implementing a timeout Locking out a targeted account Requiring a computational task on the user's part.::PHASE:Architecture and Design:STRATEGY:Libraries or Frameworks:DESCRIPTION:Use a vetted library or framework that does not allow this weakness to occur or provides constructs that make this weakness easier to avoid. Consider using libraries with authentication capabilities such as OpenSSL or the ESAPI Authenticator. [REF-45]::", "observed_examples": "::REFERENCE:CVE-1999-1152:DESCRIPTION:Product does not disconnect or timeout after multiple failed logins.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-1999-1152::REFERENCE:CVE-2001-1291:DESCRIPTION:Product does not disconnect or timeout after multiple failed logins.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2001-1291::REFERENCE:CVE-2001-0395:DESCRIPTION:Product does not disconnect or timeout after multiple failed logins.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2001-0395::REFERENCE:CVE-2001-1339:DESCRIPTION:Product does not disconnect or timeout after multiple failed logins.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2001-1339::REFERENCE:CVE-2002-0628:DESCRIPTION:Product does not disconnect or timeout after multiple failed logins.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2002-0628::REFERENCE:CVE-1999-1324:DESCRIPTION:User accounts not disabled when they exceed a threshold; possibly a resultant problem.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-1999-1324::", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "::TAXONOMY NAME:PLOVER:ENTRY ID:AUTHENT.MULTFAIL:ENTRY NAME:Multiple Failed Authentication Attempts not Prevented::TAXONOMY NAME:Software Fault Patterns:ENTRY ID:SFP34:ENTRY NAME:Unrestricted authentication::", "related_attack_patterns": "::16::49::560::565::600::652::653::", "notes": ""}}, {"cwe": "CWE-308", "cves": [], "cwe_info": {"cwe_id": "308", "name": "Use of Single-factor Authentication", "weakness_abstraction": "Base", "status": "Draft", "description": "The use of single-factor authentication can lead to unnecessary risk of compromise when compared with the benefits of a dual-factor authentication scheme.", "extended_description": "While the use of multiple authentication schemes is simply piling on more complexity on top of authentication, it is inestimably valuable to have such measures of redundancy. The use of weak, reused, and common passwords is rampant on the internet. Without the added protection of multiple authentication schemes, a single mistake can result in the compromise of an account. For this reason, if multiple schemes are possible and also easy to use, they should be implemented and required.", "related_weaknesses": "::NATURE:ChildOf:CWE ID:287:VIEW ID:1000:ORDINAL:Primary::NATURE:ChildOf:CWE ID:654:VIEW ID:1000::NATURE:PeerOf:CWE ID:309:VIEW ID:1000::", "weakness_ordinalities": "", "applicable_platforms": "::LANGUAGE CLASS:Language-Independent:LANGUAGE PREVALENCE:Undetermined::", "background_details": "", "alternate_terms": "", "modes_of_introduction": "::PHASE:Architecture and Design:NOTE:COMMISSION: This weakness refers to an incorrect design related to an architectural security tactic.::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Access Control:IMPACT:Bypass Protection Mechanism:NOTE:If the secret in a single-factor authentication scheme gets compromised, full authentication is possible.::", "detection_methods": "", "potential_mitigations": "::PHASE:Architecture and Design:DESCRIPTION:Use multiple independent authentication schemes, which ensures that -- if one of the methods is compromised -- the system itself is still likely safe from compromise.::", "observed_examples": "", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "::TAXONOMY NAME:CLASP:ENTRY NAME:Using single-factor authentication::", "related_attack_patterns": "::16::49::509::55::555::560::561::565::600::644::645::652::653::70::", "notes": ""}}, {"cwe": "CWE-309", "cves": [], "cwe_info": {"cwe_id": "309", "name": "Use of Password System for Primary Authentication", "weakness_abstraction": "Base", "status": "Draft", "description": "The use of password systems as the primary means of authentication may be subject to several flaws or shortcomings, each reducing the effectiveness of the mechanism.", "extended_description": "", "related_weaknesses": "::NATURE:ChildOf:CWE ID:287:VIEW ID:1000:ORDINAL:Primary::NATURE:ChildOf:CWE ID:654:VIEW ID:1000::NATURE:PeerOf:CWE ID:308:VIEW ID:1000::", "weakness_ordinalities": "", "applicable_platforms": "::LANGUAGE CLASS:Language-Independent:LANGUAGE PREVALENCE:Undetermined::", "background_details": "::Password systems are the simplest and most ubiquitous authentication mechanisms. However, they are subject to such well known attacks,and such frequent compromise that their use in the most simple implementation is not practical.::", "alternate_terms": "", "modes_of_introduction": "::PHASE:Architecture and Design::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Access Control:IMPACT:Bypass Protection Mechanism:IMPACT:Gain Privileges or Assume Identity:NOTE:A password authentication mechanism error will almost always result in attackers being authorized as valid users.::", "detection_methods": "", "potential_mitigations": "::PHASE:Architecture and Design:DESCRIPTION:In order to protect password systems from compromise, the following should be noted: Passwords should be stored safely to prevent insider attack and to ensure that -- if a system is compromised -- the passwords are not retrievable. Due to password reuse, this information may be useful in the compromise of other systems these users work with. In order to protect these passwords, they should be stored encrypted, in a non-reversible state, such that the original text password cannot be extracted from the stored value. Password aging should be strictly enforced to ensure that passwords do not remain unchanged for long periods of time. The longer a password remains in use, the higher the probability that it has been compromised. For this reason, passwords should require refreshing periodically, and users should be informed of the risk of passwords which remain in use for too long. Password strength should be enforced intelligently. Rather than restrict passwords to specific content, or specific length, users should be encouraged to use upper and lower case letters, numbers, and symbols in their passwords. The system should also ensure that no passwords are derived from dictionary words.::PHASE:Architecture and Design:DESCRIPTION:Use a zero-knowledge password protocol, such as SRP.::PHASE:Architecture and Design:DESCRIPTION:Ensure that passwords are stored safely and are not reversible.::PHASE:Architecture and Design:DESCRIPTION:Implement password aging functionality that requires passwords be changed after a certain point.::PHASE:Architecture and Design:DESCRIPTION:Use a mechanism for determining the strength of a password and notify the user of weak password use.::PHASE:Architecture and Design:DESCRIPTION:Inform the user of why password protections are in place, how they work to protect data integrity, and why it is important to heed their warnings.::", "observed_examples": "", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "::TAXONOMY NAME:CLASP:ENTRY NAME:Using password systems::TAXONOMY NAME:OWASP Top Ten 2004:ENTRY ID:A3:ENTRY NAME:Broken Authentication and Session Management:MAPPING FIT:CWE More Specific::", "related_attack_patterns": "::16::49::509::55::555::560::561::565::600::652::653::70::", "notes": ""}}, {"cwe": "CWE-262", "cves": [], "cwe_info": {"cwe_id": "262", "name": "Not Using Password Aging", "weakness_abstraction": "Base", "status": "Draft", "description": "If no mechanism is in place for managing password aging, users will have no incentive to update passwords in a timely manner.", "extended_description": "Security experts have often recommended that users change their passwords regularly and avoid reusing passwords. Although this can be an effective mitigation, if the expiration window is too short, it can cause users to generate poor or predictable passwords. As such, it is important to discourage creating similar passwords. It is also useful to have a password aging mechanism that notifies users when passwords are considered old and requests that they replace them with new, strong passwords. Companion documentation which stresses how important this practice is can help users understand and better support this approach.", "related_weaknesses": "::NATURE:ChildOf:CWE ID:287:VIEW ID:1000:ORDINAL:Primary::NATURE:ChildOf:CWE ID:404:VIEW ID:1000::NATURE:PeerOf:CWE ID:309:VIEW ID:1000::NATURE:PeerOf:CWE ID:263:VIEW ID:1000::NATURE:PeerOf:CWE ID:324:VIEW ID:1000::", "weakness_ordinalities": "", "applicable_platforms": "::LANGUAGE CLASS:Language-Independent:LANGUAGE PREVALENCE:Undetermined::", "background_details": "", "alternate_terms": "", "modes_of_introduction": "::PHASE:Architecture and Design:NOTE:COMMISSION: This weakness refers to an incorrect design related to an architectural security tactic.::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Access Control:IMPACT:Gain Privileges or Assume Identity:NOTE:As passwords age, the probability that they are compromised grows.::", "detection_methods": "", "potential_mitigations": "::PHASE:Architecture and Design:DESCRIPTION:As part of a product's design, require users to change their passwords regularly and avoid reusing previous passwords.::", "observed_examples": "", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "::TAXONOMY NAME:CLASP:ENTRY NAME:Not allowing password aging::", "related_attack_patterns": "::16::49::509::55::555::560::561::565::600::652::653::70::", "notes": ""}}, {"cwe": "CWE-263", "cves": [], "cwe_info": {"cwe_id": "263", "name": "Password Aging with Long Expiration", "weakness_abstraction": "Base", "status": "Draft", "description": "Allowing password aging to occur unchecked can result in the possibility of diminished password integrity.", "extended_description": "Just as neglecting to include functionality for the management of password aging is dangerous, so is allowing password aging to continue unchecked. Passwords must be given a maximum life span, after which a user is required to update with a new and different password.", "related_weaknesses": "::NATURE:ChildOf:CWE ID:287:VIEW ID:1000:ORDINAL:Primary::NATURE:ChildOf:CWE ID:404:VIEW ID:1000::", "weakness_ordinalities": "", "applicable_platforms": "::LANGUAGE CLASS:Language-Independent:LANGUAGE PREVALENCE:Undetermined::", "background_details": "", "alternate_terms": "", "modes_of_introduction": "::PHASE:Architecture and Design:NOTE:COMMISSION: This weakness refers to an incorrect design related to an architectural security tactic.::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Access Control:IMPACT:Gain Privileges or Assume Identity:NOTE:As passwords age, the probability that they are compromised grows.::", "detection_methods": "", "potential_mitigations": "::PHASE:Architecture and Design:DESCRIPTION:Ensure that password aging is limited so that there is a defined maximum age for passwords and so that the user is notified several times leading up to the password expiration.::", "observed_examples": "", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "::TAXONOMY NAME:CLASP:ENTRY NAME:Allowing password aging::", "related_attack_patterns": "::16::49::509::55::555::560::561::565::600::652::653::70::", "notes": ""}}, {"cwe": "CWE-654", "cves": [], "cwe_info": {"cwe_id": "654", "name": "Reliance on a Single Factor in a Security Decision", "weakness_abstraction": "Base", "status": "Draft", "description": "A protection mechanism relies exclusively, or to a large extent, on the evaluation of a single condition or the integrity of a single object or entity in order to make a decision about granting access to restricted resources or functionality.", "extended_description": "", "related_weaknesses": "::NATURE:ChildOf:CWE ID:657:VIEW ID:1000:ORDINAL:Primary::NATURE:ChildOf:CWE ID:693:VIEW ID:1000::", "weakness_ordinalities": "::ORDINALITY:Primary::", "applicable_platforms": "::LANGUAGE CLASS:Language-Independent:LANGUAGE PREVALENCE:Undetermined::", "background_details": "", "alternate_terms": "::TERM:Separation of Privilege:DESCRIPTION:Some people and publications use the term Separation of Privilege to describe this weakness, but this term has dual meanings in current usage. While this entry is closely associated with the original definition of Separation of Privilege by Saltzer and Schroeder, others use the same term to describe poor compartmentalization (CWE-653). Because there are multiple interpretations, use of the Separation of Privilege term is discouraged.::", "modes_of_introduction": "::PHASE:Architecture and Design::PHASE:Implementation::PHASE:Operation::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Access Control:IMPACT:Gain Privileges or Assume Identity:NOTE:If the single factor is compromised (e.g. by theft or spoofing), then the integrity of the entire security mechanism can be violated with respect to the user that is identified by that factor.::SCOPE:Non-Repudiation:IMPACT:Hide Activities:NOTE:It can become difficult or impossible for the product to be able to distinguish between legitimate activities by the entity who provided the factor, versus illegitimate activities by an attacker.::", "detection_methods": "", "potential_mitigations": "::PHASE:Architecture and Design:DESCRIPTION:Use multiple simultaneous checks before granting access to critical operations or granting critical privileges. A weaker but helpful mitigation is to use several successive checks (multiple layers of security).::PHASE:Architecture and Design:DESCRIPTION:Use redundant access rules on different choke points (e.g., firewalls).::", "observed_examples": "", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "", "related_attack_patterns": "::16::274::49::55::560::565::600::652::653::70::", "notes": "::TYPE:Maintenance:NOTE:This entry is closely associated with the term Separation of Privilege. This term is used in several different ways in the industry, but they generally combine two closely related principles: compartmentalization (CWE-653) and using only one factor in a security decision (this entry). Proper compartmentalization implicitly introduces multiple factors into a security decision, but there can be cases in which multiple factors are required for authentication or other mechanisms that do not involve compartmentalization, such as performing all required checks on a submitted certificate. It is likely that CWE-653 and CWE-654 will provoke further discussion.::"}}, {"cwe": "CWE-1273", "cves": [], "cwe_info": {"cwe_id": "1273", "name": "Device Unlock Credential Sharing", "weakness_abstraction": "Base", "status": "Incomplete", "description": "The credentials necessary for unlocking a device are shared across multiple parties and may expose sensitive information.", "extended_description": "\u201cUnlocking a device\u201d often means activating certain, unadvertised, debug and manufacturer-specific capabilities of a device using sensitive credentials. Unlocking a device might be necessary for the purpose of troubleshooting device problems. For example, suppose a device contains the ability to dump the content of the full system memory by disabling the memory-protection mechanisms. Since this is a highly security-sensitive capability, this capability is \u201clocked\u201d in the production part. Unless the device gets unlocked by supplying the proper credentials the debug capabilities are not available. For cases where the chip designer, chip manufacturer (fabricator), and manufacturing and assembly testers are the all employed by the same company, the compromise of the credentials are greatly reduced. However, when the chip designer is employed by one company, the chip manufacturer is employed by another company (a foundry), and the assemblers and testers are employed by yet a third company. Since these different companies will need to perform various tests on the device to verify correct device function, they all need to share the unlock key. Unfortunately, the level of secrecy and policy might be quite different at each company, greatly increasing the risk of sensitive credentials being compromised.", "related_weaknesses": "::NATURE:ChildOf:CWE ID:200:VIEW ID:1000:ORDINAL:Primary::", "weakness_ordinalities": "", "applicable_platforms": "::LANGUAGE NAME:VHDL:LANGUAGE PREVALENCE:Undetermined::LANGUAGE NAME:Verilog:LANGUAGE PREVALENCE:Undetermined::LANGUAGE CLASS:Compiled:LANGUAGE PREVALENCE:Undetermined::OPERATING SYSTEM CLASS:OS-Independent:OPERATING SYSTEM PREVALENCE:Undetermined::ARCHITECTURE CLASS:Architecture-Independent:ARCHITECTURE PREVALENCE:Undetermined::TECHNOLOGY NAME:Other:TECHNOLOGY PREVALENCE:Undetermined::TECHNOLOGY CLASS:Technology-Independent:TECHNOLOGY PREVALENCE:Undetermined::", "background_details": "", "alternate_terms": "", "modes_of_introduction": "::PHASE:Integration::PHASE:Manufacturing::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Confidentiality:SCOPE:Integrity:SCOPE:Availability:SCOPE:Access Control:SCOPE:Accountability:SCOPE:Authentication:SCOPE:Authorization:SCOPE:Non-Repudiation:IMPACT:Modify Memory:IMPACT:Read Memory:IMPACT:Modify Files or Directories:IMPACT:Read Files or Directories:IMPACT:Modify Application Data:IMPACT:Execute Unauthorized Code or Commands:IMPACT:Gain Privileges or Assume Identity:IMPACT:Bypass Protection Mechanism:NOTE:Once unlock credentials are compromised, an attacker can use the credentials to unlock the device and gain unauthorized access to the hidden functionalities protected by those credentials.::", "detection_methods": "", "potential_mitigations": "::PHASE:Integration:DESCRIPTION:Ensure the unlock credentials are shared with the minimum number of parties and with utmost secrecy. To limit the risk associated with compromised credentials, where possible, the credentials should be part-specific.::PHASE:Manufacturing:DESCRIPTION:Ensure the unlock credentials are shared with the minimum number of parties and with utmost secrecy. To limit the risk associated with compromised credentials, where possible, the credentials should be part-specific.::", "observed_examples": "", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "", "related_attack_patterns": "::560::", "notes": "::TYPE:Maintenance:NOTE:This entry is still under development and will continue to see updates and content improvements.::"}}]}]}, {"technique_id": "T1053.007", "t_findings": [{"capec_id": "CAPEC-560", "c_findings": [{"cwe": "CWE-522", "cves": [{"id": "CVE-2007-0681", "score": ["V31", 9.8, "CRITICAL"], "v2_score": 7.5, "v2_exploitability_score": 10.0, "v2_impact_score": 6.4, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 7.5}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": true, "userInteractionRequired": false}], "description": "profile.php in ExtCalendar 2 and earlier allows remote attackers to change the passwords of arbitrary users without providing the original password, and possibly perform other unauthorized actions, via modified values to register.php.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:extcalendar_project:extcalendar:*:*:*:*:*:*:*:*", "published": "2007-02-03T01:28:00.000", "last_modified": "2024-02-09T03:13:40.213"}, {"id": "CVE-2000-0944", "score": ["V31", 9.8, "CRITICAL"], "v2_score": 7.5, "v2_exploitability_score": 10.0, "v2_impact_score": 6.4, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 7.5}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": true, "userInteractionRequired": false}], "description": "CGI Script Center News Update 1.1 does not properly validate the original news administration password during a password change operation, which allows remote attackers to modify the password without knowing the original password.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:cgi:script_center_news_update:1.1:*:*:*:*:*:*:*", "published": "2000-12-19T05:00:00.000", "last_modified": "2024-02-09T03:15:18.653"}, {"id": "CVE-2005-3435", "score": ["V31", 9.8, "CRITICAL"], "v2_score": 7.5, "v2_exploitability_score": 10.0, "v2_impact_score": 6.4, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 7.5}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": true, "userInteractionRequired": false}], "description": "admin_news.php in Archilles Newsworld up to 1.3.0 allows attackers to bypass authentication by obtaining the password hash for another user, for example through another Newsworld vulnerability, and specifying the hash in the pwd argument.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:archilles:newsworld:*:*:*:*:*:*:*:*", "published": "2005-11-02T11:02:00.000", "last_modified": "2024-02-09T03:13:36.147"}, {"id": "CVE-2005-0408", "score": ["V31", 9.8, "CRITICAL"], "v2_score": 7.5, "v2_exploitability_score": 10.0, "v2_impact_score": 6.4, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 7.5}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": true, "userInteractionRequired": false}], "description": "CitrusDB 0.3.6 and earlier generates easily predictable MD5 hashes of the user name for the id_hash cookie, which allows remote attackers to bypass authentication and gain privileges by calculating the MD5 checksum of the user name combined with the \"boogaadeeboo\" string, which is hard-coded in the $hidden_hash variable.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:citrusdb:citrusdb:*:*:*:*:*:*:*:*", "published": "2005-02-14T05:00:00.000", "last_modified": "2024-02-09T03:13:25.890"}], "cwe_info": {"cwe_id": "522", "name": "Insufficiently Protected Credentials", "weakness_abstraction": "Class", "status": "Incomplete", "description": "The product transmits or stores authentication credentials, but it uses an insecure method that is susceptible to unauthorized interception and/or retrieval.", "extended_description": "", "related_weaknesses": "::NATURE:ChildOf:CWE ID:287:VIEW ID:1000:ORDINAL:Primary::NATURE:ChildOf:CWE ID:287:VIEW ID:1003:ORDINAL:Primary::NATURE:ChildOf:CWE ID:668:VIEW ID:1000::", "weakness_ordinalities": "", "applicable_platforms": "", "background_details": "", "alternate_terms": "", "modes_of_introduction": "::PHASE:Architecture and Design:NOTE:COMMISSION: This weakness refers to an incorrect design related to an architectural security tactic.::PHASE:Implementation::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Access Control:IMPACT:Gain Privileges or Assume Identity:NOTE:An attacker could gain access to user accounts and access sensitive data used by the user accounts.::", "detection_methods": "", "potential_mitigations": "::PHASE:Architecture and Design:DESCRIPTION:Use an appropriate security mechanism to protect the credentials.::PHASE:Architecture and Design:DESCRIPTION:Make appropriate use of cryptography to protect the credentials.::PHASE:Implementation:DESCRIPTION:Use industry standards to protect the credentials (e.g. LDAP, keystore, etc.).::", "observed_examples": "::REFERENCE:CVE-2007-0681:DESCRIPTION:Web app allows remote attackers to change the passwords of arbitrary users without providing the original password, and possibly perform other unauthorized actions.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2007-0681::REFERENCE:CVE-2000-0944:DESCRIPTION:Web application password change utility doesn't check the original password.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2000-0944::REFERENCE:CVE-2005-3435:DESCRIPTION:product authentication succeeds if user-provided MD5 hash matches the hash in its database; this can be subjected to replay attacks.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2005-3435::REFERENCE:CVE-2005-0408:DESCRIPTION:chain: product generates predictable MD5 hashes using a constant value combined with username, allowing authentication bypass.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2005-0408::", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "::TAXONOMY NAME:OWASP Top Ten 2007:ENTRY ID:A7:ENTRY NAME:Broken Authentication and Session Management:MAPPING FIT:CWE More Specific::TAXONOMY NAME:OWASP Top Ten 2004:ENTRY ID:A3:ENTRY NAME:Broken Authentication and Session Management:MAPPING FIT:CWE More Specific::", "related_attack_patterns": "::102::474::50::509::551::555::560::561::600::644::645::652::653::", "notes": ""}}, {"cwe": "CWE-307", "cves": [{"id": "CVE-1999-1152", "score": ["V31", 7.5, "HIGH"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "Compaq/Microcom 6000 Access Integrator does not disconnect a client after a certain number of failed login attempts, which allows remote attackers to guess usernames or passwords via a brute force attack.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:o:compaq:microcom_6000_firmware:-:*:*:*:*:*:*:*", "published": "1998-06-03T04:00:00.000", "last_modified": "2024-02-09T03:15:08.037"}, {"id": "CVE-2001-1291", "score": ["V31", 9.8, "CRITICAL"], "v2_score": 10.0, "v2_exploitability_score": 10.0, "v2_impact_score": 10.0, "v2_vector": "AV:N/AC:L/Au:N/C:C/I:C/A:C", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:C/I:C/A:C", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "COMPLETE", "integrityImpact": "COMPLETE", "availabilityImpact": "COMPLETE", "baseScore": 10.0}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 10.0, "acInsufInfo": false, "obtainAllPrivilege": true, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "The telnet server for 3Com hardware such as PS40 SuperStack II does not delay or disconnect remote attackers who provide an incorrect username or password, which makes it easier to break into the server via brute force password guessing.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:o:3com:superstack_ii_ps_hub_40_firmware:-:*:*:*:*:*:*:*", "published": "2001-07-12T04:00:00.000", "last_modified": "2024-02-09T03:14:12.003"}, {"id": "CVE-2001-0395", "score": ["V31", 9.8, "CRITICAL"], "v2_score": 7.5, "v2_exploitability_score": 10.0, "v2_impact_score": 6.4, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 7.5}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "Lightwave ConsoleServer 3200 does not disconnect users after unsuccessful login attempts, which could allow remote attackers to conduct brute force password guessing.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:o:lightwavemo:consoleserver_3200_firmware:-:*:*:*:*:*:*:*", "published": "2001-07-02T04:00:00.000", "last_modified": "2024-02-09T03:14:07.077"}, {"id": "CVE-2001-1339", "score": ["V31", 9.8, "CRITICAL"], "v2_score": 7.5, "v2_exploitability_score": 10.0, "v2_impact_score": 6.4, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 7.5}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": true, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "Beck IPC GmbH IPC@CHIP telnet service does not delay or disconnect users from the service when bad passwords are entered, which makes it easier for remote attackers to conduct brute force password guessing attacks.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:o:anybus:ipc\\@chip_firmware:-:*:*:*:*:*:*:*", "published": "2001-05-24T04:00:00.000", "last_modified": "2024-02-09T03:15:26.757"}, {"id": "CVE-2002-0628", "score": ["V31", 7.5, "HIGH"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "The Telnet service for Polycom ViewStation before 7.2.4 does not restrict the number of failed login attempts, which makes it easier for remote attackers to guess usernames and passwords via a brute force attack.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:h:polycom:viewstation_128:6.5.1:*:*:*:*:*:*:*", "published": "2003-01-07T05:00:00.000", "last_modified": "2024-02-09T03:14:16.373"}, {"id": "CVE-1999-1324", "score": ["V31", 9.8, "CRITICAL"], "v2_score": 7.5, "v2_exploitability_score": 10.0, "v2_impact_score": 6.4, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 7.5}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "VAXstations running Open VMS 5.3 through 5.5-2 with VMS DECwindows or MOTIF do not properly disable access to user accounts that exceed the break-in limit threshold for failed login attempts, which makes it easier for attackers to conduct brute force password guessing.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:o:hp:openvms_vax:*:*:*:*:*:*:*:*", "published": "1999-12-31T05:00:00.000", "last_modified": "2024-02-09T03:15:13.613"}], "cwe_info": {"cwe_id": "307", "name": "Improper Restriction of Excessive Authentication Attempts", "weakness_abstraction": "Base", "status": "Draft", "description": "The software does not implement sufficient measures to prevent multiple failed authentication attempts within in a short time frame, making it more susceptible to brute force attacks.", "extended_description": "", "related_weaknesses": "::NATURE:ChildOf:CWE ID:287:VIEW ID:1000:ORDINAL:Primary::NATURE:ChildOf:CWE ID:287:VIEW ID:1003:ORDINAL:Primary::NATURE:ChildOf:CWE ID:799:VIEW ID:1000::", "weakness_ordinalities": "", "applicable_platforms": "::LANGUAGE CLASS:Language-Independent:LANGUAGE PREVALENCE:Undetermined::", "background_details": "", "alternate_terms": "", "modes_of_introduction": "::PHASE:Architecture and Design:NOTE:COMMISSION: This weakness refers to an incorrect design related to an architectural security tactic.::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Access Control:IMPACT:Bypass Protection Mechanism:NOTE:An attacker could perform an arbitrary number of authentication attempts using different passwords, and eventually gain access to the targeted account.::", "detection_methods": "::METHOD:Dynamic Analysis with Automated Results Interpretation:DESCRIPTION:According to SOAR, the following detection techniques may be useful: Highly cost effective: Web Application Scanner Web Services Scanner Database Scanners Cost effective for partial coverage: Host-based Vulnerability Scanners - Examine configuration for flaws, verifying that audit mechanisms work, ensure host configuration meets certain predefined criteria:EFFECTIVENESS:High::METHOD:Dynamic Analysis with Manual Results Interpretation:DESCRIPTION:According to SOAR, the following detection techniques may be useful: Highly cost effective: Fuzz Tester Framework-based Fuzzer Cost effective for partial coverage: Forced Path Execution:EFFECTIVENESS:High::METHOD:Manual Static Analysis - Source Code:DESCRIPTION:According to SOAR, the following detection techniques may be useful: Highly cost effective: Focused Manual Spotcheck - Focused manual analysis of source Manual Source Code Review (not inspections):EFFECTIVENESS:High::METHOD:Automated Static Analysis - Source Code:DESCRIPTION:According to SOAR, the following detection techniques may be useful: Cost effective for partial coverage: Source code Weakness Analyzer Context-configured Source Code Weakness Analyzer:EFFECTIVENESS:SOAR Partial::METHOD:Automated Static Analysis:DESCRIPTION:According to SOAR, the following detection techniques may be useful: Cost effective for partial coverage: Configuration Checker:EFFECTIVENESS:SOAR Partial::METHOD:Architecture or Design Review:DESCRIPTION:According to SOAR, the following detection techniques may be useful: Highly cost effective: Formal Methods / Correct-By-Construction Cost effective for partial coverage: Inspection (IEEE 1028 standard) (can apply to requirements, design, source code, etc.):EFFECTIVENESS:High::", "potential_mitigations": "::PHASE:Architecture and Design:DESCRIPTION:Common protection mechanisms include: Disconnecting the user after a small number of failed attempts Implementing a timeout Locking out a targeted account Requiring a computational task on the user's part.::PHASE:Architecture and Design:STRATEGY:Libraries or Frameworks:DESCRIPTION:Use a vetted library or framework that does not allow this weakness to occur or provides constructs that make this weakness easier to avoid. Consider using libraries with authentication capabilities such as OpenSSL or the ESAPI Authenticator. [REF-45]::", "observed_examples": "::REFERENCE:CVE-1999-1152:DESCRIPTION:Product does not disconnect or timeout after multiple failed logins.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-1999-1152::REFERENCE:CVE-2001-1291:DESCRIPTION:Product does not disconnect or timeout after multiple failed logins.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2001-1291::REFERENCE:CVE-2001-0395:DESCRIPTION:Product does not disconnect or timeout after multiple failed logins.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2001-0395::REFERENCE:CVE-2001-1339:DESCRIPTION:Product does not disconnect or timeout after multiple failed logins.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2001-1339::REFERENCE:CVE-2002-0628:DESCRIPTION:Product does not disconnect or timeout after multiple failed logins.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2002-0628::REFERENCE:CVE-1999-1324:DESCRIPTION:User accounts not disabled when they exceed a threshold; possibly a resultant problem.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-1999-1324::", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "::TAXONOMY NAME:PLOVER:ENTRY ID:AUTHENT.MULTFAIL:ENTRY NAME:Multiple Failed Authentication Attempts not Prevented::TAXONOMY NAME:Software Fault Patterns:ENTRY ID:SFP34:ENTRY NAME:Unrestricted authentication::", "related_attack_patterns": "::16::49::560::565::600::652::653::", "notes": ""}}, {"cwe": "CWE-308", "cves": [], "cwe_info": {"cwe_id": "308", "name": "Use of Single-factor Authentication", "weakness_abstraction": "Base", "status": "Draft", "description": "The use of single-factor authentication can lead to unnecessary risk of compromise when compared with the benefits of a dual-factor authentication scheme.", "extended_description": "While the use of multiple authentication schemes is simply piling on more complexity on top of authentication, it is inestimably valuable to have such measures of redundancy. The use of weak, reused, and common passwords is rampant on the internet. Without the added protection of multiple authentication schemes, a single mistake can result in the compromise of an account. For this reason, if multiple schemes are possible and also easy to use, they should be implemented and required.", "related_weaknesses": "::NATURE:ChildOf:CWE ID:287:VIEW ID:1000:ORDINAL:Primary::NATURE:ChildOf:CWE ID:654:VIEW ID:1000::NATURE:PeerOf:CWE ID:309:VIEW ID:1000::", "weakness_ordinalities": "", "applicable_platforms": "::LANGUAGE CLASS:Language-Independent:LANGUAGE PREVALENCE:Undetermined::", "background_details": "", "alternate_terms": "", "modes_of_introduction": "::PHASE:Architecture and Design:NOTE:COMMISSION: This weakness refers to an incorrect design related to an architectural security tactic.::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Access Control:IMPACT:Bypass Protection Mechanism:NOTE:If the secret in a single-factor authentication scheme gets compromised, full authentication is possible.::", "detection_methods": "", "potential_mitigations": "::PHASE:Architecture and Design:DESCRIPTION:Use multiple independent authentication schemes, which ensures that -- if one of the methods is compromised -- the system itself is still likely safe from compromise.::", "observed_examples": "", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "::TAXONOMY NAME:CLASP:ENTRY NAME:Using single-factor authentication::", "related_attack_patterns": "::16::49::509::55::555::560::561::565::600::644::645::652::653::70::", "notes": ""}}, {"cwe": "CWE-309", "cves": [], "cwe_info": {"cwe_id": "309", "name": "Use of Password System for Primary Authentication", "weakness_abstraction": "Base", "status": "Draft", "description": "The use of password systems as the primary means of authentication may be subject to several flaws or shortcomings, each reducing the effectiveness of the mechanism.", "extended_description": "", "related_weaknesses": "::NATURE:ChildOf:CWE ID:287:VIEW ID:1000:ORDINAL:Primary::NATURE:ChildOf:CWE ID:654:VIEW ID:1000::NATURE:PeerOf:CWE ID:308:VIEW ID:1000::", "weakness_ordinalities": "", "applicable_platforms": "::LANGUAGE CLASS:Language-Independent:LANGUAGE PREVALENCE:Undetermined::", "background_details": "::Password systems are the simplest and most ubiquitous authentication mechanisms. However, they are subject to such well known attacks,and such frequent compromise that their use in the most simple implementation is not practical.::", "alternate_terms": "", "modes_of_introduction": "::PHASE:Architecture and Design::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Access Control:IMPACT:Bypass Protection Mechanism:IMPACT:Gain Privileges or Assume Identity:NOTE:A password authentication mechanism error will almost always result in attackers being authorized as valid users.::", "detection_methods": "", "potential_mitigations": "::PHASE:Architecture and Design:DESCRIPTION:In order to protect password systems from compromise, the following should be noted: Passwords should be stored safely to prevent insider attack and to ensure that -- if a system is compromised -- the passwords are not retrievable. Due to password reuse, this information may be useful in the compromise of other systems these users work with. In order to protect these passwords, they should be stored encrypted, in a non-reversible state, such that the original text password cannot be extracted from the stored value. Password aging should be strictly enforced to ensure that passwords do not remain unchanged for long periods of time. The longer a password remains in use, the higher the probability that it has been compromised. For this reason, passwords should require refreshing periodically, and users should be informed of the risk of passwords which remain in use for too long. Password strength should be enforced intelligently. Rather than restrict passwords to specific content, or specific length, users should be encouraged to use upper and lower case letters, numbers, and symbols in their passwords. The system should also ensure that no passwords are derived from dictionary words.::PHASE:Architecture and Design:DESCRIPTION:Use a zero-knowledge password protocol, such as SRP.::PHASE:Architecture and Design:DESCRIPTION:Ensure that passwords are stored safely and are not reversible.::PHASE:Architecture and Design:DESCRIPTION:Implement password aging functionality that requires passwords be changed after a certain point.::PHASE:Architecture and Design:DESCRIPTION:Use a mechanism for determining the strength of a password and notify the user of weak password use.::PHASE:Architecture and Design:DESCRIPTION:Inform the user of why password protections are in place, how they work to protect data integrity, and why it is important to heed their warnings.::", "observed_examples": "", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "::TAXONOMY NAME:CLASP:ENTRY NAME:Using password systems::TAXONOMY NAME:OWASP Top Ten 2004:ENTRY ID:A3:ENTRY NAME:Broken Authentication and Session Management:MAPPING FIT:CWE More Specific::", "related_attack_patterns": "::16::49::509::55::555::560::561::565::600::652::653::70::", "notes": ""}}, {"cwe": "CWE-262", "cves": [], "cwe_info": {"cwe_id": "262", "name": "Not Using Password Aging", "weakness_abstraction": "Base", "status": "Draft", "description": "If no mechanism is in place for managing password aging, users will have no incentive to update passwords in a timely manner.", "extended_description": "Security experts have often recommended that users change their passwords regularly and avoid reusing passwords. Although this can be an effective mitigation, if the expiration window is too short, it can cause users to generate poor or predictable passwords. As such, it is important to discourage creating similar passwords. It is also useful to have a password aging mechanism that notifies users when passwords are considered old and requests that they replace them with new, strong passwords. Companion documentation which stresses how important this practice is can help users understand and better support this approach.", "related_weaknesses": "::NATURE:ChildOf:CWE ID:287:VIEW ID:1000:ORDINAL:Primary::NATURE:ChildOf:CWE ID:404:VIEW ID:1000::NATURE:PeerOf:CWE ID:309:VIEW ID:1000::NATURE:PeerOf:CWE ID:263:VIEW ID:1000::NATURE:PeerOf:CWE ID:324:VIEW ID:1000::", "weakness_ordinalities": "", "applicable_platforms": "::LANGUAGE CLASS:Language-Independent:LANGUAGE PREVALENCE:Undetermined::", "background_details": "", "alternate_terms": "", "modes_of_introduction": "::PHASE:Architecture and Design:NOTE:COMMISSION: This weakness refers to an incorrect design related to an architectural security tactic.::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Access Control:IMPACT:Gain Privileges or Assume Identity:NOTE:As passwords age, the probability that they are compromised grows.::", "detection_methods": "", "potential_mitigations": "::PHASE:Architecture and Design:DESCRIPTION:As part of a product's design, require users to change their passwords regularly and avoid reusing previous passwords.::", "observed_examples": "", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "::TAXONOMY NAME:CLASP:ENTRY NAME:Not allowing password aging::", "related_attack_patterns": "::16::49::509::55::555::560::561::565::600::652::653::70::", "notes": ""}}, {"cwe": "CWE-263", "cves": [], "cwe_info": {"cwe_id": "263", "name": "Password Aging with Long Expiration", "weakness_abstraction": "Base", "status": "Draft", "description": "Allowing password aging to occur unchecked can result in the possibility of diminished password integrity.", "extended_description": "Just as neglecting to include functionality for the management of password aging is dangerous, so is allowing password aging to continue unchecked. Passwords must be given a maximum life span, after which a user is required to update with a new and different password.", "related_weaknesses": "::NATURE:ChildOf:CWE ID:287:VIEW ID:1000:ORDINAL:Primary::NATURE:ChildOf:CWE ID:404:VIEW ID:1000::", "weakness_ordinalities": "", "applicable_platforms": "::LANGUAGE CLASS:Language-Independent:LANGUAGE PREVALENCE:Undetermined::", "background_details": "", "alternate_terms": "", "modes_of_introduction": "::PHASE:Architecture and Design:NOTE:COMMISSION: This weakness refers to an incorrect design related to an architectural security tactic.::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Access Control:IMPACT:Gain Privileges or Assume Identity:NOTE:As passwords age, the probability that they are compromised grows.::", "detection_methods": "", "potential_mitigations": "::PHASE:Architecture and Design:DESCRIPTION:Ensure that password aging is limited so that there is a defined maximum age for passwords and so that the user is notified several times leading up to the password expiration.::", "observed_examples": "", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "::TAXONOMY NAME:CLASP:ENTRY NAME:Allowing password aging::", "related_attack_patterns": "::16::49::509::55::555::560::561::565::600::652::653::70::", "notes": ""}}, {"cwe": "CWE-654", "cves": [], "cwe_info": {"cwe_id": "654", "name": "Reliance on a Single Factor in a Security Decision", "weakness_abstraction": "Base", "status": "Draft", "description": "A protection mechanism relies exclusively, or to a large extent, on the evaluation of a single condition or the integrity of a single object or entity in order to make a decision about granting access to restricted resources or functionality.", "extended_description": "", "related_weaknesses": "::NATURE:ChildOf:CWE ID:657:VIEW ID:1000:ORDINAL:Primary::NATURE:ChildOf:CWE ID:693:VIEW ID:1000::", "weakness_ordinalities": "::ORDINALITY:Primary::", "applicable_platforms": "::LANGUAGE CLASS:Language-Independent:LANGUAGE PREVALENCE:Undetermined::", "background_details": "", "alternate_terms": "::TERM:Separation of Privilege:DESCRIPTION:Some people and publications use the term Separation of Privilege to describe this weakness, but this term has dual meanings in current usage. While this entry is closely associated with the original definition of Separation of Privilege by Saltzer and Schroeder, others use the same term to describe poor compartmentalization (CWE-653). Because there are multiple interpretations, use of the Separation of Privilege term is discouraged.::", "modes_of_introduction": "::PHASE:Architecture and Design::PHASE:Implementation::PHASE:Operation::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Access Control:IMPACT:Gain Privileges or Assume Identity:NOTE:If the single factor is compromised (e.g. by theft or spoofing), then the integrity of the entire security mechanism can be violated with respect to the user that is identified by that factor.::SCOPE:Non-Repudiation:IMPACT:Hide Activities:NOTE:It can become difficult or impossible for the product to be able to distinguish between legitimate activities by the entity who provided the factor, versus illegitimate activities by an attacker.::", "detection_methods": "", "potential_mitigations": "::PHASE:Architecture and Design:DESCRIPTION:Use multiple simultaneous checks before granting access to critical operations or granting critical privileges. A weaker but helpful mitigation is to use several successive checks (multiple layers of security).::PHASE:Architecture and Design:DESCRIPTION:Use redundant access rules on different choke points (e.g., firewalls).::", "observed_examples": "", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "", "related_attack_patterns": "::16::274::49::55::560::565::600::652::653::70::", "notes": "::TYPE:Maintenance:NOTE:This entry is closely associated with the term Separation of Privilege. This term is used in several different ways in the industry, but they generally combine two closely related principles: compartmentalization (CWE-653) and using only one factor in a security decision (this entry). Proper compartmentalization implicitly introduces multiple factors into a security decision, but there can be cases in which multiple factors are required for authentication or other mechanisms that do not involve compartmentalization, such as performing all required checks on a submitted certificate. It is likely that CWE-653 and CWE-654 will provoke further discussion.::"}}, {"cwe": "CWE-1273", "cves": [], "cwe_info": {"cwe_id": "1273", "name": "Device Unlock Credential Sharing", "weakness_abstraction": "Base", "status": "Incomplete", "description": "The credentials necessary for unlocking a device are shared across multiple parties and may expose sensitive information.", "extended_description": "\u201cUnlocking a device\u201d often means activating certain, unadvertised, debug and manufacturer-specific capabilities of a device using sensitive credentials. Unlocking a device might be necessary for the purpose of troubleshooting device problems. For example, suppose a device contains the ability to dump the content of the full system memory by disabling the memory-protection mechanisms. Since this is a highly security-sensitive capability, this capability is \u201clocked\u201d in the production part. Unless the device gets unlocked by supplying the proper credentials the debug capabilities are not available. For cases where the chip designer, chip manufacturer (fabricator), and manufacturing and assembly testers are the all employed by the same company, the compromise of the credentials are greatly reduced. However, when the chip designer is employed by one company, the chip manufacturer is employed by another company (a foundry), and the assemblers and testers are employed by yet a third company. Since these different companies will need to perform various tests on the device to verify correct device function, they all need to share the unlock key. Unfortunately, the level of secrecy and policy might be quite different at each company, greatly increasing the risk of sensitive credentials being compromised.", "related_weaknesses": "::NATURE:ChildOf:CWE ID:200:VIEW ID:1000:ORDINAL:Primary::", "weakness_ordinalities": "", "applicable_platforms": "::LANGUAGE NAME:VHDL:LANGUAGE PREVALENCE:Undetermined::LANGUAGE NAME:Verilog:LANGUAGE PREVALENCE:Undetermined::LANGUAGE CLASS:Compiled:LANGUAGE PREVALENCE:Undetermined::OPERATING SYSTEM CLASS:OS-Independent:OPERATING SYSTEM PREVALENCE:Undetermined::ARCHITECTURE CLASS:Architecture-Independent:ARCHITECTURE PREVALENCE:Undetermined::TECHNOLOGY NAME:Other:TECHNOLOGY PREVALENCE:Undetermined::TECHNOLOGY CLASS:Technology-Independent:TECHNOLOGY PREVALENCE:Undetermined::", "background_details": "", "alternate_terms": "", "modes_of_introduction": "::PHASE:Integration::PHASE:Manufacturing::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Confidentiality:SCOPE:Integrity:SCOPE:Availability:SCOPE:Access Control:SCOPE:Accountability:SCOPE:Authentication:SCOPE:Authorization:SCOPE:Non-Repudiation:IMPACT:Modify Memory:IMPACT:Read Memory:IMPACT:Modify Files or Directories:IMPACT:Read Files or Directories:IMPACT:Modify Application Data:IMPACT:Execute Unauthorized Code or Commands:IMPACT:Gain Privileges or Assume Identity:IMPACT:Bypass Protection Mechanism:NOTE:Once unlock credentials are compromised, an attacker can use the credentials to unlock the device and gain unauthorized access to the hidden functionalities protected by those credentials.::", "detection_methods": "", "potential_mitigations": "::PHASE:Integration:DESCRIPTION:Ensure the unlock credentials are shared with the minimum number of parties and with utmost secrecy. To limit the risk associated with compromised credentials, where possible, the credentials should be part-specific.::PHASE:Manufacturing:DESCRIPTION:Ensure the unlock credentials are shared with the minimum number of parties and with utmost secrecy. To limit the risk associated with compromised credentials, where possible, the credentials should be part-specific.::", "observed_examples": "", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "", "related_attack_patterns": "::560::", "notes": "::TYPE:Maintenance:NOTE:This entry is still under development and will continue to see updates and content improvements.::"}}]}]}, {"technique_id": "T1070", "t_findings": [{"capec_id": "CAPEC-93", "c_findings": [{"cwe": "CWE-117", "cves": [{"id": "CVE-2006-4624", "score": ["V2", 2.6, "LOW"], "v2_score": 2.6, "v2_exploitability_score": 4.9, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:H/Au:N/C:N/I:P/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:H/Au:N/C:N/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "HIGH", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 2.6}, "baseSeverity": "LOW", "exploitabilityScore": 4.9, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": true}], "description": "CRLF injection vulnerability in Utils.py in Mailman before 2.1.9rc1 allows remote attackers to spoof messages in the error log and possibly trick the administrator into visiting malicious URLs via CRLF sequences in the URI.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:gnu:mailman:*:*:*:*:*:*:*:*", "published": "2006-09-07T19:04:00.000", "last_modified": "2018-10-17T21:38:43.887"}], "cwe_info": {"cwe_id": "117", "name": "Improper Output Neutralization for Logs", "weakness_abstraction": "Base", "status": "Draft", "description": "The software does not neutralize or incorrectly neutralizes output that is written to logs.", "extended_description": "This can allow an attacker to forge log entries or inject malicious content into logs. Log forging vulnerabilities occur when: Data enters an application from an untrusted source. The data is written to an application or system log file.", "related_weaknesses": "::NATURE:ChildOf:CWE ID:116:VIEW ID:1000:ORDINAL:Primary::NATURE:ChildOf:CWE ID:20:VIEW ID:700:ORDINAL:Primary::", "weakness_ordinalities": "::ORDINALITY:Primary::", "applicable_platforms": "::LANGUAGE CLASS:Language-Independent:LANGUAGE PREVALENCE:Undetermined::", "background_details": "::Applications typically use log files to store a history of events or transactions for later review, statistics gathering, or debugging. Depending on the nature of the application, the task of reviewing log files may be performed manually on an as-needed basis or automated with a tool that automatically culls logs for important events or trending information.::", "alternate_terms": "", "modes_of_introduction": "::PHASE:Implementation:NOTE:REALIZATION: This weakness is caused during implementation of an architectural security tactic.::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Integrity:SCOPE:Confidentiality:SCOPE:Availability:SCOPE:Non-Repudiation:IMPACT:Modify Application Data:IMPACT:Hide Activities:IMPACT:Execute Unauthorized Code or Commands:NOTE:Interpretation of the log files may be hindered or misdirected if an attacker can supply data to the application that is subsequently logged verbatim. In the most benign case, an attacker may be able to insert false entries into the log file by providing the application with input that includes appropriate characters. Forged or otherwise corrupted log files can be used to cover an attacker's tracks, possibly by skewing statistics, or even to implicate another party in the commission of a malicious act. If the log file is processed automatically, the attacker can render the file unusable by corrupting the format of the file or injecting unexpected characters. An attacker may inject code or other commands into the log file and take advantage of a vulnerability in the log processing utility.::", "detection_methods": "", "potential_mitigations": "::PHASE:Implementation:STRATEGY:Input Validation:DESCRIPTION:Assume all input is malicious. Use an accept known good input validation strategy, i.e., use a list of acceptable inputs that strictly conform to specifications. Reject any input that does not strictly conform to specifications, or transform it into something that does. When performing input validation, consider all potentially relevant properties, including length, type of input, the full range of acceptable values, missing or extra inputs, syntax, consistency across related fields, and conformance to business rules. As an example of business rule logic, boat may be syntactically valid because it only contains alphanumeric characters, but it is not valid if the input is only expected to contain colors such as red or blue. Do not rely exclusively on looking for malicious or malformed inputs. This is likely to miss at least one undesirable input, especially if the code's environment changes. This can give attackers enough room to bypass the intended validation. However, denylists can be useful for detecting potential attacks or determining which inputs are so malformed that they should be rejected outright.::PHASE:Implementation:STRATEGY:Output Encoding:DESCRIPTION:Use and specify an output encoding that can be handled by the downstream component that is reading the output. Common encodings include ISO-8859-1, UTF-7, and UTF-8. When an encoding is not specified, a downstream component may choose a different encoding, either by assuming a default encoding or automatically inferring which encoding is being used, which can be erroneous. When the encodings are inconsistent, the downstream component might treat some character or byte sequences as special, even if they are not special in the original encoding. Attackers might then be able to exploit this discrepancy and conduct injection attacks; they even might be able to bypass protection mechanisms that assume the original encoding is also being used by the downstream component.::PHASE:Implementation:STRATEGY:Input Validation:DESCRIPTION:Inputs should be decoded and canonicalized to the application's current internal representation before being validated (CWE-180). Make sure that the application does not decode the same input twice (CWE-174). Such errors could be used to bypass allowlist validation schemes by introducing dangerous inputs after they have been checked.::", "observed_examples": "::REFERENCE:CVE-2006-4624:DESCRIPTION:Chain: inject fake log entries with fake timestamps using CRLF injection:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2006-4624::", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "::TAXONOMY NAME:7 Pernicious Kingdoms:ENTRY NAME:Log Forging::TAXONOMY NAME:Software Fault Patterns:ENTRY ID:SFP23:ENTRY NAME:Exposed Data::TAXONOMY NAME:The CERT Oracle Secure Coding Standard for Java (2011):ENTRY ID:IDS03-J:ENTRY NAME:Do not log unsanitized user input:MAPPING FIT:Exact::TAXONOMY NAME:SEI CERT Oracle Coding Standard for Java:ENTRY ID:IDS03-J:ENTRY NAME:Do not log unsanitized user input:MAPPING FIT:Exact::", "related_attack_patterns": "::268::81::93::", "notes": ""}}, {"cwe": "CWE-75", "cves": [], "cwe_info": {"cwe_id": "75", "name": "Failure to Sanitize Special Elements into a Different Plane (Special Element Injection)", "weakness_abstraction": "Class", "status": "Draft", "description": "The software does not adequately filter user-controlled input for special elements with control implications.", "extended_description": "", "related_weaknesses": "::NATURE:ChildOf:CWE ID:74:VIEW ID:1000:ORDINAL:Primary::", "weakness_ordinalities": "", "applicable_platforms": "::LANGUAGE CLASS:Language-Independent:LANGUAGE PREVALENCE:Undetermined::", "background_details": "", "alternate_terms": "", "modes_of_introduction": "::PHASE:Architecture and Design::PHASE:Implementation:NOTE:REALIZATION: This weakness is caused during implementation of an architectural security tactic.::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Integrity:SCOPE:Confidentiality:SCOPE:Availability:IMPACT:Modify Application Data:IMPACT:Execute Unauthorized Code or Commands::", "detection_methods": "", "potential_mitigations": "::PHASE:Requirements:DESCRIPTION:Programming languages and supporting technologies might be chosen which are not subject to these issues.::PHASE:Implementation:DESCRIPTION:Utilize an appropriate mix of allowlist and denylist parsing to filter special element syntax from all input.::", "observed_examples": "", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "::TAXONOMY NAME:PLOVER:ENTRY NAME:Special Element Injection::", "related_attack_patterns": "::81::93::", "notes": ""}}, {"cwe": "CWE-150", "cves": [{"id": "CVE-2002-0542", "score": ["V2", 7.2, "HIGH"], "v2_score": 7.2, "v2_exploitability_score": 3.9, "v2_impact_score": 10.0, "v2_vector": "AV:L/AC:L/Au:N/C:C/I:C/A:C", "access_vector": "LOCAL", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:L/AC:L/Au:N/C:C/I:C/A:C", "accessVector": "LOCAL", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "COMPLETE", "integrityImpact": "COMPLETE", "availabilityImpact": "COMPLETE", "baseScore": 7.2}, "baseSeverity": "HIGH", "exploitabilityScore": 3.9, "impactScore": 10.0, "acInsufInfo": false, "obtainAllPrivilege": true, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "mail in OpenBSD 2.9 and 3.0 processes a tilde (~) escape character in a message even when it is not in interactive mode, which could allow local users to gain root privileges via calls to mail in cron.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:o:openbsd:openbsd:2.9:*:*:*:*:*:*:*", "published": "2002-07-03T04:00:00.000", "last_modified": "2016-10-18T02:20:33.870"}, {"id": "CVE-2000-0703", "score": ["V2", 7.2, "HIGH"], "v2_score": 7.2, "v2_exploitability_score": 3.9, "v2_impact_score": 10.0, "v2_vector": "AV:L/AC:L/Au:N/C:C/I:C/A:C", "access_vector": "LOCAL", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:L/AC:L/Au:N/C:C/I:C/A:C", "accessVector": "LOCAL", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "COMPLETE", "integrityImpact": "COMPLETE", "availabilityImpact": "COMPLETE", "baseScore": 7.2}, "baseSeverity": "HIGH", "exploitabilityScore": 3.9, "impactScore": 10.0, "acInsufInfo": false, "obtainAllPrivilege": true, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "suidperl (aka sperl) does not properly cleanse the escape sequence \"~!\" before calling /bin/mail to send an error report, which allows local users to gain privileges by setting the \"interactive\" environmental variable and calling suidperl with a filename that contains the escape sequence.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:larry_wall:perl:5.4.5:*:*:*:*:*:*:*", "published": "2000-10-20T04:00:00.000", "last_modified": "2008-09-10T19:05:39.807"}, {"id": "CVE-2002-0986", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:P/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "The mail function in PHP 4.x to 4.2.2 does not filter ASCII control characters from its arguments, which could allow remote attackers to modify mail message content, including mail headers, and possibly use PHP as a \"spam proxy.\"", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:php:php:3.0.18:*:*:*:*:*:*:*", "published": "2002-09-24T04:00:00.000", "last_modified": "2017-10-10T01:30:07.987"}, {"id": "CVE-2003-0020", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:P/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "Apache does not filter terminal escape sequences from its error logs, which could make it easier for attackers to insert those sequences into terminal emulators containing vulnerabilities related to escape sequences.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:apache:http_server:*:*:*:*:*:*:*:*", "published": "2003-03-18T05:00:00.000", "last_modified": "2023-11-07T01:56:12.743"}, {"id": "CVE-2003-0083", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:P/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "Apache 1.3 before 1.3.25 and Apache 2.0 before version 2.0.46 does not filter terminal escape sequences from its access logs, which could make it easier for attackers to insert those sequences into terminal emulators containing vulnerabilities related to escape sequences, a different vulnerability than CVE-2003-0020.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:apache:http_server:*:*:*:*:*:*:*:*", "published": "2003-04-02T05:00:00.000", "last_modified": "2023-11-07T01:56:13.393"}, {"id": "CVE-2003-0021", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:P/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "The \"screen dump\" feature in Eterm 0.9.1 and earlier allows attackers to overwrite arbitrary files via a certain character escape sequence when it is echoed to a user's terminal, e.g. when the user views a file containing the malicious sequence.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:michael_jennings:eterm:0.8.10:*:*:*:*:*:*:*", "published": "2003-03-03T05:00:00.000", "last_modified": "2016-10-18T02:28:25.557"}, {"id": "CVE-2003-0022", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:P/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "The \"screen dump\" feature in rxvt 2.7.8 allows attackers to overwrite arbitrary files via a certain character escape sequence when it is echoed to a user's terminal, e.g. when the user views a file containing the malicious sequence.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:rxvt:rxvt:2.6.1:*:*:*:*:*:*:*", "published": "2003-03-03T05:00:00.000", "last_modified": "2016-10-18T02:28:26.933"}, {"id": "CVE-2003-0023", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:P/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "The menuBar feature in rxvt 2.7.8 allows attackers to modify menu options and execute arbitrary commands via a certain character escape sequence that inserts the commands into the menu.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:rxvt:rxvt:2.6.1:*:*:*:*:*:*:*", "published": "2003-03-03T05:00:00.000", "last_modified": "2016-10-18T02:28:28.417"}, {"id": "CVE-2003-0063", "score": ["V31", 7.3, "HIGH"], "v2_score": 7.5, "v2_exploitability_score": 10.0, "v2_impact_score": 6.4, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 7.5}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": true, "userInteractionRequired": false}], "description": "The xterm terminal emulator in XFree86 4.2.0 and earlier allows attackers to modify the window title via a certain character escape sequence and then insert it back to the command line in the user's terminal, e.g. when the user views a file containing the malicious sequence, which could allow the attacker to execute arbitrary commands.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:xfree86_project:x11r6:4.0:*:*:*:*:*:*:*", "published": "2003-03-03T05:00:00.000", "last_modified": "2024-10-29T14:35:03.790"}, {"id": "CVE-2000-0476", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "PARTIAL", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "xterm, Eterm, and rxvt allow an attacker to cause a denial of service by embedding certain escape characters which force the window to be resized.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:michael_jennings:eterm:0.8.10:*:*:*:*:*:*:*", "published": "2000-06-01T04:00:00.000", "last_modified": "2024-06-10T17:16:07.857"}, {"id": "CVE-2001-1556", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:P/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "The log files in Apache web server contain information directly supplied by clients and does not filter or quote control characters, which could allow remote attackers to hide HTTP requests and spoof source IP addresses when logs are viewed with UNIX programs such as cat, tail, and grep.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:apache:http_server:*:*:*:*:*:*:*:*", "published": "2001-12-31T05:00:00.000", "last_modified": "2020-10-14T16:51:00.940"}], "cwe_info": {"cwe_id": "150", "name": "Improper Neutralization of Escape, Meta, or Control Sequences", "weakness_abstraction": "Variant", "status": "Incomplete", "description": "The software receives input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could be interpreted as escape, meta, or control character sequences when they are sent to a downstream component.", "extended_description": "As data is parsed, an injected/absent/malformed delimiter may cause the process to take unexpected actions.", "related_weaknesses": "::NATURE:ChildOf:CWE ID:138:VIEW ID:1000:ORDINAL:Primary::", "weakness_ordinalities": "", "applicable_platforms": "::LANGUAGE CLASS:Language-Independent:LANGUAGE PREVALENCE:Undetermined::", "background_details": "", "alternate_terms": "", "modes_of_introduction": "::PHASE:Implementation:NOTE:REALIZATION: This weakness is caused during implementation of an architectural security tactic.::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Integrity:IMPACT:Unexpected State::", "detection_methods": "", "potential_mitigations": "::PHASE::DESCRIPTION:Developers should anticipate that escape, meta and control characters/sequences will be injected/removed/manipulated in the input vectors of their software system. Use an appropriate combination of denylists and allowlists to ensure only valid, expected and appropriate input is processed by the system.::PHASE:Implementation:STRATEGY:Input Validation:DESCRIPTION:Assume all input is malicious. Use an accept known good input validation strategy, i.e., use a list of acceptable inputs that strictly conform to specifications. Reject any input that does not strictly conform to specifications, or transform it into something that does. When performing input validation, consider all potentially relevant properties, including length, type of input, the full range of acceptable values, missing or extra inputs, syntax, consistency across related fields, and conformance to business rules. As an example of business rule logic, boat may be syntactically valid because it only contains alphanumeric characters, but it is not valid if the input is only expected to contain colors such as red or blue. Do not rely exclusively on looking for malicious or malformed inputs. This is likely to miss at least one undesirable input, especially if the code's environment changes. This can give attackers enough room to bypass the intended validation. However, denylists can be useful for detecting potential attacks or determining which inputs are so malformed that they should be rejected outright.::PHASE:Implementation:STRATEGY:Output Encoding:DESCRIPTION:While it is risky to use dynamically-generated query strings, code, or commands that mix control and data together, sometimes it may be unavoidable. Properly quote arguments and escape any special characters within those arguments. The most conservative approach is to escape or filter all characters that do not pass an extremely strict allowlist (such as everything that is not alphanumeric or white space). If some special characters are still needed, such as white space, wrap each argument in quotes after the escaping/filtering step. Be careful of argument injection (CWE-88).::PHASE:Implementation:STRATEGY:Input Validation:DESCRIPTION:Inputs should be decoded and canonicalized to the application's current internal representation before being validated (CWE-180). Make sure that the application does not decode the same input twice (CWE-174). Such errors could be used to bypass allowlist validation schemes by introducing dangerous inputs after they have been checked.::", "observed_examples": "::REFERENCE:CVE-2002-0542:DESCRIPTION:The mail program processes special ~ escape sequence even when not in interactive mode.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2002-0542::REFERENCE:CVE-2000-0703:DESCRIPTION:Setuid program does not filter escape sequences before calling mail program.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2000-0703::REFERENCE:CVE-2002-0986:DESCRIPTION:Mail function does not filter control characters from arguments, allowing mail message content to be modified.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2002-0986::REFERENCE:CVE-2003-0020:DESCRIPTION:Multi-channel issue. Terminal escape sequences not filtered from log files.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2003-0020::REFERENCE:CVE-2003-0083:DESCRIPTION:Multi-channel issue. Terminal escape sequences not filtered from log files.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2003-0083::REFERENCE:CVE-2003-0021:DESCRIPTION:Terminal escape sequences not filtered by terminals when displaying files.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2003-0021::REFERENCE:CVE-2003-0022:DESCRIPTION:Terminal escape sequences not filtered by terminals when displaying files.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2003-0022::REFERENCE:CVE-2003-0023:DESCRIPTION:Terminal escape sequences not filtered by terminals when displaying files.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2003-0023::REFERENCE:CVE-2003-0063:DESCRIPTION:Terminal escape sequences not filtered by terminals when displaying files.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2003-0063::REFERENCE:CVE-2000-0476:DESCRIPTION:Terminal escape sequences not filtered by terminals when displaying files.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2000-0476::REFERENCE:CVE-2001-1556:DESCRIPTION:MFV. (multi-channel). Injection of control characters into log files that allow information hiding when using raw Unix programs to read the files.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2001-1556::", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "::TAXONOMY NAME:PLOVER:ENTRY NAME:Escape, Meta, or Control Character / Sequence::TAXONOMY NAME:The CERT Oracle Secure Coding Standard for Java (2011):ENTRY ID:IDS03-J:ENTRY NAME:Do not log unsanitized user input::TAXONOMY NAME:Software Fault Patterns:ENTRY ID:SFP24:ENTRY NAME:Tainted input to command::", "related_attack_patterns": "::134::41::81::93::", "notes": ""}}]}]}, {"technique_id": "T1485", "t_findings": [{"capec_id": "CAPEC-93", "c_findings": [{"cwe": "CWE-117", "cves": [{"id": "CVE-2006-4624", "score": ["V2", 2.6, "LOW"], "v2_score": 2.6, "v2_exploitability_score": 4.9, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:H/Au:N/C:N/I:P/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:H/Au:N/C:N/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "HIGH", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 2.6}, "baseSeverity": "LOW", "exploitabilityScore": 4.9, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": true}], "description": "CRLF injection vulnerability in Utils.py in Mailman before 2.1.9rc1 allows remote attackers to spoof messages in the error log and possibly trick the administrator into visiting malicious URLs via CRLF sequences in the URI.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:gnu:mailman:*:*:*:*:*:*:*:*", "published": "2006-09-07T19:04:00.000", "last_modified": "2018-10-17T21:38:43.887"}], "cwe_info": {"cwe_id": "117", "name": "Improper Output Neutralization for Logs", "weakness_abstraction": "Base", "status": "Draft", "description": "The software does not neutralize or incorrectly neutralizes output that is written to logs.", "extended_description": "This can allow an attacker to forge log entries or inject malicious content into logs. Log forging vulnerabilities occur when: Data enters an application from an untrusted source. The data is written to an application or system log file.", "related_weaknesses": "::NATURE:ChildOf:CWE ID:116:VIEW ID:1000:ORDINAL:Primary::NATURE:ChildOf:CWE ID:20:VIEW ID:700:ORDINAL:Primary::", "weakness_ordinalities": "::ORDINALITY:Primary::", "applicable_platforms": "::LANGUAGE CLASS:Language-Independent:LANGUAGE PREVALENCE:Undetermined::", "background_details": "::Applications typically use log files to store a history of events or transactions for later review, statistics gathering, or debugging. Depending on the nature of the application, the task of reviewing log files may be performed manually on an as-needed basis or automated with a tool that automatically culls logs for important events or trending information.::", "alternate_terms": "", "modes_of_introduction": "::PHASE:Implementation:NOTE:REALIZATION: This weakness is caused during implementation of an architectural security tactic.::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Integrity:SCOPE:Confidentiality:SCOPE:Availability:SCOPE:Non-Repudiation:IMPACT:Modify Application Data:IMPACT:Hide Activities:IMPACT:Execute Unauthorized Code or Commands:NOTE:Interpretation of the log files may be hindered or misdirected if an attacker can supply data to the application that is subsequently logged verbatim. In the most benign case, an attacker may be able to insert false entries into the log file by providing the application with input that includes appropriate characters. Forged or otherwise corrupted log files can be used to cover an attacker's tracks, possibly by skewing statistics, or even to implicate another party in the commission of a malicious act. If the log file is processed automatically, the attacker can render the file unusable by corrupting the format of the file or injecting unexpected characters. An attacker may inject code or other commands into the log file and take advantage of a vulnerability in the log processing utility.::", "detection_methods": "", "potential_mitigations": "::PHASE:Implementation:STRATEGY:Input Validation:DESCRIPTION:Assume all input is malicious. Use an accept known good input validation strategy, i.e., use a list of acceptable inputs that strictly conform to specifications. Reject any input that does not strictly conform to specifications, or transform it into something that does. When performing input validation, consider all potentially relevant properties, including length, type of input, the full range of acceptable values, missing or extra inputs, syntax, consistency across related fields, and conformance to business rules. As an example of business rule logic, boat may be syntactically valid because it only contains alphanumeric characters, but it is not valid if the input is only expected to contain colors such as red or blue. Do not rely exclusively on looking for malicious or malformed inputs. This is likely to miss at least one undesirable input, especially if the code's environment changes. This can give attackers enough room to bypass the intended validation. However, denylists can be useful for detecting potential attacks or determining which inputs are so malformed that they should be rejected outright.::PHASE:Implementation:STRATEGY:Output Encoding:DESCRIPTION:Use and specify an output encoding that can be handled by the downstream component that is reading the output. Common encodings include ISO-8859-1, UTF-7, and UTF-8. When an encoding is not specified, a downstream component may choose a different encoding, either by assuming a default encoding or automatically inferring which encoding is being used, which can be erroneous. When the encodings are inconsistent, the downstream component might treat some character or byte sequences as special, even if they are not special in the original encoding. Attackers might then be able to exploit this discrepancy and conduct injection attacks; they even might be able to bypass protection mechanisms that assume the original encoding is also being used by the downstream component.::PHASE:Implementation:STRATEGY:Input Validation:DESCRIPTION:Inputs should be decoded and canonicalized to the application's current internal representation before being validated (CWE-180). Make sure that the application does not decode the same input twice (CWE-174). Such errors could be used to bypass allowlist validation schemes by introducing dangerous inputs after they have been checked.::", "observed_examples": "::REFERENCE:CVE-2006-4624:DESCRIPTION:Chain: inject fake log entries with fake timestamps using CRLF injection:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2006-4624::", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "::TAXONOMY NAME:7 Pernicious Kingdoms:ENTRY NAME:Log Forging::TAXONOMY NAME:Software Fault Patterns:ENTRY ID:SFP23:ENTRY NAME:Exposed Data::TAXONOMY NAME:The CERT Oracle Secure Coding Standard for Java (2011):ENTRY ID:IDS03-J:ENTRY NAME:Do not log unsanitized user input:MAPPING FIT:Exact::TAXONOMY NAME:SEI CERT Oracle Coding Standard for Java:ENTRY ID:IDS03-J:ENTRY NAME:Do not log unsanitized user input:MAPPING FIT:Exact::", "related_attack_patterns": "::268::81::93::", "notes": ""}}, {"cwe": "CWE-75", "cves": [], "cwe_info": {"cwe_id": "75", "name": "Failure to Sanitize Special Elements into a Different Plane (Special Element Injection)", "weakness_abstraction": "Class", "status": "Draft", "description": "The software does not adequately filter user-controlled input for special elements with control implications.", "extended_description": "", "related_weaknesses": "::NATURE:ChildOf:CWE ID:74:VIEW ID:1000:ORDINAL:Primary::", "weakness_ordinalities": "", "applicable_platforms": "::LANGUAGE CLASS:Language-Independent:LANGUAGE PREVALENCE:Undetermined::", "background_details": "", "alternate_terms": "", "modes_of_introduction": "::PHASE:Architecture and Design::PHASE:Implementation:NOTE:REALIZATION: This weakness is caused during implementation of an architectural security tactic.::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Integrity:SCOPE:Confidentiality:SCOPE:Availability:IMPACT:Modify Application Data:IMPACT:Execute Unauthorized Code or Commands::", "detection_methods": "", "potential_mitigations": "::PHASE:Requirements:DESCRIPTION:Programming languages and supporting technologies might be chosen which are not subject to these issues.::PHASE:Implementation:DESCRIPTION:Utilize an appropriate mix of allowlist and denylist parsing to filter special element syntax from all input.::", "observed_examples": "", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "::TAXONOMY NAME:PLOVER:ENTRY NAME:Special Element Injection::", "related_attack_patterns": "::81::93::", "notes": ""}}, {"cwe": "CWE-150", "cves": [{"id": "CVE-2002-0542", "score": ["V2", 7.2, "HIGH"], "v2_score": 7.2, "v2_exploitability_score": 3.9, "v2_impact_score": 10.0, "v2_vector": "AV:L/AC:L/Au:N/C:C/I:C/A:C", "access_vector": "LOCAL", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:L/AC:L/Au:N/C:C/I:C/A:C", "accessVector": "LOCAL", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "COMPLETE", "integrityImpact": "COMPLETE", "availabilityImpact": "COMPLETE", "baseScore": 7.2}, "baseSeverity": "HIGH", "exploitabilityScore": 3.9, "impactScore": 10.0, "acInsufInfo": false, "obtainAllPrivilege": true, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "mail in OpenBSD 2.9 and 3.0 processes a tilde (~) escape character in a message even when it is not in interactive mode, which could allow local users to gain root privileges via calls to mail in cron.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:o:openbsd:openbsd:2.9:*:*:*:*:*:*:*", "published": "2002-07-03T04:00:00.000", "last_modified": "2016-10-18T02:20:33.870"}, {"id": "CVE-2000-0703", "score": ["V2", 7.2, "HIGH"], "v2_score": 7.2, "v2_exploitability_score": 3.9, "v2_impact_score": 10.0, "v2_vector": "AV:L/AC:L/Au:N/C:C/I:C/A:C", "access_vector": "LOCAL", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:L/AC:L/Au:N/C:C/I:C/A:C", "accessVector": "LOCAL", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "COMPLETE", "integrityImpact": "COMPLETE", "availabilityImpact": "COMPLETE", "baseScore": 7.2}, "baseSeverity": "HIGH", "exploitabilityScore": 3.9, "impactScore": 10.0, "acInsufInfo": false, "obtainAllPrivilege": true, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "suidperl (aka sperl) does not properly cleanse the escape sequence \"~!\" before calling /bin/mail to send an error report, which allows local users to gain privileges by setting the \"interactive\" environmental variable and calling suidperl with a filename that contains the escape sequence.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:larry_wall:perl:5.4.5:*:*:*:*:*:*:*", "published": "2000-10-20T04:00:00.000", "last_modified": "2008-09-10T19:05:39.807"}, {"id": "CVE-2002-0986", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:P/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "The mail function in PHP 4.x to 4.2.2 does not filter ASCII control characters from its arguments, which could allow remote attackers to modify mail message content, including mail headers, and possibly use PHP as a \"spam proxy.\"", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:php:php:3.0.18:*:*:*:*:*:*:*", "published": "2002-09-24T04:00:00.000", "last_modified": "2017-10-10T01:30:07.987"}, {"id": "CVE-2003-0020", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:P/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "Apache does not filter terminal escape sequences from its error logs, which could make it easier for attackers to insert those sequences into terminal emulators containing vulnerabilities related to escape sequences.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:apache:http_server:*:*:*:*:*:*:*:*", "published": "2003-03-18T05:00:00.000", "last_modified": "2023-11-07T01:56:12.743"}, {"id": "CVE-2003-0083", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:P/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "Apache 1.3 before 1.3.25 and Apache 2.0 before version 2.0.46 does not filter terminal escape sequences from its access logs, which could make it easier for attackers to insert those sequences into terminal emulators containing vulnerabilities related to escape sequences, a different vulnerability than CVE-2003-0020.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:apache:http_server:*:*:*:*:*:*:*:*", "published": "2003-04-02T05:00:00.000", "last_modified": "2023-11-07T01:56:13.393"}, {"id": "CVE-2003-0021", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:P/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "The \"screen dump\" feature in Eterm 0.9.1 and earlier allows attackers to overwrite arbitrary files via a certain character escape sequence when it is echoed to a user's terminal, e.g. when the user views a file containing the malicious sequence.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:michael_jennings:eterm:0.8.10:*:*:*:*:*:*:*", "published": "2003-03-03T05:00:00.000", "last_modified": "2016-10-18T02:28:25.557"}, {"id": "CVE-2003-0022", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:P/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "The \"screen dump\" feature in rxvt 2.7.8 allows attackers to overwrite arbitrary files via a certain character escape sequence when it is echoed to a user's terminal, e.g. when the user views a file containing the malicious sequence.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:rxvt:rxvt:2.6.1:*:*:*:*:*:*:*", "published": "2003-03-03T05:00:00.000", "last_modified": "2016-10-18T02:28:26.933"}, {"id": "CVE-2003-0023", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:P/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "The menuBar feature in rxvt 2.7.8 allows attackers to modify menu options and execute arbitrary commands via a certain character escape sequence that inserts the commands into the menu.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:rxvt:rxvt:2.6.1:*:*:*:*:*:*:*", "published": "2003-03-03T05:00:00.000", "last_modified": "2016-10-18T02:28:28.417"}, {"id": "CVE-2003-0063", "score": ["V31", 7.3, "HIGH"], "v2_score": 7.5, "v2_exploitability_score": 10.0, "v2_impact_score": 6.4, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 7.5}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": true, "userInteractionRequired": false}], "description": "The xterm terminal emulator in XFree86 4.2.0 and earlier allows attackers to modify the window title via a certain character escape sequence and then insert it back to the command line in the user's terminal, e.g. when the user views a file containing the malicious sequence, which could allow the attacker to execute arbitrary commands.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:xfree86_project:x11r6:4.0:*:*:*:*:*:*:*", "published": "2003-03-03T05:00:00.000", "last_modified": "2024-10-29T14:35:03.790"}, {"id": "CVE-2000-0476", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "PARTIAL", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "xterm, Eterm, and rxvt allow an attacker to cause a denial of service by embedding certain escape characters which force the window to be resized.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:michael_jennings:eterm:0.8.10:*:*:*:*:*:*:*", "published": "2000-06-01T04:00:00.000", "last_modified": "2024-06-10T17:16:07.857"}, {"id": "CVE-2001-1556", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:P/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "The log files in Apache web server contain information directly supplied by clients and does not filter or quote control characters, which could allow remote attackers to hide HTTP requests and spoof source IP addresses when logs are viewed with UNIX programs such as cat, tail, and grep.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:apache:http_server:*:*:*:*:*:*:*:*", "published": "2001-12-31T05:00:00.000", "last_modified": "2020-10-14T16:51:00.940"}], "cwe_info": {"cwe_id": "150", "name": "Improper Neutralization of Escape, Meta, or Control Sequences", "weakness_abstraction": "Variant", "status": "Incomplete", "description": "The software receives input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could be interpreted as escape, meta, or control character sequences when they are sent to a downstream component.", "extended_description": "As data is parsed, an injected/absent/malformed delimiter may cause the process to take unexpected actions.", "related_weaknesses": "::NATURE:ChildOf:CWE ID:138:VIEW ID:1000:ORDINAL:Primary::", "weakness_ordinalities": "", "applicable_platforms": "::LANGUAGE CLASS:Language-Independent:LANGUAGE PREVALENCE:Undetermined::", "background_details": "", "alternate_terms": "", "modes_of_introduction": "::PHASE:Implementation:NOTE:REALIZATION: This weakness is caused during implementation of an architectural security tactic.::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Integrity:IMPACT:Unexpected State::", "detection_methods": "", "potential_mitigations": "::PHASE::DESCRIPTION:Developers should anticipate that escape, meta and control characters/sequences will be injected/removed/manipulated in the input vectors of their software system. Use an appropriate combination of denylists and allowlists to ensure only valid, expected and appropriate input is processed by the system.::PHASE:Implementation:STRATEGY:Input Validation:DESCRIPTION:Assume all input is malicious. Use an accept known good input validation strategy, i.e., use a list of acceptable inputs that strictly conform to specifications. Reject any input that does not strictly conform to specifications, or transform it into something that does. When performing input validation, consider all potentially relevant properties, including length, type of input, the full range of acceptable values, missing or extra inputs, syntax, consistency across related fields, and conformance to business rules. As an example of business rule logic, boat may be syntactically valid because it only contains alphanumeric characters, but it is not valid if the input is only expected to contain colors such as red or blue. Do not rely exclusively on looking for malicious or malformed inputs. This is likely to miss at least one undesirable input, especially if the code's environment changes. This can give attackers enough room to bypass the intended validation. However, denylists can be useful for detecting potential attacks or determining which inputs are so malformed that they should be rejected outright.::PHASE:Implementation:STRATEGY:Output Encoding:DESCRIPTION:While it is risky to use dynamically-generated query strings, code, or commands that mix control and data together, sometimes it may be unavoidable. Properly quote arguments and escape any special characters within those arguments. The most conservative approach is to escape or filter all characters that do not pass an extremely strict allowlist (such as everything that is not alphanumeric or white space). If some special characters are still needed, such as white space, wrap each argument in quotes after the escaping/filtering step. Be careful of argument injection (CWE-88).::PHASE:Implementation:STRATEGY:Input Validation:DESCRIPTION:Inputs should be decoded and canonicalized to the application's current internal representation before being validated (CWE-180). Make sure that the application does not decode the same input twice (CWE-174). Such errors could be used to bypass allowlist validation schemes by introducing dangerous inputs after they have been checked.::", "observed_examples": "::REFERENCE:CVE-2002-0542:DESCRIPTION:The mail program processes special ~ escape sequence even when not in interactive mode.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2002-0542::REFERENCE:CVE-2000-0703:DESCRIPTION:Setuid program does not filter escape sequences before calling mail program.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2000-0703::REFERENCE:CVE-2002-0986:DESCRIPTION:Mail function does not filter control characters from arguments, allowing mail message content to be modified.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2002-0986::REFERENCE:CVE-2003-0020:DESCRIPTION:Multi-channel issue. Terminal escape sequences not filtered from log files.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2003-0020::REFERENCE:CVE-2003-0083:DESCRIPTION:Multi-channel issue. Terminal escape sequences not filtered from log files.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2003-0083::REFERENCE:CVE-2003-0021:DESCRIPTION:Terminal escape sequences not filtered by terminals when displaying files.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2003-0021::REFERENCE:CVE-2003-0022:DESCRIPTION:Terminal escape sequences not filtered by terminals when displaying files.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2003-0022::REFERENCE:CVE-2003-0023:DESCRIPTION:Terminal escape sequences not filtered by terminals when displaying files.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2003-0023::REFERENCE:CVE-2003-0063:DESCRIPTION:Terminal escape sequences not filtered by terminals when displaying files.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2003-0063::REFERENCE:CVE-2000-0476:DESCRIPTION:Terminal escape sequences not filtered by terminals when displaying files.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2000-0476::REFERENCE:CVE-2001-1556:DESCRIPTION:MFV. (multi-channel). Injection of control characters into log files that allow information hiding when using raw Unix programs to read the files.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2001-1556::", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "::TAXONOMY NAME:PLOVER:ENTRY NAME:Escape, Meta, or Control Character / Sequence::TAXONOMY NAME:The CERT Oracle Secure Coding Standard for Java (2011):ENTRY ID:IDS03-J:ENTRY NAME:Do not log unsanitized user input::TAXONOMY NAME:Software Fault Patterns:ENTRY ID:SFP24:ENTRY NAME:Tainted input to command::", "related_attack_patterns": "::134::41::81::93::", "notes": ""}}]}]}, {"technique_id": "T1611", "t_findings": [{"capec_id": "CAPEC-93", "c_findings": [{"cwe": "CWE-117", "cves": [{"id": "CVE-2006-4624", "score": ["V2", 2.6, "LOW"], "v2_score": 2.6, "v2_exploitability_score": 4.9, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:H/Au:N/C:N/I:P/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:H/Au:N/C:N/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "HIGH", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 2.6}, "baseSeverity": "LOW", "exploitabilityScore": 4.9, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": true}], "description": "CRLF injection vulnerability in Utils.py in Mailman before 2.1.9rc1 allows remote attackers to spoof messages in the error log and possibly trick the administrator into visiting malicious URLs via CRLF sequences in the URI.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:gnu:mailman:*:*:*:*:*:*:*:*", "published": "2006-09-07T19:04:00.000", "last_modified": "2018-10-17T21:38:43.887"}], "cwe_info": {"cwe_id": "117", "name": "Improper Output Neutralization for Logs", "weakness_abstraction": "Base", "status": "Draft", "description": "The software does not neutralize or incorrectly neutralizes output that is written to logs.", "extended_description": "This can allow an attacker to forge log entries or inject malicious content into logs. Log forging vulnerabilities occur when: Data enters an application from an untrusted source. The data is written to an application or system log file.", "related_weaknesses": "::NATURE:ChildOf:CWE ID:116:VIEW ID:1000:ORDINAL:Primary::NATURE:ChildOf:CWE ID:20:VIEW ID:700:ORDINAL:Primary::", "weakness_ordinalities": "::ORDINALITY:Primary::", "applicable_platforms": "::LANGUAGE CLASS:Language-Independent:LANGUAGE PREVALENCE:Undetermined::", "background_details": "::Applications typically use log files to store a history of events or transactions for later review, statistics gathering, or debugging. Depending on the nature of the application, the task of reviewing log files may be performed manually on an as-needed basis or automated with a tool that automatically culls logs for important events or trending information.::", "alternate_terms": "", "modes_of_introduction": "::PHASE:Implementation:NOTE:REALIZATION: This weakness is caused during implementation of an architectural security tactic.::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Integrity:SCOPE:Confidentiality:SCOPE:Availability:SCOPE:Non-Repudiation:IMPACT:Modify Application Data:IMPACT:Hide Activities:IMPACT:Execute Unauthorized Code or Commands:NOTE:Interpretation of the log files may be hindered or misdirected if an attacker can supply data to the application that is subsequently logged verbatim. In the most benign case, an attacker may be able to insert false entries into the log file by providing the application with input that includes appropriate characters. Forged or otherwise corrupted log files can be used to cover an attacker's tracks, possibly by skewing statistics, or even to implicate another party in the commission of a malicious act. If the log file is processed automatically, the attacker can render the file unusable by corrupting the format of the file or injecting unexpected characters. An attacker may inject code or other commands into the log file and take advantage of a vulnerability in the log processing utility.::", "detection_methods": "", "potential_mitigations": "::PHASE:Implementation:STRATEGY:Input Validation:DESCRIPTION:Assume all input is malicious. Use an accept known good input validation strategy, i.e., use a list of acceptable inputs that strictly conform to specifications. Reject any input that does not strictly conform to specifications, or transform it into something that does. When performing input validation, consider all potentially relevant properties, including length, type of input, the full range of acceptable values, missing or extra inputs, syntax, consistency across related fields, and conformance to business rules. As an example of business rule logic, boat may be syntactically valid because it only contains alphanumeric characters, but it is not valid if the input is only expected to contain colors such as red or blue. Do not rely exclusively on looking for malicious or malformed inputs. This is likely to miss at least one undesirable input, especially if the code's environment changes. This can give attackers enough room to bypass the intended validation. However, denylists can be useful for detecting potential attacks or determining which inputs are so malformed that they should be rejected outright.::PHASE:Implementation:STRATEGY:Output Encoding:DESCRIPTION:Use and specify an output encoding that can be handled by the downstream component that is reading the output. Common encodings include ISO-8859-1, UTF-7, and UTF-8. When an encoding is not specified, a downstream component may choose a different encoding, either by assuming a default encoding or automatically inferring which encoding is being used, which can be erroneous. When the encodings are inconsistent, the downstream component might treat some character or byte sequences as special, even if they are not special in the original encoding. Attackers might then be able to exploit this discrepancy and conduct injection attacks; they even might be able to bypass protection mechanisms that assume the original encoding is also being used by the downstream component.::PHASE:Implementation:STRATEGY:Input Validation:DESCRIPTION:Inputs should be decoded and canonicalized to the application's current internal representation before being validated (CWE-180). Make sure that the application does not decode the same input twice (CWE-174). Such errors could be used to bypass allowlist validation schemes by introducing dangerous inputs after they have been checked.::", "observed_examples": "::REFERENCE:CVE-2006-4624:DESCRIPTION:Chain: inject fake log entries with fake timestamps using CRLF injection:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2006-4624::", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "::TAXONOMY NAME:7 Pernicious Kingdoms:ENTRY NAME:Log Forging::TAXONOMY NAME:Software Fault Patterns:ENTRY ID:SFP23:ENTRY NAME:Exposed Data::TAXONOMY NAME:The CERT Oracle Secure Coding Standard for Java (2011):ENTRY ID:IDS03-J:ENTRY NAME:Do not log unsanitized user input:MAPPING FIT:Exact::TAXONOMY NAME:SEI CERT Oracle Coding Standard for Java:ENTRY ID:IDS03-J:ENTRY NAME:Do not log unsanitized user input:MAPPING FIT:Exact::", "related_attack_patterns": "::268::81::93::", "notes": ""}}, {"cwe": "CWE-75", "cves": [], "cwe_info": {"cwe_id": "75", "name": "Failure to Sanitize Special Elements into a Different Plane (Special Element Injection)", "weakness_abstraction": "Class", "status": "Draft", "description": "The software does not adequately filter user-controlled input for special elements with control implications.", "extended_description": "", "related_weaknesses": "::NATURE:ChildOf:CWE ID:74:VIEW ID:1000:ORDINAL:Primary::", "weakness_ordinalities": "", "applicable_platforms": "::LANGUAGE CLASS:Language-Independent:LANGUAGE PREVALENCE:Undetermined::", "background_details": "", "alternate_terms": "", "modes_of_introduction": "::PHASE:Architecture and Design::PHASE:Implementation:NOTE:REALIZATION: This weakness is caused during implementation of an architectural security tactic.::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Integrity:SCOPE:Confidentiality:SCOPE:Availability:IMPACT:Modify Application Data:IMPACT:Execute Unauthorized Code or Commands::", "detection_methods": "", "potential_mitigations": "::PHASE:Requirements:DESCRIPTION:Programming languages and supporting technologies might be chosen which are not subject to these issues.::PHASE:Implementation:DESCRIPTION:Utilize an appropriate mix of allowlist and denylist parsing to filter special element syntax from all input.::", "observed_examples": "", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "::TAXONOMY NAME:PLOVER:ENTRY NAME:Special Element Injection::", "related_attack_patterns": "::81::93::", "notes": ""}}, {"cwe": "CWE-150", "cves": [{"id": "CVE-2002-0542", "score": ["V2", 7.2, "HIGH"], "v2_score": 7.2, "v2_exploitability_score": 3.9, "v2_impact_score": 10.0, "v2_vector": "AV:L/AC:L/Au:N/C:C/I:C/A:C", "access_vector": "LOCAL", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:L/AC:L/Au:N/C:C/I:C/A:C", "accessVector": "LOCAL", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "COMPLETE", "integrityImpact": "COMPLETE", "availabilityImpact": "COMPLETE", "baseScore": 7.2}, "baseSeverity": "HIGH", "exploitabilityScore": 3.9, "impactScore": 10.0, "acInsufInfo": false, "obtainAllPrivilege": true, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "mail in OpenBSD 2.9 and 3.0 processes a tilde (~) escape character in a message even when it is not in interactive mode, which could allow local users to gain root privileges via calls to mail in cron.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:o:openbsd:openbsd:2.9:*:*:*:*:*:*:*", "published": "2002-07-03T04:00:00.000", "last_modified": "2016-10-18T02:20:33.870"}, {"id": "CVE-2000-0703", "score": ["V2", 7.2, "HIGH"], "v2_score": 7.2, "v2_exploitability_score": 3.9, "v2_impact_score": 10.0, "v2_vector": "AV:L/AC:L/Au:N/C:C/I:C/A:C", "access_vector": "LOCAL", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:L/AC:L/Au:N/C:C/I:C/A:C", "accessVector": "LOCAL", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "COMPLETE", "integrityImpact": "COMPLETE", "availabilityImpact": "COMPLETE", "baseScore": 7.2}, "baseSeverity": "HIGH", "exploitabilityScore": 3.9, "impactScore": 10.0, "acInsufInfo": false, "obtainAllPrivilege": true, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "suidperl (aka sperl) does not properly cleanse the escape sequence \"~!\" before calling /bin/mail to send an error report, which allows local users to gain privileges by setting the \"interactive\" environmental variable and calling suidperl with a filename that contains the escape sequence.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:larry_wall:perl:5.4.5:*:*:*:*:*:*:*", "published": "2000-10-20T04:00:00.000", "last_modified": "2008-09-10T19:05:39.807"}, {"id": "CVE-2002-0986", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:P/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "The mail function in PHP 4.x to 4.2.2 does not filter ASCII control characters from its arguments, which could allow remote attackers to modify mail message content, including mail headers, and possibly use PHP as a \"spam proxy.\"", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:php:php:3.0.18:*:*:*:*:*:*:*", "published": "2002-09-24T04:00:00.000", "last_modified": "2017-10-10T01:30:07.987"}, {"id": "CVE-2003-0020", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:P/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "Apache does not filter terminal escape sequences from its error logs, which could make it easier for attackers to insert those sequences into terminal emulators containing vulnerabilities related to escape sequences.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:apache:http_server:*:*:*:*:*:*:*:*", "published": "2003-03-18T05:00:00.000", "last_modified": "2023-11-07T01:56:12.743"}, {"id": "CVE-2003-0083", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:P/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "Apache 1.3 before 1.3.25 and Apache 2.0 before version 2.0.46 does not filter terminal escape sequences from its access logs, which could make it easier for attackers to insert those sequences into terminal emulators containing vulnerabilities related to escape sequences, a different vulnerability than CVE-2003-0020.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:apache:http_server:*:*:*:*:*:*:*:*", "published": "2003-04-02T05:00:00.000", "last_modified": "2023-11-07T01:56:13.393"}, {"id": "CVE-2003-0021", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:P/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "The \"screen dump\" feature in Eterm 0.9.1 and earlier allows attackers to overwrite arbitrary files via a certain character escape sequence when it is echoed to a user's terminal, e.g. when the user views a file containing the malicious sequence.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:michael_jennings:eterm:0.8.10:*:*:*:*:*:*:*", "published": "2003-03-03T05:00:00.000", "last_modified": "2016-10-18T02:28:25.557"}, {"id": "CVE-2003-0022", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:P/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "The \"screen dump\" feature in rxvt 2.7.8 allows attackers to overwrite arbitrary files via a certain character escape sequence when it is echoed to a user's terminal, e.g. when the user views a file containing the malicious sequence.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:rxvt:rxvt:2.6.1:*:*:*:*:*:*:*", "published": "2003-03-03T05:00:00.000", "last_modified": "2016-10-18T02:28:26.933"}, {"id": "CVE-2003-0023", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:P/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "The menuBar feature in rxvt 2.7.8 allows attackers to modify menu options and execute arbitrary commands via a certain character escape sequence that inserts the commands into the menu.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:rxvt:rxvt:2.6.1:*:*:*:*:*:*:*", "published": "2003-03-03T05:00:00.000", "last_modified": "2016-10-18T02:28:28.417"}, {"id": "CVE-2003-0063", "score": ["V31", 7.3, "HIGH"], "v2_score": 7.5, "v2_exploitability_score": 10.0, "v2_impact_score": 6.4, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 7.5}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": true, "userInteractionRequired": false}], "description": "The xterm terminal emulator in XFree86 4.2.0 and earlier allows attackers to modify the window title via a certain character escape sequence and then insert it back to the command line in the user's terminal, e.g. when the user views a file containing the malicious sequence, which could allow the attacker to execute arbitrary commands.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:xfree86_project:x11r6:4.0:*:*:*:*:*:*:*", "published": "2003-03-03T05:00:00.000", "last_modified": "2024-10-29T14:35:03.790"}, {"id": "CVE-2000-0476", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "PARTIAL", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "xterm, Eterm, and rxvt allow an attacker to cause a denial of service by embedding certain escape characters which force the window to be resized.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:michael_jennings:eterm:0.8.10:*:*:*:*:*:*:*", "published": "2000-06-01T04:00:00.000", "last_modified": "2024-06-10T17:16:07.857"}, {"id": "CVE-2001-1556", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:P/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "The log files in Apache web server contain information directly supplied by clients and does not filter or quote control characters, which could allow remote attackers to hide HTTP requests and spoof source IP addresses when logs are viewed with UNIX programs such as cat, tail, and grep.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:apache:http_server:*:*:*:*:*:*:*:*", "published": "2001-12-31T05:00:00.000", "last_modified": "2020-10-14T16:51:00.940"}], "cwe_info": {"cwe_id": "150", "name": "Improper Neutralization of Escape, Meta, or Control Sequences", "weakness_abstraction": "Variant", "status": "Incomplete", "description": "The software receives input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could be interpreted as escape, meta, or control character sequences when they are sent to a downstream component.", "extended_description": "As data is parsed, an injected/absent/malformed delimiter may cause the process to take unexpected actions.", "related_weaknesses": "::NATURE:ChildOf:CWE ID:138:VIEW ID:1000:ORDINAL:Primary::", "weakness_ordinalities": "", "applicable_platforms": "::LANGUAGE CLASS:Language-Independent:LANGUAGE PREVALENCE:Undetermined::", "background_details": "", "alternate_terms": "", "modes_of_introduction": "::PHASE:Implementation:NOTE:REALIZATION: This weakness is caused during implementation of an architectural security tactic.::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Integrity:IMPACT:Unexpected State::", "detection_methods": "", "potential_mitigations": "::PHASE::DESCRIPTION:Developers should anticipate that escape, meta and control characters/sequences will be injected/removed/manipulated in the input vectors of their software system. Use an appropriate combination of denylists and allowlists to ensure only valid, expected and appropriate input is processed by the system.::PHASE:Implementation:STRATEGY:Input Validation:DESCRIPTION:Assume all input is malicious. Use an accept known good input validation strategy, i.e., use a list of acceptable inputs that strictly conform to specifications. Reject any input that does not strictly conform to specifications, or transform it into something that does. When performing input validation, consider all potentially relevant properties, including length, type of input, the full range of acceptable values, missing or extra inputs, syntax, consistency across related fields, and conformance to business rules. As an example of business rule logic, boat may be syntactically valid because it only contains alphanumeric characters, but it is not valid if the input is only expected to contain colors such as red or blue. Do not rely exclusively on looking for malicious or malformed inputs. This is likely to miss at least one undesirable input, especially if the code's environment changes. This can give attackers enough room to bypass the intended validation. However, denylists can be useful for detecting potential attacks or determining which inputs are so malformed that they should be rejected outright.::PHASE:Implementation:STRATEGY:Output Encoding:DESCRIPTION:While it is risky to use dynamically-generated query strings, code, or commands that mix control and data together, sometimes it may be unavoidable. Properly quote arguments and escape any special characters within those arguments. The most conservative approach is to escape or filter all characters that do not pass an extremely strict allowlist (such as everything that is not alphanumeric or white space). If some special characters are still needed, such as white space, wrap each argument in quotes after the escaping/filtering step. Be careful of argument injection (CWE-88).::PHASE:Implementation:STRATEGY:Input Validation:DESCRIPTION:Inputs should be decoded and canonicalized to the application's current internal representation before being validated (CWE-180). Make sure that the application does not decode the same input twice (CWE-174). Such errors could be used to bypass allowlist validation schemes by introducing dangerous inputs after they have been checked.::", "observed_examples": "::REFERENCE:CVE-2002-0542:DESCRIPTION:The mail program processes special ~ escape sequence even when not in interactive mode.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2002-0542::REFERENCE:CVE-2000-0703:DESCRIPTION:Setuid program does not filter escape sequences before calling mail program.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2000-0703::REFERENCE:CVE-2002-0986:DESCRIPTION:Mail function does not filter control characters from arguments, allowing mail message content to be modified.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2002-0986::REFERENCE:CVE-2003-0020:DESCRIPTION:Multi-channel issue. Terminal escape sequences not filtered from log files.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2003-0020::REFERENCE:CVE-2003-0083:DESCRIPTION:Multi-channel issue. Terminal escape sequences not filtered from log files.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2003-0083::REFERENCE:CVE-2003-0021:DESCRIPTION:Terminal escape sequences not filtered by terminals when displaying files.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2003-0021::REFERENCE:CVE-2003-0022:DESCRIPTION:Terminal escape sequences not filtered by terminals when displaying files.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2003-0022::REFERENCE:CVE-2003-0023:DESCRIPTION:Terminal escape sequences not filtered by terminals when displaying files.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2003-0023::REFERENCE:CVE-2003-0063:DESCRIPTION:Terminal escape sequences not filtered by terminals when displaying files.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2003-0063::REFERENCE:CVE-2000-0476:DESCRIPTION:Terminal escape sequences not filtered by terminals when displaying files.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2000-0476::REFERENCE:CVE-2001-1556:DESCRIPTION:MFV. (multi-channel). Injection of control characters into log files that allow information hiding when using raw Unix programs to read the files.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2001-1556::", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "::TAXONOMY NAME:PLOVER:ENTRY NAME:Escape, Meta, or Control Character / Sequence::TAXONOMY NAME:The CERT Oracle Secure Coding Standard for Java (2011):ENTRY ID:IDS03-J:ENTRY NAME:Do not log unsanitized user input::TAXONOMY NAME:Software Fault Patterns:ENTRY ID:SFP24:ENTRY NAME:Tainted input to command::", "related_attack_patterns": "::134::41::81::93::", "notes": ""}}]}]}, {"technique_id": "T1210", "t_findings": [{"capec_id": "CAPEC-93", "c_findings": [{"cwe": "CWE-117", "cves": [{"id": "CVE-2006-4624", "score": ["V2", 2.6, "LOW"], "v2_score": 2.6, "v2_exploitability_score": 4.9, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:H/Au:N/C:N/I:P/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:H/Au:N/C:N/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "HIGH", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 2.6}, "baseSeverity": "LOW", "exploitabilityScore": 4.9, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": true}], "description": "CRLF injection vulnerability in Utils.py in Mailman before 2.1.9rc1 allows remote attackers to spoof messages in the error log and possibly trick the administrator into visiting malicious URLs via CRLF sequences in the URI.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:gnu:mailman:*:*:*:*:*:*:*:*", "published": "2006-09-07T19:04:00.000", "last_modified": "2018-10-17T21:38:43.887"}], "cwe_info": {"cwe_id": "117", "name": "Improper Output Neutralization for Logs", "weakness_abstraction": "Base", "status": "Draft", "description": "The software does not neutralize or incorrectly neutralizes output that is written to logs.", "extended_description": "This can allow an attacker to forge log entries or inject malicious content into logs. Log forging vulnerabilities occur when: Data enters an application from an untrusted source. The data is written to an application or system log file.", "related_weaknesses": "::NATURE:ChildOf:CWE ID:116:VIEW ID:1000:ORDINAL:Primary::NATURE:ChildOf:CWE ID:20:VIEW ID:700:ORDINAL:Primary::", "weakness_ordinalities": "::ORDINALITY:Primary::", "applicable_platforms": "::LANGUAGE CLASS:Language-Independent:LANGUAGE PREVALENCE:Undetermined::", "background_details": "::Applications typically use log files to store a history of events or transactions for later review, statistics gathering, or debugging. Depending on the nature of the application, the task of reviewing log files may be performed manually on an as-needed basis or automated with a tool that automatically culls logs for important events or trending information.::", "alternate_terms": "", "modes_of_introduction": "::PHASE:Implementation:NOTE:REALIZATION: This weakness is caused during implementation of an architectural security tactic.::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Integrity:SCOPE:Confidentiality:SCOPE:Availability:SCOPE:Non-Repudiation:IMPACT:Modify Application Data:IMPACT:Hide Activities:IMPACT:Execute Unauthorized Code or Commands:NOTE:Interpretation of the log files may be hindered or misdirected if an attacker can supply data to the application that is subsequently logged verbatim. In the most benign case, an attacker may be able to insert false entries into the log file by providing the application with input that includes appropriate characters. Forged or otherwise corrupted log files can be used to cover an attacker's tracks, possibly by skewing statistics, or even to implicate another party in the commission of a malicious act. If the log file is processed automatically, the attacker can render the file unusable by corrupting the format of the file or injecting unexpected characters. An attacker may inject code or other commands into the log file and take advantage of a vulnerability in the log processing utility.::", "detection_methods": "", "potential_mitigations": "::PHASE:Implementation:STRATEGY:Input Validation:DESCRIPTION:Assume all input is malicious. Use an accept known good input validation strategy, i.e., use a list of acceptable inputs that strictly conform to specifications. Reject any input that does not strictly conform to specifications, or transform it into something that does. When performing input validation, consider all potentially relevant properties, including length, type of input, the full range of acceptable values, missing or extra inputs, syntax, consistency across related fields, and conformance to business rules. As an example of business rule logic, boat may be syntactically valid because it only contains alphanumeric characters, but it is not valid if the input is only expected to contain colors such as red or blue. Do not rely exclusively on looking for malicious or malformed inputs. This is likely to miss at least one undesirable input, especially if the code's environment changes. This can give attackers enough room to bypass the intended validation. However, denylists can be useful for detecting potential attacks or determining which inputs are so malformed that they should be rejected outright.::PHASE:Implementation:STRATEGY:Output Encoding:DESCRIPTION:Use and specify an output encoding that can be handled by the downstream component that is reading the output. Common encodings include ISO-8859-1, UTF-7, and UTF-8. When an encoding is not specified, a downstream component may choose a different encoding, either by assuming a default encoding or automatically inferring which encoding is being used, which can be erroneous. When the encodings are inconsistent, the downstream component might treat some character or byte sequences as special, even if they are not special in the original encoding. Attackers might then be able to exploit this discrepancy and conduct injection attacks; they even might be able to bypass protection mechanisms that assume the original encoding is also being used by the downstream component.::PHASE:Implementation:STRATEGY:Input Validation:DESCRIPTION:Inputs should be decoded and canonicalized to the application's current internal representation before being validated (CWE-180). Make sure that the application does not decode the same input twice (CWE-174). Such errors could be used to bypass allowlist validation schemes by introducing dangerous inputs after they have been checked.::", "observed_examples": "::REFERENCE:CVE-2006-4624:DESCRIPTION:Chain: inject fake log entries with fake timestamps using CRLF injection:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2006-4624::", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "::TAXONOMY NAME:7 Pernicious Kingdoms:ENTRY NAME:Log Forging::TAXONOMY NAME:Software Fault Patterns:ENTRY ID:SFP23:ENTRY NAME:Exposed Data::TAXONOMY NAME:The CERT Oracle Secure Coding Standard for Java (2011):ENTRY ID:IDS03-J:ENTRY NAME:Do not log unsanitized user input:MAPPING FIT:Exact::TAXONOMY NAME:SEI CERT Oracle Coding Standard for Java:ENTRY ID:IDS03-J:ENTRY NAME:Do not log unsanitized user input:MAPPING FIT:Exact::", "related_attack_patterns": "::268::81::93::", "notes": ""}}, {"cwe": "CWE-75", "cves": [], "cwe_info": {"cwe_id": "75", "name": "Failure to Sanitize Special Elements into a Different Plane (Special Element Injection)", "weakness_abstraction": "Class", "status": "Draft", "description": "The software does not adequately filter user-controlled input for special elements with control implications.", "extended_description": "", "related_weaknesses": "::NATURE:ChildOf:CWE ID:74:VIEW ID:1000:ORDINAL:Primary::", "weakness_ordinalities": "", "applicable_platforms": "::LANGUAGE CLASS:Language-Independent:LANGUAGE PREVALENCE:Undetermined::", "background_details": "", "alternate_terms": "", "modes_of_introduction": "::PHASE:Architecture and Design::PHASE:Implementation:NOTE:REALIZATION: This weakness is caused during implementation of an architectural security tactic.::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Integrity:SCOPE:Confidentiality:SCOPE:Availability:IMPACT:Modify Application Data:IMPACT:Execute Unauthorized Code or Commands::", "detection_methods": "", "potential_mitigations": "::PHASE:Requirements:DESCRIPTION:Programming languages and supporting technologies might be chosen which are not subject to these issues.::PHASE:Implementation:DESCRIPTION:Utilize an appropriate mix of allowlist and denylist parsing to filter special element syntax from all input.::", "observed_examples": "", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "::TAXONOMY NAME:PLOVER:ENTRY NAME:Special Element Injection::", "related_attack_patterns": "::81::93::", "notes": ""}}, {"cwe": "CWE-150", "cves": [{"id": "CVE-2002-0542", "score": ["V2", 7.2, "HIGH"], "v2_score": 7.2, "v2_exploitability_score": 3.9, "v2_impact_score": 10.0, "v2_vector": "AV:L/AC:L/Au:N/C:C/I:C/A:C", "access_vector": "LOCAL", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:L/AC:L/Au:N/C:C/I:C/A:C", "accessVector": "LOCAL", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "COMPLETE", "integrityImpact": "COMPLETE", "availabilityImpact": "COMPLETE", "baseScore": 7.2}, "baseSeverity": "HIGH", "exploitabilityScore": 3.9, "impactScore": 10.0, "acInsufInfo": false, "obtainAllPrivilege": true, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "mail in OpenBSD 2.9 and 3.0 processes a tilde (~) escape character in a message even when it is not in interactive mode, which could allow local users to gain root privileges via calls to mail in cron.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:o:openbsd:openbsd:2.9:*:*:*:*:*:*:*", "published": "2002-07-03T04:00:00.000", "last_modified": "2016-10-18T02:20:33.870"}, {"id": "CVE-2000-0703", "score": ["V2", 7.2, "HIGH"], "v2_score": 7.2, "v2_exploitability_score": 3.9, "v2_impact_score": 10.0, "v2_vector": "AV:L/AC:L/Au:N/C:C/I:C/A:C", "access_vector": "LOCAL", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:L/AC:L/Au:N/C:C/I:C/A:C", "accessVector": "LOCAL", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "COMPLETE", "integrityImpact": "COMPLETE", "availabilityImpact": "COMPLETE", "baseScore": 7.2}, "baseSeverity": "HIGH", "exploitabilityScore": 3.9, "impactScore": 10.0, "acInsufInfo": false, "obtainAllPrivilege": true, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "suidperl (aka sperl) does not properly cleanse the escape sequence \"~!\" before calling /bin/mail to send an error report, which allows local users to gain privileges by setting the \"interactive\" environmental variable and calling suidperl with a filename that contains the escape sequence.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:larry_wall:perl:5.4.5:*:*:*:*:*:*:*", "published": "2000-10-20T04:00:00.000", "last_modified": "2008-09-10T19:05:39.807"}, {"id": "CVE-2002-0986", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:P/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "The mail function in PHP 4.x to 4.2.2 does not filter ASCII control characters from its arguments, which could allow remote attackers to modify mail message content, including mail headers, and possibly use PHP as a \"spam proxy.\"", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:php:php:3.0.18:*:*:*:*:*:*:*", "published": "2002-09-24T04:00:00.000", "last_modified": "2017-10-10T01:30:07.987"}, {"id": "CVE-2003-0020", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:P/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "Apache does not filter terminal escape sequences from its error logs, which could make it easier for attackers to insert those sequences into terminal emulators containing vulnerabilities related to escape sequences.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:apache:http_server:*:*:*:*:*:*:*:*", "published": "2003-03-18T05:00:00.000", "last_modified": "2023-11-07T01:56:12.743"}, {"id": "CVE-2003-0083", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:P/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "Apache 1.3 before 1.3.25 and Apache 2.0 before version 2.0.46 does not filter terminal escape sequences from its access logs, which could make it easier for attackers to insert those sequences into terminal emulators containing vulnerabilities related to escape sequences, a different vulnerability than CVE-2003-0020.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:apache:http_server:*:*:*:*:*:*:*:*", "published": "2003-04-02T05:00:00.000", "last_modified": "2023-11-07T01:56:13.393"}, {"id": "CVE-2003-0021", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:P/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "The \"screen dump\" feature in Eterm 0.9.1 and earlier allows attackers to overwrite arbitrary files via a certain character escape sequence when it is echoed to a user's terminal, e.g. when the user views a file containing the malicious sequence.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:michael_jennings:eterm:0.8.10:*:*:*:*:*:*:*", "published": "2003-03-03T05:00:00.000", "last_modified": "2016-10-18T02:28:25.557"}, {"id": "CVE-2003-0022", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:P/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "The \"screen dump\" feature in rxvt 2.7.8 allows attackers to overwrite arbitrary files via a certain character escape sequence when it is echoed to a user's terminal, e.g. when the user views a file containing the malicious sequence.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:rxvt:rxvt:2.6.1:*:*:*:*:*:*:*", "published": "2003-03-03T05:00:00.000", "last_modified": "2016-10-18T02:28:26.933"}, {"id": "CVE-2003-0023", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:P/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "The menuBar feature in rxvt 2.7.8 allows attackers to modify menu options and execute arbitrary commands via a certain character escape sequence that inserts the commands into the menu.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:rxvt:rxvt:2.6.1:*:*:*:*:*:*:*", "published": "2003-03-03T05:00:00.000", "last_modified": "2016-10-18T02:28:28.417"}, {"id": "CVE-2003-0063", "score": ["V31", 7.3, "HIGH"], "v2_score": 7.5, "v2_exploitability_score": 10.0, "v2_impact_score": 6.4, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 7.5}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": true, "userInteractionRequired": false}], "description": "The xterm terminal emulator in XFree86 4.2.0 and earlier allows attackers to modify the window title via a certain character escape sequence and then insert it back to the command line in the user's terminal, e.g. when the user views a file containing the malicious sequence, which could allow the attacker to execute arbitrary commands.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:xfree86_project:x11r6:4.0:*:*:*:*:*:*:*", "published": "2003-03-03T05:00:00.000", "last_modified": "2024-10-29T14:35:03.790"}, {"id": "CVE-2000-0476", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "PARTIAL", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "xterm, Eterm, and rxvt allow an attacker to cause a denial of service by embedding certain escape characters which force the window to be resized.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:michael_jennings:eterm:0.8.10:*:*:*:*:*:*:*", "published": "2000-06-01T04:00:00.000", "last_modified": "2024-06-10T17:16:07.857"}, {"id": "CVE-2001-1556", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:P/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "The log files in Apache web server contain information directly supplied by clients and does not filter or quote control characters, which could allow remote attackers to hide HTTP requests and spoof source IP addresses when logs are viewed with UNIX programs such as cat, tail, and grep.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:apache:http_server:*:*:*:*:*:*:*:*", "published": "2001-12-31T05:00:00.000", "last_modified": "2020-10-14T16:51:00.940"}], "cwe_info": {"cwe_id": "150", "name": "Improper Neutralization of Escape, Meta, or Control Sequences", "weakness_abstraction": "Variant", "status": "Incomplete", "description": "The software receives input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could be interpreted as escape, meta, or control character sequences when they are sent to a downstream component.", "extended_description": "As data is parsed, an injected/absent/malformed delimiter may cause the process to take unexpected actions.", "related_weaknesses": "::NATURE:ChildOf:CWE ID:138:VIEW ID:1000:ORDINAL:Primary::", "weakness_ordinalities": "", "applicable_platforms": "::LANGUAGE CLASS:Language-Independent:LANGUAGE PREVALENCE:Undetermined::", "background_details": "", "alternate_terms": "", "modes_of_introduction": "::PHASE:Implementation:NOTE:REALIZATION: This weakness is caused during implementation of an architectural security tactic.::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Integrity:IMPACT:Unexpected State::", "detection_methods": "", "potential_mitigations": "::PHASE::DESCRIPTION:Developers should anticipate that escape, meta and control characters/sequences will be injected/removed/manipulated in the input vectors of their software system. Use an appropriate combination of denylists and allowlists to ensure only valid, expected and appropriate input is processed by the system.::PHASE:Implementation:STRATEGY:Input Validation:DESCRIPTION:Assume all input is malicious. Use an accept known good input validation strategy, i.e., use a list of acceptable inputs that strictly conform to specifications. Reject any input that does not strictly conform to specifications, or transform it into something that does. When performing input validation, consider all potentially relevant properties, including length, type of input, the full range of acceptable values, missing or extra inputs, syntax, consistency across related fields, and conformance to business rules. As an example of business rule logic, boat may be syntactically valid because it only contains alphanumeric characters, but it is not valid if the input is only expected to contain colors such as red or blue. Do not rely exclusively on looking for malicious or malformed inputs. This is likely to miss at least one undesirable input, especially if the code's environment changes. This can give attackers enough room to bypass the intended validation. However, denylists can be useful for detecting potential attacks or determining which inputs are so malformed that they should be rejected outright.::PHASE:Implementation:STRATEGY:Output Encoding:DESCRIPTION:While it is risky to use dynamically-generated query strings, code, or commands that mix control and data together, sometimes it may be unavoidable. Properly quote arguments and escape any special characters within those arguments. The most conservative approach is to escape or filter all characters that do not pass an extremely strict allowlist (such as everything that is not alphanumeric or white space). If some special characters are still needed, such as white space, wrap each argument in quotes after the escaping/filtering step. Be careful of argument injection (CWE-88).::PHASE:Implementation:STRATEGY:Input Validation:DESCRIPTION:Inputs should be decoded and canonicalized to the application's current internal representation before being validated (CWE-180). Make sure that the application does not decode the same input twice (CWE-174). Such errors could be used to bypass allowlist validation schemes by introducing dangerous inputs after they have been checked.::", "observed_examples": "::REFERENCE:CVE-2002-0542:DESCRIPTION:The mail program processes special ~ escape sequence even when not in interactive mode.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2002-0542::REFERENCE:CVE-2000-0703:DESCRIPTION:Setuid program does not filter escape sequences before calling mail program.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2000-0703::REFERENCE:CVE-2002-0986:DESCRIPTION:Mail function does not filter control characters from arguments, allowing mail message content to be modified.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2002-0986::REFERENCE:CVE-2003-0020:DESCRIPTION:Multi-channel issue. Terminal escape sequences not filtered from log files.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2003-0020::REFERENCE:CVE-2003-0083:DESCRIPTION:Multi-channel issue. Terminal escape sequences not filtered from log files.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2003-0083::REFERENCE:CVE-2003-0021:DESCRIPTION:Terminal escape sequences not filtered by terminals when displaying files.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2003-0021::REFERENCE:CVE-2003-0022:DESCRIPTION:Terminal escape sequences not filtered by terminals when displaying files.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2003-0022::REFERENCE:CVE-2003-0023:DESCRIPTION:Terminal escape sequences not filtered by terminals when displaying files.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2003-0023::REFERENCE:CVE-2003-0063:DESCRIPTION:Terminal escape sequences not filtered by terminals when displaying files.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2003-0063::REFERENCE:CVE-2000-0476:DESCRIPTION:Terminal escape sequences not filtered by terminals when displaying files.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2000-0476::REFERENCE:CVE-2001-1556:DESCRIPTION:MFV. (multi-channel). Injection of control characters into log files that allow information hiding when using raw Unix programs to read the files.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2001-1556::", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "::TAXONOMY NAME:PLOVER:ENTRY NAME:Escape, Meta, or Control Character / Sequence::TAXONOMY NAME:The CERT Oracle Secure Coding Standard for Java (2011):ENTRY ID:IDS03-J:ENTRY NAME:Do not log unsanitized user input::TAXONOMY NAME:Software Fault Patterns:ENTRY ID:SFP24:ENTRY NAME:Tainted input to command::", "related_attack_patterns": "::134::41::81::93::", "notes": ""}}]}]}, {"technique_id": "T1496", "t_findings": [{"capec_id": "CAPEC-93", "c_findings": [{"cwe": "CWE-117", "cves": [{"id": "CVE-2006-4624", "score": ["V2", 2.6, "LOW"], "v2_score": 2.6, "v2_exploitability_score": 4.9, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:H/Au:N/C:N/I:P/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:H/Au:N/C:N/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "HIGH", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 2.6}, "baseSeverity": "LOW", "exploitabilityScore": 4.9, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": true}], "description": "CRLF injection vulnerability in Utils.py in Mailman before 2.1.9rc1 allows remote attackers to spoof messages in the error log and possibly trick the administrator into visiting malicious URLs via CRLF sequences in the URI.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:gnu:mailman:*:*:*:*:*:*:*:*", "published": "2006-09-07T19:04:00.000", "last_modified": "2018-10-17T21:38:43.887"}], "cwe_info": {"cwe_id": "117", "name": "Improper Output Neutralization for Logs", "weakness_abstraction": "Base", "status": "Draft", "description": "The software does not neutralize or incorrectly neutralizes output that is written to logs.", "extended_description": "This can allow an attacker to forge log entries or inject malicious content into logs. Log forging vulnerabilities occur when: Data enters an application from an untrusted source. The data is written to an application or system log file.", "related_weaknesses": "::NATURE:ChildOf:CWE ID:116:VIEW ID:1000:ORDINAL:Primary::NATURE:ChildOf:CWE ID:20:VIEW ID:700:ORDINAL:Primary::", "weakness_ordinalities": "::ORDINALITY:Primary::", "applicable_platforms": "::LANGUAGE CLASS:Language-Independent:LANGUAGE PREVALENCE:Undetermined::", "background_details": "::Applications typically use log files to store a history of events or transactions for later review, statistics gathering, or debugging. Depending on the nature of the application, the task of reviewing log files may be performed manually on an as-needed basis or automated with a tool that automatically culls logs for important events or trending information.::", "alternate_terms": "", "modes_of_introduction": "::PHASE:Implementation:NOTE:REALIZATION: This weakness is caused during implementation of an architectural security tactic.::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Integrity:SCOPE:Confidentiality:SCOPE:Availability:SCOPE:Non-Repudiation:IMPACT:Modify Application Data:IMPACT:Hide Activities:IMPACT:Execute Unauthorized Code or Commands:NOTE:Interpretation of the log files may be hindered or misdirected if an attacker can supply data to the application that is subsequently logged verbatim. In the most benign case, an attacker may be able to insert false entries into the log file by providing the application with input that includes appropriate characters. Forged or otherwise corrupted log files can be used to cover an attacker's tracks, possibly by skewing statistics, or even to implicate another party in the commission of a malicious act. If the log file is processed automatically, the attacker can render the file unusable by corrupting the format of the file or injecting unexpected characters. An attacker may inject code or other commands into the log file and take advantage of a vulnerability in the log processing utility.::", "detection_methods": "", "potential_mitigations": "::PHASE:Implementation:STRATEGY:Input Validation:DESCRIPTION:Assume all input is malicious. Use an accept known good input validation strategy, i.e., use a list of acceptable inputs that strictly conform to specifications. Reject any input that does not strictly conform to specifications, or transform it into something that does. When performing input validation, consider all potentially relevant properties, including length, type of input, the full range of acceptable values, missing or extra inputs, syntax, consistency across related fields, and conformance to business rules. As an example of business rule logic, boat may be syntactically valid because it only contains alphanumeric characters, but it is not valid if the input is only expected to contain colors such as red or blue. Do not rely exclusively on looking for malicious or malformed inputs. This is likely to miss at least one undesirable input, especially if the code's environment changes. This can give attackers enough room to bypass the intended validation. However, denylists can be useful for detecting potential attacks or determining which inputs are so malformed that they should be rejected outright.::PHASE:Implementation:STRATEGY:Output Encoding:DESCRIPTION:Use and specify an output encoding that can be handled by the downstream component that is reading the output. Common encodings include ISO-8859-1, UTF-7, and UTF-8. When an encoding is not specified, a downstream component may choose a different encoding, either by assuming a default encoding or automatically inferring which encoding is being used, which can be erroneous. When the encodings are inconsistent, the downstream component might treat some character or byte sequences as special, even if they are not special in the original encoding. Attackers might then be able to exploit this discrepancy and conduct injection attacks; they even might be able to bypass protection mechanisms that assume the original encoding is also being used by the downstream component.::PHASE:Implementation:STRATEGY:Input Validation:DESCRIPTION:Inputs should be decoded and canonicalized to the application's current internal representation before being validated (CWE-180). Make sure that the application does not decode the same input twice (CWE-174). Such errors could be used to bypass allowlist validation schemes by introducing dangerous inputs after they have been checked.::", "observed_examples": "::REFERENCE:CVE-2006-4624:DESCRIPTION:Chain: inject fake log entries with fake timestamps using CRLF injection:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2006-4624::", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "::TAXONOMY NAME:7 Pernicious Kingdoms:ENTRY NAME:Log Forging::TAXONOMY NAME:Software Fault Patterns:ENTRY ID:SFP23:ENTRY NAME:Exposed Data::TAXONOMY NAME:The CERT Oracle Secure Coding Standard for Java (2011):ENTRY ID:IDS03-J:ENTRY NAME:Do not log unsanitized user input:MAPPING FIT:Exact::TAXONOMY NAME:SEI CERT Oracle Coding Standard for Java:ENTRY ID:IDS03-J:ENTRY NAME:Do not log unsanitized user input:MAPPING FIT:Exact::", "related_attack_patterns": "::268::81::93::", "notes": ""}}, {"cwe": "CWE-75", "cves": [], "cwe_info": {"cwe_id": "75", "name": "Failure to Sanitize Special Elements into a Different Plane (Special Element Injection)", "weakness_abstraction": "Class", "status": "Draft", "description": "The software does not adequately filter user-controlled input for special elements with control implications.", "extended_description": "", "related_weaknesses": "::NATURE:ChildOf:CWE ID:74:VIEW ID:1000:ORDINAL:Primary::", "weakness_ordinalities": "", "applicable_platforms": "::LANGUAGE CLASS:Language-Independent:LANGUAGE PREVALENCE:Undetermined::", "background_details": "", "alternate_terms": "", "modes_of_introduction": "::PHASE:Architecture and Design::PHASE:Implementation:NOTE:REALIZATION: This weakness is caused during implementation of an architectural security tactic.::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Integrity:SCOPE:Confidentiality:SCOPE:Availability:IMPACT:Modify Application Data:IMPACT:Execute Unauthorized Code or Commands::", "detection_methods": "", "potential_mitigations": "::PHASE:Requirements:DESCRIPTION:Programming languages and supporting technologies might be chosen which are not subject to these issues.::PHASE:Implementation:DESCRIPTION:Utilize an appropriate mix of allowlist and denylist parsing to filter special element syntax from all input.::", "observed_examples": "", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "::TAXONOMY NAME:PLOVER:ENTRY NAME:Special Element Injection::", "related_attack_patterns": "::81::93::", "notes": ""}}, {"cwe": "CWE-150", "cves": [{"id": "CVE-2002-0542", "score": ["V2", 7.2, "HIGH"], "v2_score": 7.2, "v2_exploitability_score": 3.9, "v2_impact_score": 10.0, "v2_vector": "AV:L/AC:L/Au:N/C:C/I:C/A:C", "access_vector": "LOCAL", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:L/AC:L/Au:N/C:C/I:C/A:C", "accessVector": "LOCAL", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "COMPLETE", "integrityImpact": "COMPLETE", "availabilityImpact": "COMPLETE", "baseScore": 7.2}, "baseSeverity": "HIGH", "exploitabilityScore": 3.9, "impactScore": 10.0, "acInsufInfo": false, "obtainAllPrivilege": true, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "mail in OpenBSD 2.9 and 3.0 processes a tilde (~) escape character in a message even when it is not in interactive mode, which could allow local users to gain root privileges via calls to mail in cron.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:o:openbsd:openbsd:2.9:*:*:*:*:*:*:*", "published": "2002-07-03T04:00:00.000", "last_modified": "2016-10-18T02:20:33.870"}, {"id": "CVE-2000-0703", "score": ["V2", 7.2, "HIGH"], "v2_score": 7.2, "v2_exploitability_score": 3.9, "v2_impact_score": 10.0, "v2_vector": "AV:L/AC:L/Au:N/C:C/I:C/A:C", "access_vector": "LOCAL", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:L/AC:L/Au:N/C:C/I:C/A:C", "accessVector": "LOCAL", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "COMPLETE", "integrityImpact": "COMPLETE", "availabilityImpact": "COMPLETE", "baseScore": 7.2}, "baseSeverity": "HIGH", "exploitabilityScore": 3.9, "impactScore": 10.0, "acInsufInfo": false, "obtainAllPrivilege": true, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "suidperl (aka sperl) does not properly cleanse the escape sequence \"~!\" before calling /bin/mail to send an error report, which allows local users to gain privileges by setting the \"interactive\" environmental variable and calling suidperl with a filename that contains the escape sequence.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:larry_wall:perl:5.4.5:*:*:*:*:*:*:*", "published": "2000-10-20T04:00:00.000", "last_modified": "2008-09-10T19:05:39.807"}, {"id": "CVE-2002-0986", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:P/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "The mail function in PHP 4.x to 4.2.2 does not filter ASCII control characters from its arguments, which could allow remote attackers to modify mail message content, including mail headers, and possibly use PHP as a \"spam proxy.\"", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:php:php:3.0.18:*:*:*:*:*:*:*", "published": "2002-09-24T04:00:00.000", "last_modified": "2017-10-10T01:30:07.987"}, {"id": "CVE-2003-0020", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:P/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "Apache does not filter terminal escape sequences from its error logs, which could make it easier for attackers to insert those sequences into terminal emulators containing vulnerabilities related to escape sequences.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:apache:http_server:*:*:*:*:*:*:*:*", "published": "2003-03-18T05:00:00.000", "last_modified": "2023-11-07T01:56:12.743"}, {"id": "CVE-2003-0083", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:P/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "Apache 1.3 before 1.3.25 and Apache 2.0 before version 2.0.46 does not filter terminal escape sequences from its access logs, which could make it easier for attackers to insert those sequences into terminal emulators containing vulnerabilities related to escape sequences, a different vulnerability than CVE-2003-0020.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:apache:http_server:*:*:*:*:*:*:*:*", "published": "2003-04-02T05:00:00.000", "last_modified": "2023-11-07T01:56:13.393"}, {"id": "CVE-2003-0021", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:P/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "The \"screen dump\" feature in Eterm 0.9.1 and earlier allows attackers to overwrite arbitrary files via a certain character escape sequence when it is echoed to a user's terminal, e.g. when the user views a file containing the malicious sequence.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:michael_jennings:eterm:0.8.10:*:*:*:*:*:*:*", "published": "2003-03-03T05:00:00.000", "last_modified": "2016-10-18T02:28:25.557"}, {"id": "CVE-2003-0022", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:P/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "The \"screen dump\" feature in rxvt 2.7.8 allows attackers to overwrite arbitrary files via a certain character escape sequence when it is echoed to a user's terminal, e.g. when the user views a file containing the malicious sequence.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:rxvt:rxvt:2.6.1:*:*:*:*:*:*:*", "published": "2003-03-03T05:00:00.000", "last_modified": "2016-10-18T02:28:26.933"}, {"id": "CVE-2003-0023", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:P/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "The menuBar feature in rxvt 2.7.8 allows attackers to modify menu options and execute arbitrary commands via a certain character escape sequence that inserts the commands into the menu.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:rxvt:rxvt:2.6.1:*:*:*:*:*:*:*", "published": "2003-03-03T05:00:00.000", "last_modified": "2016-10-18T02:28:28.417"}, {"id": "CVE-2003-0063", "score": ["V31", 7.3, "HIGH"], "v2_score": 7.5, "v2_exploitability_score": 10.0, "v2_impact_score": 6.4, "v2_vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 7.5}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": true, "userInteractionRequired": false}], "description": "The xterm terminal emulator in XFree86 4.2.0 and earlier allows attackers to modify the window title via a certain character escape sequence and then insert it back to the command line in the user's terminal, e.g. when the user views a file containing the malicious sequence, which could allow the attacker to execute arbitrary commands.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:xfree86_project:x11r6:4.0:*:*:*:*:*:*:*", "published": "2003-03-03T05:00:00.000", "last_modified": "2024-10-29T14:35:03.790"}, {"id": "CVE-2000-0476", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "PARTIAL", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "xterm, Eterm, and rxvt allow an attacker to cause a denial of service by embedding certain escape characters which force the window to be resized.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:michael_jennings:eterm:0.8.10:*:*:*:*:*:*:*", "published": "2000-06-01T04:00:00.000", "last_modified": "2024-06-10T17:16:07.857"}, {"id": "CVE-2001-1556", "score": ["V2", 5.0, "MEDIUM"], "v2_score": 5.0, "v2_exploitability_score": 10.0, "v2_impact_score": 2.9, "v2_vector": "AV:N/AC:L/Au:N/C:N/I:P/A:N", "access_vector": "NETWORK", "full_metrics": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}], "description": "The log files in Apache web server contain information directly supplied by clients and does not filter or quote control characters, which could allow remote attackers to hide HTTP requests and spoof source IP addresses when logs are viewed with UNIX programs such as cat, tail, and grep.", "cpe_vulnerable": true, "cpe_criteria": "cpe:2.3:a:apache:http_server:*:*:*:*:*:*:*:*", "published": "2001-12-31T05:00:00.000", "last_modified": "2020-10-14T16:51:00.940"}], "cwe_info": {"cwe_id": "150", "name": "Improper Neutralization of Escape, Meta, or Control Sequences", "weakness_abstraction": "Variant", "status": "Incomplete", "description": "The software receives input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could be interpreted as escape, meta, or control character sequences when they are sent to a downstream component.", "extended_description": "As data is parsed, an injected/absent/malformed delimiter may cause the process to take unexpected actions.", "related_weaknesses": "::NATURE:ChildOf:CWE ID:138:VIEW ID:1000:ORDINAL:Primary::", "weakness_ordinalities": "", "applicable_platforms": "::LANGUAGE CLASS:Language-Independent:LANGUAGE PREVALENCE:Undetermined::", "background_details": "", "alternate_terms": "", "modes_of_introduction": "::PHASE:Implementation:NOTE:REALIZATION: This weakness is caused during implementation of an architectural security tactic.::", "exploitation_factors": "", "likelihood_of_exploit": "", "common_consequences": "::SCOPE:Integrity:IMPACT:Unexpected State::", "detection_methods": "", "potential_mitigations": "::PHASE::DESCRIPTION:Developers should anticipate that escape, meta and control characters/sequences will be injected/removed/manipulated in the input vectors of their software system. Use an appropriate combination of denylists and allowlists to ensure only valid, expected and appropriate input is processed by the system.::PHASE:Implementation:STRATEGY:Input Validation:DESCRIPTION:Assume all input is malicious. Use an accept known good input validation strategy, i.e., use a list of acceptable inputs that strictly conform to specifications. Reject any input that does not strictly conform to specifications, or transform it into something that does. When performing input validation, consider all potentially relevant properties, including length, type of input, the full range of acceptable values, missing or extra inputs, syntax, consistency across related fields, and conformance to business rules. As an example of business rule logic, boat may be syntactically valid because it only contains alphanumeric characters, but it is not valid if the input is only expected to contain colors such as red or blue. Do not rely exclusively on looking for malicious or malformed inputs. This is likely to miss at least one undesirable input, especially if the code's environment changes. This can give attackers enough room to bypass the intended validation. However, denylists can be useful for detecting potential attacks or determining which inputs are so malformed that they should be rejected outright.::PHASE:Implementation:STRATEGY:Output Encoding:DESCRIPTION:While it is risky to use dynamically-generated query strings, code, or commands that mix control and data together, sometimes it may be unavoidable. Properly quote arguments and escape any special characters within those arguments. The most conservative approach is to escape or filter all characters that do not pass an extremely strict allowlist (such as everything that is not alphanumeric or white space). If some special characters are still needed, such as white space, wrap each argument in quotes after the escaping/filtering step. Be careful of argument injection (CWE-88).::PHASE:Implementation:STRATEGY:Input Validation:DESCRIPTION:Inputs should be decoded and canonicalized to the application's current internal representation before being validated (CWE-180). Make sure that the application does not decode the same input twice (CWE-174). Such errors could be used to bypass allowlist validation schemes by introducing dangerous inputs after they have been checked.::", "observed_examples": "::REFERENCE:CVE-2002-0542:DESCRIPTION:The mail program processes special ~ escape sequence even when not in interactive mode.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2002-0542::REFERENCE:CVE-2000-0703:DESCRIPTION:Setuid program does not filter escape sequences before calling mail program.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2000-0703::REFERENCE:CVE-2002-0986:DESCRIPTION:Mail function does not filter control characters from arguments, allowing mail message content to be modified.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2002-0986::REFERENCE:CVE-2003-0020:DESCRIPTION:Multi-channel issue. Terminal escape sequences not filtered from log files.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2003-0020::REFERENCE:CVE-2003-0083:DESCRIPTION:Multi-channel issue. Terminal escape sequences not filtered from log files.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2003-0083::REFERENCE:CVE-2003-0021:DESCRIPTION:Terminal escape sequences not filtered by terminals when displaying files.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2003-0021::REFERENCE:CVE-2003-0022:DESCRIPTION:Terminal escape sequences not filtered by terminals when displaying files.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2003-0022::REFERENCE:CVE-2003-0023:DESCRIPTION:Terminal escape sequences not filtered by terminals when displaying files.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2003-0023::REFERENCE:CVE-2003-0063:DESCRIPTION:Terminal escape sequences not filtered by terminals when displaying files.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2003-0063::REFERENCE:CVE-2000-0476:DESCRIPTION:Terminal escape sequences not filtered by terminals when displaying files.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2000-0476::REFERENCE:CVE-2001-1556:DESCRIPTION:MFV. (multi-channel). Injection of control characters into log files that allow information hiding when using raw Unix programs to read the files.:LINK:https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2001-1556::", "functional_areas": "", "affected_resources": "", "taxonomy_mappings": "::TAXONOMY NAME:PLOVER:ENTRY NAME:Escape, Meta, or Control Character / Sequence::TAXONOMY NAME:The CERT Oracle Secure Coding Standard for Java (2011):ENTRY ID:IDS03-J:ENTRY NAME:Do not log unsanitized user input::TAXONOMY NAME:Software Fault Patterns:ENTRY ID:SFP24:ENTRY NAME:Tainted input to command::", "related_attack_patterns": "::134::41::81::93::", "notes": ""}}]}]}]}